{"version":3,"file":"worker.js","sources":["../../../output/worker-thread/strings.js","../../../output/worker-thread/phase.js","../../../output/worker-thread/nodes.js","../../../output/worker-thread/MutationTransfer.js","../../../output/worker-thread/amp/amp.js","../../../output/worker-thread/function.js","../../../output/utils.js","../../../output/worker-thread/MutationObserver.js","../../../output/worker-thread/dom/Node.js","../../../output/worker-thread/dom/elementSibling.js","../../../output/worker-thread/dom/CharacterData.js","../../../output/worker-thread/dom/Comment.js","../../../output/worker-thread/amp/delete-globals.js","../../../output/worker-thread/dom/matchElements.js","../../../output/worker-thread/dom/ParentNode.js","../../../output/worker-thread/dom/DOMTokenList.js","../../../output/worker-thread/dom/Attr.js","../../../output/worker-thread/css/CSSStyleDeclaration.js","../../../output/worker-thread/dom/enhanceElement.js","../../../output/transfer/TransferrableNodes.js","../../../output/third_party/html-parser/html-parser.js","../../../output/worker-thread/Event.js","../../../output/worker-thread/dom/Element.js","../../../output/worker-thread/dom/HTMLElement.js","../../../output/worker-thread/dom/HTMLAnchorElement.js","../../../output/worker-thread/dom/HTMLButtonElement.js","../../../output/worker-thread/serializeTransferrableObject.js","../../../output/worker-thread/canvas/CanvasGradient.js","../../../output/worker-thread/canvas/CanvasPattern.js","../../../output/worker-thread/canvas/OffscreenCanvasPolyfill.js","../../../output/worker-thread/canvas/canvas-utils.js","../../../output/worker-thread/canvas/FakeNativeCanvasPattern.js","../../../output/worker-thread/canvas/CanvasRenderingContext2D.js","../../../output/worker-thread/dom/HTMLCanvasElement.js","../../../output/worker-thread/dom/HTMLDataElement.js","../../../output/worker-thread/dom/HTMLDataListElement.js","../../../output/worker-thread/dom/HTMLEmbedElement.js","../../../output/worker-thread/dom/HTMLFormControlsMixin.js","../../../output/worker-thread/dom/HTMLFieldSetElement.js","../../../output/worker-thread/dom/HTMLFormElement.js","../../../output/worker-thread/dom/HTMLIFrameElement.js","../../../output/worker-thread/dom/HTMLImageElement.js","../../../output/worker-thread/dom/HTMLInputLabelsMixin.js","../../../output/worker-thread/dom/HTMLInputElement.js","../../../output/worker-thread/dom/HTMLLabelElement.js","../../../output/worker-thread/dom/HTMLLinkElement.js","../../../output/worker-thread/dom/HTMLMapElement.js","../../../output/worker-thread/dom/HTMLMeterElement.js","../../../output/worker-thread/dom/HTMLModElement.js","../../../output/worker-thread/dom/HTMLOListElement.js","../../../output/worker-thread/dom/HTMLOptionElement.js","../../../output/worker-thread/dom/HTMLProgressElement.js","../../../output/worker-thread/dom/HTMLQuoteElement.js","../../../output/worker-thread/dom/HTMLScriptElement.js","../../../output/worker-thread/dom/HTMLSelectElement.js","../../../output/worker-thread/dom/HTMLSourceElement.js","../../../output/worker-thread/dom/HTMLStyleElement.js","../../../output/worker-thread/dom/HTMLTableCellElement.js","../../../output/worker-thread/dom/HTMLTableColElement.js","../../../output/worker-thread/dom/HTMLTableElement.js","../../../output/worker-thread/dom/HTMLTableRowElement.js","../../../output/worker-thread/dom/HTMLTableSectionElement.js","../../../output/worker-thread/dom/HTMLTimeElement.js","../../../output/worker-thread/dom/Text.js","../../../output/worker-thread/dom/DocumentFragment.js","../../../output/worker-thread/SyncValuePropagation.js","../../../output/worker-thread/ResizePropagation.js","../../../output/worker-thread/dom/Document.js","../../../output/worker-thread/Storage.js","../../../output/worker-thread/initialize-storage.js","../../../output/worker-thread/initialize.js","../../../output/worker-thread/AnimationFrame.js","../../../output/worker-thread/dom/SVGElement.js","../../../output/worker-thread/long-task.js","../../../output/worker-thread/index.amp.js"],"sourcesContent":["let count = 0;\nlet transfer = [];\nconst mapping = new Map();\n/**\n * Stores a string in mapping and returns the index of the location.\n * @param value string to store\n * @return location in map\n */\nexport function store(value) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (mapping.has(value)) {\n        // Safe to cast since we verified the mapping contains the value\n        return mapping.get(value);\n    }\n    mapping.set(value, count);\n    transfer.push(value);\n    return count++;\n}\n/**\n * Retrieve the index for a string (mostly used for tests).\n * @param value string value we need to know the index of\n * @returns index in the map for the string\n */\nexport function getForTesting(value) {\n    return mapping.get(value);\n}\nexport function getForTestingPartial(value) {\n    const found = Array.from(mapping.keys()).find((str) => str.includes(value));\n    if (found) {\n        return mapping.get(found);\n    }\n}\n/**\n * Returns strings registered but not yet transferred.\n * Side effect: Resets the transfer array to default value, to prevent passing the same values multiple times.\n */\nexport function consume() {\n    const strings = transfer;\n    transfer = [];\n    return strings;\n}\n//# sourceMappingURL=strings.js.map","export let phase = 0 /* Phase.Initializing */;\nexport const set = (newPhase) => (phase = newPhase);\n//# sourceMappingURL=phase.js.map","import { phase } from './phase';\nlet count = 0;\nlet transfer = [];\nconst mapping = new Map();\n/**\n * Override the store for a node during the initialization phase.\n * @param node Node to store and modify with index\n * @param override Override number to use as the identifier.\n *\n * NOTE: THIS IS ONLY TO BE USED DURING INITIALIZATION.\n */\nexport function storeOverride(node, override) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (phase === 0 /* Phase.Initializing */) {\n        mapping.set((node[7 /* TransferrableKeys.index */] = override), node);\n        count = Math.max(count, override);\n    }\n    return override;\n}\n/**\n * Stores a node in mapping, and makes the index available on the Node directly.\n * @param node Node to store and modify with index\n * @return index Node was stored with in mapping\n */\nexport function store(node) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (node[7 /* TransferrableKeys.index */] !== undefined) {\n        return node[7 /* TransferrableKeys.index */];\n    }\n    mapping.set((node[7 /* TransferrableKeys.index */] = ++count), node);\n    if (phase > 0 /* Phase.Initializing */) {\n        // After Initialization, include all future dom node creation into the list for next transfer.\n        transfer.push(node);\n    }\n    return count;\n}\n/**\n * Retrieves a node based on an index.\n * @param index location in map to retrieve a Node for\n * @return either the Node represented in index position, or null if not available.\n */\nexport function get(index) {\n    // mapping has a 1 based index, since on first store we ++count before storing.\n    return (!!index && mapping.get(index)) || null;\n}\n/**\n * Returns nodes registered but not yet transferred.\n * Side effect: Resets the transfer array to default value, to prevent passing the same values multiple times.\n */\nexport function consume() {\n    const copy = transfer;\n    transfer = [];\n    return copy;\n}\n//# sourceMappingURL=nodes.js.map","import { consume as consumeNodes } from './nodes';\nimport { consume as consumeStrings } from './strings';\nimport { phase, set as setPhase } from './phase';\nlet pending = false;\nlet pendingMutations = [];\n// TODO(choumx): Change `mutation` to Array<Uint16> to prevent casting errors e.g. integer underflow, precision loss.\nexport function transfer(document, mutation) {\n    if (process.env.SERVER) {\n        return;\n    }\n    if (phase > 0 /* Phase.Initializing */ && document[58 /* TransferrableKeys.allowTransfer */]) {\n        pending = true;\n        pendingMutations = pendingMutations.concat(mutation);\n        Promise.resolve().then((_) => {\n            if (pending) {\n                const nodes = new Uint16Array(consumeNodes().reduce((acc, node) => acc.concat(node[8 /* TransferrableKeys.creationFormat */]), [])).buffer;\n                const mutations = new Uint16Array(pendingMutations).buffer;\n                document.postMessage({\n                    [54 /* TransferrableKeys.phase */]: phase,\n                    [12 /* TransferrableKeys.type */]: phase === 2 /* Phase.Mutating */ ? 3 /* MessageType.MUTATE */ : 2 /* MessageType.HYDRATE */,\n                    [37 /* TransferrableKeys.nodes */]: nodes,\n                    [41 /* TransferrableKeys.strings */]: consumeStrings(),\n                    [36 /* TransferrableKeys.mutations */]: mutations,\n                }, [nodes, mutations]);\n                pendingMutations = [];\n                pending = false;\n                setPhase(2 /* Phase.Mutating */);\n            }\n        });\n    }\n}\n//# sourceMappingURL=MutationTransfer.js.map","import { store } from '../strings';\nimport { transfer } from '../MutationTransfer';\nexport class AMP {\n    document;\n    constructor(document) {\n        this.document = document;\n    }\n    /**\n     * Returns a promise that resolves with the value of `key`.\n     * @param key\n     */\n    getState(key = '') {\n        return new Promise((resolve) => {\n            const messageHandler = (event) => {\n                const message = event.data;\n                if (message[12 /* TransferrableKeys.type */] !== 11 /* MessageType.GET_STORAGE */) {\n                    return;\n                }\n                // TODO: There is a race condition here if there are multiple concurrent\n                // getState(k) messages in flight, where k is the same value.\n                const storageMessage = message;\n                if (storageMessage[74 /* TransferrableKeys.storageKey */] !== key) {\n                    return;\n                }\n                this.document.removeGlobalEventListener('message', messageHandler);\n                const value = storageMessage[21 /* TransferrableKeys.value */];\n                resolve(value);\n            };\n            this.document.addGlobalEventListener('message', messageHandler);\n            transfer(this.document, [12 /* TransferrableMutationType.STORAGE */, 1 /* GetOrSet.GET */, 2 /* StorageLocation.AmpState */, /* key */ store(key) + 1, /* value */ 0]);\n            setTimeout(resolve, 500, null); // TODO: Why a magical constant, define and explain.\n        });\n    }\n    /**\n     * Deep-merges `state` into the existing state.\n     * @param state\n     */\n    setState(state) {\n        // Stringify `state` so it can be post-messaged as a transferrable.\n        let stringified;\n        try {\n            stringified = JSON.stringify(state);\n        }\n        catch (e) {\n            throw new Error(`AMP.setState only accepts valid JSON as input.`);\n        }\n        transfer(this.document, [12 /* TransferrableMutationType.STORAGE */, 2 /* GetOrSet.SET */, 2 /* StorageLocation.AmpState */, /* key */ 0, /* value */ store(stringified) + 1]);\n    }\n}\n//# sourceMappingURL=amp.js.map","import { transfer } from './MutationTransfer';\nimport { store } from './strings';\nconst exportedFunctions = {};\nexport function callFunctionMessageHandler(event, document) {\n    const msg = event.data;\n    if (msg[12 /* TransferrableKeys.type */] !== 12 /* MessageType.FUNCTION */) {\n        return;\n    }\n    const functionMessage = msg;\n    const fnIdentifier = functionMessage[77 /* TransferrableKeys.functionIdentifier */];\n    const fnArguments = JSON.parse(functionMessage[78 /* TransferrableKeys.functionArguments */]);\n    const index = functionMessage[7 /* TransferrableKeys.index */];\n    const fn = exportedFunctions[fnIdentifier];\n    if (!fn) {\n        transfer(document, [\n            13 /* TransferrableMutationType.FUNCTION_CALL */,\n            2 /* ResolveOrReject.REJECT */,\n            index,\n            store(JSON.stringify(`[worker-dom]: Exported function \"${fnIdentifier}\" could not be found.`)),\n        ]);\n        return;\n    }\n    Promise.resolve(fn) // Forcing promise flows allows us to skip a try/catch block.\n        .then((f) => f.apply(null, fnArguments))\n        .then((value) => {\n        transfer(document, [13 /* TransferrableMutationType.FUNCTION_CALL */, 1 /* ResolveOrReject.RESOLVE */, index, store(JSON.stringify(value))]);\n    }, (err) => {\n        const errorMessage = JSON.stringify(err.message || err);\n        transfer(document, [\n            13 /* TransferrableMutationType.FUNCTION_CALL */,\n            2 /* ResolveOrReject.REJECT */,\n            index,\n            store(JSON.stringify(`[worker-dom]: Function \"${fnIdentifier}\" threw: \"${errorMessage}\"`)),\n        ]);\n    });\n}\nexport function exportFunction(name, fn) {\n    if (!name || name === '') {\n        throw new Error(`[worker-dom]: Attempt to export function was missing an identifier.`);\n    }\n    if (typeof fn !== 'function') {\n        throw new Error(`[worker-dom]: Attempt to export non-function failed: (\"${name}\", ${typeof fn}).`);\n    }\n    if (name in exportedFunctions) {\n        throw new Error(`[worker-dom]: Attempt to re-export function failed: \"${name}\".`);\n    }\n    exportedFunctions[name] = fn;\n}\nexport function resetForTesting() {\n    for (const key of Object.keys(exportedFunctions)) {\n        delete exportedFunctions[key];\n    }\n}\n//# sourceMappingURL=function.js.map","export const toLower = (value) => value.toLowerCase();\nexport const toUpper = (value) => value.toUpperCase();\nexport const containsIndexOf = (pos) => pos !== -1;\nexport const keyValueString = (key, value) => `${key}=\"${value}\"`;\n//# sourceMappingURL=utils.js.map","import { transfer } from './MutationTransfer';\nconst observers = [];\nlet pendingMutations = false;\n/**\n * @param observerTarget\n * @param target\n */\nconst matchesIndex = (observerTarget, target) => {\n    return !!observerTarget && observerTarget[7 /* TransferrableKeys.index */] === target[7 /* TransferrableKeys.index */];\n};\n/**\n * @param observer\n * @param record\n */\nconst pushMutation = (observer, record) => {\n    observer.pushRecord(record);\n    if (!pendingMutations) {\n        pendingMutations = true;\n        Promise.resolve().then(() => {\n            pendingMutations = false;\n            observers.forEach((observer) => observer.callback(observer.takeRecords()));\n        });\n    }\n};\n/**\n * @param document\n * @param record\n * @param transferable\n */\nexport function mutate(document, record, transferable) {\n    // Post-message `transferable` to the main thread to apply mutations.\n    transfer(document, transferable);\n    // The MutationRecord is only used for external callers of MutationObserver.\n    observers.forEach((observer) => {\n        for (let t = record.target; t; t = t.parentNode) {\n            if (matchesIndex(observer.target, t)) {\n                pushMutation(observer, record);\n                break;\n            }\n        }\n    });\n}\nexport class MutationObserver {\n    callback;\n    [42 /* TransferrableKeys.records */] = [];\n    target;\n    options;\n    constructor(callback) {\n        this.callback = callback;\n    }\n    /**\n     * Register the MutationObserver instance to observe a Nodes mutations.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     * @param target Node to observe DOM mutations\n     */\n    observe(target, options) {\n        this.disconnect();\n        this.target = target;\n        this.options = options || {};\n        observers.push(this);\n    }\n    /**\n     * Stop the MutationObserver instance from observing a Nodes mutations.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     */\n    disconnect() {\n        this.target = null;\n        const index = observers.indexOf(this);\n        if (index >= 0) {\n            observers.splice(index, 1);\n        }\n    }\n    /**\n     * Empties the MutationObserver instance's record queue and returns what was in there.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     * @return Mutation Records stored on this MutationObserver instance.\n     */\n    takeRecords() {\n        const records = this[42 /* TransferrableKeys.records */];\n        return records.splice(0, records.length);\n    }\n    /**\n     * NOTE: This method doesn't exist on native MutationObserver.\n     * @param record MutationRecord to store for this instance.\n     */\n    pushRecord(record) {\n        this[42 /* TransferrableKeys.records */].push(record);\n    }\n}\n//# sourceMappingURL=MutationObserver.js.map","import { store as storeNodeMapping, storeOverride as storeOverrideNodeMapping } from '../nodes';\nimport { toLower } from '../../utils';\nimport { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\n/**\n * Propagates a property change for a Node to itself and all childNodes.\n * @param node Node to start applying change to\n * @param property Property to modify\n * @param value New value to apply\n */\nexport const propagate = (node, property, value) => {\n    node[property] = value;\n    node.childNodes.forEach((child) => propagate(child, property, value));\n};\n// https://developer.mozilla.org/en-US/docs/Web/API/Node\n// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\n//\n// Please note, in this implmentation Node doesn't extend EventTarget.\n// This is intentional to reduce the number of classes.\nexport class Node {\n    ownerDocument; // TODO(choumx): Should be a Document.\n    // https://drafts.csswg.org/selectors-4/#scoping-root\n    [45 /* TransferrableKeys.scopingRoot */];\n    nodeType;\n    nodeName;\n    childNodes = [];\n    parentNode = null;\n    isConnected = false;\n    [7 /* TransferrableKeys.index */];\n    [9 /* TransferrableKeys.transferredFormat */];\n    [8 /* TransferrableKeys.creationFormat */];\n    [10 /* TransferrableKeys.handlers */] = {};\n    constructor(nodeType, nodeName, ownerDocument, overrideIndex) {\n        this.nodeType = nodeType;\n        this.nodeName = nodeName;\n        this.ownerDocument = ownerDocument || this;\n        this[45 /* TransferrableKeys.scopingRoot */] = this;\n        if (process.env.SERVER) {\n            return;\n        }\n        this[7 /* TransferrableKeys.index */] = overrideIndex ? storeOverrideNodeMapping(this, overrideIndex) : storeNodeMapping(this);\n        this[9 /* TransferrableKeys.transferredFormat */] = [this[7 /* TransferrableKeys.index */]];\n    }\n    // Unimplemented Properties\n    // Node.baseURI – https://developer.mozilla.org/en-US/docs/Web/API/Node/baseURI\n    // Unimplemented Methods\n    // Node.compareDocumentPosition() – https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n    // Node.getRootNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/getRootNode\n    // Node.isDefaultNamespace() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isDefaultNamespace\n    // Node.isEqualNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isEqualNode\n    // Node.isSameNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isSameNode\n    // Node.lookupPrefix() – https://developer.mozilla.org/en-US/docs/Web/API/Node/lookupPrefix\n    // Node.lookupNamespaceURI() – https://developer.mozilla.org/en-US/docs/Web/API/Node/lookupNamespaceURI\n    // Node.normalize() – https://developer.mozilla.org/en-US/docs/Web/API/Node/normalize\n    // Implemented at Element/Text layer\n    // Node.nodeValue – https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeValue\n    // Node.cloneNode – https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n    /**\n     * Getter returning the text representation of Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @return text from all childNodes.\n     */\n    get textContent() {\n        return this.getTextContent();\n    }\n    /**\n     * Use `this.getTextContent()` instead of `super.textContent` to avoid incorrect or expensive ES5 transpilation.\n     */\n    getTextContent() {\n        let textContent = '';\n        const childNodes = this.childNodes;\n        if (childNodes.length) {\n            childNodes.forEach((childNode) => (textContent += childNode.textContent));\n            return textContent;\n        }\n        return '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/firstChild\n     * @return Node's first child in the tree, or null if the node has no children.\n     */\n    get firstChild() {\n        return this.childNodes[0] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/lastChild\n     * @return The last child of a node, or null if there are no child elements.\n     */\n    get lastChild() {\n        return this.childNodes[this.childNodes.length - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/nextSibling\n     * @return node immediately following the specified one in it's parent's childNodes, or null if one doesn't exist.\n     */\n    get nextSibling() {\n        if (this.parentNode === null) {\n            return null;\n        }\n        const parentChildNodes = this.parentNode.childNodes;\n        return parentChildNodes[parentChildNodes.indexOf(this) + 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/previousSibling\n     * @return node immediately preceding the specified one in its parent's childNodes, or null if the specified node is the first in that list.\n     */\n    get previousSibling() {\n        if (this.parentNode === null) {\n            return null;\n        }\n        const parentChildNodes = this.parentNode.childNodes;\n        return parentChildNodes[parentChildNodes.indexOf(this) - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/hasChildNodes\n     * @return boolean if the Node has childNodes.\n     */\n    hasChildNodes() {\n        return this.childNodes.length > 0;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/contains\n     * @param otherNode\n     * @return whether a Node is a descendant of a given Node\n     */\n    contains(otherNode) {\n        if (otherNode === this) {\n            return true;\n        }\n        if (this.childNodes.length > 0) {\n            if (this.childNodes.includes(this)) {\n                return true;\n            }\n            return this.childNodes.some((child) => child.contains(otherNode));\n        }\n        return false;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/insertBefore\n     * @param child\n     * @param referenceNode\n     * @return child after it has been inserted.\n     */\n    insertBefore(child, referenceNode) {\n        if (child === null || child === this) {\n            // The new child cannot contain the parent.\n            return child;\n        }\n        if (child.nodeType === 11 /* NodeType.DOCUMENT_FRAGMENT_NODE */) {\n            child.childNodes.slice().forEach((node) => this.insertBefore(node, referenceNode));\n        }\n        else if (referenceNode == null) {\n            // When a referenceNode is not valid, appendChild(child).\n            return this.appendChild(child);\n        }\n        else if (this.childNodes.indexOf(referenceNode) >= 0) {\n            // Should only insertBefore direct children of this Node.\n            child.remove();\n            // Removing a child can cause this.childNodes to change, meaning we need to splice from its updated location.\n            this.childNodes.splice(this.childNodes.indexOf(referenceNode), 0, child);\n            this[56 /* TransferrableKeys.insertedNode */](child);\n            mutate(this.ownerDocument, {\n                addedNodes: [child],\n                nextSibling: referenceNode,\n                type: 2 /* MutationRecordType.CHILD_LIST */,\n                target: this,\n            }, [\n                2 /* TransferrableMutationType.CHILD_LIST */,\n                this[7 /* TransferrableKeys.index */],\n                referenceNode[7 /* TransferrableKeys.index */],\n                0,\n                1,\n                0,\n                child[7 /* TransferrableKeys.index */],\n            ]);\n            return child;\n        }\n        return null;\n    }\n    /**\n     * When a Node is inserted, this method is called (and can be extended by other classes)\n     * @param child\n     */\n    [56 /* TransferrableKeys.insertedNode */](child) {\n        child.parentNode = this;\n        propagate(child, 'isConnected', this.isConnected);\n        propagate(child, 45 /* TransferrableKeys.scopingRoot */, this[45 /* TransferrableKeys.scopingRoot */]);\n    }\n    /**\n     * When a node is removed, this method is called (and can be extended by other classes)\n     * @param child\n     */\n    [57 /* TransferrableKeys.removedNode */](child) {\n        child.parentNode = null;\n        propagate(child, 'isConnected', false);\n        propagate(child, 45 /* TransferrableKeys.scopingRoot */, child);\n    }\n    /**\n     * Adds the specified childNode argument as the last child to the current node.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/appendChild\n     * @param child Child Node to append to this Node.\n     * @return Node the appended node.\n     */\n    appendChild(child) {\n        if (child.nodeType === 11 /* NodeType.DOCUMENT_FRAGMENT_NODE */) {\n            child.childNodes.slice().forEach(this.appendChild, this);\n        }\n        else {\n            child.remove();\n            this.childNodes.push(child);\n            this[56 /* TransferrableKeys.insertedNode */](child);\n            const previousSibling = this.childNodes[this.childNodes.length - 2];\n            mutate(this.ownerDocument, {\n                addedNodes: [child],\n                previousSibling,\n                type: 2 /* MutationRecordType.CHILD_LIST */,\n                target: this,\n            }, [\n                2 /* TransferrableMutationType.CHILD_LIST */,\n                this[7 /* TransferrableKeys.index */],\n                0,\n                previousSibling ? previousSibling[7 /* TransferrableKeys.index */] : 0,\n                1,\n                0,\n                child[7 /* TransferrableKeys.index */],\n            ]);\n        }\n        return child;\n    }\n    /**\n     * Removes a child node from the current element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/removeChild\n     * @param child Child Node to remove from this Node.\n     * @return Node removed from the tree or null if the node wasn't attached to this tree.\n     */\n    removeChild(child) {\n        const index = this.childNodes.indexOf(child);\n        const exists = index >= 0;\n        if (exists) {\n            this.childNodes.splice(index, 1);\n            this[57 /* TransferrableKeys.removedNode */](child);\n            mutate(this.ownerDocument, {\n                removedNodes: [child],\n                type: 2 /* MutationRecordType.CHILD_LIST */,\n                target: this,\n            }, [2 /* TransferrableMutationType.CHILD_LIST */, this[7 /* TransferrableKeys.index */], 0, 0, 0, 1, child[7 /* TransferrableKeys.index */]]);\n            return child;\n        }\n        return null;\n    }\n    /**\n     * @param newChild\n     * @param oldChild\n     * @return child that was replaced.\n     * @note `HierarchyRequestError` not handled e.g. newChild is an ancestor of current node.\n     * @see https://dom.spec.whatwg.org/#concept-node-replace\n     */\n    replaceChild(newChild, oldChild) {\n        if (newChild === oldChild ||\n            // In DOM, this throws DOMException: \"The node to be replaced is not a child of this node.\"\n            oldChild.parentNode !== this ||\n            // In DOM, this throws DOMException: \"The new child element contains the parent.\"\n            newChild.contains(this)) {\n            return oldChild;\n        }\n        // If newChild already exists in the DOM, it is first removed.\n        // TODO: Consider using a mutation-free API here to avoid two mutations\n        // per replaceChild() call.\n        newChild.remove();\n        const index = this.childNodes.indexOf(oldChild);\n        this.childNodes.splice(index, 1, newChild);\n        this[57 /* TransferrableKeys.removedNode */](oldChild);\n        this[56 /* TransferrableKeys.insertedNode */](newChild);\n        mutate(this.ownerDocument, {\n            addedNodes: [newChild],\n            removedNodes: [oldChild],\n            type: 2 /* MutationRecordType.CHILD_LIST */,\n            nextSibling: this.childNodes[index + 1],\n            target: this,\n        }, [\n            2 /* TransferrableMutationType.CHILD_LIST */,\n            this[7 /* TransferrableKeys.index */],\n            this.childNodes[index + 1] ? this.childNodes[index + 1][7 /* TransferrableKeys.index */] : 0,\n            0,\n            1,\n            1,\n            newChild[7 /* TransferrableKeys.index */],\n            oldChild[7 /* TransferrableKeys.index */],\n        ]);\n        return oldChild;\n    }\n    /**\n     * Replaces the current node with the provided Array<node|string>.\n     * @param nodes\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/replaceWith\n     */\n    replaceWith(...nodes) {\n        const parent = this.parentNode;\n        let nodeIterator = nodes.length;\n        let currentNode;\n        if (!parent) {\n            return;\n        }\n        if (!nodeIterator) {\n            parent.removeChild(this);\n        }\n        while (nodeIterator--) {\n            currentNode = nodes[nodeIterator];\n            if (typeof currentNode !== 'object') {\n                currentNode = this.ownerDocument.createTextNode(currentNode);\n            }\n            // TODO: Investigate inserting all new nodes in a single operation.\n            if (!nodeIterator) {\n                // currentNode is the first argument (currentNode === arguments[0])\n                parent.replaceChild(currentNode, this);\n            }\n            else {\n                parent.insertBefore(currentNode, this.nextSibling);\n            }\n        }\n    }\n    /**\n     * Removes this Node from the tree it belogs too.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/remove\n     */\n    remove() {\n        if (this.parentNode) {\n            this.parentNode.removeChild(this);\n        }\n    }\n    /**\n     * Add an event listener to callback when a specific event type is dispatched.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n     * @param type Event Type (i.e 'click')\n     * @param handler Function called when event is dispatched.\n     */\n    addEventListener(type, handler, options = {}) {\n        const lowerType = toLower(type);\n        const storedType = storeString(lowerType);\n        const handlers = this[10 /* TransferrableKeys.handlers */][lowerType];\n        let index = 0;\n        if (handlers) {\n            index = handlers.push(handler);\n        }\n        else {\n            this[10 /* TransferrableKeys.handlers */][lowerType] = [handler];\n        }\n        transfer(this.ownerDocument, [\n            4 /* TransferrableMutationType.EVENT_SUBSCRIPTION */,\n            this[7 /* TransferrableKeys.index */],\n            0,\n            1,\n            storedType,\n            index,\n            Number(Boolean(options.capture)),\n            Number(Boolean(options.once)),\n            Number(Boolean(options.passive)),\n            Number(Boolean(options.workerDOMPreventDefault)),\n        ]);\n    }\n    /**\n     * Remove a registered event listener for a specific event type.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n     * @param type Event Type (i.e 'click')\n     * @param handler Function to stop calling when event is dispatched.\n     */\n    removeEventListener(type, handler) {\n        const lowerType = toLower(type);\n        const handlers = this[10 /* TransferrableKeys.handlers */][lowerType];\n        const index = !!handlers ? handlers.indexOf(handler) : -1;\n        if (index >= 0) {\n            handlers.splice(index, 1);\n            transfer(this.ownerDocument, [\n                4 /* TransferrableMutationType.EVENT_SUBSCRIPTION */,\n                this[7 /* TransferrableKeys.index */],\n                1,\n                0,\n                storeString(lowerType),\n                index,\n            ]);\n        }\n    }\n    /**\n     * Dispatch an event for this Node.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent\n     * @param event Event to dispatch to this node and potentially cascade to parents.\n     */\n    dispatchEvent(event) {\n        let target = (event.currentTarget = this);\n        let handlers;\n        let iterator;\n        do {\n            handlers = target && target[10 /* TransferrableKeys.handlers */] && target[10 /* TransferrableKeys.handlers */][toLower(event.type)];\n            if (handlers) {\n                for (iterator = handlers.length; iterator--;) {\n                    if ((handlers[iterator].call(target, event) === false || event[51 /* TransferrableKeys.end */]) && event.cancelable) {\n                        break;\n                    }\n                }\n            }\n        } while (event.bubbles && !(event.cancelable && event[50 /* TransferrableKeys.stop */]) && (target = target && target.parentNode));\n        return !event.defaultPrevented;\n    }\n}\n//# sourceMappingURL=Node.js.map","export function getPreviousElementSibling(node) {\n    let parentNodes = node.parentNode && node.parentNode.childNodes;\n    if (!parentNodes) {\n        return null;\n    }\n    for (let i = parentNodes.indexOf(node) - 1; i >= 0; i--) {\n        let node = parentNodes[i];\n        if (node.nodeType === 1 /* NodeType.ELEMENT_NODE */) {\n            return node;\n        }\n    }\n    return null;\n}\nexport function getNextElementSibling(node) {\n    let parentNodes = node.parentNode && node.parentNode.childNodes;\n    if (!parentNodes) {\n        return null;\n    }\n    for (let i = parentNodes.indexOf(node) + 1; i < parentNodes.length; i++) {\n        let node = parentNodes[i];\n        if (node.nodeType === 1 /* NodeType.ELEMENT_NODE */) {\n            return node;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=elementSibling.js.map","import { Node } from './Node';\nimport { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\nimport { getNextElementSibling, getPreviousElementSibling } from './elementSibling';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/CharacterData\nexport class CharacterData extends Node {\n    [38 /* TransferrableKeys.data */];\n    constructor(data, nodeType, nodeName, ownerDocument, overrideIndex) {\n        super(nodeType, nodeName, ownerDocument, overrideIndex);\n        this[38 /* TransferrableKeys.data */] = data;\n        this[8 /* TransferrableKeys.creationFormat */] = [this[7 /* TransferrableKeys.index */], nodeType, storeString(nodeName), storeString(data), 0];\n    }\n    // Unimplemented Methods\n    // NonDocumentTypeChildNode.nextElementSibling – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/nextElementSibling\n    // NonDocumentTypeChildNode.previousElementSibling – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/previousElementSibling\n    // CharacterData.appendData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/appendData\n    // CharacterData.deleteData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/deleteData\n    // CharacterData.insertData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/insertData\n    // CharacterData.replaceData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/replaceData\n    // CharacterData.substringData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/substringData\n    /**\n     * @return Returns the string contained in private CharacterData.data\n     */\n    get data() {\n        return this[38 /* TransferrableKeys.data */];\n    }\n    /**\n     * @param value string value to store as CharacterData.data.\n     */\n    set data(value) {\n        const oldValue = this.data;\n        this[38 /* TransferrableKeys.data */] = value;\n        mutate(this.ownerDocument, {\n            target: this,\n            type: 1 /* MutationRecordType.CHARACTER_DATA */,\n            value,\n            oldValue,\n        }, [1 /* TransferrableMutationType.CHARACTER_DATA */, this[7 /* TransferrableKeys.index */], storeString(value)]);\n    }\n    /**\n     * @return Returns the size of the string contained in CharacterData.data\n     */\n    get length() {\n        return this[38 /* TransferrableKeys.data */].length;\n    }\n    /**\n     * @return Returns the string contained in CharacterData.data\n     */\n    get nodeValue() {\n        return this[38 /* TransferrableKeys.data */];\n    }\n    /**\n     * @param value string value to store as CharacterData.data.\n     */\n    set nodeValue(value) {\n        this.data = value;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/previousElementSibling\n     * Returns the Element immediately prior to the specified one in its parent's children list,\n     * or null if the specified element is the first one in the list.\n     */\n    get previousElementSibling() {\n        return getPreviousElementSibling(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/nextElementSibling\n     * Returns the Element immediately following the specified one in its parent's children list,\n     * or null if the specified element is the last one in the list.\n     */\n    get nextElementSibling() {\n        return getNextElementSibling(this);\n    }\n}\n//# sourceMappingURL=CharacterData.js.map","import { CharacterData } from './CharacterData';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/Comment\nexport class Comment extends CharacterData {\n    constructor(data, ownerDocument, overrideIndex) {\n        super(data, 8 /* NodeType.COMMENT_NODE */, '#comment', ownerDocument, overrideIndex);\n    }\n    /**\n     * textContent getter, retrieves underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     */\n    get textContent() {\n        return this.data;\n    }\n    /**\n     * textContent setter, mutates underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     * @param value new value\n     */\n    set textContent(value) {\n        // Mutation Observation is performed by CharacterData.\n        this.nodeValue = value;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @return new Comment Node with the same data as the Comment to clone.\n     */\n    cloneNode() {\n        return this.ownerDocument.createComment(this.data);\n    }\n}\n//# sourceMappingURL=Comment.js.map","const ALLOWLISTED_GLOBALS = {\n    Array: true,\n    ArrayBuffer: true,\n    BigInt: true,\n    BigInt64Array: true,\n    BigUint64Array: true,\n    Boolean: true,\n    Cache: true,\n    CustomEvent: true,\n    DataView: true,\n    Date: true,\n    Error: true,\n    EvalError: true,\n    Event: true,\n    EventTarget: true,\n    Float32Array: true,\n    Float64Array: true,\n    Function: true,\n    Infinity: true,\n    Int16Array: true,\n    Int32Array: true,\n    Int8Array: true,\n    Intl: true,\n    JSON: true,\n    Map: true,\n    Math: true,\n    NaN: true,\n    Number: true,\n    Object: true,\n    Promise: true,\n    Proxy: true,\n    RangeError: true,\n    ReferenceError: true,\n    Reflect: true,\n    RegExp: true,\n    Set: true,\n    String: true,\n    Symbol: true,\n    SyntaxError: true,\n    TextDecoder: true,\n    TextEncoder: true,\n    TypeError: true,\n    URIError: true,\n    URL: true,\n    Uint16Array: true,\n    Uint32Array: true,\n    Uint8Array: true,\n    Uint8ClampedArray: true,\n    WeakMap: true,\n    WeakSet: true,\n    WebAssembly: true,\n    WebSocket: true,\n    XMLHttpRequest: true,\n    atob: true,\n    addEventListener: true,\n    removeEventListener: true,\n    btoa: true,\n    caches: true,\n    clearInterval: true,\n    clearTimeout: true,\n    console: true,\n    decodeURI: true,\n    decodeURIComponent: true,\n    document: true,\n    encodeURI: true,\n    encodeURIComponent: true,\n    escape: true,\n    fetch: true,\n    indexedDB: true,\n    isFinite: true,\n    isNaN: true,\n    location: true,\n    navigator: true,\n    onerror: true,\n    onrejectionhandled: true,\n    onunhandledrejection: true,\n    parseFloat: true,\n    parseInt: true,\n    performance: true,\n    requestAnimationFrame: true,\n    cancelAnimationFrame: true,\n    self: true,\n    setTimeout: true,\n    setInterval: true,\n    unescape: true,\n};\n// Modify global scope by removing disallowed properties.\nexport function deleteGlobals(global) {\n    /**\n     * @param object\n     * @param property\n     * @return True if property was deleted from object. Otherwise, false.\n     */\n    const deleteUnsafe = (object, property) => {\n        if (!ALLOWLISTED_GLOBALS.hasOwnProperty(property)) {\n            try {\n                delete object[property];\n                return true;\n            }\n            catch (e) { }\n        }\n        return false;\n    };\n    // Walk up global's prototype chain and dereference non-allowlisted properties\n    // until EventTarget is reached.\n    let current = global;\n    while (current && current.constructor !== EventTarget) {\n        const deleted = [];\n        const failedToDelete = [];\n        Object.getOwnPropertyNames(current).forEach((prop) => {\n            if (deleteUnsafe(current, prop)) {\n                deleted.push(prop);\n            }\n            else {\n                failedToDelete.push(prop);\n            }\n        });\n        console.info(`Removed ${deleted.length} references from`, current, ':', deleted);\n        if (failedToDelete.length) {\n            console.info(`Failed to remove ${failedToDelete.length} references from`, current, ':', failedToDelete);\n        }\n        current = Object.getPrototypeOf(current);\n    }\n}\n//# sourceMappingURL=delete-globals.js.map","import { toLower, toUpper } from '../../utils';\n// To future authors: It would be great if we could enforce that elements are not modified by a ConditionPredicate.\nexport const tagNameConditionPredicate = (tagNames) => (element) => {\n    console.assert(tagNames.every((t) => t === toUpper(t)), 'tagNames must be all uppercase.');\n    return tagNames.includes(element.tagName);\n};\nexport const elementPredicate = (node) => node.nodeType === 1 /* NodeType.ELEMENT_NODE */;\nexport const matchChildrenElements = (node, conditionPredicate) => {\n    const matchingElements = [];\n    node.childNodes.forEach((child) => {\n        if (elementPredicate(child)) {\n            if (conditionPredicate(child)) {\n                matchingElements.push(child);\n            }\n            matchingElements.push(...matchChildrenElements(child, conditionPredicate));\n        }\n    });\n    return matchingElements;\n};\nexport const matchChildElement = (element, conditionPredicate) => {\n    let returnValue = null;\n    element.children.some((child) => {\n        if (conditionPredicate(child)) {\n            returnValue = child;\n            return true;\n        }\n        const grandChildMatch = matchChildElement(child, conditionPredicate);\n        if (grandChildMatch !== null) {\n            returnValue = grandChildMatch;\n            return true;\n        }\n        return false;\n    });\n    return returnValue;\n};\nexport const matchNearestParent = (element, conditionPredicate) => {\n    while ((element = element.parentNode)) {\n        if (conditionPredicate(element)) {\n            return element;\n        }\n    }\n    return null;\n};\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors\n * @param attrSelector the selector we are trying to match for.\n * @param element the element being tested.\n * @return boolean for whether we match the condition\n */\nexport const matchAttrReference = (attrSelector, element) => {\n    if (!attrSelector) {\n        return false;\n    }\n    const equalPos = attrSelector.indexOf('=');\n    const selectorLength = attrSelector.length;\n    const caseInsensitive = attrSelector.charAt(selectorLength - 2) === 'i';\n    const endPos = caseInsensitive ? selectorLength - 3 : selectorLength - 1;\n    if (equalPos !== -1) {\n        const equalSuffix = attrSelector.charAt(equalPos - 1);\n        const possibleSuffixes = ['~', '|', '$', '^', '*'];\n        const attrString = possibleSuffixes.includes(equalSuffix) ? attrSelector.substring(1, equalPos - 1) : attrSelector.substring(1, equalPos);\n        const rawValue = attrSelector.substring(equalPos + 1, endPos);\n        const rawAttrValue = element.getAttribute(attrString);\n        if (rawAttrValue) {\n            const casedValue = caseInsensitive ? toLower(rawValue) : rawValue;\n            const casedAttrValue = caseInsensitive ? toLower(rawAttrValue) : rawAttrValue;\n            switch (equalSuffix) {\n                case '~':\n                    return casedAttrValue.split(' ').indexOf(casedValue) !== -1;\n                case '|':\n                    return casedAttrValue === casedValue || casedAttrValue === `${casedValue}-`;\n                case '^':\n                    return casedAttrValue.startsWith(casedValue);\n                case '$':\n                    return casedAttrValue.endsWith(casedValue);\n                case '*':\n                    return casedAttrValue.indexOf(casedValue) !== -1;\n                default:\n                    return casedAttrValue === casedValue;\n            }\n        }\n        return false;\n    }\n    else {\n        return element.hasAttribute(attrSelector.substring(1, endPos));\n    }\n};\n//# sourceMappingURL=matchElements.js.map","import { elementPredicate, matchAttrReference, matchChildrenElements } from './matchElements';\nimport { Node } from './Node';\nimport { containsIndexOf, toLower } from '../../utils';\n/*\nNormally ParentNode is implemented as a mixin, but since the Node class is an abstract\nthis makes it hard to build a mixin that recieves a base of the representations of Node needing\nthe mixed in functionality.\n\n// Partially implemented Mixin Methods\n// Both Element.querySelector() and Element.querySelector() are only implemented for the following simple selectors:\n// - Element selectors\n// - ID selectors\n// - Class selectors\n// - Attribute selectors\n// Element.querySelector() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n// Element.querySelectorAll() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n*/\nexport class ParentNode extends Node {\n    /**\n     * Getter returning children of an Element that are Elements themselves.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/children\n     * @return Element objects that are children of this ParentNode, omitting all of its non-element nodes.\n     */\n    get children() {\n        return this.childNodes.filter(elementPredicate);\n    }\n    /**\n     * Getter returning the number of child elements of a Element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/childElementCount\n     * @return number of child elements of the given Element.\n     */\n    get childElementCount() {\n        return this.children.length;\n    }\n    /**\n     * Getter returning the first Element in Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/firstElementChild\n     * @return first childNode that is also an element.\n     */\n    get firstElementChild() {\n        return this.childNodes.find(elementPredicate) || null;\n    }\n    /**\n     * Getter returning the last Element in Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/lastElementChild\n     * @return first childNode that is also an element.\n     */\n    get lastElementChild() {\n        const children = this.children;\n        return children[children.length - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n     * @param selector the selector we are trying to match for.\n     * @return Element with matching selector.\n     */\n    querySelector(selector) {\n        const matches = querySelectorAll(this, selector);\n        return matches ? matches[0] : null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n     * @param selector the selector we are trying to match for.\n     * @return Elements with matching selector.\n     */\n    querySelectorAll(selector) {\n        return querySelectorAll(this, selector);\n    }\n}\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n * @param node the node to filter results under.\n * @param selector the selector we are trying to match for.\n * @return Element with matching selector.\n */\nfunction querySelectorAll(node, selector) {\n    // As per spec: https://dom.spec.whatwg.org/#scope-match-a-selectors-string\n    // First, parse the selector\n    const selectorBracketIndexes = [selector.indexOf('['), selector.indexOf(']')];\n    const selectorHasAttr = containsIndexOf(selectorBracketIndexes[0]) && containsIndexOf(selectorBracketIndexes[1]);\n    const elementSelector = selectorHasAttr ? selector.substring(0, selectorBracketIndexes[0]) : selector;\n    const attrSelector = selectorHasAttr ? selector.substring(selectorBracketIndexes[0], selectorBracketIndexes[1] + 1) : null;\n    // TODO(nainar): Parsing selectors is needed when we add in more complex selectors.\n    // Second, find all the matching elements on the Document\n    let matcher;\n    if (selector[0] === '[') {\n        matcher = (element) => matchAttrReference(selector, element);\n    }\n    else if (elementSelector[0] === '#') {\n        matcher = selectorHasAttr\n            ? (element) => element.id === elementSelector.substr(1) && matchAttrReference(attrSelector, element)\n            : (element) => element.id === elementSelector.substr(1);\n    }\n    else if (elementSelector[0] === '.') {\n        matcher = selectorHasAttr\n            ? (element) => element.classList.contains(elementSelector.substr(1)) && matchAttrReference(attrSelector, element)\n            : (element) => element.classList.contains(elementSelector.substr(1));\n    }\n    else {\n        matcher = selectorHasAttr\n            ? (element) => element.localName === toLower(elementSelector) && matchAttrReference(attrSelector, element)\n            : (element) => element.localName === toLower(elementSelector);\n    }\n    // Third, filter to return elements that exist within the querying element's descendants.\n    return matcher\n        ? matchChildrenElements(node[45 /* TransferrableKeys.scopingRoot */], matcher).filter((element) => node !== element && node.contains(element))\n        : [];\n}\n//# sourceMappingURL=ParentNode.js.map","import { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\nconst WHITESPACE_REGEX = /\\s/;\n/**\n * Synchronizes the string getter/setter with the actual DOMTokenList instance.\n * @param defineOn Element or class extension to define getter/setter pair for token list access.\n * @param accessorKey Key used to access DOMTokenList directly from specific element.\n * @param propertyName Key used to access DOMTokenList as string getter/setter.\n */\nexport function synchronizedAccessor(defineOn, accessorKey, propertyName) {\n    Object.defineProperty(defineOn.prototype, propertyName, {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return this[accessorKey].value;\n        },\n        set(value) {\n            this[accessorKey].value = value;\n        },\n    });\n}\nexport class DOMTokenList {\n    [43 /* TransferrableKeys.tokens */] = [];\n    [13 /* TransferrableKeys.target */];\n    [18 /* TransferrableKeys.attributeName */];\n    [44 /* TransferrableKeys.storeAttribute */];\n    /**\n     * The DOMTokenList interface represents a set of space-separated tokens.\n     * It is indexed beginning with 0 as with JavaScript Array objects and is case-sensitive.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList\n     * @param target Specific Element instance to modify when value is changed.\n     * @param attributeName Name of the attribute used by Element to access DOMTokenList.\n     */\n    constructor(target, attributeName) {\n        this[13 /* TransferrableKeys.target */] = target;\n        this[18 /* TransferrableKeys.attributeName */] = attributeName;\n        this[44 /* TransferrableKeys.storeAttribute */] = target[44 /* TransferrableKeys.storeAttribute */].bind(target);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/value\n     * @return string representation of tokens (space delimitted).\n     */\n    get value() {\n        return this[43 /* TransferrableKeys.tokens */].join(' ');\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/length\n     * @return integer representing the number of objects stored in the object.\n     */\n    get length() {\n        return this[43 /* TransferrableKeys.tokens */].length;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/value\n     * @param collection String of values space delimited to replace the current DOMTokenList with.\n     */\n    set value(collection) {\n        const oldValue = this.value;\n        const newValue = collection.trim();\n        // Replace current tokens with new tokens.\n        this[43 /* TransferrableKeys.tokens */].splice(0, this[43 /* TransferrableKeys.tokens */].length, ...(newValue !== '' ? newValue.split(/\\s+/) : ''));\n        this[67 /* TransferrableKeys.mutated */](oldValue, newValue);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/item\n     * @param index number from DOMTokenList entities to retrieve value of\n     * @return value stored at the index requested, or undefined if beyond known range.\n     */\n    item(index) {\n        return this[43 /* TransferrableKeys.tokens */][index];\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/contains\n     * @param token value the DOMTokenList is tested for.\n     * @return boolean indicating if the token is contained by the DOMTokenList.\n     */\n    contains(token) {\n        return this[43 /* TransferrableKeys.tokens */].includes(token);\n    }\n    /**\n     * Add a token or tokens to the list.\n     * Note: All duplicates are removed, and the first token's position with the value is preserved.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/add\n     * @param tokens each token is a string to add to a TokenList.\n     */\n    add(...tokens) {\n        const oldValue = this.value;\n        this[43 /* TransferrableKeys.tokens */].splice(0, this[43 /* TransferrableKeys.tokens */].length, ...Array.from(new Set(this[43 /* TransferrableKeys.tokens */].concat(tokens))));\n        this[67 /* TransferrableKeys.mutated */](oldValue, this.value);\n    }\n    /**\n     * Remove a token or tokens from the list.\n     * Note: All duplicates are removed, and the first token's position with the value is preserved.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/remove\n     * @param tokens each token is a string to remove from a TokenList.\n     */\n    remove(...tokens) {\n        const oldValue = this.value;\n        this[43 /* TransferrableKeys.tokens */].splice(0, this[43 /* TransferrableKeys.tokens */].length, ...Array.from(new Set(this[43 /* TransferrableKeys.tokens */].filter((token) => !tokens.includes(token)))));\n        this[67 /* TransferrableKeys.mutated */](oldValue, this.value);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/replace\n     * @param token\n     * @param newToken\n     */\n    replace(token, newToken) {\n        if (!this[43 /* TransferrableKeys.tokens */].includes(token)) {\n            return;\n        }\n        const oldValue = this.value;\n        const set = new Set(this[43 /* TransferrableKeys.tokens */]);\n        if (token !== newToken) {\n            set.delete(token);\n            if (newToken !== '') {\n                set.add(newToken);\n            }\n        }\n        this[43 /* TransferrableKeys.tokens */].splice(0, this[43 /* TransferrableKeys.tokens */].length, ...Array.from(set));\n        this[67 /* TransferrableKeys.mutated */](oldValue, this.value);\n    }\n    /**\n     * Adds or removes a token based on its presence in the token list.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/toggle\n     * @param token string to add or remove from the token list\n     * @param force changes toggle into a one way-only operation. true => token added. false => token removed.\n     * @return true if the token is in the list following mutation, false if not.\n     */\n    toggle(token, force) {\n        if (WHITESPACE_REGEX.test(token)) {\n            throw new TypeError('Uncaught DOMException');\n        }\n        if (!this[43 /* TransferrableKeys.tokens */].includes(token)) {\n            if (force === undefined || !!force) {\n                // Note, this will add the token if force is undefined (not passed into the method), or truthy.\n                this.add(token);\n            }\n            return true;\n        }\n        else if (!force) {\n            // Note, this will remove the token if force is undefined (not passed into the method), or falsey.\n            this.remove(token);\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Report tokenList mutations to MutationObserver.\n     * @param oldValue value before mutation\n     * @param value value after mutation\n     * @private\n     */\n    [67 /* TransferrableKeys.mutated */](oldValue, value) {\n        this[44 /* TransferrableKeys.storeAttribute */](this[13 /* TransferrableKeys.target */].namespaceURI, this[18 /* TransferrableKeys.attributeName */], value);\n        mutate(this[13 /* TransferrableKeys.target */].ownerDocument, {\n            type: 0 /* MutationRecordType.ATTRIBUTES */,\n            target: this[13 /* TransferrableKeys.target */],\n            attributeName: this[18 /* TransferrableKeys.attributeName */],\n            value,\n            oldValue,\n        }, [\n            0 /* TransferrableMutationType.ATTRIBUTES */,\n            this[13 /* TransferrableKeys.target */][7 /* TransferrableKeys.index */],\n            storeString(this[18 /* TransferrableKeys.attributeName */]),\n            0,\n            value !== null ? storeString(value) + 1 : 0,\n        ]);\n    }\n}\n//# sourceMappingURL=DOMTokenList.js.map","import { keyValueString } from '../../utils';\nexport const toString = (attributes) => attributes.map((attr) => keyValueString(attr.name, attr.value)).join(' ');\nexport const matchPredicate = (namespaceURI, name) => (attr) => attr.namespaceURI === namespaceURI && attr.name === name;\n//# sourceMappingURL=Attr.js.map","import { mutate } from '../MutationObserver';\nimport { toLower } from '../../utils';\nimport { store as storeString } from '../strings';\nconst hyphenateKey = (key) => toLower(key.replace(/(webkit|ms|moz|khtml)/g, '-$1').replace(/([a-zA-Z])(?=[A-Z])/g, '$1-'));\nexport const appendKeys = (keys) => {\n    const keysToAppend = keys.filter((key) => isNaN(key) && !CSSStyleDeclaration.prototype.hasOwnProperty(key));\n    if (keysToAppend.length <= 0) {\n        return;\n    }\n    const previousPrototypeLength = (CSSStyleDeclaration.prototype.length || 0);\n    if (previousPrototypeLength !== 0) {\n        CSSStyleDeclaration.prototype.length = previousPrototypeLength + keysToAppend.length;\n    }\n    else {\n        Object.defineProperty(CSSStyleDeclaration.prototype, 'length', {\n            configurable: true,\n            writable: true,\n            value: keysToAppend.length,\n        });\n    }\n    keysToAppend.forEach((key, index) => {\n        const hyphenatedKey = hyphenateKey(key);\n        CSSStyleDeclaration.prototype[index + previousPrototypeLength] = hyphenatedKey;\n        Object.defineProperties(CSSStyleDeclaration.prototype, {\n            [key]: {\n                get() {\n                    return this.getPropertyValue(hyphenatedKey);\n                },\n                set(value) {\n                    this.setProperty(hyphenatedKey, value);\n                },\n            },\n        });\n    });\n};\nexport class CSSStyleDeclaration {\n    [3 /* TransferrableKeys.properties */] = {};\n    [44 /* TransferrableKeys.storeAttribute */];\n    [13 /* TransferrableKeys.target */];\n    constructor(target) {\n        this[44 /* TransferrableKeys.storeAttribute */] = target[44 /* TransferrableKeys.storeAttribute */].bind(target);\n        this[13 /* TransferrableKeys.target */] = target;\n    }\n    /**\n     * Retrieve the value for a given property key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/getPropertyValue\n     * @param key the name of the property to retrieve the value for.\n     * @return value stored for the provided key.\n     */\n    getPropertyValue(key) {\n        return this[3 /* TransferrableKeys.properties */][key] || '';\n    }\n    /**\n     * Remove a value for a given property key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/removeProperty\n     * @param key the name of the property to retrieve the value for.\n     * @return previously stored value for the provided key.\n     */\n    removeProperty(key) {\n        const oldValue = this.getPropertyValue(key);\n        this[3 /* TransferrableKeys.properties */][key] = null;\n        this.mutated(this.cssText);\n        return oldValue;\n    }\n    /**\n     * Stores a given value for the provided key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/setProperty\n     * @param key modify this key\n     * @param value store this value\n     */\n    setProperty(key, value) {\n        this[3 /* TransferrableKeys.properties */][key] = value;\n        this.mutated(this.cssText);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/cssText\n     * @return css text string representing known and valid style declarations.\n     */\n    get cssText() {\n        let value;\n        let returnValue = '';\n        for (const key in this[3 /* TransferrableKeys.properties */]) {\n            if ((value = this.getPropertyValue(key)) !== '') {\n                returnValue += `${key}: ${value}; `;\n            }\n        }\n        return returnValue.trim();\n    }\n    /**\n     * Replace all style declarations with new values parsed from a cssText string.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/cssText\n     * @param value css text string to parse and store\n     */\n    set cssText(value) {\n        // value should have an \"unknown\" type but get/set can't have different types.\n        // https://github.com/Microsoft/TypeScript/issues/2521\n        const stringValue = typeof value === 'string' ? value : '';\n        this[3 /* TransferrableKeys.properties */] = {};\n        const values = stringValue.split(/[:;]/);\n        const length = values.length;\n        for (let index = 0; index + 1 < length; index += 2) {\n            this[3 /* TransferrableKeys.properties */][toLower(values[index].trim())] = values[index + 1].trim();\n        }\n        this.mutated(this.cssText);\n    }\n    /**\n     * Report CSSStyleDeclaration mutations to MutationObserver.\n     * @param value value after mutation\n     * @private\n     * // TODO(KB): Write a test to ensure mutations are fired for CSSStyleDeclaration changes.\n     */\n    mutated(value) {\n        const oldValue = this[44 /* TransferrableKeys.storeAttribute */](this[13 /* TransferrableKeys.target */].namespaceURI, 'style', value);\n        mutate(this[13 /* TransferrableKeys.target */].ownerDocument, {\n            type: 0 /* MutationRecordType.ATTRIBUTES */,\n            target: this[13 /* TransferrableKeys.target */],\n            attributeName: 'style',\n            value,\n            oldValue,\n        }, [\n            0 /* TransferrableMutationType.ATTRIBUTES */,\n            this[13 /* TransferrableKeys.target */][7 /* TransferrableKeys.index */],\n            storeString('style'),\n            0,\n            value !== null ? storeString(value) + 1 : 0,\n        ]);\n    }\n}\n//# sourceMappingURL=CSSStyleDeclaration.js.map","import { toLower } from '../../utils';\n// TODO: Do all boolean attributes have boolean properties?\n// TODO: Do enumerated attributes with non-boolean properties exist?\nexport const reflectProperties = (properties, defineOn) => {\n    properties.forEach((pair) => {\n        for (const property in pair) {\n            const { 0: defaultValue, 1: attributeName = toLower(property), 2: keywords } = pair[property];\n            // Boolean attributes only care about presence, not attribute value.\n            // https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes\n            const isBooleanAttribute = typeof defaultValue === 'boolean';\n            Object.defineProperty(defineOn.prototype, property, {\n                enumerable: true,\n                get() {\n                    const element = this;\n                    const attributeValue = element.getAttribute(attributeName);\n                    if (keywords) {\n                        return element.hasAttribute(attributeName) ? attributeValue === keywords[0] : defaultValue;\n                    }\n                    if (isBooleanAttribute) {\n                        return element.hasAttribute(attributeName);\n                    }\n                    const castableValue = attributeValue || defaultValue;\n                    return typeof defaultValue === 'number' ? Number(castableValue) : String(castableValue);\n                },\n                set(value) {\n                    const element = this;\n                    if (keywords) {\n                        element.setAttribute(attributeName, value ? keywords[0] : keywords[1]);\n                    }\n                    else if (isBooleanAttribute) {\n                        value ? element.setAttribute(attributeName, '') : element.removeAttribute(attributeName);\n                    }\n                    else {\n                        element.setAttribute(attributeName, String(value));\n                    }\n                },\n            });\n        }\n    });\n};\n//# sourceMappingURL=enhanceElement.js.map","export const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n//# sourceMappingURL=TransferrableNodes.js.map","import { SVG_NAMESPACE, HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { toLower, toUpper } from '../../utils';\nfunction arr_back(arr) {\n    return arr[arr.length - 1];\n}\n// https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\nconst kMarkupPattern = /<!--([^]*)-->|<(\\/?)([a-z][-.0-9_a-z]*)([^>]*?)(\\/?)>/gi;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\nconst kAttributePattern = /(^|\\s)([^\\s\"'>\\/=]+)\\s*=\\s*(\"([^\"]+)\"|'([^']+)'|(\\S+))/gi;\nconst kSelfClosingElements = {\n    AREA: true,\n    BASE: true,\n    BR: true,\n    COL: true,\n    HR: true,\n    IMG: true,\n    INPUT: true,\n    LINK: true,\n    META: true,\n    PARAM: true,\n    SOURCE: true,\n    TRACK: true,\n    WBR: true,\n};\nconst kElementsClosedByOpening = {\n    LI: { LI: true },\n    DT: { DT: true, DD: true },\n    DD: { DD: true, DT: true },\n    P: {\n        ADDRESS: true,\n        ARTICLE: true,\n        ASIDE: true,\n        BLOCKQUOTE: true,\n        DETAILS: true,\n        DIV: true,\n        DL: true,\n        FIELDSET: true,\n        FIGCAPTION: true,\n        FIGURE: true,\n        FOOTER: true,\n        FORM: true,\n        H1: true,\n        H2: true,\n        H3: true,\n        H4: true,\n        H5: true,\n        H6: true,\n        HEADER: true,\n        HR: true,\n        MAIN: true,\n        NAV: true,\n        OL: true,\n        P: true,\n        PRE: true,\n        SECTION: true,\n        TABLE: true,\n        UL: true,\n    },\n    RT: { RT: true, RP: true },\n    RP: { RT: true, RP: true },\n    OPTGROUP: { OPTGROUP: true },\n    OPTION: { OPTION: true, OPTGROUP: true },\n    THEAD: { TBODY: true, TFOOT: true },\n    TBODY: { TBODY: true, TFOOT: true },\n    TR: { TR: true },\n    TD: { TD: true, TH: true },\n    TH: { TD: true, TH: true },\n};\nconst kElementsClosedByClosing = {\n    LI: { UL: true, OL: true },\n    A: { DIV: true },\n    B: { DIV: true },\n    I: { DIV: true },\n    P: { DIV: true },\n    TD: { TR: true, TABLE: true },\n    TH: { TR: true, TABLE: true },\n};\nconst kBlockTextElements = {\n    SCRIPT: true,\n    NOSCRIPT: true,\n    STYLE: true,\n    PRE: true,\n};\n/**\n * Parses HTML and returns a root element\n * Parse a chuck of HTML source.\n * @param  {string} data HTML in string format.\n * @param {!Element} root The element to use as root.\n * @return {Element}      root element\n */\nexport function parse(data, rootElement) {\n    const ownerDocument = rootElement.ownerDocument;\n    const root = ownerDocument.createElementNS(rootElement.namespaceURI, rootElement.localName);\n    let currentParent = root;\n    let currentNamespace = root.namespaceURI;\n    const stack = [root];\n    let lastTextPos = 0;\n    let match;\n    data = '<q>' + data + '</q>';\n    const tagsClosed = [];\n    if (currentNamespace !== SVG_NAMESPACE && currentNamespace !== HTML_NAMESPACE) {\n        throw new Error('Namespace not supported: ' + currentNamespace);\n    }\n    while ((match = kMarkupPattern.exec(data))) {\n        const commentContents = match[1]; // <!--contents-->\n        const beginningSlash = match[2]; // ... </ ...\n        const tagName = match[3];\n        const matchAttributes = match[4];\n        const endSlash = match[5]; // ... /> ...\n        if (lastTextPos < match.index) {\n            // if has content\n            const text = data.slice(lastTextPos, match.index);\n            currentParent.appendChild(ownerDocument.createTextNode(decodeEntities(text)));\n        }\n        lastTextPos = kMarkupPattern.lastIndex;\n        if (commentContents !== undefined) {\n            // this is a comment\n            currentParent.appendChild(ownerDocument.createComment(commentContents));\n            continue;\n        }\n        const normalizedTagName = toUpper(tagName);\n        if (normalizedTagName === 'SVG') {\n            currentNamespace = beginningSlash ? HTML_NAMESPACE : SVG_NAMESPACE;\n        }\n        if (!beginningSlash) {\n            // not </ tags\n            if (!endSlash && kElementsClosedByOpening[currentParent.tagName]) {\n                if (kElementsClosedByOpening[currentParent.tagName][normalizedTagName]) {\n                    stack.pop();\n                    currentParent = arr_back(stack);\n                }\n            }\n            const childToAppend = ownerDocument.createElementNS(currentNamespace, currentNamespace === HTML_NAMESPACE ? toLower(tagName) : tagName);\n            for (let attMatch; (attMatch = kAttributePattern.exec(matchAttributes));) {\n                const attrName = attMatch[2];\n                const attrValue = attMatch[4] || attMatch[5] || attMatch[6];\n                childToAppend.setAttribute(attrName, attrValue);\n            }\n            currentParent = currentParent.appendChild(childToAppend);\n            stack.push(currentParent);\n            if (kBlockTextElements[normalizedTagName]) {\n                // a little test to find next </script> or </style> ...\n                const closeMarkup = '</' + toLower(normalizedTagName) + '>';\n                const index = data.indexOf(closeMarkup, kMarkupPattern.lastIndex);\n                if (index == -1) {\n                    throw new Error('Close markup not found.');\n                }\n                else {\n                    kMarkupPattern.lastIndex = index;\n                }\n            }\n        }\n        if (tagName === 'foreignObject') {\n            currentNamespace = beginningSlash ? SVG_NAMESPACE : HTML_NAMESPACE;\n        }\n        if (beginningSlash || endSlash || kSelfClosingElements[normalizedTagName]) {\n            // </ or /> or <br> etc.\n            while (true) {\n                if (stack.length <= 1) {\n                    break;\n                }\n                if (toUpper(currentParent.nodeName) == normalizedTagName) {\n                    stack.pop();\n                    currentParent = arr_back(stack);\n                    break;\n                }\n                else {\n                    // Trying to close current tag, and move on\n                    if (kElementsClosedByClosing[currentParent.tagName]) {\n                        if (kElementsClosedByClosing[currentParent.tagName][normalizedTagName]) {\n                            stack.pop();\n                            currentParent = arr_back(stack);\n                            continue;\n                        }\n                    }\n                    // Use aggressive strategy to handle unmatching markups.\n                    break;\n                }\n            }\n        }\n    }\n    for (const node of stack) {\n        if (tagsClosed[tagsClosed.length - 1] == node.nodeName) {\n            stack.pop();\n            tagsClosed.pop();\n            currentParent = arr_back(stack);\n        }\n        else\n            break;\n    }\n    const valid = stack.length === 1;\n    if (!valid) {\n        throw new Error('Attempting to parse invalid HTML content.');\n    }\n    const wrapper = root.firstChild;\n    if (wrapper) {\n        wrapper.parentNode = null;\n        wrapper.childNodes.forEach((node) => {\n            node.parentNode = null;\n        });\n        return wrapper;\n    }\n    throw new Error('Attempting to parse invalid HTML.');\n}\n/**\n * Decodes HTML Entities.\n * Currently only works for numeric entities, as well as the 4 named entities\n * required for encoding HTML: &, \", <, >.\n * See https://developer.mozilla.org/en-US/docs/Glossary/Entity.\n *\n * TODO: create solution for other named entities.\n */\nconst RESERVED_CHARACTERS = {\n    __proto__: null,\n    amp: '&',\n    lt: '<',\n    gt: '>',\n    quot: '\"',\n};\nfunction decodeEntities(html) {\n    return html.replace(/&(?:(#x?[\\da-f]+)|([\\w]+));?/gi, function (s, numericEntity, namedEntity) {\n        // Numeric entity\n        if (numericEntity) {\n            let code = numericEntity.charAt(1).toLowerCase() === 'x' ? parseInt(numericEntity.substr(2), 16) : parseInt(numericEntity.substr(1), 10);\n            // 1114111 is the largest valid unicode codepoint.\n            if (isNaN(code) || code > 1114111) {\n                return s;\n            }\n            return String.fromCodePoint(code) || s;\n        }\n        // Named entity. Only HTML reserved entities are currently supported.\n        if (namedEntity) {\n            return RESERVED_CHARACTERS[namedEntity.toLowerCase()] || s;\n        }\n        return s;\n    });\n}\n//# sourceMappingURL=html-parser.js.map","/**\n * @fileoverview\n * WorkerDOM's `Event` class. `CustomEvent` is available natively in web worker.\n */\nimport { get } from './nodes';\nexport class Event {\n    bubbles;\n    cancelable;\n    cancelBubble;\n    currentTarget;\n    defaultPrevented;\n    eventPhase;\n    isTrusted;\n    returnValue;\n    // public srcElement: Element | null;\n    // TODO(KB): Restore srcElement.\n    target;\n    timeStamp;\n    type;\n    scoped;\n    [50 /* TransferrableKeys.stop */] = false;\n    [51 /* TransferrableKeys.end */] = false;\n    pageX;\n    pageY;\n    offsetX;\n    offsetY;\n    touches;\n    changedTouches;\n    constructor(type, opts) {\n        this.type = type;\n        this.bubbles = !!opts.bubbles;\n        this.cancelable = !!opts.cancelable;\n    }\n    stopPropagation() {\n        this[50 /* TransferrableKeys.stop */] = true;\n    }\n    stopImmediatePropagation() {\n        this[51 /* TransferrableKeys.end */] = this[50 /* TransferrableKeys.stop */] = true;\n    }\n    preventDefault() {\n        this.defaultPrevented = true;\n    }\n    /** Event.initEvent() is deprecated but supported here for legacy usage.  */\n    initEvent(type, bubbles, cancelable) {\n        this.type = type;\n        this.bubbles = bubbles;\n        this.cancelable = cancelable;\n    }\n}\n/**\n * Determine the target for a TransferrableEvent.\n * @param document Event intended within the scope of this document.\n * @param event\n */\nconst targetFromTransfer = (document, event) => {\n    if (event[13 /* TransferrableKeys.target */] !== null) {\n        const index = event[13 /* TransferrableKeys.target */][0];\n        // If the target was sent as index 0, use the current document.\n        return get(index !== 0 ? index : document[7 /* TransferrableKeys.index */]);\n    }\n    return null;\n};\n/**\n *\n * @param document\n * @param event\n */\nconst touchListFromTransfer = (document, event, key) => {\n    if (event[key] !== undefined) {\n        const touchListKeys = Object.keys(event[key]);\n        const list = {\n            length: touchListKeys.length,\n            item(index) {\n                return this[index] || null;\n            },\n        };\n        touchListKeys.forEach((touchListKey) => {\n            const numericKey = Number(touchListKey);\n            const transferredTouch = event[key][numericKey];\n            list[numericKey] = {\n                identifier: transferredTouch[0],\n                screenX: transferredTouch[1],\n                screenY: transferredTouch[2],\n                clientX: transferredTouch[3],\n                clientY: transferredTouch[4],\n                pageX: transferredTouch[5],\n                pageY: transferredTouch[6],\n                target: get(transferredTouch[7] !== 0 ? transferredTouch[7] : document[7 /* TransferrableKeys.index */]),\n            };\n        });\n        return list;\n    }\n    return undefined;\n};\n/**\n * When an event is dispatched from the main thread, it needs to be propagated in the worker thread.\n * Propagate adds an event listener to the worker global scope and uses the WorkerDOM Node.dispatchEvent\n * method to dispatch the transfered event in the worker thread.\n */\nexport function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* TransferrableKeys.type */] !== 1 /* MessageType.EVENT */) {\n            return;\n        }\n        const event = data[39 /* TransferrableKeys.event */];\n        const node = get(event[7 /* TransferrableKeys.index */]);\n        if (node !== null) {\n            node.dispatchEvent(Object.assign(new Event(event[12 /* TransferrableKeys.type */], {\n                bubbles: event[25 /* TransferrableKeys.bubbles */],\n                cancelable: event[26 /* TransferrableKeys.cancelable */],\n            }), {\n                cancelBubble: event[27 /* TransferrableKeys.cancelBubble */],\n                defaultPrevented: event[29 /* TransferrableKeys.defaultPrevented */],\n                eventPhase: event[30 /* TransferrableKeys.eventPhase */],\n                isTrusted: event[31 /* TransferrableKeys.isTrusted */],\n                returnValue: event[32 /* TransferrableKeys.returnValue */],\n                target: targetFromTransfer(global.document, event),\n                timeStamp: event[33 /* TransferrableKeys.timeStamp */],\n                scoped: event[34 /* TransferrableKeys.scoped */],\n                keyCode: event[35 /* TransferrableKeys.keyCode */],\n                pageX: event[60 /* TransferrableKeys.pageX */],\n                pageY: event[61 /* TransferrableKeys.pageY */],\n                offsetX: event[65 /* TransferrableKeys.offsetX */],\n                offsetY: event[66 /* TransferrableKeys.offsetY */],\n                touches: touchListFromTransfer(global.document, event, 62 /* TransferrableKeys.touches */),\n                changedTouches: touchListFromTransfer(global.document, event, 63 /* TransferrableKeys.changedTouches */),\n            }));\n        }\n    });\n}\n//# sourceMappingURL=Event.js.map","import { ParentNode } from './ParentNode';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nimport { toString as attrsToString, matchPredicate as matchAttrPredicate } from './Attr';\nimport { mutate } from '../MutationObserver';\nimport { toLower, toUpper } from '../../utils';\nimport { CSSStyleDeclaration } from '../css/CSSStyleDeclaration';\nimport { matchChildrenElements } from './matchElements';\nimport { reflectProperties } from './enhanceElement';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\nimport { HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { parse } from '../../third_party/html-parser/html-parser';\nimport { propagate } from './Node';\nimport { Event } from '../Event';\nimport { getNextElementSibling, getPreviousElementSibling } from './elementSibling';\nexport const NS_NAME_TO_CLASS = {};\nexport const registerSubclass = (localName, subclass, namespace = HTML_NAMESPACE) => (NS_NAME_TO_CLASS[`${namespace}:${localName}`] = subclass);\nexport function definePropertyBackedAttributes(defineOn, attributes) {\n    const sub = Object.create(defineOn[46 /* TransferrableKeys.propertyBackedAttributes */]);\n    defineOn[46 /* TransferrableKeys.propertyBackedAttributes */] = Object.assign(sub, attributes);\n}\n/**\n * There are six kinds of elements, each having different start/close tag semantics.\n * @see https://html.spec.whatwg.org/multipage/syntax.html#elements-2\n */\nvar ElementKind;\n(function (ElementKind) {\n    ElementKind[ElementKind[\"NORMAL\"] = 0] = \"NORMAL\";\n    ElementKind[ElementKind[\"VOID\"] = 1] = \"VOID\";\n    // The following element kinds have no special handling in worker-dom yet\n    // and are lumped into the NORMAL kind.\n    /*\n    FOREIGN,\n    TEMPLATE,\n    RAW_TEXT,\n    ESCAPABLE_RAW,\n    */\n})(ElementKind || (ElementKind = {}));\n/**\n * @see https://html.spec.whatwg.org/multipage/syntax.html#void-elements\n */\nconst VOID_ELEMENTS = ['AREA', 'BASE', 'BR', 'COL', 'EMBED', 'HR', 'IMG', 'INPUT', 'LINK', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR'];\nexport class Element extends ParentNode {\n    _classList;\n    static [46 /* TransferrableKeys.propertyBackedAttributes */] = {\n        class: [(el) => el.classList.value, (el, value) => (el.classList.value = value)],\n        style: [(el) => el.cssText, (el, value) => (el.cssText = value)],\n    };\n    localName;\n    attributes = [];\n    namespaceURI;\n    style_;\n    /**\n     * Element \"kind\" dictates certain behaviors e.g. start/end tag semantics.\n     * @see https://html.spec.whatwg.org/multipage/syntax.html#elements-2\n     */\n    kind;\n    constructor(nodeType, localName, namespaceURI, ownerDocument, overrideIndex) {\n        super(nodeType, toUpper(localName), ownerDocument, overrideIndex);\n        this.namespaceURI = namespaceURI || HTML_NAMESPACE;\n        this.localName = localName;\n        this.kind = VOID_ELEMENTS.includes(this.tagName) ? ElementKind.VOID : ElementKind.NORMAL;\n        this[8 /* TransferrableKeys.creationFormat */] = [\n            this[7 /* TransferrableKeys.index */],\n            this.nodeType,\n            storeString(this.localName),\n            0,\n            this.namespaceURI === null ? 0 : storeString(this.namespaceURI),\n        ];\n    }\n    // We lazily instantiate the CSSStyleDeclaration to keep element creation cheap\n    // See https://github.com/ampproject/worker-dom/pull/1096 for context.\n    get style() {\n        if (!this.style_) {\n            this.style_ = new CSSStyleDeclaration(this);\n        }\n        return this.style_;\n    }\n    // Unimplemented properties\n    // Element.clientHeight – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientHeight\n    // Element.clientLeft – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientLeft\n    // Element.clientTop – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientTop\n    // Element.clientWidth – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientWidth\n    // set Element.innerHTML – https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n    // Element.prefix – https://developer.mozilla.org/en-US/docs/Web/API/Element/prefix\n    // Element.scrollHeight – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight\n    // Element.scrollLeft – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeft\n    // Element.scrollLeftMax – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeftMax\n    // Element.scrollTop – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTop\n    // Element.scrollTopMax – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTopMax\n    // Element.scrollWidth – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollWidth\n    // Element.shadowRoot – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/shadowRoot\n    // Element.slot – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/slot\n    // Element.tabStop – https://developer.mozilla.org/en-US/docs/Web/API/Element/tabStop\n    // Element.undoManager – https://developer.mozilla.org/en-US/docs/Web/API/Element/undoManager\n    // Element.undoScope – https://developer.mozilla.org/en-US/docs/Web/API/Element/undoScope\n    // Unimplemented Methods\n    // Element.attachShadow() – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow\n    // Element.animate() – https://developer.mozilla.org/en-US/docs/Web/API/Element/animate\n    // Element.closest() – https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n    // Element.getAttributeNames() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNames\n    // Element.getBoundingClientRect() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    // Element.getClientRects() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getClientRects\n    // Element.getElementsByTagNameNS() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagNameNS\n    // Element.insertAdjacentElement() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentElement\n    // Element.insertAdjacentHTML() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentHTML\n    // Element.insertAdjacentText() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentText\n    // Element.matches() – https://developer.mozilla.org/en-US/docs/Web/API/Element/matches\n    // Element.releasePointerCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/releasePointerCapture\n    // Element.requestFullscreen() – https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n    // Element.requestPointerLock() – https://developer.mozilla.org/en-US/docs/Web/API/Element/requestPointerLock\n    // Element.scrollIntoView() – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n    // Element.setCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/setCapture\n    // Element.setPointerCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/setPointerCapture\n    // Partially implemented Mixin Methods\n    // Both Element.querySelector() and Element.querySelector() are only implemented for the following simple selectors:\n    // - Element selectors\n    // - ID selectors\n    // - Class selectors\n    // - Attribute selectors\n    // Element.querySelector() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n    // Element.querySelectorAll() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n    // Mixins not implemented\n    // Slotable.assignedSlot – https://developer.mozilla.org/en-US/docs/Web/API/Slotable/assignedSlot\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/previousElementSibling\n     * Returns the Element immediately prior to the specified one in its parent's children list,\n     * or null if the specified element is the first one in the list.\n     */\n    get previousElementSibling() {\n        return getPreviousElementSibling(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/nextElementSibling\n     * Returns the Element immediately following the specified one in its parent's children list,\n     * or null if the specified element is the last one in the list.\n     */\n    get nextElementSibling() {\n        return getNextElementSibling(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/outerHTML\n     * @return string representation of serialized HTML describing the Element and its descendants.\n     */\n    get outerHTML() {\n        const tag = this.localName || this.tagName;\n        const start = `<${[tag, attrsToString(this.attributes)].join(' ').trim()}>`;\n        const contents = this.innerHTML;\n        if (!contents) {\n            if (this.kind === ElementKind.VOID) {\n                // Void elements e.g. <input> only have a start tag (unless children are added programmatically).\n                // https://html.spec.whatwg.org/multipage/syntax.html#void-elements\n                return start;\n            }\n        }\n        return start + contents + `</${tag}>`;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n     * @return string representation of serialized HTML describing the Element's descendants.\n     */\n    get innerHTML() {\n        const childNodes = this.childNodes;\n        if (childNodes.length) {\n            return childNodes\n                .map((child) => {\n                switch (child.nodeType) {\n                    case 3 /* NodeType.TEXT_NODE */:\n                        return child.textContent;\n                    case 8 /* NodeType.COMMENT_NODE */:\n                        return `<!--${child.textContent}-->`;\n                    default:\n                        return child.outerHTML;\n                }\n            })\n                .join('');\n        }\n        return '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n     * @param html The raw html string to parse.\n     */\n    set innerHTML(html) {\n        const root = parse(html, this);\n        // remove previous children\n        this.childNodes.forEach((n) => {\n            propagate(n, 'isConnected', false);\n            propagate(n, 45 /* TransferrableKeys.scopingRoot */, n);\n        });\n        mutate(this.ownerDocument, {\n            removedNodes: this.childNodes,\n            type: 2 /* MutationRecordType.CHILD_LIST */,\n            target: this,\n        }, [\n            2 /* TransferrableMutationType.CHILD_LIST */,\n            this[7 /* TransferrableKeys.index */],\n            0,\n            0,\n            0,\n            this.childNodes.length,\n            ...this.childNodes.map((node) => node[7 /* TransferrableKeys.index */]),\n        ]);\n        this.childNodes = [];\n        // add new children\n        root.childNodes.forEach((child) => this.appendChild(child));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @param text new text replacing all childNodes content.\n     */\n    set textContent(text) {\n        // TODO(KB): Investigate removing all children in a single .splice to childNodes.\n        this.childNodes.slice().forEach((child) => child.remove());\n        this.appendChild(this.ownerDocument.createTextNode(text));\n    }\n    /**\n     * Getter returning the text representation of Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @return text from all childNodes.\n     */\n    get textContent() {\n        return this.getTextContent();\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/tagName\n     * @return string tag name (i.e 'div')\n     */\n    get tagName() {\n        return this.nodeName;\n    }\n    /**\n     * Sets the value of an attribute on this element using a null namespace.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute\n     * @param name attribute name\n     * @param value attribute value\n     */\n    setAttribute(name, value) {\n        this.setAttributeNS(HTML_NAMESPACE, name, value);\n    }\n    /**\n     * Get the value of an attribute on this Element with the null namespace.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute\n     * @param name attribute name\n     * @return value of a specified attribute on the element, or null if the attribute doesn't exist.\n     */\n    getAttribute(name) {\n        return this.getAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * Remove an attribute from this element in the null namespace.\n     *\n     * Method returns void, so it is not chainable.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute\n     * @param name attribute name\n     */\n    removeAttribute(name) {\n        this.removeAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttribute\n     * @param name attribute name\n     * @return Boolean indicating if the element has the specified attribute.\n     */\n    hasAttribute(name) {\n        return this.hasAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttributes\n     * @return Boolean indicating if the element has any attributes.\n     */\n    hasAttributes() {\n        return this.attributes.length > 0;\n    }\n    /**\n     * Sets the value of an attribute on this Element with the provided namespace.\n     *\n     * If the attribute already exists, the value is updated; otherwise a new attribute is added with the specified name and value.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttributeNS\n     * @param namespaceURI\n     * @param name attribute name\n     * @param value attribute value\n     */\n    setAttributeNS(namespaceURI, name, value) {\n        const valueAsString = String(value);\n        const propertyBacked = this.constructor[46 /* TransferrableKeys.propertyBackedAttributes */][name];\n        if (propertyBacked !== undefined) {\n            if (!this.attributes.find(matchAttrPredicate(namespaceURI, name))) {\n                this.attributes.push({\n                    namespaceURI,\n                    name,\n                    value: valueAsString,\n                });\n            }\n            propertyBacked[1](this, valueAsString);\n            return;\n        }\n        const oldValue = this[44 /* TransferrableKeys.storeAttribute */](namespaceURI, name, valueAsString);\n        mutate(this.ownerDocument, {\n            type: 0 /* MutationRecordType.ATTRIBUTES */,\n            target: this,\n            attributeName: name,\n            attributeNamespace: namespaceURI,\n            value: valueAsString,\n            oldValue,\n        }, [\n            0 /* TransferrableMutationType.ATTRIBUTES */,\n            this[7 /* TransferrableKeys.index */],\n            storeString(name),\n            storeString(namespaceURI),\n            value !== null ? storeString(valueAsString) + 1 : 0,\n        ]);\n    }\n    [44 /* TransferrableKeys.storeAttribute */](namespaceURI, name, value) {\n        const attr = this.attributes.find(matchAttrPredicate(namespaceURI, name));\n        const oldValue = (attr && attr.value) || '';\n        if (attr) {\n            attr.value = value;\n        }\n        else {\n            this.attributes.push({\n                namespaceURI,\n                name,\n                value,\n            });\n        }\n        return oldValue;\n    }\n    /**\n     * Get the value of an attribute on this Element with the specified namespace.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     * @return value of a specified attribute on the element, or null if the attribute doesn't exist.\n     */\n    getAttributeNS(namespaceURI, name) {\n        const attr = this.attributes.find(matchAttrPredicate(namespaceURI, name));\n        if (attr) {\n            const propertyBacked = this.constructor[46 /* TransferrableKeys.propertyBackedAttributes */][name];\n            return propertyBacked !== undefined ? propertyBacked[0](this) : attr.value;\n        }\n        return null;\n    }\n    /**\n     * Remove an attribute from this element in the specified namespace.\n     *\n     * Method returns void, so it is not chainable.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     */\n    removeAttributeNS(namespaceURI, name) {\n        const index = this.attributes.findIndex(matchAttrPredicate(namespaceURI, name));\n        if (index >= 0) {\n            const oldValue = this.attributes[index].value;\n            this.attributes.splice(index, 1);\n            mutate(this.ownerDocument, {\n                type: 0 /* MutationRecordType.ATTRIBUTES */,\n                target: this,\n                attributeName: name,\n                attributeNamespace: namespaceURI,\n                oldValue,\n            }, [\n                0 /* TransferrableMutationType.ATTRIBUTES */,\n                this[7 /* TransferrableKeys.index */],\n                storeString(name),\n                storeString(namespaceURI),\n                0, // 0 means no value\n            ]);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttributeNS\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     * @return Boolean indicating if the element has the specified attribute.\n     */\n    hasAttributeNS(namespaceURI, name) {\n        return this.attributes.some(matchAttrPredicate(namespaceURI, name));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByClassName\n     * @param names contains one more more classnames to match on. Multiples are space seperated, indicating an AND operation.\n     * @return Element array with matching classnames\n     */\n    getElementsByClassName(names) {\n        const inputClassList = names.split(' ');\n        // TODO(KB) – Compare performance of [].some(value => DOMTokenList.contains(value)) and regex.\n        // const classRegex = new RegExp(classNames.split(' ').map(name => `(?=.*${name})`).join(''));\n        return matchChildrenElements(this, (element) => inputClassList.some((inputClassName) => element.classList.contains(inputClassName)));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagName\n     * @param tagName the qualified name to look for. The special string \"*\" represents all elements.\n     * @return Element array with matching tagnames\n     */\n    getElementsByTagName(tagName) {\n        const lowerTagName = toLower(tagName);\n        return matchChildrenElements(this, tagName === '*'\n            ? (_) => true\n            : (element) => (element.namespaceURI === HTML_NAMESPACE ? element.localName === lowerTagName : element.tagName === tagName));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByName\n     * @param name value of name attribute elements must have to be returned\n     * @return Element array with matching name attributes\n     */\n    getElementsByName(name) {\n        const stringName = '' + name;\n        return matchChildrenElements(this, (element) => element.getAttribute('name') === stringName);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @param deep boolean determines if the clone should include a recursive copy of all childNodes.\n     * @return Element containing all current attributes and potentially childNode clones of the Element requested to be cloned.\n     */\n    cloneNode(deep = false) {\n        const clone = this.ownerDocument.createElementNS(this.namespaceURI, this.namespaceURI === HTML_NAMESPACE ? toLower(this.tagName) : this.tagName);\n        this.attributes.forEach((attr) => clone.setAttribute(attr.name, attr.value));\n        if (deep) {\n            this.childNodes.forEach((child) => clone.appendChild(child.cloneNode(deep)));\n        }\n        return clone;\n    }\n    /**\n     * Return the ClientRect for an Element once determined by the main thread.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n     * @return Promise<ClientRect>\n     *\n     * Note: Edge and IE11 do not return the x/y value, but top/left are equivalent. Normalize the values here.\n     */\n    getBoundingClientRectAsync() {\n        const defaultValue = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0,\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n        return new Promise((resolve) => {\n            const messageHandler = ({ data }) => {\n                if (data[12 /* TransferrableKeys.type */] === 6 /* MessageType.GET_BOUNDING_CLIENT_RECT */ &&\n                    data[13 /* TransferrableKeys.target */][0] === this[7 /* TransferrableKeys.index */]) {\n                    this.ownerDocument.removeGlobalEventListener('message', messageHandler);\n                    const transferredBoundingClientRect = data[38 /* TransferrableKeys.data */];\n                    resolve({\n                        top: transferredBoundingClientRect[0],\n                        right: transferredBoundingClientRect[1],\n                        bottom: transferredBoundingClientRect[2],\n                        left: transferredBoundingClientRect[3],\n                        width: transferredBoundingClientRect[4],\n                        height: transferredBoundingClientRect[5],\n                        x: transferredBoundingClientRect[0],\n                        y: transferredBoundingClientRect[3],\n                    });\n                }\n            };\n            if (!this.ownerDocument.addGlobalEventListener || !this.isConnected) {\n                // Elements run within Node runtimes are missing addEventListener as a global.\n                // In this case, treat the return value the same as a disconnected node.\n                resolve(defaultValue);\n            }\n            else {\n                this.ownerDocument.addGlobalEventListener('message', messageHandler);\n                transfer(this.ownerDocument, [5 /* TransferrableMutationType.GET_BOUNDING_CLIENT_RECT */, this[7 /* TransferrableKeys.index */]]);\n                setTimeout(resolve, 500, defaultValue); // TODO: Why a magical constant, define and explain.\n            }\n        });\n    }\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/click\n    click() {\n        const event = new Event('click', {});\n        event.target = this;\n        this.dispatchEvent(event);\n    }\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n    scrollIntoView() {\n        if (this.isConnected) {\n            transfer(this.ownerDocument, [14 /* TransferrableMutationType.SCROLL_INTO_VIEW */, this[7 /* TransferrableKeys.index */]]);\n        }\n    }\n    get classList() {\n        return this._classList || (this._classList = new DOMTokenList(this, 'class'));\n    }\n}\nsynchronizedAccessor(Element, 'classList', 'className');\nreflectProperties([{ id: [''] }], Element);\n//# sourceMappingURL=Element.js.map","import { Element } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { matchNearestParent, tagNameConditionPredicate } from './matchElements';\nexport const appendGlobalEventProperties = (keys) => {\n    const keysToAppend = keys.filter((key) => !HTMLElement.prototype.hasOwnProperty(key));\n    if (keysToAppend.length <= 0) {\n        return;\n    }\n    keysToAppend.forEach((key) => {\n        const normalizedKey = key.replace(/on/, '');\n        Object.defineProperty(HTMLElement.prototype, key, {\n            enumerable: true,\n            get() {\n                return this[76 /* TransferrableKeys.propertyEventHandlers */][normalizedKey] || null;\n            },\n            set(value) {\n                const stored = this[76 /* TransferrableKeys.propertyEventHandlers */][normalizedKey];\n                if (stored) {\n                    this.removeEventListener(normalizedKey, stored);\n                }\n                if (value instanceof Function) {\n                    this.addEventListener(normalizedKey, value);\n                }\n                this[76 /* TransferrableKeys.propertyEventHandlers */][normalizedKey] = value;\n            },\n        });\n    });\n};\nexport class HTMLElement extends Element {\n    [76 /* TransferrableKeys.propertyEventHandlers */] = {};\n    /**\n     * Find the nearest parent form element.\n     * Implemented in HTMLElement since so many extensions of HTMLElement repeat this functionality. This is not to spec.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFieldSetElement\n     * @return nearest parent form element.\n     */\n    get form() {\n        return matchNearestParent(this, tagNameConditionPredicate(['FORM']));\n    }\n    [68 /* TransferrableKeys.serializeAsTransferrableObject */]() {\n        return [7 /* TransferrableObjectType.HTMLElement */, this[7 /* TransferrableKeys.index */]];\n    }\n}\n// Reflected properties\n// HTMLElement.accessKey => string, reflected attribute\n// HTMLElement.contentEditable => string, reflected attribute\n// HTMLElement.dir => string, reflected attribute\n// HTMLElement.lang => string, reflected attribute\n// HTMLElement.title => string, reflected attribute\n// HTMLElement.draggable => boolean, reflected attribute\n// HTMLElement.hidden => boolean, reflected attribute\n// HTMLElement.noModule => boolean, reflected attribute\n// HTMLElement.spellcheck => boolean, reflected attribute\n// HTMLElement.translate => boolean, reflected attribute\nreflectProperties([\n    { accessKey: [''] },\n    { contentEditable: ['inherit'] },\n    { dir: [''] },\n    { lang: [''] },\n    { title: [''] },\n    {\n        draggable: [false, /* attr */ undefined, /* keywords */ ['true', 'false']],\n    },\n    { hidden: [false, /* attr */ undefined] },\n    { noModule: [false] },\n    {\n        spellcheck: [true, /* attr */ undefined, /* keywords */ ['true', 'false']],\n    },\n    { translate: [true, /* attr */ undefined, /* keywords */ ['yes', 'no']] },\n], HTMLElement);\n// Properties\n// HTMLElement.accessKeyLabel => string, readonly value of \"accessKey\"\n// HTMLElement.isContentEditable => boolean, readonly value of contentEditable\n// HTMLElement.nonce => string, NOT REFLECTED\n// HTMLElement.tabIndex => number, reflected attribute\n// Layout Properties (TBD)\n// HTMLElement.offsetHeight => double, readonly\n// HTMLElement.offsetLeft => double, readonly\n// HTMLElement.offsetParent => Element\n// HTMLElement.offsetTop => double, readonly\n// HTMLElement.offsetWidth => double, readonly\n// Unimplemented Properties\n// HTMLElement.contextMenu => HTMLElement\n// HTMLElement.dataset => Map<string (get/set), string>\n// HTMLElement.dropzone => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.inert => boolean, reflected\n// HTMLElement.itemScope => boolean\n// HTMLElement.itemType => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemId => string\n// HTMLElement.itemRef => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemProp => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemValue => object\n// HTMLElement.properties => HTMLPropertiesCollection, readonly\n//# sourceMappingURL=HTMLElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLAnchorElement extends HTMLElement {\n    _relList;\n    get relList() {\n        return this._relList || (this._relList = new DOMTokenList(this, 'rel'));\n    }\n    /**\n     * Returns the href property/attribute value\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/toString\n     * @return string href attached to HTMLAnchorElement\n     */\n    toString() {\n        return this.href;\n    }\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * A Synonym for the Node.textContent property setter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement\n     * @param text replacement for all current childNodes.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n}\nregisterSubclass('a', HTMLAnchorElement);\ndefinePropertyBackedAttributes(HTMLAnchorElement, {\n    rel: [(el) => el.relList.value, (el, value) => (el.relList.value = value)],\n});\nsynchronizedAccessor(HTMLAnchorElement, 'relList', 'rel');\n// Reflected properties, strings.\n// HTMLAnchorElement.href => string, reflected attribute\n// HTMLAnchorElement.hreflang => string, reflected attribute\n// HTMLAnchorElement.media => string, reflected attribute\n// HTMLAnchorElement.target => string, reflected attribute\n// HTMLAnchorElement.type => string, reflected attribute\nreflectProperties([{ href: [''] }, { hreflang: [''] }, { media: [''] }, { target: [''] }, { type: [''] }], HTMLAnchorElement);\n// Unimplemented\n// HTMLAnchorElement.download => string, reflected attribute\n// HTMLAnchorElement.type => Is a DOMString that reflects the type HTML attribute, indicating the MIME type of the linked resource.\n// Unimplemented URL parse of href attribute due to IE11 compatibility and low usage.\n// Note: Implementation doable using a private url property\n/*\n  class {\n    private url: URL | null = null;\n\n    constructor(...) {\n      // Element.getAttribute('href') => Element.href.\n      Object.assign(this[TransferrableKeys.propertyBackedAttributes], {\n        href: this.href,\n      });\n    }\n\n    get href(): string {\n      return this.url ? this.url.href : '';\n    }\n    set href(url: string) {\n      this.url = new URL(url);\n      this.setAttribute('href', this.url.href);\n    }\n  }\n*/\n// HTMLAnchorElement.host => string\n// HTMLAnchorElement.hostname => string\n// HTMLAnchorElement.protocol => string\n// HTMLAnchorElement.pathname => string\n// HTMLAnchorElement.search => string\n// HTMLAnchorElement.hash => string\n// HTMLAnchorElement.username => string\n// HTMLAnchorElement.password => string\n// HTMLAnchorElement.origin => string, readonly (getter no setter)\n//# sourceMappingURL=HTMLAnchorElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLButtonElement extends HTMLElement {\n}\nregisterSubclass('button', HTMLButtonElement);\n// Reflected properties, strings.\n// HTMLButtonElement.formAction => string, reflected attribute\n// HTMLButtonElement.formEnctype => string, reflected attribute\n// HTMLButtonElement.formMethod => string, reflected attribute\n// HTMLButtonElement.formTarget => string, reflected attribute\n// HTMLButtonElement.name => string, reflected attribute\n// HTMLButtonElement.type => string, reflected attribute (default submit)\n// HTMLButtonElement.value => string, reflected attribute\n// HTMLButtonElement.autofocus => boolean, reflected attribute\n// HTMLButtonElement.disabled => boolean, reflected attribute\nreflectProperties([\n    { formAction: [''] },\n    { formEnctype: [''] },\n    { formMethod: [''] },\n    { formTarget: [''] },\n    { name: [''] },\n    { type: ['submit'] },\n    { value: [''] },\n    { autofocus: [false] },\n    { disabled: [false] },\n], HTMLButtonElement);\n// Not reflected\n// HTMLButtonElement.formNoValidate => boolean\n// HTMLButtonElement.validity => ValidityState, readonly\n// Unimplemented\n// HTMLButtonElement.form => HTMLFormElement | null, readonly\n// HTMLButtonElement.labels => Array<HTMLLabelElement>, readonly\n// HTMLButtonElement.menu => HTMLMenuElement\n// HTMLButtonElement.willValidate => boolean, readonly\n// HTMLButtonElement.validationMessage => string, readonly\n//# sourceMappingURL=HTMLButtonElement.js.map","import { store } from './strings';\nconst f32 = new Float32Array(1);\nconst u16 = new Uint16Array(f32.buffer);\nfunction isSmallInt(num) {\n    u16[0] = num;\n    // If the Uint16Array doesn't coerce it to another value, that means it fits\n    // into a Uint16Array.\n    return u16[0] === num;\n}\n/**\n * Serializes arguments into a Uint16 compatible format.\n *\n * The serialization format uses a variable length tuple, with the first item\n * being the encoded representation's type and any number of values afterwards.\n *\n * @param args The arguments to serialize\n */\nexport function serializeTransferrableObject(args) {\n    const serialized = [];\n    for (let i = 0; i < args.length; i++) {\n        const arg = args[i];\n        if (typeof arg === 'number') {\n            if (isSmallInt(arg)) {\n                serialized.push(1 /* TransferrableObjectType.SmallInt */, arg);\n            }\n            else {\n                f32[0] = arg;\n                serialized.push(2 /* TransferrableObjectType.Float */, u16[0], u16[1]);\n            }\n            continue;\n        }\n        if (typeof arg === 'string') {\n            serialized.push(3 /* TransferrableObjectType.String */, store(arg));\n            continue;\n        }\n        if (Array.isArray(arg)) {\n            serialized.push(4 /* TransferrableObjectType.Array */, arg.length);\n            const serializedArray = serializeTransferrableObject(arg);\n            for (let i = 0; i < serializedArray.length; i++) {\n                serialized.push(serializedArray[i]);\n            }\n            continue;\n        }\n        if (typeof arg === 'object') {\n            const serializedObject = arg[68 /* TransferrableKeys.serializeAsTransferrableObject */]();\n            for (let i = 0; i < serializedObject.length; i++) {\n                serialized.push(serializedObject[i]);\n            }\n            continue;\n        }\n        throw new Error('Cannot serialize argument.');\n    }\n    return serialized;\n}\n//# sourceMappingURL=serializeTransferrableObject.js.map","import { transfer } from '../MutationTransfer';\nimport { serializeTransferrableObject } from '../serializeTransferrableObject';\nimport { store } from '../strings';\n/**\n * Wrapper class for CanvasGradient. The user will be able to manipulate as a regular CanvasGradient object.\n */\nexport class CanvasGradient {\n    id;\n    document;\n    constructor(id, document) {\n        this.document = document;\n        this.id = id;\n    }\n    addColorStop(offset, color) {\n        transfer(this.document, [\n            9 /* TransferrableMutationType.OBJECT_MUTATION */,\n            store('addColorStop'),\n            2,\n            ...this[68 /* TransferrableKeys.serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject([...arguments]),\n        ]);\n    }\n    [68 /* TransferrableKeys.serializeAsTransferrableObject */]() {\n        return [5 /* TransferrableObjectType.TransferObject */, this.id];\n    }\n}\n//# sourceMappingURL=CanvasGradient.js.map","/**\n * Wrapper class for CanvasPattern. The user will be able to manipulate as a regular CanvasPattern object.\n * This class will be used when the CanvasRenderingContext is using an OffscreenCanvas polyfill.\n */\nexport class CanvasPattern {\n    id;\n    constructor(id) {\n        this.id = id;\n    }\n    /**\n     * This is an experimental method.\n     */\n    setTransform() { }\n    [68 /* TransferrableKeys.serializeAsTransferrableObject */]() {\n        return [5 /* TransferrableObjectType.TransferObject */, this.id];\n    }\n}\n//# sourceMappingURL=CanvasPattern.js.map","import { transfer } from '../MutationTransfer';\nimport { toLower } from '../../utils';\nimport { store } from '../strings';\nimport { serializeTransferrableObject } from '../serializeTransferrableObject';\nimport { CanvasGradient } from './CanvasGradient';\nimport { CanvasPattern } from './CanvasPattern';\n/**\n * Handles calls to a CanvasRenderingContext2D object in cases where the user's environment does not\n * support native OffscreenCanvas.\n */\nexport class OffscreenCanvasPolyfill {\n    canvas;\n    context;\n    constructor(canvas) {\n        this.canvas = canvas;\n    }\n    getContext(contextType) {\n        if (!this.context) {\n            if (toLower(contextType) === '2d') {\n                this.context = new OffscreenCanvasRenderingContext2DPolyfill(this.canvas);\n            }\n            else {\n                throw new Error('Context type not supported.');\n            }\n        }\n        return this.context;\n    }\n}\nclass OffscreenCanvasRenderingContext2DPolyfill {\n    canvasElement;\n    lineDash;\n    objectIndex = 0;\n    constructor(canvas) {\n        this.canvasElement = canvas;\n        this.lineDash = [];\n    }\n    [67 /* TransferrableKeys.mutated */](fnName, args) {\n        transfer(this.canvasElement.ownerDocument, [\n            9 /* TransferrableMutationType.OBJECT_MUTATION */,\n            store(fnName),\n            args.length,\n            ...this[68 /* TransferrableKeys.serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject(args),\n        ]);\n    }\n    [68 /* TransferrableKeys.serializeAsTransferrableObject */]() {\n        return [6 /* TransferrableObjectType.CanvasRenderingContext2D */, this.canvasElement[7 /* TransferrableKeys.index */]];\n    }\n    /**\n     * Creates object in the main thread, and associates it with the id provided.\n     * @param objectId ID to associate the created object with.\n     * @param creationMethod Method to use for object creation.\n     * @param creationArgs Arguments to pass into the creation method.\n     */\n    createObjectReference(objectId, creationMethod, creationArgs) {\n        transfer(this.canvasElement.ownerDocument, [\n            10 /* TransferrableMutationType.OBJECT_CREATION */,\n            store(creationMethod),\n            objectId,\n            creationArgs.length,\n            ...this[68 /* TransferrableKeys.serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject(creationArgs),\n        ]);\n    }\n    get canvas() {\n        return this.canvasElement;\n    }\n    clearRect(x, y, w, h) {\n        this[67 /* TransferrableKeys.mutated */]('clearRect', [...arguments]);\n    }\n    fillRect(x, y, w, h) {\n        this[67 /* TransferrableKeys.mutated */]('fillRect', [...arguments]);\n    }\n    strokeRect(x, y, w, h) {\n        this[67 /* TransferrableKeys.mutated */]('strokeRect', [...arguments]);\n    }\n    roundRect(x, y, w, h, radii) {\n        this[67 /* TransferrableKeys.mutated */]('roundRect', [...arguments]);\n    }\n    set lineWidth(value) {\n        this[67 /* TransferrableKeys.mutated */]('lineWidth', [...arguments]);\n    }\n    fillText(text, x, y, maxWidth) {\n        this[67 /* TransferrableKeys.mutated */]('fillText', [...arguments]);\n    }\n    moveTo(x, y) {\n        this[67 /* TransferrableKeys.mutated */]('moveTo', [...arguments]);\n    }\n    lineTo(x, y) {\n        this[67 /* TransferrableKeys.mutated */]('lineTo', [...arguments]);\n    }\n    closePath() {\n        this[67 /* TransferrableKeys.mutated */]('closePath', []);\n    }\n    stroke() {\n        this[67 /* TransferrableKeys.mutated */]('stroke', []);\n    }\n    restore() {\n        this[67 /* TransferrableKeys.mutated */]('restore', []);\n    }\n    save() {\n        this[67 /* TransferrableKeys.mutated */]('save', []);\n    }\n    resetTransform() {\n        this[67 /* TransferrableKeys.mutated */]('resetTransform', []);\n    }\n    rotate(angle) {\n        this[67 /* TransferrableKeys.mutated */]('rotate', [...arguments]);\n    }\n    transform(a, b, c, d, e, f) {\n        this[67 /* TransferrableKeys.mutated */]('transform', [...arguments]);\n    }\n    translate(x, y) {\n        this[67 /* TransferrableKeys.mutated */]('translate', [...arguments]);\n    }\n    scale(x, y) {\n        this[67 /* TransferrableKeys.mutated */]('scale', [...arguments]);\n    }\n    set globalAlpha(value) {\n        this[67 /* TransferrableKeys.mutated */]('globalAlpha', [...arguments]);\n    }\n    set globalCompositeOperation(value) {\n        this[67 /* TransferrableKeys.mutated */]('globalCompositeOperation', [...arguments]);\n    }\n    set imageSmoothingQuality(value) {\n        this[67 /* TransferrableKeys.mutated */]('imageSmoothingQuality', [...arguments]);\n    }\n    set fillStyle(value) {\n        this[67 /* TransferrableKeys.mutated */]('fillStyle', [...arguments]);\n    }\n    set strokeStyle(value) {\n        this[67 /* TransferrableKeys.mutated */]('strokeStyle', [...arguments]);\n    }\n    set shadowBlur(value) {\n        this[67 /* TransferrableKeys.mutated */]('shadowBlur', [...arguments]);\n    }\n    set shadowColor(value) {\n        this[67 /* TransferrableKeys.mutated */]('shadowColor', [...arguments]);\n    }\n    set shadowOffsetX(value) {\n        this[67 /* TransferrableKeys.mutated */]('shadowOffsetX', [...arguments]);\n    }\n    set shadowOffsetY(value) {\n        this[67 /* TransferrableKeys.mutated */]('shadowOffsetY', [...arguments]);\n    }\n    set filter(value) {\n        this[67 /* TransferrableKeys.mutated */]('filter', [...arguments]);\n    }\n    beginPath() {\n        this[67 /* TransferrableKeys.mutated */]('beginPath', []);\n    }\n    strokeText(text, x, y, maxWidth) {\n        this[67 /* TransferrableKeys.mutated */]('strokeText', [...arguments]);\n    }\n    set textAlign(value) {\n        this[67 /* TransferrableKeys.mutated */]('textAlign', [...arguments]);\n    }\n    set textBaseline(value) {\n        this[67 /* TransferrableKeys.mutated */]('textBaseline', [...arguments]);\n    }\n    set lineCap(value) {\n        this[67 /* TransferrableKeys.mutated */]('lineCap', [...arguments]);\n    }\n    set lineDashOffset(value) {\n        this[67 /* TransferrableKeys.mutated */]('lineDashOffset', [...arguments]);\n    }\n    set lineJoin(value) {\n        this[67 /* TransferrableKeys.mutated */]('lineJoin', [...arguments]);\n    }\n    set miterLimit(value) {\n        this[67 /* TransferrableKeys.mutated */]('miterLimit', [...arguments]);\n    }\n    arc(x, y, radius, startAngle, endAngle, anticlockwise) {\n        this[67 /* TransferrableKeys.mutated */]('arc', [...arguments]);\n    }\n    arcTo(x1, y1, x2, y2, radius) {\n        this[67 /* TransferrableKeys.mutated */]('arcTo', [...arguments]);\n    }\n    set direction(value) {\n        this[67 /* TransferrableKeys.mutated */]('direction', [...arguments]);\n    }\n    set font(value) {\n        this[67 /* TransferrableKeys.mutated */]('font', [...arguments]);\n    }\n    ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, anticlockwise) {\n        this[67 /* TransferrableKeys.mutated */]('ellipse', [...arguments]);\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this[67 /* TransferrableKeys.mutated */]('bezierCurveTo', [...arguments]);\n    }\n    rect(x, y, width, height) {\n        this[67 /* TransferrableKeys.mutated */]('rect', [...arguments]);\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this[67 /* TransferrableKeys.mutated */]('quadraticCurveTo', [...arguments]);\n    }\n    set imageSmoothingEnabled(value) {\n        this[67 /* TransferrableKeys.mutated */]('imageSmoothingEnabled', [...arguments]);\n    }\n    setLineDash(lineDash) {\n        lineDash = [...lineDash];\n        if (lineDash.length % 2 !== 0) {\n            lineDash = lineDash.concat(lineDash);\n        }\n        this.lineDash = lineDash;\n        this[67 /* TransferrableKeys.mutated */]('setLineDash', [...arguments]);\n    }\n    getLineDash() {\n        return [...this.lineDash];\n    }\n    clip(pathOrFillRule, fillRule) {\n        if (typeof pathOrFillRule === 'object') {\n            throw new Error('clip(Path2D) is currently not supported!');\n        }\n        this[67 /* TransferrableKeys.mutated */]('clip', [...arguments]);\n    }\n    fill(pathOrFillRule, fillRule) {\n        if (typeof pathOrFillRule === 'object') {\n            throw new Error('fill(Path2D) is currently not supported!');\n        }\n        this[67 /* TransferrableKeys.mutated */]('fill', [...arguments]);\n    }\n    // Method has a different signature in MDN than it does in HTML spec\n    setTransform(transformOrA, bOrC, cOrD, dOrE, eOrF, f) {\n        if (typeof transformOrA === 'object') {\n            throw new Error('setTransform(DOMMatrix2DInit) is currently not supported!');\n        }\n        this[67 /* TransferrableKeys.mutated */]('setTransform', [...arguments]);\n    }\n    createLinearGradient(x0, y0, x1, y1) {\n        const gradientId = this.objectIndex++;\n        this.createObjectReference(gradientId, 'createLinearGradient', [...arguments]);\n        return new CanvasGradient(gradientId, this.canvasElement.ownerDocument);\n    }\n    createRadialGradient(x0, y0, r0, x1, y1, r1) {\n        const gradientId = this.objectIndex++;\n        this.createObjectReference(gradientId, 'createRadialGradient', [...arguments]);\n        return new CanvasGradient(gradientId, this.canvasElement.ownerDocument);\n    }\n    createPattern(image, repetition) {\n        const patternId = this.objectIndex++;\n        this.createObjectReference(patternId, 'createPattern', [...arguments]);\n        return new CanvasPattern(patternId);\n    }\n    drawImage(image, dx, dy) {\n        this[67 /* TransferrableKeys.mutated */]('drawImage', [...arguments]);\n    }\n    createImageData() {\n        return {};\n    }\n    getImageData() {\n        return {};\n    }\n    putImageData() { }\n    isPointInPath() {\n        throw new Error('isPointInPath is not implemented.');\n    }\n    isPointInStroke() {\n        throw new Error('isPointInStroke is not implemented.');\n    }\n    measureText() {\n        throw new Error('measureText is not implemented.');\n    }\n}\n//# sourceMappingURL=OffscreenCanvasPolyfill.js.map","import { transfer } from '../MutationTransfer';\nlet indexTracker = 0;\nexport function retrieveImageBitmap(image, canvas) {\n    const callIndex = indexTracker++;\n    const document = canvas.ownerDocument;\n    return new Promise((resolve) => {\n        const messageHandler = ({ data }) => {\n            if (data[12 /* TransferrableKeys.type */] === 10 /* MessageType.IMAGE_BITMAP_INSTANCE */ && data[73 /* TransferrableKeys.callIndex */] === callIndex) {\n                document.removeGlobalEventListener('message', messageHandler);\n                const transferredImageBitmap = data[38 /* TransferrableKeys.data */];\n                resolve(transferredImageBitmap);\n            }\n        };\n        if (!document.addGlobalEventListener) {\n            throw new Error('addGlobalEventListener is not defined.');\n        }\n        else {\n            document.addGlobalEventListener('message', messageHandler);\n            transfer(canvas.ownerDocument, [11 /* TransferrableMutationType.IMAGE_BITMAP_INSTANCE */, image[7 /* TransferrableKeys.index */], callIndex]);\n        }\n    });\n}\n//# sourceMappingURL=canvas-utils.js.map","import { retrieveImageBitmap } from './canvas-utils';\n/**\n * Wraps CanvasPattern for usage in a native OffscreenCanvas case.\n */\nexport class FakeNativeCanvasPattern {\n    [70 /* TransferrableKeys.patternImplementation */] = {};\n    [71 /* TransferrableKeys.patternUpgraded */] = false;\n    [72 /* TransferrableKeys.patternUpgradePromise */];\n    /**\n     * Retrieves ImageBitmap object from main-thread, which replicates the input image. Upon\n     * retrieval, uses it to create a real CanvasPattern and upgrade the implementation property.\n     * @param canvas Canvas element used to create the pattern.\n     * @param image Image to be used as the pattern's image\n     * @param repetition DOMStrings indicating how to repeat the pattern's image.\n     */\n    [69 /* TransferrableKeys.retrieveCanvasPattern */](canvas, image, repetition) {\n        this[72 /* TransferrableKeys.patternUpgradePromise */] = retrieveImageBitmap(image, canvas)\n            // Create new pattern with retrieved ImageBitmap\n            .then((instance) => {\n            const pattern = canvas.getContext('2d').createPattern(instance, repetition);\n            if (!pattern) {\n                throw new Error('Pattern is null!');\n            }\n            this[70 /* TransferrableKeys.patternImplementation */] = pattern;\n            this[71 /* TransferrableKeys.patternUpgraded */] = true;\n        });\n        return this[72 /* TransferrableKeys.patternUpgradePromise */];\n    }\n    // This method is experimental.\n    // Takes an SVGMatrix as an argument, which is a deprecated API.\n    setTransform() { }\n}\n//# sourceMappingURL=FakeNativeCanvasPattern.js.map","import { transfer } from '../MutationTransfer';\nimport { OffscreenCanvasPolyfill } from './OffscreenCanvasPolyfill';\nimport { FakeNativeCanvasPattern } from './FakeNativeCanvasPattern';\nimport { retrieveImageBitmap } from './canvas-utils';\nexport const deferredUpgrades = new WeakMap();\n/**\n * Delegates all CanvasRenderingContext2D calls, either to an OffscreenCanvas or a polyfill\n * (depending on whether it is supported).\n */\nexport class CanvasRenderingContext2DShim {\n    queue = [];\n    implementation;\n    upgraded = false;\n    canvasElement;\n    polyfillUsed;\n    // createPattern calls need to retrieve an ImageBitmap from the main-thread. Since those can\n    // happen subsequently, we must keep track of these to avoid reentrancy problems.\n    unresolvedCalls = 0;\n    goodImplementation;\n    constructor(canvas) {\n        this.canvasElement = canvas;\n        const OffscreenCanvas = canvas.ownerDocument.defaultView.OffscreenCanvas;\n        // If the browser does not support OffscreenCanvas, use polyfill\n        if (typeof OffscreenCanvas === 'undefined') {\n            this.implementation = new OffscreenCanvasPolyfill(canvas).getContext('2d');\n            this.upgraded = true;\n            this.polyfillUsed = true;\n        }\n        // If the browser supports OffscreenCanvas:\n        // 1. Use un-upgraded (not auto-synchronized) version for all calls performed immediately after\n        // creation. All calls will be queued to call on upgraded version after.\n        // 2. Retrieve an auto-synchronized OffscreenCanvas from the main-thread and call all methods\n        // in the queue.\n        else {\n            this.implementation = new OffscreenCanvas(0, 0).getContext('2d');\n            this.getOffscreenCanvasAsync(this.canvasElement);\n            this.polyfillUsed = false;\n        }\n    }\n    /**\n     * Retrieves auto-synchronized version of an OffscreenCanvas from the main-thread.\n     * @param canvas HTMLCanvasElement associated with this context.\n     */\n    getOffscreenCanvasAsync(canvas) {\n        this.unresolvedCalls++;\n        const deferred = {};\n        const document = this.canvasElement.ownerDocument;\n        const isTestMode = !document.addGlobalEventListener;\n        const upgradePromise = new Promise((resolve) => {\n            const messageHandler = ({ data }) => {\n                if (data[12 /* TransferrableKeys.type */] === 9 /* MessageType.OFFSCREEN_CANVAS_INSTANCE */ &&\n                    data[13 /* TransferrableKeys.target */][0] === canvas[7 /* TransferrableKeys.index */]) {\n                    document.removeGlobalEventListener('message', messageHandler);\n                    const transferredOffscreenCanvas = data[38 /* TransferrableKeys.data */];\n                    resolve(transferredOffscreenCanvas);\n                }\n            };\n            if (!document.addGlobalEventListener) {\n                if (isTestMode) {\n                    deferred.resolve = resolve;\n                }\n                else {\n                    throw new Error('addGlobalEventListener is not defined.');\n                }\n            }\n            else {\n                document.addGlobalEventListener('message', messageHandler);\n                transfer(canvas.ownerDocument, [8 /* TransferrableMutationType.OFFSCREEN_CANVAS_INSTANCE */, canvas[7 /* TransferrableKeys.index */]]);\n            }\n        }).then((instance) => {\n            this.goodImplementation = instance.getContext('2d');\n            this.maybeUpgradeImplementation();\n        });\n        if (isTestMode) {\n            deferred.upgradePromise = upgradePromise;\n            deferredUpgrades.set(canvas, deferred);\n        }\n        return upgradePromise;\n    }\n    /**\n     * Degrades the underlying context implementation and adds to the unresolved call count.\n     */\n    degradeImplementation() {\n        this.upgraded = false;\n        const OffscreenCanvas = this.canvasElement.ownerDocument.defaultView.OffscreenCanvas;\n        this.implementation = new OffscreenCanvas(0, 0).getContext('2d');\n        this.unresolvedCalls++;\n    }\n    /**\n     * Will upgrade the underlying context implementation if no more unresolved calls remain.\n     */\n    maybeUpgradeImplementation() {\n        this.unresolvedCalls--;\n        if (this.unresolvedCalls === 0) {\n            this.implementation = this.goodImplementation;\n            this.upgraded = true;\n            this.flushQueue();\n        }\n    }\n    flushQueue() {\n        for (const call of this.queue) {\n            if (call.isSetter) {\n                this[call.fnName] = call.args[0];\n            }\n            else {\n                this[call.fnName](...call.args);\n            }\n        }\n        this.queue.length = 0;\n    }\n    delegateFunc(name, args) {\n        const returnValue = this.implementation[name](...args);\n        if (!this.upgraded) {\n            this.queue.push({ fnName: name, args, isSetter: false });\n        }\n        return returnValue;\n    }\n    delegateSetter(name, args) {\n        this.implementation[name] = args[0];\n        if (!this.upgraded) {\n            this.queue.push({ fnName: name, args, isSetter: true });\n        }\n    }\n    delegateGetter(name) {\n        return this.implementation[name];\n    }\n    /* DRAWING RECTANGLES */\n    clearRect(x, y, width, height) {\n        this.delegateFunc('clearRect', [...arguments]);\n    }\n    fillRect(x, y, width, height) {\n        this.delegateFunc('fillRect', [...arguments]);\n    }\n    strokeRect(x, y, width, height) {\n        this.delegateFunc('strokeRect', [...arguments]);\n    }\n    roundRect(x, y, w, h, radii) {\n        this.delegateFunc('roundRect', [...arguments]);\n    }\n    /* DRAWING TEXT */\n    fillText(text, x, y, maxWidth) {\n        this.delegateFunc('fillText', [...arguments]);\n    }\n    strokeText(text, x, y, maxWidth) {\n        this.delegateFunc('strokeText', [...arguments]);\n    }\n    measureText(text) {\n        return this.delegateFunc('measureText', [...arguments]);\n    }\n    /* LINE STYLES */\n    set lineWidth(value) {\n        this.delegateSetter('lineWidth', [...arguments]);\n    }\n    get lineWidth() {\n        return this.delegateGetter('lineWidth');\n    }\n    set lineCap(value) {\n        this.delegateSetter('lineCap', [...arguments]);\n    }\n    get lineCap() {\n        return this.delegateGetter('lineCap');\n    }\n    set lineJoin(value) {\n        this.delegateSetter('lineJoin', [...arguments]);\n    }\n    get lineJoin() {\n        return this.delegateGetter('lineJoin');\n    }\n    set miterLimit(value) {\n        this.delegateSetter('miterLimit', [...arguments]);\n    }\n    get miterLimit() {\n        return this.delegateGetter('miterLimit');\n    }\n    getLineDash() {\n        return this.delegateFunc('getLineDash', [...arguments]);\n    }\n    setLineDash(segments) {\n        this.delegateFunc('setLineDash', [...arguments]);\n    }\n    set lineDashOffset(value) {\n        this.delegateSetter('lineDashOffset', [...arguments]);\n    }\n    get lineDashOffset() {\n        return this.delegateGetter('lineDashOffset');\n    }\n    /* TEXT STYLES */\n    set font(value) {\n        this.delegateSetter('font', [...arguments]);\n    }\n    get font() {\n        return this.delegateGetter('font');\n    }\n    set textAlign(value) {\n        this.delegateSetter('textAlign', [...arguments]);\n    }\n    get textAlign() {\n        return this.delegateGetter('textAlign');\n    }\n    set textBaseline(value) {\n        this.delegateSetter('textBaseline', [...arguments]);\n    }\n    get textBaseline() {\n        return this.delegateGetter('textBaseline');\n    }\n    set direction(value) {\n        this.delegateSetter('direction', [...arguments]);\n    }\n    get direction() {\n        return this.delegateGetter('direction');\n    }\n    /* FILL AND STROKE STYLES */\n    set fillStyle(value) {\n        // 1. Native pattern instances given to the user hold the 'real' pattern as their implementation prop.\n        // 2. Pattern must be upgraded, otherwise an undefined 'implementation' will be queued instead of the wrapper object.\n        if (value instanceof FakeNativeCanvasPattern && this.upgraded) {\n            // This case occurs only when an un-upgraded pattern is passed into a different (already\n            // upgraded) canvas context.\n            if (!value[71 /* TransferrableKeys.patternUpgraded */]) {\n                this.queue.push({ fnName: 'fillStyle', args: [value], isSetter: true });\n                this.degradeImplementation();\n                value[72 /* TransferrableKeys.patternUpgradePromise */].then(() => {\n                    this.maybeUpgradeImplementation();\n                });\n            }\n            else {\n                this.delegateSetter('fillStyle', [value[70 /* TransferrableKeys.patternImplementation */]]);\n            }\n            // Any other case does not require special handling.\n        }\n        else {\n            this.delegateSetter('fillStyle', [...arguments]);\n        }\n    }\n    get fillStyle() {\n        return this.delegateGetter('fillStyle');\n    }\n    set strokeStyle(value) {\n        // 1. Native pattern instances given to the user hold the 'real' pattern as their implementation prop.\n        // 2. Pattern must be upgraded, otherwise an undefined 'implementation' could be queued instead of the wrapper object.\n        if (value instanceof FakeNativeCanvasPattern && this.upgraded) {\n            // This case occurs only when an un-upgraded pattern is passed into a different (already\n            // upgraded) canvas context.\n            if (!value[71 /* TransferrableKeys.patternUpgraded */]) {\n                this.queue.push({\n                    fnName: 'strokeStyle',\n                    args: [value],\n                    isSetter: true,\n                });\n                this.degradeImplementation();\n                value[72 /* TransferrableKeys.patternUpgradePromise */].then(() => {\n                    this.maybeUpgradeImplementation();\n                });\n            }\n            else {\n                this.delegateSetter('strokeStyle', [value[70 /* TransferrableKeys.patternImplementation */]]);\n            }\n            // Any other case does not require special handling.\n        }\n        else {\n            this.delegateSetter('strokeStyle', [...arguments]);\n        }\n    }\n    get strokeStyle() {\n        return this.delegateGetter('strokeStyle');\n    }\n    /* GRADIENTS AND PATTERNS */\n    createLinearGradient(x0, y0, x1, y1) {\n        return this.delegateFunc('createLinearGradient', [...arguments]);\n    }\n    createRadialGradient(x0, y0, r0, x1, y1, r1) {\n        return this.delegateFunc('createRadialGradient', [...arguments]);\n    }\n    createPattern(image, repetition) {\n        const ImageBitmap = this.canvasElement.ownerDocument.defaultView.ImageBitmap;\n        // Only HTMLElement image sources require special handling. ImageBitmap is OK to use.\n        if (this.polyfillUsed || image instanceof ImageBitmap) {\n            return this.delegateFunc('createPattern', [...arguments]);\n        }\n        else {\n            // Degrade the underlying implementation because we don't want calls on the real one until\n            // after pattern is retrieved\n            this.degradeImplementation();\n            const fakePattern = new FakeNativeCanvasPattern();\n            fakePattern[69 /* TransferrableKeys.retrieveCanvasPattern */](this.canvas, image, repetition).then(() => {\n                this.maybeUpgradeImplementation();\n            });\n            return fakePattern;\n        }\n    }\n    /* DRAWING IMAGES */\n    drawImage(image, dx, dy) {\n        const ImageBitmap = this.canvasElement.ownerDocument.defaultView.ImageBitmap;\n        // Only HTMLElement image sources require special handling. ImageBitmap is OK to use.\n        if (this.polyfillUsed || image instanceof ImageBitmap) {\n            this.delegateFunc('drawImage', [...arguments]);\n        }\n        else {\n            // Queue the drawImage call to make sure it gets called in correct order\n            const args = [];\n            this.queue.push({ fnName: 'drawImage', args, isSetter: false });\n            // Degrade the underlying implementation because we don't want calls on the real one\n            // until after the ImageBitmap is received.\n            this.degradeImplementation();\n            // Retrieve an ImageBitmap from the main-thread with the same image as the input image\n            retrieveImageBitmap(image, this.canvas)\n                // Then call the actual method with the retrieved ImageBitmap\n                .then((instance) => {\n                args.push(instance, dx, dy);\n                this.maybeUpgradeImplementation();\n            });\n        }\n    }\n    /* SHADOWS */\n    set shadowBlur(value) {\n        this.delegateSetter('shadowBlur', [...arguments]);\n    }\n    get shadowBlur() {\n        return this.delegateGetter('shadowBlur');\n    }\n    set shadowColor(value) {\n        this.delegateSetter('shadowColor', [...arguments]);\n    }\n    get shadowColor() {\n        return this.delegateGetter('shadowColor');\n    }\n    set shadowOffsetX(value) {\n        this.delegateSetter('shadowOffsetX', [...arguments]);\n    }\n    get shadowOffsetX() {\n        return this.delegateGetter('shadowOffsetX');\n    }\n    set shadowOffsetY(value) {\n        this.delegateSetter('shadowOffsetY', [...arguments]);\n    }\n    get shadowOffsetY() {\n        return this.delegateGetter('shadowOffsetY');\n    }\n    /* PATHS */\n    beginPath() {\n        this.delegateFunc('beginPath', [...arguments]);\n    }\n    closePath() {\n        this.delegateFunc('closePath', [...arguments]);\n    }\n    moveTo(x, y) {\n        this.delegateFunc('moveTo', [...arguments]);\n    }\n    lineTo(x, y) {\n        this.delegateFunc('lineTo', [...arguments]);\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this.delegateFunc('bezierCurveTo', [...arguments]);\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this.delegateFunc('quadraticCurveTo', [...arguments]);\n    }\n    arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n        this.delegateFunc('arc', [...arguments]);\n    }\n    arcTo(x1, y1, x2, y2, radius) {\n        this.delegateFunc('arcTo', [...arguments]);\n    }\n    ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise) {\n        this.delegateFunc('ellipse', [...arguments]);\n    }\n    rect(x, y, width, height) {\n        this.delegateFunc('rect', [...arguments]);\n    }\n    /* DRAWING PATHS */\n    fill(pathOrFillRule, fillRule) {\n        const args = [...arguments];\n        this.delegateFunc('fill', args);\n    }\n    stroke(path) {\n        const args = [...arguments];\n        this.delegateFunc('stroke', args);\n    }\n    clip(pathOrFillRule, fillRule) {\n        const args = [...arguments];\n        this.delegateFunc('clip', args);\n    }\n    isPointInPath(pathOrX, xOrY, yOrFillRule, fillRule) {\n        const args = [...arguments];\n        return this.delegateFunc('isPointInPath', args);\n    }\n    isPointInStroke(pathOrX, xOrY, y) {\n        const args = [...arguments];\n        return this.delegateFunc('isPointInStroke', args);\n    }\n    /* TRANSFORMATIONS */\n    rotate(angle) {\n        this.delegateFunc('rotate', [...arguments]);\n    }\n    scale(x, y) {\n        this.delegateFunc('scale', [...arguments]);\n    }\n    translate(x, y) {\n        this.delegateFunc('translate', [...arguments]);\n    }\n    transform(a, b, c, d, e, f) {\n        this.delegateFunc('transform', [...arguments]);\n    }\n    setTransform(transformOrA, bOrC, cOrD, dOrE, eOrF, f) {\n        const args = [...arguments];\n        this.delegateFunc('setTransform', args);\n    }\n    /* experimental */ resetTransform() {\n        this.delegateFunc('resetTransform', [...arguments]);\n    }\n    /* COMPOSITING */\n    set globalAlpha(value) {\n        this.delegateSetter('globalAlpha', [...arguments]);\n    }\n    get globalAlpha() {\n        return this.delegateGetter('globalAlpha');\n    }\n    set globalCompositeOperation(value) {\n        this.delegateSetter('globalCompositeOperation', [...arguments]);\n    }\n    get globalCompositeOperation() {\n        return this.delegateGetter('globalCompositeOperation');\n    }\n    /* PIXEL MANIPULATION */\n    createImageData(imagedataOrWidth, height) {\n        const args = [...arguments];\n        return this.delegateFunc('createImageData', args);\n    }\n    getImageData(sx, sy, sw, sh) {\n        return this.delegateFunc('getImageData', [...arguments]);\n    }\n    putImageData(imageData, dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight) {\n        this.delegateFunc('putImageData', [...arguments]);\n    }\n    /* IMAGE SMOOTHING */\n    /* experimental */ set imageSmoothingEnabled(value) {\n        this.delegateSetter('imageSmoothingEnabled', [...arguments]);\n    }\n    /* experimental */ get imageSmoothingEnabled() {\n        return this.delegateGetter('imageSmoothingEnabled');\n    }\n    /* experimental */ set imageSmoothingQuality(value) {\n        this.delegateSetter('imageSmoothingQuality', [...arguments]);\n    }\n    /* experimental */ get imageSmoothingQuality() {\n        return this.delegateGetter('imageSmoothingQuality');\n    }\n    /* THE CANVAS STATE */\n    save() {\n        this.delegateFunc('save', [...arguments]);\n    }\n    restore() {\n        this.delegateFunc('restore', [...arguments]);\n    }\n    // canvas property is readonly. We don't want to implement getters, but this must be here\n    // in order for TypeScript to not complain (for now)\n    get canvas() {\n        return this.canvasElement;\n    }\n    /* FILTERS */\n    /* experimental */ set filter(value) {\n        this.delegateSetter('filter', [...arguments]);\n    }\n    /* experimental */ get filter() {\n        return this.delegateGetter('filter');\n    }\n}\n//# sourceMappingURL=CanvasRenderingContext2D.js.map","import { HTMLElement } from './HTMLElement';\nimport { registerSubclass } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { CanvasRenderingContext2DShim } from '../canvas/CanvasRenderingContext2D';\nexport class HTMLCanvasElement extends HTMLElement {\n    context;\n    getContext(contextType) {\n        if (!this.context) {\n            if (contextType === '2D' || contextType === '2d') {\n                this.context = new CanvasRenderingContext2DShim(this);\n            }\n            else {\n                throw new Error('Context type not supported.');\n            }\n        }\n        return this.context;\n    }\n}\nregisterSubclass('canvas', HTMLCanvasElement);\n// Reflected Properties\n// HTMLCanvasElement.height => number, reflected attribute\n// HTMLCanvasElement.width => number, reflected attribute\nreflectProperties([{ height: [0] }, { width: [0] }], HTMLCanvasElement);\n// Unimplemented Properties\n// HTMLCanvasElement.mozOpaque => boolean\n// HTMLCanvasElement.mozPrintCallback => function\n// Unimplemented Methods\n// HTMLCanvasElement.captureStream()\n// HTMLCanvasElement.toDataURL()\n// HTMLCanvasElement.toBlob()\n// HTMLCanvasElement.transferControlToOffscreen()\n// HTMLCanvasElement.mozGetAsFile()\n//# sourceMappingURL=HTMLCanvasElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLDataElement extends HTMLElement {\n}\nregisterSubclass('data', HTMLDataElement);\n// Reflected properties, strings.\n// HTMLEmbedElement.value => string, reflected attribute\nreflectProperties([{ value: [''] }], HTMLDataElement);\n//# sourceMappingURL=HTMLDataElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nexport class HTMLDataListElement extends HTMLElement {\n    /**\n     * Getter returning option elements that are direct children of a HTMLDataListElement\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLDataListElement\n     * @return Element \"options\" objects that are direct children.\n     */\n    get options() {\n        return this.childNodes.filter((node) => node.nodeName === 'OPTION');\n    }\n}\nregisterSubclass('datalist', HTMLDataListElement);\n/**\n * HTMLDataListElement.options Read only\n * Is a HTMLCollection representing a collection of the contained option elements.\n */\n/**\n * <label for=\"myBrowser\">Choose a browser from this list:</label>\n * <input list=\"browsers\" id=\"myBrowser\" name=\"myBrowser\" />\n * <datalist id=\"browsers\">\n *   <option value=\"Chrome\">\n *   <option value=\"Firefox\">\n *   <option value=\"Internet Explorer\">\n *   <option value=\"Opera\">\n *   <option value=\"Safari\">\n *   <option value=\"Microsoft Edge\">\n * </datalist>\n */\n//# sourceMappingURL=HTMLDataListElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLEmbedElement extends HTMLElement {\n}\nregisterSubclass('embed', HTMLEmbedElement);\n// Reflected properties, strings.\n// HTMLEmbedElement.height => string, reflected attribute\n// HTMLEmbedElement.src => string, reflected attribute\n// HTMLEmbedElement.type => string, reflected attribute\n// HTMLEmbedElement.width => string, reflected attribute\nreflectProperties([{ height: [''] }, { src: [''] }, { type: [''] }, { width: [''] }], HTMLEmbedElement);\n// Unimplemented\n// HTMLEmbedElement.align => string, not reflected\n// HTMLEmbedElement.name => string, not reflected\n//# sourceMappingURL=HTMLEmbedElement.js.map","import { matchChildrenElements, tagNameConditionPredicate } from './matchElements';\nconst MATCHING_CHILD_ELEMENT_TAGNAMES = 'BUTTON FIELDSET INPUT OBJECT OUTPUT SELECT TEXTAREA'.split(' ');\n/**\n * The HTMLFormControlsCollection interface represents a collection of HTML form control elements.\n * It is mixedin to both HTMLFormElement and HTMLFieldSetElement.\n */\nexport const HTMLFormControlsCollectionMixin = (defineOn) => {\n    Object.defineProperty(defineOn.prototype, 'elements', {\n        /**\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormControlsCollection\n         * @return Element array matching children of specific tagnames.\n         */\n        get() {\n            return matchChildrenElements(this, tagNameConditionPredicate(MATCHING_CHILD_ELEMENT_TAGNAMES));\n        },\n    });\n};\n//# sourceMappingURL=HTMLFormControlsMixin.js.map","import { registerSubclass } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLFormControlsCollectionMixin } from './HTMLFormControlsMixin';\nimport { HTMLElement } from './HTMLElement';\nimport { toLower } from '../../utils';\nexport class HTMLFieldSetElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFieldSetElement\n     * @return hardcoded string 'fieldset'\n     */\n    get type() {\n        return toLower(this.tagName);\n    }\n}\nregisterSubclass('fieldset', HTMLFieldSetElement);\nHTMLFormControlsCollectionMixin(HTMLFieldSetElement);\n// Reflected properties\n// HTMLFieldSetElement.name => string, reflected attribute\n// HTMLFieldSetElement.disabled => boolean, reflected attribute\nreflectProperties([{ name: [''] }, { disabled: [false] }], HTMLFieldSetElement);\n// Unimplemented properties\n// HTMLFieldSetElement.validity\n// HTMLFieldSetElement.willValidate\n// HTMLFieldSetElement.validationMessage\n//# sourceMappingURL=HTMLFieldSetElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { HTMLFormControlsCollectionMixin } from './HTMLFormControlsMixin';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLFormElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/length\n     * @return number of controls in the form\n     */\n    get length() {\n        return this.elements.length;\n    }\n}\nregisterSubclass('form', HTMLFormElement);\nHTMLFormControlsCollectionMixin(HTMLFormElement);\n// Reflected properties\n// HTMLFormElement.name => string, reflected attribute\n// HTMLFormElement.method => string, reflected attribute\n// HTMLFormElement.target => string, reflected attribute\n// HTMLFormElement.action => string, reflected attribute\n// HTMLFormElement.enctype => string, reflected attribute\n// HTMLFormElement.acceptCharset => string, reflected attribute\n// HTMLFormElement.autocomplete => string, reflected attribute\n// HTMLFormElement.autocapitalize => string, reflected attribute\nreflectProperties([\n    { name: [''] },\n    { method: ['get'] },\n    { target: [''] },\n    { action: [''] },\n    { enctype: ['application/x-www-form-urlencoded'] },\n    { acceptCharset: ['', /* attr */ 'accept-charset'] },\n    { autocomplete: ['on'] },\n    { autocapitalize: ['sentences'] },\n], HTMLFormElement);\n// Unimplemented properties\n// HTMLFormElement.encoding => string, reflected attribute\n// HTMLFormElement.noValidate => boolean, reflected attribute\n/*\nUnimplemented, TBD:\n\nNamed inputs are added to their owner form instance as properties, and can overwrite native properties\nif they share the same name (eg a form with an input named action will have its action property return\nthat input instead of the form's action HTML attribute).\n*/\n//# sourceMappingURL=HTMLFormElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList } from './DOMTokenList';\nexport class HTMLIFrameElement extends HTMLElement {\n    _sandbox;\n    // HTMLIFrameElement.sandbox, DOMTokenList, reflected attribute\n    get sandbox() {\n        return this._sandbox || (this._sandbox = new DOMTokenList(this, 'sandbox'));\n    }\n}\nregisterSubclass('iframe', HTMLIFrameElement);\ndefinePropertyBackedAttributes(HTMLIFrameElement, {\n    sandbox: [(el) => el.sandbox.value, (el, value) => (el.sandbox.value = value)],\n});\n// Reflected properties\n// HTMLIFrameElement.allow => string, reflected attribute\n// HTMLIFrameElement.allowFullscreen => boolean, reflected attribute\n// HTMLIFrameElement.csp => string, reflected attribute\n// HTMLIFrameElement.height => string, reflected attribute\n// HTMLIFrameElement.name => string, reflected attribute\n// HTMLIFrameElement.referrerPolicy => string, reflected attribute\n// HTMLIFrameElement.src => string, reflected attribute\n// HTMLIFrameElement.srcdoc => string, reflected attribute\n// HTMLIFrameElement.width => string, reflected attribute\nreflectProperties([\n    { allow: [''] },\n    { allowFullscreen: [false] },\n    { csp: [''] },\n    { height: [''] },\n    { name: [''] },\n    { referrerPolicy: [''] },\n    { src: [''] },\n    { srcdoc: [''] },\n    { width: [''] },\n], HTMLIFrameElement);\n// Unimplemented Properties\n// HTMLIFrameElement.allowPaymentRequest => boolean, reflected attribute\n// HTMLIFrameElement.contentDocument => Document, read only (active document in the inline frame's nested browsing context)\n// HTMLIFrameElement.contentWindow => WindowProxy, read only (window proxy for the nested browsing context)\n//# sourceMappingURL=HTMLIFrameElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLImageElement extends HTMLElement {\n}\nregisterSubclass('img', HTMLImageElement);\n// Reflected Properties\n// HTMLImageElement.alt => string, reflected attribute\n// HTMLImageElement.crossOrigin => string, reflected attribute\n// HTMLImageElement.height => number, reflected attribute\n// HTMLImageElement.isMap => boolean, reflected attribute\n// HTMLImageElement.referrerPolicy => string, reflected attribute\n// HTMLImageElement.src => string, reflected attribute\n// HTMLImageElement.sizes => string, reflected attribute\n// HTMLImageElement.srcset => string, reflected attribute\n// HTMLImageElement.useMap => string, reflected attribute\n// HTMLImageElement.width => number, reflected attribute\nreflectProperties([\n    { alt: [''] },\n    { crossOrigin: [''] },\n    { height: [0] },\n    { isMap: [false] },\n    { referrerPolicy: [''] },\n    { src: [''] },\n    { sizes: [''] },\n    { srcset: [''] },\n    { useMap: [''] },\n    { width: [0] },\n], HTMLImageElement);\n// Unimplmented Properties\n// HTMLImageElement.complete Read only\n// Returns a Boolean that is true if the browser has finished fetching the image, whether successful or not. It also shows true, if the image has no src value.\n// HTMLImageElement.currentSrc Read only\n// Returns a DOMString representing the URL to the currently displayed image (which may change, for example in response to media queries).\n// HTMLImageElement.naturalHeight Read only\n// Returns a unsigned long representing the intrinsic height of the image in CSS pixels, if it is available; else, it shows 0.\n// HTMLImageElement.naturalWidth Read only\n// Returns a unsigned long representing the intrinsic width of the image in CSS pixels, if it is available; otherwise, it will show 0.\n//# sourceMappingURL=HTMLImageElement.js.map","import { matchChildrenElements } from './matchElements';\n/**\n * The HTMLInputLabels interface represents a collection of input getters for their related label Elements.\n * It is mixedin to both HTMLInputElement, HTMLMeterElement, and HTMLProgressElement.\n */\nexport const HTMLInputLabelsMixin = (defineOn) => {\n    Object.defineProperty(defineOn.prototype, 'labels', {\n        /**\n         * Getter returning label elements associated to this meter.\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLProgressElement/labels\n         * @return label elements associated to this meter.\n         */\n        get() {\n            return matchChildrenElements(this.ownerDocument || this, (element) => element.tagName === 'LABEL' && element.for && element.for === this.id);\n        },\n    });\n};\n//# sourceMappingURL=HTMLInputLabelsMixin.js.map","import { HTMLElement } from './HTMLElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nimport { reflectProperties } from './enhanceElement';\nimport { registerSubclass } from './Element';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\nexport class HTMLInputElement extends HTMLElement {\n    // Per spec, some attributes like 'value' and 'checked' change behavior based on dirty flags.\n    // Since these flags can only be changed on interaction (outside of worker), we can ignore them here.\n    // Tradeoffs: Consequent attribute changes are missing, HTMLFormElement.reset() doesn't work, etc.\n    // Alternative: Implement dirty flag checking in worker-dom, which would require listening for\n    //     and forwarding interaction events to flag \"dirtiness\".\n    // https://html.spec.whatwg.org/multipage/input.html#common-input-element-apis\n    [21 /* TransferrableKeys.value */] = '';\n    dirtyValue = false;\n    [47 /* TransferrableKeys.checked */] = false;\n    // TODO(willchou): There are a few interrelated issues with `value` property.\n    //   1. \"Dirtiness\" caveat above.\n    //   2. Duplicate SYNC events. Sent by every event fired from elements with a `value`, plus the default 'change' listener.\n    //   3. Duplicate MUTATE events. Caused by stale `value` in worker due to no default 'input' listener (see below).\n    get value() {\n        return !this.dirtyValue ? this.getAttribute('value') || '' : this[21 /* TransferrableKeys.value */];\n    }\n    set value(value) {\n        // Don't early-out if value doesn't appear to have changed.\n        // The worker may have a stale value since 'input' events aren't being forwarded.\n        this[21 /* TransferrableKeys.value */] = String(value);\n        this.dirtyValue = true;\n        transfer(this.ownerDocument, [\n            3 /* TransferrableMutationType.PROPERTIES */,\n            this[7 /* TransferrableKeys.index */],\n            storeString('value'),\n            0 /* NumericBoolean.FALSE */,\n            storeString(value),\n        ]);\n    }\n    get valueAsDate() {\n        // Don't use Date constructor or Date.parse() since ISO 8601 (yyyy-mm-dd) parsing is inconsistent.\n        const date = this.stringToDate(this.value);\n        const invalid = !date || isNaN(date.getTime());\n        return invalid ? null : date;\n    }\n    /** Unlike browsers, does not throw if this input[type] doesn't support dates. */\n    set valueAsDate(value) {\n        if (!(value instanceof Date)) {\n            throw new TypeError('The provided value is not a Date.');\n        }\n        this.value = this.dateToString(value);\n    }\n    get valueAsNumber() {\n        if (this.value.length === 0) {\n            return NaN;\n        }\n        return Number(this.value);\n    }\n    /** Unlike browsers, does not throw if this input[type] doesn't support numbers. */\n    set valueAsNumber(value) {\n        if (typeof value === 'number') {\n            this.value = String(value);\n        }\n        else {\n            this.value = '';\n        }\n    }\n    get checked() {\n        return this[47 /* TransferrableKeys.checked */];\n    }\n    set checked(value) {\n        if (this[47 /* TransferrableKeys.checked */] === value) {\n            return;\n        }\n        this[47 /* TransferrableKeys.checked */] = !!value;\n        transfer(this.ownerDocument, [\n            3 /* TransferrableMutationType.PROPERTIES */,\n            this[7 /* TransferrableKeys.index */],\n            storeString('checked'),\n            1 /* NumericBoolean.TRUE */,\n            value === true ? 1 /* NumericBoolean.TRUE */ : 0 /* NumericBoolean.FALSE */,\n        ]);\n    }\n    /**\n     * Returns a date in 'yyyy-mm-dd' format.\n     * @param date\n     */\n    dateToString(date) {\n        const y = date.getFullYear();\n        const m = date.getMonth() + 1; // getMonth() is 0-index.\n        const d = date.getDate();\n        return `${y}-${m > 9 ? '' : '0'}${m}-${d > 9 ? '' : '0'}${d}`;\n    }\n    /**\n     * Returns a Date from a 'yyyy-mm-dd' format.\n     * @param s\n     */\n    stringToDate(str) {\n        const components = str.split('-');\n        if (components.length !== 3) {\n            return null;\n        }\n        const [y, m, d] = components;\n        // Month is 0-index.\n        return new Date(parseInt(y, 10), parseInt(m, 10) - 1, parseInt(d, 10));\n    }\n}\nregisterSubclass('input', HTMLInputElement);\nHTMLInputLabelsMixin(HTMLInputElement);\n// Reflected Properties\n// HTMLInputElement.formAction => string, reflected attribute\n// HTMLInputElement.formEncType\t=> string, reflected attribute\n// HTMLInputElement.formMethod => string, reflected attribute\n// HTMLInputElement.formTarget => string, reflected attribute\n// HTMLInputElement.name => string, reflected attribute\n// HTMLInputElement.type => string, reflected attribute\n// HTMLInputElement.disabled => boolean, reflected attribute\n// HTMLInputElement.autofocus => boolean, reflected attribute\n// HTMLInputElement.required => boolean, reflected attribute\n// HTMLInputElement.defaultChecked => boolean, reflected attribute (\"checked\")\n// HTMLInputElement.alt => string, reflected attribute\n// HTMLInputElement.height => number, reflected attribute\n// HTMLInputElement.src => string, reflected attribute\n// HTMLInputElement.width => number, reflected attribute\n// HTMLInputElement.accept => string, reflected attribute\n// HTMLInputElement.autocomplete => string, reflected attribute\n// HTMLInputElement.maxLength => number, reflected attribute\n// HTMLInputElement.size => number, reflected attribute\n// HTMLInputElement.pattern => string, reflected attribute\n// HTMLInputElement.placeholder => string, reflected attribute\n// HTMLInputElement.readOnly => boolean, reflected attribute\n// HTMLInputElement.min => string, reflected attribute\n// HTMLInputElement.max => string, reflected attribute\n// HTMLInputElement.defaultValue => string, reflected attribute\n// HTMLInputElement.dirname => string, reflected attribute\n// HTMLInputElement.multiple => boolean, reflected attribute\n// HTMLInputElement.step => string, reflected attribute\n// HTMLInputElement.autocapitalize => string, reflected attribute\nreflectProperties([\n    { accept: [''] },\n    { alt: [''] },\n    { autocapitalize: [''] },\n    { autocomplete: [''] },\n    { autofocus: [false] },\n    { defaultChecked: [false, /* attr */ 'checked'] },\n    { defaultValue: ['', /* attr */ 'value'] },\n    { dirName: [''] },\n    { disabled: [false] },\n    { formAction: [''] },\n    { formEncType: [''] },\n    { formMethod: [''] },\n    { formTarget: [''] },\n    { height: [0] },\n    { max: [''] },\n    { maxLength: [0] },\n    { min: [''] },\n    { multiple: [false] },\n    { name: [''] },\n    { pattern: [''] },\n    { placeholder: [''] },\n    { readOnly: [false] },\n    { required: [false] },\n    { size: [0] },\n    { src: [''] },\n    { step: [''] },\n    { type: ['text'] },\n    { width: [0] },\n], HTMLInputElement);\n// TODO(KB) Not Reflected Properties\n// HTMLInputElement.indeterminate => boolean\n// Unimplemented Properties\n// HTMLInputElement.formNoValidate => string, reflected attribute\n// HTMLInputElement.validity => ValidityState, readonly\n// HTMLInputElement.validationMessage => string, readonly\n// HTMLInputElement.willValidate => boolean, readonly\n// HTMLInputElement.allowdirs => boolean\n// HTMLInputElement.files\t=> Array<File>\n// HTMLInputElement.webkitdirectory\t=> boolean, reflected attribute\n// HTMLInputElement.webkitEntries => Array<FileSystemEntry>\n// HTMLInputElement.selectionStart => number\n// HTMLInputElement.selectionEnd => number\n// HTMLInputElement.selectionDirection => string\n// HTMLInputElement.list => Element, read only (element pointed by list attribute)\n// Unimplemented Methods\n// HTMLInputElement.setSelectionRange()\n// HTMLInputElement.setRangeText()\n// HTMLInputElement.setCustomValidity()\n// HTMLInputElement.checkValidity()\n// HTMLInputElement.stepDown()\n// HTMLInputElement.stepUp()\n//# sourceMappingURL=HTMLInputElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { matchChildElement, tagNameConditionPredicate } from './matchElements';\nexport class HTMLLabelElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control\n     * @return input element\n     */\n    get control() {\n        const htmlFor = this.getAttribute('for');\n        if (htmlFor !== null) {\n            return this.ownerDocument && this.ownerDocument.getElementById(htmlFor);\n        }\n        return matchChildElement(this, tagNameConditionPredicate(['INPUT']));\n    }\n}\nregisterSubclass('label', HTMLLabelElement);\n// Reflected Properties\n// HTMLLabelElement.htmlFor => string, reflected attribute 'for'\nreflectProperties([{ htmlFor: ['', 'for'] }], HTMLLabelElement);\n//# sourceMappingURL=HTMLLabelElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nexport class HTMLLinkElement extends HTMLElement {\n    _relList;\n    get relList() {\n        return this._relList || (this._relList = new DOMTokenList(this, 'rel'));\n    }\n}\nregisterSubclass('link', HTMLLinkElement);\ndefinePropertyBackedAttributes(HTMLLinkElement, {\n    rel: [(el) => el.relList.value, (el, value) => (el.relList.value = value)],\n});\nsynchronizedAccessor(HTMLLinkElement, 'relList', 'rel');\n// Reflected Properties\n// HTMLLinkElement.as => string, reflected attribute\n// HTMLLinkElement.crossOrigin => string, reflected attribute\n// HTMLLinkElement.disabled => boolean, reflected attribute\n// HTMLLinkElement.href => string, reflected attribute\n// HTMLLinkElement.hreflang => string, reflected attribute\n// HTMLLinkElement.media => string, reflected attribute\n// HTMLLinkElement.referrerPolicy => string, reflected attribute\n// HTMLLinkElement.sizes => string, reflected attribute\n// HTMLLinkElement.type => string, reflected attribute\nreflectProperties([\n    { as: [''] },\n    { crossOrigin: [''] },\n    { disabled: [false] },\n    { href: [''] },\n    { hreflang: [''] },\n    { media: [''] },\n    { referrerPolicy: [''] },\n    { sizes: [''] },\n    { type: [''] },\n], HTMLLinkElement);\n// Unimplemented Properties\n// LinkStyle.sheet Read only\n// Returns the StyleSheet object associated with the given element, or null if there is none.\n//# sourceMappingURL=HTMLLinkElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { matchChildrenElements } from './matchElements';\nexport class HTMLMapElement extends HTMLElement {\n    /**\n     * Getter returning area elements associated to this map.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLMapElement\n     * @return area elements associated to this map.\n     */\n    get areas() {\n        return matchChildrenElements(this, (element) => element.tagName === 'AREA');\n    }\n}\nregisterSubclass('map', HTMLMapElement);\n// Reflected Properties\n// HTMLMapElement.name => string, reflected attribute\nreflectProperties([{ name: [''] }], HTMLMapElement);\n//# sourceMappingURL=HTMLMapElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nexport class HTMLMeterElement extends HTMLElement {\n}\nregisterSubclass('meter', HTMLMeterElement);\nHTMLInputLabelsMixin(HTMLMeterElement);\n// Reflected Properties\n// HTMLMeterElement.high => number, reflected attribute\n// HTMLMeterElement.low => number, reflected attribute\n// HTMLMeterElement.max => number, reflected attribute\n// HTMLMeterElement.min => number, reflected attribute\n// HTMLMeterElement.optimum => number, reflected attribute\n// HTMLMeterElement.value => number, reflected attribute\nreflectProperties([{ high: [0] }, { low: [0] }, { max: [1] }, { min: [0] }, { optimum: [0] }, { value: [0] }], HTMLMeterElement);\n//# sourceMappingURL=HTMLMeterElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLModElement extends HTMLElement {\n}\nregisterSubclass('del', HTMLModElement);\nregisterSubclass('ins', HTMLModElement);\n// Reflected Properties\n// HTMLModElement.cite => string, reflected attribute\n// HTMLModElement.datetime => string, reflected attribute\nreflectProperties([{ cite: [''] }, { datetime: [''] }], HTMLModElement);\n//# sourceMappingURL=HTMLModElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLOListElement extends HTMLElement {\n}\nregisterSubclass('ol', HTMLOListElement);\n// Reflected Properties\n// HTMLModElement.reversed => boolean, reflected attribute\n// HTMLModElement.start => number, reflected attribute\n// HTMLOListElement.type => string, reflected attribute\nreflectProperties([{ reversed: [false] }, { start: [1] }, { type: [''] }], HTMLOListElement);\n//# sourceMappingURL=HTMLOListElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { transfer } from '../MutationTransfer';\nimport { store as storeString } from '../strings';\nexport class HTMLOptionElement extends HTMLElement {\n    [52 /* TransferrableKeys.selected */] = false;\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return position of the option within the list of options it's within, or zero if there is no valid parent.\n     */\n    get index() {\n        return (this.parentNode && this.parentNode.children.indexOf(this)) || 0;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return label attribute value or text content if there is no attribute.\n     */\n    get label() {\n        return this.getAttribute('label') || this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param label new label value to store as an attribute.\n     */\n    set label(label) {\n        this.setAttribute('label', label);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return boolean based on if the option element is selected.\n     */\n    get selected() {\n        return this[52 /* TransferrableKeys.selected */];\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param value new selected boolean value.\n     */\n    set selected(value) {\n        this[52 /* TransferrableKeys.selected */] = !!value;\n        transfer(this.ownerDocument, [\n            3 /* TransferrableMutationType.PROPERTIES */,\n            this[7 /* TransferrableKeys.index */],\n            storeString('selected'),\n            1 /* NumericBoolean.TRUE */,\n            this[52 /* TransferrableKeys.selected */] ? 1 /* NumericBoolean.TRUE */ : 0 /* NumericBoolean.FALSE */,\n        ]);\n    }\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param text new text content to store for this Element.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return value attribute value or text content if there is no attribute.\n     */\n    get value() {\n        return this.getAttribute('value') || this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param value new value for an option element.\n     */\n    set value(value) {\n        this.setAttribute('value', value);\n    }\n}\nregisterSubclass('option', HTMLOptionElement);\ndefinePropertyBackedAttributes(HTMLOptionElement, {\n    selected: [(el) => String(el[52 /* TransferrableKeys.selected */]), (el, value) => (el.selected = value === 'true')],\n});\n// Reflected Properties\n// HTMLOptionElement.defaultSelected => boolean, reflected attribute\n// HTMLOptionElement.disabled => boolean, reflected attribute\n// HTMLOptionElement.type => string, reflected attribute\nreflectProperties([{ defaultSelected: [false, /* attr */ 'selected'] }, { disabled: [false] }, { type: [''] }], HTMLOptionElement);\n// Implemented at HTMLElement\n// HTMLOptionElement.form, Read only\t=> HTMLFormElement\n//# sourceMappingURL=HTMLOptionElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nexport class HTMLProgressElement extends HTMLElement {\n    [48 /* TransferrableKeys.indeterminate */] = true;\n    [21 /* TransferrableKeys.value */] = 0;\n    dirtyValue = false;\n    get position() {\n        return this[48 /* TransferrableKeys.indeterminate */] ? -1 : this.value / this.max;\n    }\n    get value() {\n        return !this.dirtyValue ? Number(this.getAttribute('value')) || 0 : this[21 /* TransferrableKeys.value */];\n    }\n    set value(value) {\n        this[48 /* TransferrableKeys.indeterminate */] = false;\n        this[21 /* TransferrableKeys.value */] = value;\n        this.dirtyValue = true;\n        // TODO(KB) This is a property mutation needing tracked.\n    }\n}\nregisterSubclass('progress', HTMLProgressElement);\nHTMLInputLabelsMixin(HTMLProgressElement);\n// Reflected Properties\n// HTMLModElement.max => number, reflected attribute\nreflectProperties([{ max: [1] }], HTMLProgressElement);\n//# sourceMappingURL=HTMLProgressElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLQuoteElement extends HTMLElement {\n}\nregisterSubclass('blockquote', HTMLQuoteElement);\nregisterSubclass('q', HTMLQuoteElement);\n// Reflected Properties\n// HTMLModElement.cite => string, reflected attribute\nreflectProperties([{ cite: [''] }], HTMLQuoteElement);\n//# sourceMappingURL=HTMLQuoteElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLScriptElement extends HTMLElement {\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement\n     * @param text new text content to store for this Element.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n}\nregisterSubclass('script', HTMLScriptElement);\n// Reflected Properties\n// HTMLScriptElement.type => string, reflected attribute\n// HTMLScriptElement.src => string, reflected attribute\n// HTMLScriptElement.charset => string, reflected attribute\n// HTMLScriptElement.async => boolean, reflected attribute\n// HTMLScriptElement.defer => boolean, reflected attribute\n// HTMLScriptElement.crossOrigin => string, reflected attribute\n// HTMLScriptElement.noModule => boolean, reflected attribute\nreflectProperties([{ type: [''] }, { src: [''] }, { charset: [''] }, { async: [false] }, { defer: [false] }, { crossOrigin: [''] }, { noModule: [false] }], HTMLScriptElement);\n//# sourceMappingURL=HTMLScriptElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nimport { matchChildrenElements, matchChildElement, tagNameConditionPredicate } from './matchElements';\nconst isOptionPredicate = tagNameConditionPredicate(['OPTION']);\nconst isSelectedOptionPredicate = (element) => isOptionPredicate(element) && element.selected === true;\nexport class HTMLSelectElement extends HTMLElement {\n    [49 /* TransferrableKeys.size */] = -1 /* SizeDefaults.UNMODIFIED */;\n    /**\n     * Extend functionality after child insertion to make sure the correct option is selected.\n     * @param child\n     */\n    [56 /* TransferrableKeys.insertedNode */](child) {\n        super[56 /* TransferrableKeys.insertedNode */](child);\n        // When this singular value select is appending a child, set the value property for two cases.\n        // 1. The inserted child is already selected.\n        // 2. The current value of the select is the default ('').\n        if ((!this.multiple && isOptionPredicate(child) && child.selected) || this.value === '') {\n            this.value = child.value;\n        }\n    }\n    /**\n     * Extend functionality after child insertion to make sure the correct option is selected.\n     * @param child\n     */\n    [57 /* TransferrableKeys.removedNode */](child) {\n        super[57 /* TransferrableKeys.removedNode */](child);\n        // When this singular value select is removing a selected child\n        // ... set the value property to the first valid option.\n        if (!this.multiple && child.selected) {\n            const options = this.options;\n            if (options.length > 0) {\n                this.value = options[0].value;\n            }\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/length\n     * @return number of controls in the form\n     */\n    get length() {\n        return this.options.length;\n    }\n    /**\n     * Getter returning option elements that are direct children of a HTMLSelectElement\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return Element \"options\" objects that are direct children.\n     */\n    get options() {\n        return this.children.filter(isOptionPredicate);\n    }\n    /**\n     * Getter returning the index of the first selected <option> element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedIndex\n     * @return the index of the first selected option element, or -1 if no element is selected.\n     */\n    get selectedIndex() {\n        const firstSelectedChild = matchChildElement(this, isSelectedOptionPredicate);\n        return firstSelectedChild ? this.children.indexOf(firstSelectedChild) : -1;\n    }\n    /**\n     * Setter making the <option> element at the passed index selected.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedIndex\n     * @param selectedIndex index number to make selected.\n     */\n    set selectedIndex(selectedIndex) {\n        this.children.forEach((element, index) => (element.selected = index === selectedIndex));\n    }\n    /**\n     * Getter returning the <option> elements selected.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedOptions\n     * @return array of Elements currently selected.\n     */\n    get selectedOptions() {\n        return matchChildrenElements(this, isSelectedOptionPredicate);\n    }\n    /**\n     * Getter returning the size of the select element (by default 1 for single and 4 for multiple)\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return size of the select element.\n     */\n    get size() {\n        return this[49 /* TransferrableKeys.size */] === -1 /* SizeDefaults.UNMODIFIED */\n            ? this.multiple\n                ? 4 /* SizeDefaults.MULTIPLE */\n                : 1 /* SizeDefaults.SINGLE */\n            : this[49 /* TransferrableKeys.size */];\n    }\n    /**\n     * Override the size of this element (each positive unit is the height of a single option)\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @param size number to set the size to.\n     */\n    set size(size) {\n        this[49 /* TransferrableKeys.size */] = size > 0 ? size : this.multiple ? 4 /* SizeDefaults.MULTIPLE */ : 1 /* SizeDefaults.SINGLE */;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return string representing the select element type.\n     */\n    get type() {\n        return this.multiple ? \"select-one\" /* TypeDefaults.MULTIPLE */ : \"select-multiple\" /* TypeDefaults.SINGLE */;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return the value of the first selected option\n     */\n    get value() {\n        const firstSelectedChild = matchChildElement(this, isSelectedOptionPredicate);\n        return firstSelectedChild ? firstSelectedChild.value : '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @set value\n     */\n    set value(value) {\n        const stringValue = String(value);\n        this.children.forEach((element) => isOptionPredicate(element) && (element.selected = element.value === stringValue));\n    }\n}\nregisterSubclass('select', HTMLSelectElement);\nHTMLInputLabelsMixin(HTMLSelectElement);\n// Reflected Properties\n// HTMLSelectElement.multiple => boolean, reflected attribute\n// HTMLSelectElement.name => string, reflected attribute\n// HTMLSelectElement.required => boolean, reflected attribute\nreflectProperties([{ multiple: [false] }, { name: [''] }, { required: [false] }], HTMLSelectElement);\n// Implemented on HTMLElement\n// HTMLSelectElement.form => HTMLFormElement, readonly\n// Unimplemented Properties\n// HTMLSelectElement.validation => string\n// HTMLSelectElement.validity => ValidityState\n// HTMLSelectElement.willValidate => boolean\n//# sourceMappingURL=HTMLSelectElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLSourceElement extends HTMLElement {\n}\nregisterSubclass('source', HTMLSourceElement);\n// Reflected Properties\n// HTMLSourceElement.media => string, reflected attribute\n// HTMLSourceElement.sizes => string, reflected attribute\n// HTMLSourceElement.src => string, reflected attribute\n// HTMLSourceElement.srcset => string, reflected attribute\n// HTMLSourceElement.type => string, reflected attribute\nreflectProperties([{ media: [''] }, { sizes: [''] }, { src: [''] }, { srcset: [''] }, { type: [''] }], HTMLSourceElement);\n// Unimplemented Properties\n// HTMLSourceElement.keySystem => string\n//# sourceMappingURL=HTMLSourceElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLStyleElement extends HTMLElement {\n}\nregisterSubclass('style', HTMLStyleElement);\n// Reflected Properties\n// HTMLStyleElement.media => string, reflected attribute\n// HTMLStyleElement.type => string, reflected attribute\nreflectProperties([{ media: [''] }, { type: [''] }], HTMLStyleElement);\n// Unimplemented Properties\n// HTMLStyleElement.disabled => boolean\n// HTMLStyleElement.scoped => boolean, reflected attribute\n// HTMLStyleElement.sheet => StyleSheet, read only\n//# sourceMappingURL=HTMLStyleElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList } from './DOMTokenList';\nimport { matchNearestParent, tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nexport class HTMLTableCellElement extends HTMLElement {\n    _headers;\n    get headers() {\n        return this._headers || (this._headers = new DOMTokenList(this, 'headers'));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCellElement\n     * @return position of the cell within the parent tr, if not nested in a tr the value is -1.\n     */\n    get cellIndex() {\n        const parent = matchNearestParent(this, tagNameConditionPredicate(['TR']));\n        return parent !== null ? matchChildrenElements(parent, tagNameConditionPredicate(['TH', 'TD'])).indexOf(this) : -1;\n    }\n}\nregisterSubclass('th', HTMLTableCellElement);\nregisterSubclass('td', HTMLTableCellElement);\ndefinePropertyBackedAttributes(HTMLTableCellElement, {\n    headers: [(el) => el.headers.value, (el, value) => (el.headers.value = value)],\n});\n// Reflected Properties\n// HTMLTableCellElement.abbr => string, reflected attribute\n// HTMLTableCellElement.colSpan => number, reflected attribute\n// HTMLTableCellElement.rowSpan => number, reflected attribute\n// HTMLTableCellElement.scope => string, reflected attribute\nreflectProperties([{ abbr: [''] }, { colSpan: [1] }, { rowSpan: [1] }, { scope: [''] }], HTMLTableCellElement);\n//# sourceMappingURL=HTMLTableCellElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLTableColElement extends HTMLElement {\n}\nregisterSubclass('col', HTMLTableColElement);\n// Reflected Properties\n// HTMLTableColElement.span => number, reflected attribute\nreflectProperties([{ span: [1] }], HTMLTableColElement);\n//# sourceMappingURL=HTMLTableColElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { matchChildElement, matchChildrenElements, tagNameConditionPredicate } from './matchElements';\nimport { toUpper } from '../../utils';\nconst removeElement = (element) => element && element.remove();\nconst insertBeforeElementsWithTagName = (parent, element, tagNames) => {\n    console.assert(tagNames.every((t) => t === toUpper(t)), 'tagNames must be all uppercase.');\n    const insertBeforeElement = matchChildElement(parent, (element) => !tagNames.includes(element.tagName));\n    if (insertBeforeElement) {\n        parent.insertBefore(element, insertBeforeElement);\n    }\n    else {\n        parent.appendChild(element);\n    }\n};\nexport class HTMLTableElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/caption\n     * @return first matching caption Element or null if none exists.\n     */\n    get caption() {\n        return matchChildElement(this, tagNameConditionPredicate(['CAPTION']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/caption\n     * @param element new caption element to replace the existing, or become the first element child.\n     */\n    set caption(newElement) {\n        if (newElement && newElement.tagName === 'CAPTION') {\n            // If a correct object is given,\n            // it is inserted in the tree as the first child of this element and the first <caption>\n            // that is a child of this element is removed from the tree, if any.\n            removeElement(this.caption);\n            this.insertBefore(newElement, this.firstElementChild);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @return first matching thead Element or null if none exists.\n     */\n    get tHead() {\n        return matchChildElement(this, tagNameConditionPredicate(['THEAD']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @param newElement new thead element to insert in this table.\n     */\n    set tHead(newElement) {\n        if (newElement && newElement.tagName === 'THEAD') {\n            // If a correct object is given,\n            // it is inserted in the tree immediately before the first element that is\n            // neither a <caption>, nor a <colgroup>, or as the last child if there is no such element.\n            // Additionally, the first <thead> that is a child of this element is removed from the tree, if any.\n            removeElement(this.tHead);\n            insertBeforeElementsWithTagName(this, newElement, ['CAPTION', 'COLGROUP']);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @return first matching thead Element or null if none exists.\n     */\n    get tFoot() {\n        return matchChildElement(this, tagNameConditionPredicate(['TFOOT']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @param newElement new tfoot element to insert in this table.\n     */\n    set tFoot(newElement) {\n        if (newElement && newElement.tagName === 'TFOOT') {\n            // If a correct object is given,\n            // it is inserted in the tree immediately before the first element that is neither a <caption>,\n            // a <colgroup>, nor a <thead>, or as the last child if there is no such element, and the first <tfoot> that is a child of\n            // this element is removed from the tree, if any.\n            removeElement(this.tFoot);\n            insertBeforeElementsWithTagName(this, newElement, ['CAPTION', 'COLGROUP', 'THEAD']);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement\n     * @return array of 'tr' tagname elements\n     */\n    get rows() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TR']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement\n     * @return array of 'tbody' tagname elements\n     */\n    get tBodies() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TBODY']));\n    }\n}\nregisterSubclass('table', HTMLTableElement);\n// Unimplemented Properties\n// HTMLTableElement.sortable => boolean\n// Unimplemented Methods\n// HTMLTableElement.createTHead()\n// HTMLTableElement.deleteTHead()\n// HTMLTableElement.createTFoot()\n// HTMLTableElement.deleteTFoot()\n// HTMLTableElement.createCaption()\n// HTMLTableElement.deleteCaption()\n// HTMLTableElement.insertRow()\n// HTMLTableElement.deleteRow()\n//# sourceMappingURL=HTMLTableElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { matchNearestParent, tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nconst TABLE_SECTION_TAGNAMES = 'TABLE TBODY THEAD TFOOT'.split(' ');\nconst indexInAncestor = (element, isValidAncestor) => {\n    const parent = matchNearestParent(element, isValidAncestor);\n    // TODO(KB): This is either a HTMLTableElement or HTMLTableSectionElement.\n    return parent === null ? -1 : parent.rows.indexOf(element);\n};\nexport class HTMLTableRowElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return td and th elements that are children of this row.\n     */\n    get cells() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TD', 'TH']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return position of the row within a table, if not nested within in a table the value is -1.\n     */\n    get rowIndex() {\n        return indexInAncestor(this, tagNameConditionPredicate(['TABLE']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return position of the row within a parent section, if not nested directly in a section the value is -1.\n     */\n    get sectionRowIndex() {\n        return indexInAncestor(this, tagNameConditionPredicate(TABLE_SECTION_TAGNAMES));\n    }\n    /**\n     * Removes the cell in provided position of this row.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @param index position of the cell in the row to remove.\n     */\n    deleteCell(index) {\n        const cell = this.cells[index];\n        if (cell) {\n            cell.remove();\n        }\n    }\n    /**\n     * Insert a new cell ('td') in the row at a specified position.\n     * @param index position in the children to insert before.\n     * @return newly inserted td element.\n     */\n    insertCell(index) {\n        const cells = this.cells;\n        const td = this.ownerDocument.createElement('td');\n        if (index < 0 || index >= cells.length) {\n            this.appendChild(td);\n        }\n        else {\n            this.insertBefore(td, this.children[index]);\n        }\n        return td;\n    }\n}\nregisterSubclass('tr', HTMLTableRowElement);\n//# sourceMappingURL=HTMLTableRowElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nexport class HTMLTableSectionElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @return All rows (tr elements) within the table section.\n     */\n    get rows() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TR']));\n    }\n    /**\n     * Remove a node in a specified position from the section.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @param index position in the section to remove the node of.\n     */\n    deleteRow(index) {\n        const rows = this.rows;\n        if (index >= 0 || index <= rows.length) {\n            rows[index].remove();\n        }\n    }\n    /**\n     * Insert a new row ('tr') in the row at a specified position.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @param index position in the children to insert before.\n     * @return newly inserted tr element.\n     */\n    insertRow(index) {\n        const rows = this.rows;\n        const tr = this.ownerDocument.createElement('tr');\n        if (index < 0 || index >= rows.length) {\n            this.appendChild(tr);\n        }\n        else {\n            this.insertBefore(tr, this.children[index]);\n        }\n        return tr;\n    }\n}\nregisterSubclass('thead', HTMLTableSectionElement);\nregisterSubclass('tfoot', HTMLTableSectionElement);\nregisterSubclass('tbody', HTMLTableSectionElement);\n//# sourceMappingURL=HTMLTableSectionElement.js.map","// <blockquote> and <q>\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLTimeElement extends HTMLElement {\n}\nregisterSubclass('time', HTMLTimeElement);\n// Reflected Properties\n// HTMLTimeElement.dateTime => string, reflected attribute\nreflectProperties([{ dateTime: [''] }], HTMLTimeElement);\n//# sourceMappingURL=HTMLTimeElement.js.map","import { CharacterData } from './CharacterData';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/Text\nexport class Text extends CharacterData {\n    constructor(data, ownerDocument, overrideIndex) {\n        super(data, 3 /* NodeType.TEXT_NODE */, '#text', ownerDocument, overrideIndex);\n    }\n    // Unimplemented Properties\n    // Text.isElementContentWhitespace – https://developer.mozilla.org/en-US/docs/Web/API/Text/isElementContentWhitespace\n    // Text.wholeText – https://developer.mozilla.org/en-US/docs/Web/API/Text/wholeText\n    // Text.assignedSlot – https://developer.mozilla.org/en-US/docs/Web/API/Text/assignedSlot\n    /**\n     * textContent getter, retrieves underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     */\n    get textContent() {\n        return this.data;\n    }\n    /**\n     * textContent setter, mutates underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     * @param value new value\n     */\n    set textContent(value) {\n        // Mutation Observation is performed by CharacterData.\n        this.nodeValue = value;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @return new Text Node with the same data as the Text to clone.\n     */\n    cloneNode() {\n        return this.ownerDocument.createTextNode(this.data);\n    }\n    /**\n     * Breaks Text node into two nodes at the specified offset, keeping both nodes in the tree as siblings.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Text/splitText\n     * @param offset number position to split text at.\n     * @return Text Node after the offset.\n     */\n    splitText(offset) {\n        const remainderTextNode = new Text(this.data.slice(offset, this.data.length), this.ownerDocument);\n        const parentNode = this.parentNode;\n        this.nodeValue = this.data.slice(0, offset);\n        if (parentNode !== null) {\n            // When this node is attached to the DOM, the remainder text needs to be inserted directly after.\n            const parentChildNodes = parentNode.childNodes;\n            const insertBeforePosition = parentChildNodes.indexOf(this) + 1;\n            const insertBeforeNode = parentChildNodes.length >= insertBeforePosition ? parentChildNodes[insertBeforePosition] : null;\n            return parentNode.insertBefore(remainderTextNode, insertBeforeNode);\n        }\n        return remainderTextNode;\n    }\n}\n//# sourceMappingURL=Text.js.map","import { ParentNode } from './ParentNode';\nimport { store as storeString } from '../strings';\nexport class DocumentFragment extends ParentNode {\n    constructor(ownerDocument, overrideIndex) {\n        super(11 /* NodeType.DOCUMENT_FRAGMENT_NODE */, '#document-fragment', ownerDocument, overrideIndex);\n        this[8 /* TransferrableKeys.creationFormat */] = [this[7 /* TransferrableKeys.index */], 11 /* NodeType.DOCUMENT_FRAGMENT_NODE */, storeString(this.nodeName), 0, 0];\n    }\n    /**\n     * @param deep boolean determines if the clone should include a recursive copy of all childNodes.\n     * @return DocumentFragment containing childNode clones of the DocumentFragment requested to be cloned.\n     */\n    cloneNode(deep = false) {\n        const clone = this.ownerDocument.createDocumentFragment();\n        if (deep) {\n            this.childNodes.forEach((child) => clone.appendChild(child.cloneNode(deep)));\n        }\n        return clone;\n    }\n}\n//# sourceMappingURL=DocumentFragment.js.map","import { get } from './nodes';\n/**\n * When an event is dispatched from the main thread, it needs to be propagated in the worker thread.\n * Propagate adds an event listener to the worker global scope and uses the WorkerDOM Node.dispatchEvent\n * method to dispatch the transfered event in the worker thread.\n */\nexport function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* TransferrableKeys.type */] !== 4 /* MessageType.SYNC */) {\n            return;\n        }\n        const sync = data[40 /* TransferrableKeys.sync */];\n        const node = get(sync[7 /* TransferrableKeys.index */]);\n        if (node) {\n            node.ownerDocument[58 /* TransferrableKeys.allowTransfer */] = false;\n            // Modify the private backing ivar of `value` property to avoid mutation/sync cycle.\n            node.value = sync[21 /* TransferrableKeys.value */];\n            node.ownerDocument[58 /* TransferrableKeys.allowTransfer */] = true;\n        }\n    });\n}\n//# sourceMappingURL=SyncValuePropagation.js.map","export function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* TransferrableKeys.type */] !== 5 /* MessageType.RESIZE */) {\n            return;\n        }\n        const sync = data[40 /* TransferrableKeys.sync */];\n        if (sync) {\n            global.innerWidth = sync[0];\n            global.innerHeight = sync[1];\n        }\n    });\n}\n//# sourceMappingURL=ResizePropagation.js.map","import { Element, NS_NAME_TO_CLASS } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport './HTMLAnchorElement';\nimport './HTMLButtonElement';\nimport './HTMLCanvasElement';\nimport './HTMLDataElement';\nimport './HTMLDataListElement';\nimport './HTMLEmbedElement';\nimport './HTMLFieldSetElement';\nimport './HTMLFormElement';\nimport './HTMLIFrameElement';\nimport './HTMLImageElement';\nimport './HTMLInputElement';\nimport './HTMLLabelElement';\nimport './HTMLLinkElement';\nimport './HTMLMapElement';\nimport './HTMLMeterElement';\nimport './HTMLModElement';\nimport './HTMLOListElement';\nimport './HTMLOptionElement';\nimport './HTMLProgressElement';\nimport './HTMLQuoteElement';\nimport './HTMLScriptElement';\nimport './HTMLSelectElement';\nimport './HTMLSourceElement';\nimport './HTMLStyleElement';\nimport './HTMLTableCellElement';\nimport './HTMLTableColElement';\nimport './HTMLTableElement';\nimport './HTMLTableRowElement';\nimport './HTMLTableSectionElement';\nimport './HTMLTimeElement';\nimport { matchChildElement } from './matchElements';\nimport { Text } from './Text';\nimport { Comment } from './Comment';\nimport { toLower } from '../../utils';\nimport { DocumentFragment } from './DocumentFragment';\nimport { HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { propagate as propagateEvents } from '../Event';\nimport { propagate as propagateSyncValues } from '../SyncValuePropagation';\nimport { propagate as propagateResize } from '../ResizePropagation';\nimport { set as setPhase } from '../phase';\nconst DOCUMENT_NAME = '#document';\nexport class Document extends Element {\n    defaultView;\n    documentElement;\n    body;\n    // Internal variables.\n    postMessage;\n    addGlobalEventListener;\n    removeGlobalEventListener;\n    [58 /* TransferrableKeys.allowTransfer */] = true;\n    constructor(global) {\n        super(9 /* NodeType.DOCUMENT_NODE */, DOCUMENT_NAME, HTML_NAMESPACE, null);\n        // Element uppercases its nodeName, but Document doesn't.\n        this.nodeName = DOCUMENT_NAME;\n        this.documentElement = this; // TODO(choumx): Should be the <html> element.\n        this.defaultView = Object.assign(global, {\n            document: this,\n            addEventListener: this.addEventListener.bind(this),\n            removeEventListener: this.removeEventListener.bind(this),\n        });\n    }\n    /**\n     * Observing the Document indicates it's attached to a main thread\n     * version of the document.\n     *\n     * Each mutation needs to be transferred, synced values need to propagate.\n     */\n    [59 /* TransferrableKeys.observe */]() {\n        setPhase(1 /* Phase.Hydrating */);\n        propagateEvents(this.defaultView);\n        propagateSyncValues(this.defaultView);\n        propagateResize(this.defaultView);\n    }\n    /**\n     * Hydrate\n     * @param strings\n     * @param skeleton\n     */\n    [64 /* TransferrableKeys.hydrateNode */](strings, skeleton) {\n        switch (skeleton[0 /* TransferrableKeys.nodeType */]) {\n            case 3 /* NodeType.TEXT_NODE */:\n                return new Text(strings[skeleton[5 /* TransferrableKeys.textContent */]], this, skeleton[7 /* TransferrableKeys.index */]);\n            case 8 /* NodeType.COMMENT_NODE */:\n                return new Comment(strings[skeleton[5 /* TransferrableKeys.textContent */]], this, skeleton[7 /* TransferrableKeys.index */]);\n            default:\n                const namespaceURI = strings[skeleton[6 /* TransferrableKeys.namespaceURI */]] || HTML_NAMESPACE;\n                const localName = strings[skeleton[1 /* TransferrableKeys.localOrNodeName */]];\n                const constructor = NS_NAME_TO_CLASS[`${namespaceURI}:${localName}`] || HTMLElement;\n                const node = new constructor(1 /* NodeType.ELEMENT_NODE */, localName, namespaceURI, this, skeleton[7 /* TransferrableKeys.index */]);\n                (skeleton[2 /* TransferrableKeys.attributes */] || []).forEach((attribute) => \n                // AttributeNamespaceURI = strings[attribute[0]] !== 'null' ? strings[attribute[0]] : HTML_NAMESPACE\n                node.setAttributeNS(strings[attribute[0]] !== 'null' ? strings[attribute[0]] : HTML_NAMESPACE, strings[attribute[1]], strings[attribute[2]]));\n                (skeleton[4 /* TransferrableKeys.childNodes */] || []).forEach((child) => node.appendChild(this[64 /* TransferrableKeys.hydrateNode */](strings, child)));\n                return node;\n        }\n    }\n    createElement(name) {\n        return this.createElementNS(HTML_NAMESPACE, toLower(name));\n    }\n    createElementNS(namespaceURI, localName) {\n        const constructor = NS_NAME_TO_CLASS[`${namespaceURI}:${localName}`] || HTMLElement;\n        return new constructor(1 /* NodeType.ELEMENT_NODE */, localName, namespaceURI, this);\n    }\n    /**\n     * Note: Unlike DOM, Event subclasses (e.g. MouseEvent) are not instantiated based on `type`.\n     * @param type\n     */\n    createEvent(type) {\n        return new Event(type, { bubbles: false, cancelable: false });\n    }\n    createTextNode(text) {\n        return new Text(text, this);\n    }\n    createComment(text) {\n        return new Comment(text, this);\n    }\n    createDocumentFragment() {\n        return new DocumentFragment(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementById\n     * @return Element with matching id attribute.\n     */\n    getElementById(id) {\n        return matchChildElement(this.body, (element) => element.id === id);\n    }\n}\n//# sourceMappingURL=Document.js.map","import { store } from './strings';\nimport { transfer } from './MutationTransfer';\n/**\n * @param document\n * @param location\n * @param data\n */\nexport function createStorage(document, location, data) {\n    const storage = Object.assign(Object.create(null), data);\n    // Define properties on a prototype-less object instead of a class so that\n    // it behaves more like normal objects, e.g. bracket notation and JSON.stringify.\n    const define = Object.defineProperty;\n    define(storage, 'length', {\n        get() {\n            return Object.keys(this).length;\n        },\n    });\n    define(storage, 'key', {\n        value(n) {\n            const keys = Object.keys(this);\n            return n >= 0 && n < keys.length ? keys[n] : null;\n        },\n    });\n    define(storage, 'getItem', {\n        value(key) {\n            const value = this[key];\n            return value ? value : null;\n        },\n    });\n    define(storage, 'setItem', {\n        value(key, value) {\n            const stringValue = String(value);\n            this[key] = stringValue;\n            transfer(document, [12 /* TransferrableMutationType.STORAGE */, 2 /* GetOrSet.SET */, location, store(key) + 1, store(stringValue) + 1]);\n        },\n    });\n    define(storage, 'removeItem', {\n        value(key) {\n            delete this[key];\n            transfer(document, [\n                12 /* TransferrableMutationType.STORAGE */,\n                2 /* GetOrSet.SET */,\n                location,\n                store(key) + 1,\n                0, // value == 0 represents deletion.\n            ]);\n        },\n    });\n    define(storage, 'clear', {\n        value() {\n            Object.keys(this).forEach((key) => {\n                delete this[key];\n            });\n            transfer(document, [\n                12 /* TransferrableMutationType.STORAGE */,\n                2 /* GetOrSet.SET */,\n                location,\n                0,\n                0, // value == 0 represents deletion.\n            ]);\n        },\n    });\n    return storage;\n}\n//# sourceMappingURL=Storage.js.map","import { createStorage } from './Storage';\nexport function initializeStorage(document, localStorageInit, sessionStorageInit) {\n    const window = document.defaultView;\n    if (localStorageInit.storage) {\n        window.localStorage = createStorage(document, 0 /* StorageLocation.Local */, localStorageInit.storage);\n    }\n    else {\n        console.warn(localStorageInit.errorMsg);\n    }\n    if (sessionStorageInit.storage) {\n        window.sessionStorage = createStorage(document, 1 /* StorageLocation.Session */, sessionStorageInit.storage);\n    }\n    else {\n        console.warn(sessionStorageInit.errorMsg);\n    }\n}\n//# sourceMappingURL=initialize-storage.js.map","import { store as storeString } from './strings';\nimport { appendKeys as addCssKeys } from './css/CSSStyleDeclaration';\nimport { appendGlobalEventProperties } from './dom/HTMLElement';\nimport { initializeStorage } from './initialize-storage';\nexport function initialize(document, strings, hydrateableNode, cssKeys, globalEventHandlerKeys, [innerWidth, innerHeight], localStorageInit, sessionStorageInit) {\n    addCssKeys(cssKeys);\n    appendGlobalEventProperties(globalEventHandlerKeys);\n    strings.forEach(storeString);\n    (hydrateableNode[4 /* TransferrableKeys.childNodes */] || []).forEach((child) => document.body.appendChild(document[64 /* TransferrableKeys.hydrateNode */](strings, child)));\n    const window = document.defaultView;\n    window.innerWidth = innerWidth;\n    window.innerHeight = innerHeight;\n    initializeStorage(document, localStorageInit, sessionStorageInit);\n}\n//# sourceMappingURL=initialize.js.map","const frameDuration = 1000 / 60;\nlet last = 0;\nlet id = 0;\nlet queue = [];\n/**\n * Schedules the accumulated callbacks to be fired 16ms after the last round.\n */\nfunction scheduleNext() {\n    const now = Date.now();\n    const next = Math.round(Math.max(0, frameDuration - (Date.now() - last)));\n    last = now + next;\n    setTimeout(function () {\n        var cp = queue.slice(0);\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0;\n        for (var i = 0; i < cp.length; i++) {\n            if (cp[i].cancelled) {\n                continue;\n            }\n            try {\n                cp[i].callback(last);\n            }\n            catch (e) {\n                setTimeout(function () {\n                    throw e;\n                }, 0);\n            }\n        }\n    }, next);\n}\nexport function rafPolyfill(callback) {\n    if (queue.length === 0) {\n        scheduleNext();\n    }\n    if (id === Number.MAX_SAFE_INTEGER) {\n        id = 0;\n    }\n    queue.push({\n        handle: ++id,\n        callback,\n        cancelled: false,\n    });\n    return id;\n}\nexport function cafPolyfill(handle) {\n    for (let i = 0; i < queue.length; i++) {\n        if (queue[i].handle === handle) {\n            queue[i].cancelled = true;\n            return;\n        }\n    }\n}\n//# sourceMappingURL=AnimationFrame.js.map","import { Element, registerSubclass } from './Element';\nimport { SVG_NAMESPACE } from '../../transfer/TransferrableNodes';\nexport class SVGElement extends Element {\n    constructor(nodeType, localName, namespaceURI, ownerDocument) {\n        super(nodeType, localName, SVG_NAMESPACE, ownerDocument);\n        // Element uppercases its nodeName, but SVG elements don't.\n        this.nodeName = localName;\n    }\n}\nregisterSubclass('svg', SVGElement, SVG_NAMESPACE);\n//# sourceMappingURL=SVGElement.js.map","import { transfer } from './MutationTransfer';\nexport function wrap(target, func) {\n    return function () {\n        return execute(target, Promise.resolve(func.apply(null, arguments)));\n    };\n}\nfunction execute(target, promise) {\n    // Start the task.\n    transfer(target.ownerDocument, [6 /* TransferrableMutationType.LONG_TASK_START */, target[7 /* TransferrableKeys.index */]]);\n    return promise.then((result) => {\n        // Complete the task.\n        transfer(target.ownerDocument, [7 /* TransferrableMutationType.LONG_TASK_END */, target[7 /* TransferrableKeys.index */]]);\n        return result;\n    }, (reason) => {\n        // Complete the task.\n        transfer(target.ownerDocument, [7 /* TransferrableMutationType.LONG_TASK_END */, target[7 /* TransferrableKeys.index */]]);\n        throw reason;\n    });\n}\n//# sourceMappingURL=long-task.js.map","import { AMP } from './amp/amp';\nimport { callFunctionMessageHandler, exportFunction } from './function';\nimport { CharacterData } from './dom/CharacterData';\nimport { Comment } from './dom/Comment';\nimport { deleteGlobals } from './amp/delete-globals';\nimport { Document } from './dom/Document';\nimport { DocumentFragment } from './dom/DocumentFragment';\nimport { DOMTokenList } from './dom/DOMTokenList';\nimport { Element } from './dom/Element';\nimport { Event as WorkerDOMEvent } from './Event';\nimport { HTMLAnchorElement } from './dom/HTMLAnchorElement';\nimport { HTMLButtonElement } from './dom/HTMLButtonElement';\nimport { HTMLCanvasElement } from './dom/HTMLCanvasElement';\nimport { HTMLDataElement } from './dom/HTMLDataElement';\nimport { HTMLDataListElement } from './dom/HTMLDataListElement';\nimport { HTMLElement } from './dom/HTMLElement';\nimport { HTMLEmbedElement } from './dom/HTMLEmbedElement';\nimport { HTMLFieldSetElement } from './dom/HTMLFieldSetElement';\nimport { HTMLFormElement } from './dom/HTMLFormElement';\nimport { HTMLIFrameElement } from './dom/HTMLIFrameElement';\nimport { HTMLImageElement } from './dom/HTMLImageElement';\nimport { HTMLInputElement } from './dom/HTMLInputElement';\nimport { HTMLLabelElement } from './dom/HTMLLabelElement';\nimport { HTMLLinkElement } from './dom/HTMLLinkElement';\nimport { HTMLMapElement } from './dom/HTMLMapElement';\nimport { HTMLMeterElement } from './dom/HTMLMeterElement';\nimport { HTMLModElement } from './dom/HTMLModElement';\nimport { HTMLOListElement } from './dom/HTMLOListElement';\nimport { HTMLOptionElement } from './dom/HTMLOptionElement';\nimport { HTMLProgressElement } from './dom/HTMLProgressElement';\nimport { HTMLQuoteElement } from './dom/HTMLQuoteElement';\nimport { HTMLScriptElement } from './dom/HTMLScriptElement';\nimport { HTMLSelectElement } from './dom/HTMLSelectElement';\nimport { HTMLSourceElement } from './dom/HTMLSourceElement';\nimport { HTMLStyleElement } from './dom/HTMLStyleElement';\nimport { HTMLTableCellElement } from './dom/HTMLTableCellElement';\nimport { HTMLTableColElement } from './dom/HTMLTableColElement';\nimport { HTMLTableElement } from './dom/HTMLTableElement';\nimport { HTMLTableRowElement } from './dom/HTMLTableRowElement';\nimport { HTMLTableSectionElement } from './dom/HTMLTableSectionElement';\nimport { HTMLTimeElement } from './dom/HTMLTimeElement';\nimport { initialize } from './initialize';\nimport { MutationObserver } from './MutationObserver';\nimport { rafPolyfill, cafPolyfill } from './AnimationFrame';\nimport { SVGElement } from './dom/SVGElement';\nimport { Text } from './dom/Text';\nimport { wrap as longTaskWrap } from './long-task';\nconst globalScope = {\n    innerWidth: 0,\n    innerHeight: 0,\n    CharacterData,\n    Comment,\n    Document,\n    DocumentFragment,\n    DOMTokenList,\n    Element,\n    HTMLAnchorElement,\n    HTMLButtonElement,\n    HTMLCanvasElement,\n    HTMLDataElement,\n    HTMLDataListElement,\n    HTMLElement,\n    HTMLEmbedElement,\n    HTMLFieldSetElement,\n    HTMLFormElement,\n    HTMLIFrameElement,\n    HTMLImageElement,\n    HTMLInputElement,\n    HTMLLabelElement,\n    HTMLLinkElement,\n    HTMLMapElement,\n    HTMLMeterElement,\n    HTMLModElement,\n    HTMLOListElement,\n    HTMLOptionElement,\n    HTMLProgressElement,\n    HTMLQuoteElement,\n    HTMLScriptElement,\n    HTMLSelectElement,\n    HTMLSourceElement,\n    HTMLStyleElement,\n    HTMLTableCellElement,\n    HTMLTableColElement,\n    HTMLTableElement,\n    HTMLTableRowElement,\n    HTMLTableSectionElement,\n    HTMLTimeElement,\n    SVGElement,\n    Text,\n    Event: WorkerDOMEvent,\n    MutationObserver,\n    requestAnimationFrame: self.requestAnimationFrame || rafPolyfill,\n    cancelAnimationFrame: self.cancelAnimationFrame || cafPolyfill,\n};\nconst noop = () => void 0;\n// WorkerDOM.Document.defaultView ends up being the window object.\n// React requires the classes to exist off the window object for instanceof checks.\nexport const workerDOM = (function (postMessage, addEventListener, removeEventListener) {\n    const document = new Document(globalScope);\n    // TODO(choumx): Avoid polluting Document's public API.\n    document.postMessage = postMessage;\n    document.addGlobalEventListener = addEventListener;\n    document.removeGlobalEventListener = removeEventListener;\n    document.isConnected = true;\n    document.appendChild((document.body = document.createElement('body')));\n    // TODO(choumx): Remove once defaultView contains all native worker globals.\n    // Canvas's use of native OffscreenCanvas checks the existence of the property\n    // on the WorkerDOMGlobalScope.\n    globalScope.OffscreenCanvas = self['OffscreenCanvas'];\n    globalScope.ImageBitmap = self['ImageBitmap'];\n    return document.defaultView;\n})(postMessage.bind(self) || noop, addEventListener.bind(self) || noop, removeEventListener.bind(self) || noop);\n// Modify global scope by removing disallowed properties and wrapping `fetch()`.\n(function (global) {\n    deleteGlobals(global);\n    // Wrap global.fetch() with our longTask API.\n    const originalFetch = global['fetch'];\n    if (originalFetch) {\n        try {\n            Object.defineProperty(global, 'fetch', {\n                enumerable: true,\n                writable: true,\n                configurable: true,\n                value: longTaskWrap(workerDOM.document, originalFetch.bind(global)),\n            });\n        }\n        catch (e) {\n            console.warn(e);\n        }\n    }\n})(self);\n// Offer APIs like AMP.setState() on the global scope.\nself.AMP = new AMP(workerDOM.document);\n// Allows for function invocation\nself.exportFunction = exportFunction;\naddEventListener('message', (evt) => callFunctionMessageHandler(evt, workerDOM.document));\nexport const hydrate = initialize;\n//# sourceMappingURL=index.amp.js.map"],"names":["count","transfer","mapping","Map","store","value","has","get","set","push","phase","newPhase","storeOverride","node","override","Math","max","undefined","index","pending","pendingMutations","document","mutation","concat","Promise","resolve","then","_","nodes","Uint16Array","consumeNodes","reduce","acc","buffer","mutations","postMessage","_defineProperty","AMP","_classCallCheck","_createClass","key","getState","_this","arguments","length","messageHandler","event","message","data","storageMessage","removeGlobalEventListener","addGlobalEventListener","setTimeout","setState","state","stringified","JSON","stringify","e","Error","exportedFunctions","callFunctionMessageHandler","msg","functionMessage","fnIdentifier","fnArguments","parse","fn","f","apply","err","errorMessage","exportFunction","name","_typeof","toLower","toLowerCase","toUpper","toUpperCase","containsIndexOf","pos","keyValueString","observers","matchesIndex","observerTarget","target","pushMutation","observer","record","pushRecord","forEach","callback","takeRecords","mutate","transferable","t","parentNode","MutationObserver","options","observe","disconnect","indexOf","splice","records","propagate","property","childNodes","child","Node","nodeType","nodeName","ownerDocument","overrideIndex","isConnected","storeOverrideNodeMapping","storeNodeMapping","getTextContent","textContent","childNode","parentChildNodes","hasChildNodes","contains","otherNode","includes","some","insertBefore","referenceNode","slice","appendChild","remove","addedNodes","nextSibling","type","previousSibling","removeChild","exists","removedNodes","replaceChild","newChild","oldChild","replaceWith","parent","_len","Array","_key","nodeIterator","currentNode","createTextNode","getPreviousElementSibling","parentNodes","i","getNextElementSibling","CharacterData","_Node","_inherits","_super","_createSuper","call","storeString","oldValue","Comment","_CharacterData","nodeValue","cloneNode","createComment","ALLOWLISTED_GLOBALS","ArrayBuffer","BigInt","BigInt64Array","BigUint64Array","Boolean","Cache","CustomEvent","DataView","Date","EvalError","Event","EventTarget","Float32Array","Float64Array","Function","Infinity","Int16Array","Int32Array","Int8Array","Intl","NaN","Number","Object","Proxy","RangeError","ReferenceError","Reflect","RegExp","Set","String","Symbol","SyntaxError","TextDecoder","TextEncoder","TypeError","URIError","URL","Uint32Array","Uint8Array","Uint8ClampedArray","WeakMap","WeakSet","WebAssembly","WebSocket","XMLHttpRequest","atob","addEventListener","removeEventListener","btoa","caches","clearInterval","clearTimeout","console","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","escape","fetch","indexedDB","isFinite","isNaN","location","navigator","onerror","onrejectionhandled","onunhandledrejection","parseFloat","parseInt","performance","requestAnimationFrame","cancelAnimationFrame","self","setInterval","unescape","deleteGlobals","global","deleteUnsafe","object","hasOwnProperty","current","_loop","deleted","failedToDelete","getOwnPropertyNames","prop","info","getPrototypeOf","constructor","tagNameConditionPredicate","tagNames","element","tagName","elementPredicate","matchChildrenElements","conditionPredicate","matchingElements","_toConsumableArray","matchChildElement","returnValue","children","grandChildMatch","matchNearestParent","matchAttrReference","attrSelector","equalPos","selectorLength","caseInsensitive","charAt","endPos","equalSuffix","possibleSuffixes","attrString","substring","rawValue","rawAttrValue","getAttribute","casedValue","casedAttrValue","split","startsWith","endsWith","hasAttribute","ParentNode","filter","find","querySelector","selector","matches","querySelectorAll","selectorBracketIndexes","selectorHasAttr","elementSelector","matcher","id","substr","classList","localName","WHITESPACE_REGEX","synchronizedAccessor","defineOn","accessorKey","propertyName","defineProperty","prototype","enumerable","configurable","DOMTokenList","attributeName","bind","join","collection","_this$","newValue","trim","item","token","add","_this$2","tokens","from","_this$3","_len2","_key2","replace","newToken","_this$4","delete","toggle","force","test","namespaceURI","toString","attributes","map","attr","matchPredicate","hyphenateKey","appendKeys","keys","keysToAppend","CSSStyleDeclaration","previousPrototypeLength","writable","hyphenatedKey","defineProperties","getPropertyValue","setProperty","removeProperty","mutated","cssText","stringValue","values","reflectProperties","properties","pair","_pair$property","defaultValue","_pair$property$","keywords","isBooleanAttribute","attributeValue","castableValue","setAttribute","removeAttribute","HTML_NAMESPACE","SVG_NAMESPACE","arr_back","arr","kMarkupPattern","kAttributePattern","kSelfClosingElements","AREA","BASE","BR","COL","HR","IMG","INPUT","LINK","META","PARAM","SOURCE","TRACK","WBR","kElementsClosedByOpening","LI","DT","DD","P","ADDRESS","ARTICLE","ASIDE","BLOCKQUOTE","DETAILS","DIV","DL","FIELDSET","FIGCAPTION","FIGURE","FOOTER","FORM","H1","H2","H3","H4","H5","H6","HEADER","MAIN","NAV","OL","PRE","SECTION","TABLE","UL","RT","RP","OPTGROUP","OPTION","THEAD","TBODY","TFOOT","TR","TD","TH","kElementsClosedByClosing","A","B","I","kBlockTextElements","SCRIPT","NOSCRIPT","STYLE","rootElement","root","createElementNS","currentParent","currentNamespace","stack","lastTextPos","match","tagsClosed","exec","commentContents","beginningSlash","matchAttributes","endSlash","text","decodeEntities","lastIndex","normalizedTagName","pop","childToAppend","attMatch","attrName","attrValue","closeMarkup","_i","_stack","valid","wrapper","firstChild","RESERVED_CHARACTERS","__proto__","amp","lt","gt","quot","html","s","numericEntity","namedEntity","code","fromCodePoint","opts","bubbles","cancelable","cancelBubble","currentTarget","defaultPrevented","eventPhase","isTrusted","timeStamp","scoped","pageX","pageY","offsetX","offsetY","touches","changedTouches","stopPropagation","stopImmediatePropagation","preventDefault","initEvent","targetFromTransfer","touchListFromTransfer","touchListKeys","list","touchListKey","numericKey","transferredTouch","identifier","screenX","screenY","clientX","clientY","_ref","dispatchEvent","assign","keyCode","NS_NAME_TO_CLASS","registerSubclass","subclass","namespace","definePropertyBackedAttributes","sub","create","ElementKind","VOID_ELEMENTS","Element","_ParentNode","_classList","style_","kind","VOID","NORMAL","tag","start","attrsToString","contents","innerHTML","outerHTML","_this2","n","setAttributeNS","getAttributeNS","removeAttributeNS","hasAttributeNS","hasAttributes","valueAsString","propertyBacked","matchAttrPredicate","attributeNamespace","findIndex","getElementsByClassName","names","inputClassList","inputClassName","getElementsByTagName","lowerTagName","getElementsByName","stringName","deep","clone","getBoundingClientRectAsync","_this3","left","top","right","bottom","x","y","width","height","transferredBoundingClientRect","click","scrollIntoView","class","el","style","appendGlobalEventProperties","HTMLElement","normalizedKey","stored","_Element","args","accessKey","contentEditable","dir","lang","title","draggable","hidden","noModule","spellcheck","translate","HTMLAnchorElement","_HTMLElement","_relList","href","rel","relList","hreflang","media","HTMLButtonElement","formAction","formEnctype","formMethod","formTarget","autofocus","disabled","f32","u16","isSmallInt","num","serializeTransferrableObject","serialized","arg","isArray","serializedArray","serializedObject","CanvasGradient","addColorStop","offset","color","CanvasPattern","setTransform","OffscreenCanvasPolyfill","canvas","context","getContext","contextType","OffscreenCanvasRenderingContext2DPolyfill","canvasElement","lineDash","objectIndex","fnName","createObjectReference","objectId","creationMethod","creationArgs","clearRect","w","h","fillRect","strokeRect","roundRect","radii","fillText","maxWidth","moveTo","lineTo","closePath","stroke","restore","save","resetTransform","rotate","angle","transform","a","b","c","d","scale","beginPath","strokeText","arc","radius","startAngle","endAngle","anticlockwise","arcTo","x1","y1","x2","y2","ellipse","radiusX","radiusY","rotation","bezierCurveTo","cp1x","cp1y","cp2x","cp2y","rect","quadraticCurveTo","cpx","cpy","setLineDash","getLineDash","clip","pathOrFillRule","fillRule","fill","transformOrA","bOrC","cOrD","dOrE","eOrF","createLinearGradient","x0","y0","gradientId","createRadialGradient","r0","r1","createPattern","image","repetition","patternId","drawImage","dx","dy","createImageData","getImageData","putImageData","isPointInPath","isPointInStroke","measureText","indexTracker","retrieveImageBitmap","callIndex","transferredImageBitmap","FakeNativeCanvasPattern","instance","pattern","deferredUpgrades","CanvasRenderingContext2DShim","queue","implementation","upgraded","polyfillUsed","unresolvedCalls","goodImplementation","OffscreenCanvas","defaultView","getOffscreenCanvasAsync","deferred","isTestMode","upgradePromise","transferredOffscreenCanvas","maybeUpgradeImplementation","degradeImplementation","flushQueue","_iterator","_createForOfIteratorHelper","_step","done","isSetter","delegateFunc","_this$implementation","delegateSetter","delegateGetter","segments","_this4","ImageBitmap","fakePattern","_this5","antiClockwise","path","pathOrX","xOrY","yOrFillRule","imagedataOrWidth","sx","sy","sw","sh","imageData","dirtyX","dirtyY","dirtyWidth","dirtyHeight","HTMLCanvasElement","HTMLDataElement","HTMLDataListElement","HTMLEmbedElement","src","MATCHING_CHILD_ELEMENT_TAGNAMES","HTMLFormControlsCollectionMixin","HTMLFieldSetElement","HTMLFormElement","elements","method","action","enctype","acceptCharset","autocomplete","autocapitalize","HTMLIFrameElement","_sandbox","sandbox","allow","allowFullscreen","csp","referrerPolicy","srcdoc","HTMLImageElement","alt","crossOrigin","isMap","sizes","srcset","useMap","HTMLInputLabelsMixin","for","HTMLInputElement","dirtyValue","date","stringToDate","invalid","getTime","dateToString","getFullYear","m","getMonth","getDate","str","components","_components","_slicedToArray","accept","defaultChecked","dirName","formEncType","maxLength","min","multiple","placeholder","readOnly","required","size","step","HTMLLabelElement","htmlFor","getElementById","HTMLLinkElement","as","HTMLMapElement","HTMLMeterElement","high","low","optimum","HTMLModElement","cite","datetime","HTMLOListElement","reversed","HTMLOptionElement","label","selected","defaultSelected","HTMLProgressElement","HTMLQuoteElement","HTMLScriptElement","charset","async","defer","isOptionPredicate","isSelectedOptionPredicate","HTMLSelectElement","_get","_getPrototypeOf","firstSelectedChild","selectedIndex","HTMLSourceElement","HTMLStyleElement","HTMLTableCellElement","_headers","headers","abbr","colSpan","rowSpan","scope","HTMLTableColElement","span","removeElement","insertBeforeElementsWithTagName","insertBeforeElement","HTMLTableElement","newElement","caption","firstElementChild","tHead","tFoot","TABLE_SECTION_TAGNAMES","indexInAncestor","isValidAncestor","rows","HTMLTableRowElement","deleteCell","cell","cells","insertCell","td","createElement","HTMLTableSectionElement","deleteRow","insertRow","tr","HTMLTimeElement","dateTime","Text","splitText","remainderTextNode","insertBeforePosition","insertBeforeNode","DocumentFragment","createDocumentFragment","sync","innerWidth","innerHeight","DOCUMENT_NAME","Document","documentElement","body","_assertThisInitialized","setPhase","propagateEvents","propagateSyncValues","propagateResize","strings","skeleton","attribute","createEvent","createStorage","storage","define","initializeStorage","localStorageInit","sessionStorageInit","window","localStorage","warn","errorMsg","sessionStorage","initialize","hydrateableNode","cssKeys","globalEventHandlerKeys","_ref2","addCssKeys","frameDuration","last","scheduleNext","now","next","round","cp","cancelled","rafPolyfill","MAX_SAFE_INTEGER","handle","cafPolyfill","SVGElement","wrap","func","execute","promise","result","reason","globalScope","WorkerDOMEvent","noop","workerDOM","originalFetch","longTaskWrap","evt","hydrate"],"mappings":"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"}