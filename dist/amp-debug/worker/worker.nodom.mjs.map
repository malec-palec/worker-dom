{"version":3,"file":"worker.nodom.mjs","sources":["../../../output/worker-thread/strings.js","../../../output/worker-thread/phase.js","../../../output/worker-thread/nodes.js","../../../output/worker-thread/MutationTransfer.js","../../../output/worker-thread/amp/amp.js","../../../output/worker-thread/function.js","../../../output/worker-thread/dom/DocumentStub.js","../../../output/worker-thread/amp/delete-globals.js","../../../output/worker-thread/Storage.js","../../../output/worker-thread/initialize-storage.js","../../../output/worker-thread/index.nodom.amp.js"],"sourcesContent":["let count = 0;\nlet transfer = [];\nconst mapping = new Map();\n/**\n * Stores a string in mapping and returns the index of the location.\n * @param value string to store\n * @return location in map\n */\nexport function store(value) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (mapping.has(value)) {\n        // Safe to cast since we verified the mapping contains the value\n        return mapping.get(value);\n    }\n    mapping.set(value, count);\n    transfer.push(value);\n    return count++;\n}\n/**\n * Retrieve the index for a string (mostly used for tests).\n * @param value string value we need to know the index of\n * @returns index in the map for the string\n */\nexport function getForTesting(value) {\n    return mapping.get(value);\n}\nexport function getForTestingPartial(value) {\n    const found = Array.from(mapping.keys()).find((str) => str.includes(value));\n    if (found) {\n        return mapping.get(found);\n    }\n}\n/**\n * Returns strings registered but not yet transferred.\n * Side effect: Resets the transfer array to default value, to prevent passing the same values multiple times.\n */\nexport function consume() {\n    const strings = transfer;\n    transfer = [];\n    return strings;\n}\n//# sourceMappingURL=strings.js.map","export let phase = 0 /* Phase.Initializing */;\nexport const set = (newPhase) => (phase = newPhase);\n//# sourceMappingURL=phase.js.map","import { phase } from './phase';\nlet count = 0;\nlet transfer = [];\nconst mapping = new Map();\n/**\n * Override the store for a node during the initialization phase.\n * @param node Node to store and modify with index\n * @param override Override number to use as the identifier.\n *\n * NOTE: THIS IS ONLY TO BE USED DURING INITIALIZATION.\n */\nexport function storeOverride(node, override) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (phase === 0 /* Phase.Initializing */) {\n        mapping.set((node[7 /* TransferrableKeys.index */] = override), node);\n        count = Math.max(count, override);\n    }\n    return override;\n}\n/**\n * Stores a node in mapping, and makes the index available on the Node directly.\n * @param node Node to store and modify with index\n * @return index Node was stored with in mapping\n */\nexport function store(node) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (node[7 /* TransferrableKeys.index */] !== undefined) {\n        return node[7 /* TransferrableKeys.index */];\n    }\n    mapping.set((node[7 /* TransferrableKeys.index */] = ++count), node);\n    if (phase > 0 /* Phase.Initializing */) {\n        // After Initialization, include all future dom node creation into the list for next transfer.\n        transfer.push(node);\n    }\n    return count;\n}\n/**\n * Retrieves a node based on an index.\n * @param index location in map to retrieve a Node for\n * @return either the Node represented in index position, or null if not available.\n */\nexport function get(index) {\n    // mapping has a 1 based index, since on first store we ++count before storing.\n    return (!!index && mapping.get(index)) || null;\n}\n/**\n * Returns nodes registered but not yet transferred.\n * Side effect: Resets the transfer array to default value, to prevent passing the same values multiple times.\n */\nexport function consume() {\n    const copy = transfer;\n    transfer = [];\n    return copy;\n}\n//# sourceMappingURL=nodes.js.map","import { consume as consumeNodes } from './nodes';\nimport { consume as consumeStrings } from './strings';\nimport { phase, set as setPhase } from './phase';\nlet pending = false;\nlet pendingMutations = [];\n// TODO(choumx): Change `mutation` to Array<Uint16> to prevent casting errors e.g. integer underflow, precision loss.\nexport function transfer(document, mutation) {\n    if (process.env.SERVER) {\n        return;\n    }\n    if (phase > 0 /* Phase.Initializing */ && document[58 /* TransferrableKeys.allowTransfer */]) {\n        pending = true;\n        pendingMutations = pendingMutations.concat(mutation);\n        Promise.resolve().then((_) => {\n            if (pending) {\n                const nodes = new Uint16Array(consumeNodes().reduce((acc, node) => acc.concat(node[8 /* TransferrableKeys.creationFormat */]), [])).buffer;\n                const mutations = new Uint16Array(pendingMutations).buffer;\n                document.postMessage({\n                    [54 /* TransferrableKeys.phase */]: phase,\n                    [12 /* TransferrableKeys.type */]: phase === 2 /* Phase.Mutating */ ? 3 /* MessageType.MUTATE */ : 2 /* MessageType.HYDRATE */,\n                    [37 /* TransferrableKeys.nodes */]: nodes,\n                    [41 /* TransferrableKeys.strings */]: consumeStrings(),\n                    [36 /* TransferrableKeys.mutations */]: mutations,\n                }, [nodes, mutations]);\n                pendingMutations = [];\n                pending = false;\n                setPhase(2 /* Phase.Mutating */);\n            }\n        });\n    }\n}\n//# sourceMappingURL=MutationTransfer.js.map","import { store } from '../strings';\nimport { transfer } from '../MutationTransfer';\nexport class AMP {\n    document;\n    constructor(document) {\n        this.document = document;\n    }\n    /**\n     * Returns a promise that resolves with the value of `key`.\n     * @param key\n     */\n    getState(key = '') {\n        return new Promise((resolve) => {\n            const messageHandler = (event) => {\n                const message = event.data;\n                if (message[12 /* TransferrableKeys.type */] !== 11 /* MessageType.GET_STORAGE */) {\n                    return;\n                }\n                // TODO: There is a race condition here if there are multiple concurrent\n                // getState(k) messages in flight, where k is the same value.\n                const storageMessage = message;\n                if (storageMessage[74 /* TransferrableKeys.storageKey */] !== key) {\n                    return;\n                }\n                this.document.removeGlobalEventListener('message', messageHandler);\n                const value = storageMessage[21 /* TransferrableKeys.value */];\n                resolve(value);\n            };\n            this.document.addGlobalEventListener('message', messageHandler);\n            transfer(this.document, [12 /* TransferrableMutationType.STORAGE */, 1 /* GetOrSet.GET */, 2 /* StorageLocation.AmpState */, /* key */ store(key) + 1, /* value */ 0]);\n            setTimeout(resolve, 500, null); // TODO: Why a magical constant, define and explain.\n        });\n    }\n    /**\n     * Deep-merges `state` into the existing state.\n     * @param state\n     */\n    setState(state) {\n        // Stringify `state` so it can be post-messaged as a transferrable.\n        let stringified;\n        try {\n            stringified = JSON.stringify(state);\n        }\n        catch (e) {\n            throw new Error(`AMP.setState only accepts valid JSON as input.`);\n        }\n        transfer(this.document, [12 /* TransferrableMutationType.STORAGE */, 2 /* GetOrSet.SET */, 2 /* StorageLocation.AmpState */, /* key */ 0, /* value */ store(stringified) + 1]);\n    }\n}\n//# sourceMappingURL=amp.js.map","import { transfer } from './MutationTransfer';\nimport { store } from './strings';\nconst exportedFunctions = {};\nexport function callFunctionMessageHandler(event, document) {\n    const msg = event.data;\n    if (msg[12 /* TransferrableKeys.type */] !== 12 /* MessageType.FUNCTION */) {\n        return;\n    }\n    const functionMessage = msg;\n    const fnIdentifier = functionMessage[77 /* TransferrableKeys.functionIdentifier */];\n    const fnArguments = JSON.parse(functionMessage[78 /* TransferrableKeys.functionArguments */]);\n    const index = functionMessage[7 /* TransferrableKeys.index */];\n    const fn = exportedFunctions[fnIdentifier];\n    if (!fn) {\n        transfer(document, [\n            13 /* TransferrableMutationType.FUNCTION_CALL */,\n            2 /* ResolveOrReject.REJECT */,\n            index,\n            store(JSON.stringify(`[worker-dom]: Exported function \"${fnIdentifier}\" could not be found.`)),\n        ]);\n        return;\n    }\n    Promise.resolve(fn) // Forcing promise flows allows us to skip a try/catch block.\n        .then((f) => f.apply(null, fnArguments))\n        .then((value) => {\n        transfer(document, [13 /* TransferrableMutationType.FUNCTION_CALL */, 1 /* ResolveOrReject.RESOLVE */, index, store(JSON.stringify(value))]);\n    }, (err) => {\n        const errorMessage = JSON.stringify(err.message || err);\n        transfer(document, [\n            13 /* TransferrableMutationType.FUNCTION_CALL */,\n            2 /* ResolveOrReject.REJECT */,\n            index,\n            store(JSON.stringify(`[worker-dom]: Function \"${fnIdentifier}\" threw: \"${errorMessage}\"`)),\n        ]);\n    });\n}\nexport function exportFunction(name, fn) {\n    if (!name || name === '') {\n        throw new Error(`[worker-dom]: Attempt to export function was missing an identifier.`);\n    }\n    if (typeof fn !== 'function') {\n        throw new Error(`[worker-dom]: Attempt to export non-function failed: (\"${name}\", ${typeof fn}).`);\n    }\n    if (name in exportedFunctions) {\n        throw new Error(`[worker-dom]: Attempt to re-export function failed: \"${name}\".`);\n    }\n    exportedFunctions[name] = fn;\n}\nexport function resetForTesting() {\n    for (const key of Object.keys(exportedFunctions)) {\n        delete exportedFunctions[key];\n    }\n}\n//# sourceMappingURL=function.js.map","import { set as setPhase } from '../phase';\n/**\n * A lightweight Document stub for the no-dom amp binary.\n */\nexport class DocumentStub {\n    // Internal variables.\n    defaultView;\n    postMessage;\n    addGlobalEventListener;\n    removeGlobalEventListener;\n    [58 /* TransferrableKeys.allowTransfer */] = true;\n    [7 /* TransferrableKeys.index */] = -1;\n    constructor() {\n        this.defaultView = { document: this };\n    }\n    [59 /* TransferrableKeys.observe */]() {\n        setPhase(2 /* Phase.Mutating */);\n    }\n}\n//# sourceMappingURL=DocumentStub.js.map","const ALLOWLISTED_GLOBALS = {\n    Array: true,\n    ArrayBuffer: true,\n    BigInt: true,\n    BigInt64Array: true,\n    BigUint64Array: true,\n    Boolean: true,\n    Cache: true,\n    CustomEvent: true,\n    DataView: true,\n    Date: true,\n    Error: true,\n    EvalError: true,\n    Event: true,\n    EventTarget: true,\n    Float32Array: true,\n    Float64Array: true,\n    Function: true,\n    Infinity: true,\n    Int16Array: true,\n    Int32Array: true,\n    Int8Array: true,\n    Intl: true,\n    JSON: true,\n    Map: true,\n    Math: true,\n    NaN: true,\n    Number: true,\n    Object: true,\n    Promise: true,\n    Proxy: true,\n    RangeError: true,\n    ReferenceError: true,\n    Reflect: true,\n    RegExp: true,\n    Set: true,\n    String: true,\n    Symbol: true,\n    SyntaxError: true,\n    TextDecoder: true,\n    TextEncoder: true,\n    TypeError: true,\n    URIError: true,\n    URL: true,\n    Uint16Array: true,\n    Uint32Array: true,\n    Uint8Array: true,\n    Uint8ClampedArray: true,\n    WeakMap: true,\n    WeakSet: true,\n    WebAssembly: true,\n    WebSocket: true,\n    XMLHttpRequest: true,\n    atob: true,\n    addEventListener: true,\n    removeEventListener: true,\n    btoa: true,\n    caches: true,\n    clearInterval: true,\n    clearTimeout: true,\n    console: true,\n    decodeURI: true,\n    decodeURIComponent: true,\n    document: true,\n    encodeURI: true,\n    encodeURIComponent: true,\n    escape: true,\n    fetch: true,\n    indexedDB: true,\n    isFinite: true,\n    isNaN: true,\n    location: true,\n    navigator: true,\n    onerror: true,\n    onrejectionhandled: true,\n    onunhandledrejection: true,\n    parseFloat: true,\n    parseInt: true,\n    performance: true,\n    requestAnimationFrame: true,\n    cancelAnimationFrame: true,\n    self: true,\n    setTimeout: true,\n    setInterval: true,\n    unescape: true,\n};\n// Modify global scope by removing disallowed properties.\nexport function deleteGlobals(global) {\n    /**\n     * @param object\n     * @param property\n     * @return True if property was deleted from object. Otherwise, false.\n     */\n    const deleteUnsafe = (object, property) => {\n        if (!ALLOWLISTED_GLOBALS.hasOwnProperty(property)) {\n            try {\n                delete object[property];\n                return true;\n            }\n            catch (e) { }\n        }\n        return false;\n    };\n    // Walk up global's prototype chain and dereference non-allowlisted properties\n    // until EventTarget is reached.\n    let current = global;\n    while (current && current.constructor !== EventTarget) {\n        const deleted = [];\n        const failedToDelete = [];\n        Object.getOwnPropertyNames(current).forEach((prop) => {\n            if (deleteUnsafe(current, prop)) {\n                deleted.push(prop);\n            }\n            else {\n                failedToDelete.push(prop);\n            }\n        });\n        console.info(`Removed ${deleted.length} references from`, current, ':', deleted);\n        if (failedToDelete.length) {\n            console.info(`Failed to remove ${failedToDelete.length} references from`, current, ':', failedToDelete);\n        }\n        current = Object.getPrototypeOf(current);\n    }\n}\n//# sourceMappingURL=delete-globals.js.map","import { store } from './strings';\nimport { transfer } from './MutationTransfer';\n/**\n * @param document\n * @param location\n * @param data\n */\nexport function createStorage(document, location, data) {\n    const storage = Object.assign(Object.create(null), data);\n    // Define properties on a prototype-less object instead of a class so that\n    // it behaves more like normal objects, e.g. bracket notation and JSON.stringify.\n    const define = Object.defineProperty;\n    define(storage, 'length', {\n        get() {\n            return Object.keys(this).length;\n        },\n    });\n    define(storage, 'key', {\n        value(n) {\n            const keys = Object.keys(this);\n            return n >= 0 && n < keys.length ? keys[n] : null;\n        },\n    });\n    define(storage, 'getItem', {\n        value(key) {\n            const value = this[key];\n            return value ? value : null;\n        },\n    });\n    define(storage, 'setItem', {\n        value(key, value) {\n            const stringValue = String(value);\n            this[key] = stringValue;\n            transfer(document, [12 /* TransferrableMutationType.STORAGE */, 2 /* GetOrSet.SET */, location, store(key) + 1, store(stringValue) + 1]);\n        },\n    });\n    define(storage, 'removeItem', {\n        value(key) {\n            delete this[key];\n            transfer(document, [\n                12 /* TransferrableMutationType.STORAGE */,\n                2 /* GetOrSet.SET */,\n                location,\n                store(key) + 1,\n                0, // value == 0 represents deletion.\n            ]);\n        },\n    });\n    define(storage, 'clear', {\n        value() {\n            Object.keys(this).forEach((key) => {\n                delete this[key];\n            });\n            transfer(document, [\n                12 /* TransferrableMutationType.STORAGE */,\n                2 /* GetOrSet.SET */,\n                location,\n                0,\n                0, // value == 0 represents deletion.\n            ]);\n        },\n    });\n    return storage;\n}\n//# sourceMappingURL=Storage.js.map","import { createStorage } from './Storage';\nexport function initializeStorage(document, localStorageInit, sessionStorageInit) {\n    const window = document.defaultView;\n    if (localStorageInit.storage) {\n        window.localStorage = createStorage(document, 0 /* StorageLocation.Local */, localStorageInit.storage);\n    }\n    else {\n        console.warn(localStorageInit.errorMsg);\n    }\n    if (sessionStorageInit.storage) {\n        window.sessionStorage = createStorage(document, 1 /* StorageLocation.Session */, sessionStorageInit.storage);\n    }\n    else {\n        console.warn(sessionStorageInit.errorMsg);\n    }\n}\n//# sourceMappingURL=initialize-storage.js.map","import { AMP } from './amp/amp';\nimport { callFunctionMessageHandler, exportFunction } from './function';\nimport { DocumentStub } from './dom/DocumentStub';\nimport { deleteGlobals } from './amp/delete-globals';\nimport { initializeStorage } from './initialize-storage';\nconst noop = () => void 0;\nexport const workerDOM = (function (postMessage, addEventListener, removeEventListener) {\n    const document = new DocumentStub();\n    // TODO(choumx): Avoid polluting Document's public API.\n    document.postMessage = postMessage;\n    document.addGlobalEventListener = addEventListener;\n    document.removeGlobalEventListener = removeEventListener;\n    return document.defaultView;\n})(postMessage.bind(self) || noop, addEventListener.bind(self) || noop, removeEventListener.bind(self) || noop);\n// Modify global scope by removing disallowed properties.\ndeleteGlobals(self);\n// Offer APIs like AMP.setState() on the global scope.\nself.AMP = new AMP(workerDOM.document);\n// Allows for function invocation\nself.exportFunction = exportFunction;\naddEventListener('message', (evt) => callFunctionMessageHandler(evt, workerDOM.document));\nexport const hydrate = (document, strings, hydrateableNode, cssKeys, globalEventHandlerKeys, size, localStorageInit, sessionStorageInit) => {\n    initializeStorage(document, localStorageInit, sessionStorageInit);\n};\n//# sourceMappingURL=index.nodom.amp.js.map"],"names":["count","transfer","mapping","Map","store","value","has","get","set","push","phase","newPhase","pending","pendingMutations","document","mutation","concat","Promise","resolve","then","_","nodes","Uint16Array","consumeNodes","reduce","acc","node","buffer","mutations","postMessage","AMP","constructor","getState","key","messageHandler","event","message","data","storageMessage","removeGlobalEventListener","addGlobalEventListener","setTimeout","setState","state","stringified","JSON","stringify","e","Error","exportedFunctions","callFunctionMessageHandler","msg","functionMessage","fnIdentifier","fnArguments","parse","index","fn","f","apply","err","errorMessage","exportFunction","name","DocumentStub","defaultView","setPhase","ALLOWLISTED_GLOBALS","Array","ArrayBuffer","BigInt","BigInt64Array","BigUint64Array","Boolean","Cache","CustomEvent","DataView","Date","EvalError","Event","EventTarget","Float32Array","Float64Array","Function","Infinity","Int16Array","Int32Array","Int8Array","Intl","Math","NaN","Number","Object","Proxy","RangeError","ReferenceError","Reflect","RegExp","Set","String","Symbol","SyntaxError","TextDecoder","TextEncoder","TypeError","URIError","URL","Uint32Array","Uint8Array","Uint8ClampedArray","WeakMap","WeakSet","WebAssembly","WebSocket","XMLHttpRequest","atob","addEventListener","removeEventListener","btoa","caches","clearInterval","clearTimeout","console","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","escape","fetch","indexedDB","isFinite","isNaN","location","navigator","onerror","onrejectionhandled","onunhandledrejection","parseFloat","parseInt","performance","requestAnimationFrame","cancelAnimationFrame","self","setInterval","unescape","deleteGlobals","global","deleteUnsafe","object","property","hasOwnProperty","current","deleted","failedToDelete","getOwnPropertyNames","forEach","prop","info","length","getPrototypeOf","createStorage","storage","assign","create","define","defineProperty","keys","n","stringValue","initializeStorage","localStorageInit","sessionStorageInit","window","localStorage","warn","errorMsg","sessionStorage","noop","workerDOM","bind","evt","hydrate","strings","hydrateableNode","cssKeys","globalEventHandlerKeys","size"],"mappings":";;;IAAA,IAAIA,KAAK,GAAK,CAAA,CAAA;IACd,IAAIC,UAAQ,GAAM,EAAA,CAAA;IAClB,MAAMC,OAAO,GAAa,IAAAC,GAAA,EAAA,CAAA;IAE1B;;;;;IAKM,SAAUC,KAAKA,CAACC,KAAa,EAAA;IAMjC,EAAA,IAAIH,OAAO,CAACI,GAAG,CAACD,KAAK,CAAC,EAAE;IACtB;IACA,IAAA,OAAOH,OAAO,CAACK,GAAG,CAACF,KAAK,CAAE,CAAA;;IAG7BH,EAAAA,OAAA,CAAAM,GAAA,CAAAH,KAAA,EAAAL,KAAA,CAAA,CAAA;IACCC,EAAAA,UAAC,CAAAQ,IAAA,CAAAJ,KAAA,CAAA,CAAA;IACD,EAAA,OAAOL,KAAK,EAAE,CAAA;IAChB,CAAA;IAkBA;;;;;;;;;;ICvCO,IAAIU,KAAK,GAAA,CAAA,0BAAA;IACT,MAAMF,GAAG,GAAIG,QAAe,IAAMD,KAAK,GAAGC,QAAS;;ICG1D,IAAIV,UAAQ,GAAgB,EAAE,CAAA;;;;;;;;;;;ICI9B,IAAIW,OAAO,GAAG,KAAK,CAAA;IACnB,IAAIC,gBAAgB,GAAG,EAAA,CAAA;IAEvB;IACM,SAAUZ,QAAQA,CAACa,QAAC,EAAAC,QAAA,EAAA;IAKxB,EAAA,IAAIL,KAAK,GAAA,CAAA,6BAAyBI,QAAQ,CAAA,EAAA,uCAAiC,EAAE;IAC3EF,IAAAA,OAAO,GAAG,IAAI,CAAA;IACdC,IAAAA,gBAAgB,GAAGA,gBAAgB,CAACG,MAAM,CAACD,QAAQ,CAAC,CAAA;IAEpDE,IAAAA,OAAO,CAACC,OAAO,EAAE,CAACC,IAAI,CAAEC,CAAC,IAAI;IAC3B,MAAA,IAAIR,OAAO,EAAE;YACX,MAAMS,KAAK,GAAG,IAAIC,WAAM,CACtBC,OAAY,EAAE,CAACC,MAAM,CAAC,CAACC,GAAgB,EAAAC,IAAA,KAAAD,GAAA,CAAAT,MAAA,CAAAU,IAAA,CAAA,CAAA,wCAAA,CAAA,EAAA,EAAA,CAAA,CACxC,CAACC,MAAG,CAAA;YACL,MAAGC,SAAA,GAAA,IAAAN,WAAA,CAAAT,gBAAA,CAAA,CAAAc,MAAA,CAAA;YAEVb,QAAA,CAAAe,WAAA,CACS;;;;;;;;;;;;;;;ICtBJ,MAAOC,GAAG,CAAA;IAGdC,EAAAA,WAAAA,CAAYjB,QAAiC,EAAA;IAAA,IAAA,IAAA,CAFrCA,QAAQ,GAAA,KAAA,CAAA,CAAA;QAGd,IAAI,CAACA,QAAQ,GAAGA,QAAQ,CAAA;IAC1B,GAAA;IAEA;;;;MAIAkB,QAAQA,CAACC,GAAA,GAAc,EAAE,EAAA;IACvB,IAAA,OAAO,IAAIhB,OAAO,CAAEC,OAAO,IAAI;UAC7B,MAAMgB,cAAc,GAAIC,KAAmB,IAAI;IAC7C,QAAA,MAAMC,OAAO,GAAoBD,KAAK,CAACE,IAAI,CAAA;YAC3C,IAAID,OAAO,iCAAwB,KAA8B,EAAA,gCAAA;IAC/D,UAAA,OAAA;;IAEF;IACA;YACA,MAAME,cAAc,GAAGF,OAA+B,CAAA;IACtD,QAAA,IAAIE,cAAc,CAAA,EAAA,oCAA8B,KAAKL,GAAG,EAAE;IACxD,UAAA,OAAA;;YAEF,IAAI,CAACnB,QAAQ,CAACyB,yBAAyB,CAAC,SAAS,EAAEL,cAAc,CAAC,CAAA;YAClE,MAAM7B,KAAK,GAAGiC,cAAc,CAAyB,EAAA,+BAAA,CAAA;YACrDpB,OAAO,CAACb,KAAK,CAAC,CAAA;WACf,CAAA;UAED,IAAI,CAACS,QAAQ,CAAC0B,sBAAsB,CAAC,SAAS,EAAEN,cAAc,CAAC,CAAA;IAC/DjC,MAAAA,QAAQ,CAAC,IAAI,CAACa,QAAQ,EAAE,8GAAsFV,KAAK,CAAC6B,GAAG,CAAC,GAAG,CAAC,aAAc,CAAC,CAAC,CAAC,CAAA;UAC7IQ,UAAU,CAACvB,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IACjC,KAAC,CAAC,CAAA;IACJ,GAAA;IAEA;;;;IAIAwB,EAAAA,QAAQA,CAACC,KAAS,EAAA;IAChB;IACA,IAAA,IAAIC,WAAW,CAAA;QACf,IAAI;IACFA,MAAAA,WAAW,GAAGC,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC,CAAA;SACpC,CAAC,OAAOI,CAAC,EAAE;IACV,MAAA,MAAM,IAAIC,KAAK,CAAC,CAAA,8CAAA,CAAgD,CAAC,CAAA;;IAEnE/C,IAAAA,QAAQ,CAAC,IAAI,CAACa,QAAQ,EAAE,8GAAsF,CAAC,aAAcV,KAAK,CAACwC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;IACvJ,GAAA;;;ICjDF,MAAMK,iBAAiB,GAAoC,EAAE,CAAA;IAEvD,SAAUC,0BAA0BA,CAACf,KAAmB,EAAErB,QAAiC,EAAA;IAC/F,EAAA,MAAMqC,GAAG,GAAGhB,KAAK,CAACE,IAAuB,CAAA;MACzC,IAAIc,GAAG,iCAAwB,KAA2B,EAAA,6BAAA;IACxD,IAAA,OAAA;;MAGF,MAAMC,eAAe,GAAGD,GAA2B,CAAA;MACnD,MAAME,YAAY,GAAGD,eAAe,CAAsC,EAAA,4CAAA,CAAA;MAC1E,MAAME,WAAW,GAAGT,IAAI,CAACU,KAAK,CAACH,eAAe,8CAAqC,CAAC,CAAA;MACpF,MAAMI,KAAK,GAAGJ,eAAe,CAAyB,CAAA,+BAAA,CAAA;IAEtD,EAAA,MAAMK,EAAE,GAAGR,iBAAiB,CAACI,YAAY,CAAC,CAAA;MAC1C,IAAI,CAACI,EAAE,EAAE;IACPxD,IAAAA,QAAQ,CAACa,QAAQ,EAAE,GAGjB0C,gDAAAA,CAAAA,+BAAAA,KAAK,EACLpD,KAAK,CAACyC,IAAI,CAACC,SAAS,CAAC,CAAoCO,iCAAAA,EAAAA,YAAY,uBAAuB,CAAC,CAAC,CAC/F,CAAC,CAAA;IACF,IAAA,OAAA;;IAGFpC,EAAAA,OAAO,CAACC,OAAO,CAACuC,EAAE,CAAC;IAAC,GACjBtC,IAAI,CAAEuC,CAAC,IAAKA,CAAC,CAACC,KAAK,CAAC,IAAI,EAAEL,WAAW,CAAC,CAAC,CACvCnC,IAAI,CACFd,KAAK,IAAI;IACRJ,IAAAA,QAAQ,CAACa,QAAQ,EAAE,CAAmE0C,EAAAA,gDAAAA,CAAAA,gCAAAA,KAAK,EAAEpD,KAAK,CAACyC,IAAI,CAACC,SAAS,CAACzC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;OAC5H,EACAuD,GAAU,IAAI;QACb,MAAMC,YAAY,GAAGhB,IAAI,CAACC,SAAS,CAACc,GAAG,CAACxB,OAAO,IAAIwB,GAAG,CAAC,CAAA;QAEvD3D,QAAQ,CAACa,QAAQ,EAAE,mFAGjB0C,KAAK,EACLpD,KAAK,CAACyC,IAAI,CAACC,SAAS,CAAC,2BAA2BO,YAAY,CAAA,UAAA,EAAaQ,YAAY,CAAG,CAAA,CAAA,CAAC,CAAC,CAC3F,CAAC,CAAA;IACJ,GAAC,CACF,CAAA;IACL,CAAA;IACM,SAAUC,cAAcA,CAACC,IAAY,EAAEN,EAAY,EAAA;IACvD,EAAA,IAAI,CAACM,IAAI,IAAIA,IAAI,KAAK,EAAE,EAAE;IACxB,IAAA,MAAM,IAAIf,KAAK,CAAC,CAAA,mEAAA,CAAqE,CAAC,CAAA;;IAExF,EAAA,IAAI,OAAOS,EAAE,KAAK,UAAU,EAAE;QAC5B,MAAM,IAAIT,KAAK,CAAC,CAAA,uDAAA,EAA0De,IAAI,CAAM,GAAA,EAAA,OAAON,EAAE,CAAA,EAAA,CAAI,CAAC,CAAA;;MAEpG,IAAIM,IAAI,IAAId,iBAAiB,EAAE;IAC7B,IAAA,MAAM,IAAID,KAAK,CAAC,CAAwDe,qDAAAA,EAAAA,IAAI,IAAI,CAAC,CAAA;;IAEnFd,EAAAA,iBAAiB,CAACc,IAAI,CAAC,GAAGN,EAAE,CAAA;IAC9B;;ICvDA;;;IAGM,MAAOO,YAAY,CAAA;MASvBjC,WAAA,GAAA;IARA;IAAA,IAAA,IAAA,CACOkC,WAAW,GAAA,KAAA,CAAA,CAAA;IAAA,IAAA,IAAA,CACXpC,WAAW,GAAA,KAAA,CAAA,CAAA;IAAA,IAAA,IAAA,CACXW,sBAAsB,GAAA,KAAA,CAAA,CAAA;IAAA,IAAA,IAAA,CACtBD,yBAAyB,GAAA,KAAA,CAAA,CAAA;IAAA,IAAA,IAAA,CACzB,4CAA6C,IAAI,CAAA;QAAA,IACjD,CAAA,CAAA,+BAAA,GAAoC,CAAC,CAAC,CAAA;QAG3C,IAAI,CAAC0B,WAAW,GAAG;IAAEnD,MAAAA,QAAQ,EAAE,IAAA;SAAM,CAAA;IACvC,GAAA;MAEO,CAA2B,EAAA,iCAAA,GAAA;IAChCoD,IAAAA,GAAQ,CAAgB,CAAA,sBAAA,CAAA;IAC1B,GAAA;;;ICxBF,MAAMC,mBAAmB,GAA+B;IACtDC,EAAAA,KAAK,EAAE,IAAI;IACXC,EAAAA,WAAW,EAAE,IAAI;IACjBC,EAAAA,MAAM,EAAE,IAAI;IACZC,EAAAA,aAAa,EAAE,IAAI;IACnBC,EAAAA,cAAc,EAAE,IAAI;IACpBC,EAAAA,OAAO,EAAE,IAAI;IACbC,EAAAA,KAAK,EAAE,IAAI;IACXC,EAAAA,WAAW,EAAE,IAAI;IACjBC,EAAAA,QAAQ,EAAE,IAAI;IACdC,EAAAA,IAAI,EAAE,IAAI;IACV7B,EAAAA,KAAK,EAAE,IAAI;IACX8B,EAAAA,SAAS,EAAE,IAAI;IACfC,EAAAA,KAAK,EAAE,IAAI;IACXC,EAAAA,WAAW,EAAE,IAAI;IACjBC,EAAAA,YAAY,EAAE,IAAI;IAClBC,EAAAA,YAAY,EAAE,IAAI;IAClBC,EAAAA,QAAQ,EAAE,IAAI;IACdC,EAAAA,QAAQ,EAAE,IAAI;IACdC,EAAAA,UAAU,EAAE,IAAI;IAChBC,EAAAA,UAAU,EAAE,IAAI;IAChBC,EAAAA,SAAS,EAAE,IAAI;IACfC,EAAAA,IAAI,EAAE,IAAI;IACV3C,EAAAA,IAAI,EAAE,IAAI;IACV1C,EAAAA,GAAG,EAAE,IAAI;IACTsF,EAAAA,IAAI,EAAE,IAAI;IACVC,EAAAA,GAAG,EAAE,IAAI;IACTC,EAAAA,MAAM,EAAE,IAAI;IACZC,EAAAA,MAAM,EAAE,IAAI;IACZ3E,EAAAA,OAAO,EAAE,IAAI;IACb4E,EAAAA,KAAK,EAAE,IAAI;IACXC,EAAAA,UAAU,EAAE,IAAI;IAChBC,EAAAA,cAAc,EAAE,IAAI;IACpBC,EAAAA,OAAO,EAAE,IAAI;IACbC,EAAAA,MAAM,EAAE,IAAI;IACZC,EAAAA,GAAG,EAAE,IAAI;IACTC,EAAAA,MAAM,EAAE,IAAI;IACZC,EAAAA,MAAM,EAAE,IAAI;IACZC,EAAAA,WAAW,EAAE,IAAI;IACjBC,EAAAA,WAAW,EAAE,IAAI;IACjBC,EAAAA,WAAW,EAAE,IAAI;IACjBC,EAAAA,SAAS,EAAE,IAAI;IACfC,EAAAA,QAAQ,EAAE,IAAI;IACdC,EAAAA,GAAG,EAAE,IAAI;IACTpF,EAAAA,WAAW,EAAE,IAAI;IACjBqF,EAAAA,WAAW,EAAE,IAAI;IACjBC,EAAAA,UAAU,EAAE,IAAI;IAChBC,EAAAA,iBAAiB,EAAE,IAAI;IACvBC,EAAAA,OAAO,EAAE,IAAI;IACbC,EAAAA,OAAO,EAAE,IAAI;IACbC,EAAAA,WAAW,EAAE,IAAI;IACjBC,EAAAA,SAAS,EAAE,IAAI;IACfC,EAAAA,cAAc,EAAE,IAAI;IACpBC,EAAAA,IAAI,EAAE,IAAI;IACVC,EAAAA,gBAAgB,EAAE,IAAI;IACtBC,EAAAA,mBAAmB,EAAE,IAAI;IACzBC,EAAAA,IAAI,EAAE,IAAI;IACVC,EAAAA,MAAM,EAAE,IAAI;IACZC,EAAAA,aAAa,EAAE,IAAI;IACnBC,EAAAA,YAAY,EAAE,IAAI;IAClBC,EAAAA,OAAO,EAAE,IAAI;IACbC,EAAAA,SAAS,EAAE,IAAI;IACfC,EAAAA,kBAAkB,EAAE,IAAI;IACxB9G,EAAAA,QAAQ,EAAE,IAAI;IACd+G,EAAAA,SAAS,EAAE,IAAI;IACfC,EAAAA,kBAAkB,EAAE,IAAI;IACxBC,EAAAA,MAAM,EAAE,IAAI;IACZC,EAAAA,KAAK,EAAE,IAAI;IACXC,EAAAA,SAAS,EAAE,IAAI;IACfC,EAAAA,QAAQ,EAAE,IAAI;IACdC,EAAAA,KAAK,EAAE,IAAI;IACXC,EAAAA,QAAQ,EAAE,IAAI;IACdC,EAAAA,SAAS,EAAE,IAAI;IACfC,EAAAA,OAAO,EAAE,IAAI;IACbC,EAAAA,kBAAkB,EAAE,IAAI;IACxBC,EAAAA,oBAAoB,EAAE,IAAI;IAC1BC,EAAAA,UAAU,EAAE,IAAI;IAChBC,EAAAA,QAAQ,EAAE,IAAI;IACdC,EAAAA,WAAW,EAAE,IAAI;IACjBC,EAAAA,qBAAqB,EAAE,IAAI;IAC3BC,EAAAA,oBAAoB,EAAE,IAAI;IAC1BC,EAAAA,IAAI,EAAE,IAAI;IACVrG,EAAAA,UAAU,EAAE,IAAI;IAChBsG,EAAAA,WAAW,EAAE,IAAI;IACjBC,EAAAA,QAAQ,EAAE,IAAA;IACX,CAAA,CAAA;IAED;IACM,SAAUC,aAAaA,CAACC,MAAyB,EAAA;IACrD;;;;;IAKA,EAAA,MAAMC,YAAY,GAAGA,CAACC,MAAW,EAAEC,QAAgB,KAAa;IAC9D,IAAA,IAAI,CAAClF,mBAAmB,CAACmF,cAAc,CAACD,QAAQ,CAAC,EAAE;UACjD,IAAI;YACF,OAAOD,MAAM,CAACC,QAAQ,CAAC,CAAA;IACvB,QAAA,OAAO,IAAI,CAAA;WACZ,CAAC,OAAOtG,CAAC,EAAE,EAAA;;IAEd,IAAA,OAAO,KAAK,CAAA;OACb,CAAA;IAED;IACA;MACA,IAAIwG,OAAO,GAAGL,MAAM,CAAA;IACpB,EAAA,OAAOK,OAAO,IAAIA,OAAO,CAACxH,WAAW,KAAKiD,WAAW,EAAE;QACrD,MAAMwE,OAAO,GAAa,EAAE,CAAA;QAC5B,MAAMC,cAAc,GAAa,EAAE,CAAA;QACnC7D,MAAM,CAAC8D,mBAAmB,CAACH,OAAO,CAAC,CAACI,OAAO,CAAEC,IAAI,IAAI;IACnD,MAAA,IAAIT,YAAY,CAACI,OAAO,EAAEK,IAAI,CAAC,EAAE;IAC/BJ,QAAAA,OAAO,CAAC/I,IAAI,CAACmJ,IAAI,CAAC,CAAA;WACnB,MAAM;IACLH,QAAAA,cAAc,CAAChJ,IAAI,CAACmJ,IAAI,CAAC,CAAA;;IAE7B,KAAC,CAAC,CAAA;IACFlC,IAAAA,OAAO,CAACmC,IAAI,CAAC,CAAA,QAAA,EAAWL,OAAO,CAACM,MAAM,CAAkB,gBAAA,CAAA,EAAEP,OAAO,EAAE,GAAG,EAAEC,OAAO,CAAC,CAAA;QAChF,IAAIC,cAAc,CAACK,MAAM,EAAE;IACzBpC,MAAAA,OAAO,CAACmC,IAAI,CAAC,CAAA,iBAAA,EAAoBJ,cAAc,CAACK,MAAM,CAAkB,gBAAA,CAAA,EAAEP,OAAO,EAAE,GAAG,EAAEE,cAAc,CAAC,CAAA;;IAEzGF,IAAAA,OAAO,GAAG3D,MAAM,CAACmE,cAAc,CAACR,OAAO,CAAC,CAAA;;IAE5C;;ICvGA;;;;;IAKM,SAAUS,aAAaA,CAAClJ,QAAiC,EAAEsH,QAAyB,EAAE/F,IAA+B,EAAA;IACzH,EAAA,MAAM4H,OAAO,GAAQrE,MAAM,CAACsE,MAAM,CAACtE,MAAM,CAACuE,MAAM,CAAC,IAAI,CAAC,EAAE9H,IAAI,CAAC,CAAA;IAE7D;IACA;IACA,EAAA,MAAM+H,MAAM,GAAGxE,MAAM,CAACyE,cAAc,CAAA;IACpCD,EAAAA,MAAM,CAACH,OAAO,EAAE,QAAQ,EAAE;IACxB1J,IAAAA,GAAGA,GAAA;IACD,MAAA,OAAOqF,MAAM,CAAC0E,IAAI,CAAC,IAAI,CAAC,CAACR,MAAM,CAAA;IACjC,KAAA;OACD,CAAC,CAAA;IACFM,EAAAA,MAAM,CAACH,OAAO,EAAE,KAAK,EAAE;IACrB5J,IAAAA,KAAKA,CAACkK,CAAS,EAAA;IACb,MAAA,MAAMD,IAAI,GAAG1E,MAAM,CAAC0E,IAAI,CAAC,IAAI,CAAC,CAAA;IAC9B,MAAA,OAAOC,CAAC,IAAI,CAAC,IAAIA,CAAC,GAAGD,IAAI,CAACR,MAAM,GAAGQ,IAAI,CAACC,CAAC,CAAC,GAAG,IAAI,CAAA;IACnD,KAAA;OACD,CAAC,CAAA;IACFH,EAAAA,MAAM,CAACH,OAAO,EAAE,SAAS,EAAE;IACzB5J,IAAAA,KAAKA,CAAC4B,GAAW,EAAA;IACf,MAAA,MAAM5B,KAAK,GAAG,IAAI,CAAC4B,GAAG,CAAC,CAAA;IACvB,MAAA,OAAO5B,KAAK,GAAGA,KAAK,GAAG,IAAI,CAAA;IAC7B,KAAA;OACD,CAAC,CAAA;IACF+J,EAAAA,MAAM,CAACH,OAAO,EAAE,SAAS,EAAE;QACzB5J,KAAKA,CAAC4B,GAAW,EAAE5B,KAAa,EAAA;IAC9B,MAAA,MAAMmK,WAAW,GAAGrE,MAAM,CAAC9F,KAAK,CAAC,CAAA;IACjC,MAAA,IAAI,CAAC4B,GAAG,CAAC,GAAGuI,WAAW,CAAA;UAEvBvK,QAAQ,CAACa,QAAQ,EAAE,CAAA,EAAA,0CAAA,CAAA,qBAAkDsH,QAAQ,EAAEhI,KAAK,CAAC6B,GAAG,CAAC,GAAG,CAAC,EAAE7B,KAAK,CAACoK,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;IACzH,KAAA;OACD,CAAC,CAAA;IACFJ,EAAAA,MAAM,CAACH,OAAO,EAAE,YAAY,EAAE;IAC5B5J,IAAAA,KAAKA,CAAC4B,GAAW,EAAA;UACf,OAAO,IAAI,CAACA,GAAG,CAAC,CAAA;IAEhBhC,MAAAA,QAAQ,CAACa,QAAQ,EAAE,mEAGjBsH,QAAQ,EACRhI,KAAK,CAAC6B,GAAG,CAAC,GAAG,CAAC,EACd,CAAC;IAAE,OACJ,CAAC,CAAA;IACJ,KAAA;OACD,CAAC,CAAA;;IACFmI,EAAAA,MAAM,CAACH,OAAO,EAAE,OAAO,EAAE;IACvB5J,IAAAA,KAAKA,GAAA;UACHuF,MAAM,CAAC0E,IAAI,CAAC,IAAI,CAAC,CAACX,OAAO,CAAE1H,GAAG,IAAI;YAChC,OAAO,IAAI,CAACA,GAAG,CAAC,CAAA;IAClB,OAAC,CAAC,CAAA;UAEFhC,QAAQ,CAACa,QAAQ,EAAE,mEAGjBsH,QAAQ,EACR,CAAC,EACD,CAAC;IAAE,OACJ,CAAC,CAAA;IACJ,KAAA;OACD,CAAC,CAAA;;IACF,EAAA,OAAO6B,OAAkB,CAAA;IAC3B;;IC3EM,SAAUQ,iBAAiBA,CAAC3J,QAAiC,EAAE4J,gBAAmC,EAAEC,kBAAqC,EAAA;IAC7I,EAAA,MAAMC,MAAM,GAAG9J,QAAQ,CAACmD,WAAW,CAAA;MACnC,IAAIyG,gBAAgB,CAACT,OAAO,EAAE;QAC5BW,MAAM,CAACC,YAAY,GAAGb,aAAa,CAAClJ,QAAQ,EAAyB4J,CAAAA,8BAAAA,gBAAgB,CAACT,OAAO,CAAC,CAAA;OAC/F,MAAM;IACLvC,IAAAA,OAAO,CAACoD,IAAI,CAACJ,gBAAgB,CAACK,QAAQ,CAAC,CAAA;;MAEzC,IAAIJ,kBAAkB,CAACV,OAAO,EAAE;QAC9BW,MAAM,CAACI,cAAc,GAAGhB,aAAa,CAAClJ,QAAQ,EAA2B6J,CAAAA,gCAAAA,kBAAkB,CAACV,OAAO,CAAC,CAAA;OACrG,MAAM;IACLvC,IAAAA,OAAO,CAACoD,IAAI,CAACH,kBAAkB,CAACI,QAAQ,CAAC,CAAA;;IAE7C;;ICbA,MAAME,IAAI,GAAGA,MAAM,KAAK,CAAC,CAAA;AAElB,UAAMC,SAAS,GAA4B,UAAUrJ,WAAW,EAAEuF,gBAAgB,EAAEC,mBAAmB,EAAA;IAC5G,EAAA,MAAMvG,QAAQ,GAAG,IAAIkD,YAAY,EAAE,CAAA;IAEnC;MACAlD,QAAQ,CAACe,WAAW,GAAGA,WAAW,CAAA;MAClCf,QAAQ,CAAC0B,sBAAsB,GAAG4E,gBAAgB,CAAA;MAClDtG,QAAQ,CAACyB,yBAAyB,GAAG8E,mBAAmB,CAAA;MACxD,OAAOvG,QAAQ,CAACmD,WAAW,CAAA;IAC7B,CAAC,CAAEpC,WAAW,CAACsJ,IAAI,CAACrC,IAAI,CAAC,IAAImC,IAAI,EAAE7D,gBAAgB,CAAC+D,IAAI,CAACrC,IAAI,CAAC,IAAImC,IAAI,EAAE5D,mBAAmB,CAAC8D,IAAI,CAACrC,IAAI,CAAC,IAAImC,IAAI,EAAC;IAE/G;IACAhC,aAAa,CAACH,IAAI,CAAC,CAAA;IAEnB;IACCA,IAAY,CAAChH,GAAG,GAAG,IAAIA,GAAG,CAACoJ,SAAS,CAACpK,QAAQ,CAAC,CAAA;IAE/C;IACCgI,IAAY,CAAChF,cAAc,GAAGA,cAAc,CAAA;IAC7CsD,gBAAgB,CAAC,SAAS,EAAGgE,GAAiB,IAAKlI,0BAA0B,CAACkI,GAAG,EAAEF,SAAS,CAACpK,QAAQ,CAAC,CAAC,CAAA;UAE1FuK,OAAO,GAAoBA,CACtCvK,QAAsB,EACtBwK,OAAe,EACfC,eAAuB,EACvBC,OAAe,EACfC,sBAA8B,EAC9BC,IAAY,EACZhB,gBAAmC,EACnCC,kBAAqC,KACnC;IACFF,EAAAA,iBAAiB,CAAC3J,QAAQ,EAAE4J,gBAAgB,EAAEC,kBAAkB,CAAC,CAAA;IACnE;;;;;;;;;;;"}