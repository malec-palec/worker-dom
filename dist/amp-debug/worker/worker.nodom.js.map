{"version":3,"file":"worker.nodom.js","sources":["../../../output/worker-thread/strings.js","../../../output/worker-thread/phase.js","../../../output/worker-thread/nodes.js","../../../output/worker-thread/MutationTransfer.js","../../../output/worker-thread/amp/amp.js","../../../output/worker-thread/function.js","../../../output/worker-thread/dom/DocumentStub.js","../../../output/worker-thread/amp/delete-globals.js","../../../output/worker-thread/Storage.js","../../../output/worker-thread/initialize-storage.js","../../../output/worker-thread/index.nodom.amp.js"],"sourcesContent":["let count = 0;\nlet transfer = [];\nconst mapping = new Map();\n/**\n * Stores a string in mapping and returns the index of the location.\n * @param value string to store\n * @return location in map\n */\nexport function store(value) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (mapping.has(value)) {\n        // Safe to cast since we verified the mapping contains the value\n        return mapping.get(value);\n    }\n    mapping.set(value, count);\n    transfer.push(value);\n    return count++;\n}\n/**\n * Retrieve the index for a string (mostly used for tests).\n * @param value string value we need to know the index of\n * @returns index in the map for the string\n */\nexport function getForTesting(value) {\n    return mapping.get(value);\n}\nexport function getForTestingPartial(value) {\n    const found = Array.from(mapping.keys()).find((str) => str.includes(value));\n    if (found) {\n        return mapping.get(found);\n    }\n}\n/**\n * Returns strings registered but not yet transferred.\n * Side effect: Resets the transfer array to default value, to prevent passing the same values multiple times.\n */\nexport function consume() {\n    const strings = transfer;\n    transfer = [];\n    return strings;\n}\n//# sourceMappingURL=strings.js.map","export let phase = 0 /* Phase.Initializing */;\nexport const set = (newPhase) => (phase = newPhase);\n//# sourceMappingURL=phase.js.map","import { phase } from './phase';\nlet count = 0;\nlet transfer = [];\nconst mapping = new Map();\n/**\n * Override the store for a node during the initialization phase.\n * @param node Node to store and modify with index\n * @param override Override number to use as the identifier.\n *\n * NOTE: THIS IS ONLY TO BE USED DURING INITIALIZATION.\n */\nexport function storeOverride(node, override) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (phase === 0 /* Phase.Initializing */) {\n        mapping.set((node[7 /* TransferrableKeys.index */] = override), node);\n        count = Math.max(count, override);\n    }\n    return override;\n}\n/**\n * Stores a node in mapping, and makes the index available on the Node directly.\n * @param node Node to store and modify with index\n * @return index Node was stored with in mapping\n */\nexport function store(node) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (node[7 /* TransferrableKeys.index */] !== undefined) {\n        return node[7 /* TransferrableKeys.index */];\n    }\n    mapping.set((node[7 /* TransferrableKeys.index */] = ++count), node);\n    if (phase > 0 /* Phase.Initializing */) {\n        // After Initialization, include all future dom node creation into the list for next transfer.\n        transfer.push(node);\n    }\n    return count;\n}\n/**\n * Retrieves a node based on an index.\n * @param index location in map to retrieve a Node for\n * @return either the Node represented in index position, or null if not available.\n */\nexport function get(index) {\n    // mapping has a 1 based index, since on first store we ++count before storing.\n    return (!!index && mapping.get(index)) || null;\n}\n/**\n * Returns nodes registered but not yet transferred.\n * Side effect: Resets the transfer array to default value, to prevent passing the same values multiple times.\n */\nexport function consume() {\n    const copy = transfer;\n    transfer = [];\n    return copy;\n}\n//# sourceMappingURL=nodes.js.map","import { consume as consumeNodes } from './nodes';\nimport { consume as consumeStrings } from './strings';\nimport { phase, set as setPhase } from './phase';\nlet pending = false;\nlet pendingMutations = [];\n// TODO(choumx): Change `mutation` to Array<Uint16> to prevent casting errors e.g. integer underflow, precision loss.\nexport function transfer(document, mutation) {\n    if (process.env.SERVER) {\n        return;\n    }\n    if (phase > 0 /* Phase.Initializing */ && document[58 /* TransferrableKeys.allowTransfer */]) {\n        pending = true;\n        pendingMutations = pendingMutations.concat(mutation);\n        Promise.resolve().then((_) => {\n            if (pending) {\n                const nodes = new Uint16Array(consumeNodes().reduce((acc, node) => acc.concat(node[8 /* TransferrableKeys.creationFormat */]), [])).buffer;\n                const mutations = new Uint16Array(pendingMutations).buffer;\n                document.postMessage({\n                    [54 /* TransferrableKeys.phase */]: phase,\n                    [12 /* TransferrableKeys.type */]: phase === 2 /* Phase.Mutating */ ? 3 /* MessageType.MUTATE */ : 2 /* MessageType.HYDRATE */,\n                    [37 /* TransferrableKeys.nodes */]: nodes,\n                    [41 /* TransferrableKeys.strings */]: consumeStrings(),\n                    [36 /* TransferrableKeys.mutations */]: mutations,\n                }, [nodes, mutations]);\n                pendingMutations = [];\n                pending = false;\n                setPhase(2 /* Phase.Mutating */);\n            }\n        });\n    }\n}\n//# sourceMappingURL=MutationTransfer.js.map","import { store } from '../strings';\nimport { transfer } from '../MutationTransfer';\nexport class AMP {\n    document;\n    constructor(document) {\n        this.document = document;\n    }\n    /**\n     * Returns a promise that resolves with the value of `key`.\n     * @param key\n     */\n    getState(key = '') {\n        return new Promise((resolve) => {\n            const messageHandler = (event) => {\n                const message = event.data;\n                if (message[12 /* TransferrableKeys.type */] !== 11 /* MessageType.GET_STORAGE */) {\n                    return;\n                }\n                // TODO: There is a race condition here if there are multiple concurrent\n                // getState(k) messages in flight, where k is the same value.\n                const storageMessage = message;\n                if (storageMessage[74 /* TransferrableKeys.storageKey */] !== key) {\n                    return;\n                }\n                this.document.removeGlobalEventListener('message', messageHandler);\n                const value = storageMessage[21 /* TransferrableKeys.value */];\n                resolve(value);\n            };\n            this.document.addGlobalEventListener('message', messageHandler);\n            transfer(this.document, [12 /* TransferrableMutationType.STORAGE */, 1 /* GetOrSet.GET */, 2 /* StorageLocation.AmpState */, /* key */ store(key) + 1, /* value */ 0]);\n            setTimeout(resolve, 500, null); // TODO: Why a magical constant, define and explain.\n        });\n    }\n    /**\n     * Deep-merges `state` into the existing state.\n     * @param state\n     */\n    setState(state) {\n        // Stringify `state` so it can be post-messaged as a transferrable.\n        let stringified;\n        try {\n            stringified = JSON.stringify(state);\n        }\n        catch (e) {\n            throw new Error(`AMP.setState only accepts valid JSON as input.`);\n        }\n        transfer(this.document, [12 /* TransferrableMutationType.STORAGE */, 2 /* GetOrSet.SET */, 2 /* StorageLocation.AmpState */, /* key */ 0, /* value */ store(stringified) + 1]);\n    }\n}\n//# sourceMappingURL=amp.js.map","import { transfer } from './MutationTransfer';\nimport { store } from './strings';\nconst exportedFunctions = {};\nexport function callFunctionMessageHandler(event, document) {\n    const msg = event.data;\n    if (msg[12 /* TransferrableKeys.type */] !== 12 /* MessageType.FUNCTION */) {\n        return;\n    }\n    const functionMessage = msg;\n    const fnIdentifier = functionMessage[77 /* TransferrableKeys.functionIdentifier */];\n    const fnArguments = JSON.parse(functionMessage[78 /* TransferrableKeys.functionArguments */]);\n    const index = functionMessage[7 /* TransferrableKeys.index */];\n    const fn = exportedFunctions[fnIdentifier];\n    if (!fn) {\n        transfer(document, [\n            13 /* TransferrableMutationType.FUNCTION_CALL */,\n            2 /* ResolveOrReject.REJECT */,\n            index,\n            store(JSON.stringify(`[worker-dom]: Exported function \"${fnIdentifier}\" could not be found.`)),\n        ]);\n        return;\n    }\n    Promise.resolve(fn) // Forcing promise flows allows us to skip a try/catch block.\n        .then((f) => f.apply(null, fnArguments))\n        .then((value) => {\n        transfer(document, [13 /* TransferrableMutationType.FUNCTION_CALL */, 1 /* ResolveOrReject.RESOLVE */, index, store(JSON.stringify(value))]);\n    }, (err) => {\n        const errorMessage = JSON.stringify(err.message || err);\n        transfer(document, [\n            13 /* TransferrableMutationType.FUNCTION_CALL */,\n            2 /* ResolveOrReject.REJECT */,\n            index,\n            store(JSON.stringify(`[worker-dom]: Function \"${fnIdentifier}\" threw: \"${errorMessage}\"`)),\n        ]);\n    });\n}\nexport function exportFunction(name, fn) {\n    if (!name || name === '') {\n        throw new Error(`[worker-dom]: Attempt to export function was missing an identifier.`);\n    }\n    if (typeof fn !== 'function') {\n        throw new Error(`[worker-dom]: Attempt to export non-function failed: (\"${name}\", ${typeof fn}).`);\n    }\n    if (name in exportedFunctions) {\n        throw new Error(`[worker-dom]: Attempt to re-export function failed: \"${name}\".`);\n    }\n    exportedFunctions[name] = fn;\n}\nexport function resetForTesting() {\n    for (const key of Object.keys(exportedFunctions)) {\n        delete exportedFunctions[key];\n    }\n}\n//# sourceMappingURL=function.js.map","import { set as setPhase } from '../phase';\n/**\n * A lightweight Document stub for the no-dom amp binary.\n */\nexport class DocumentStub {\n    // Internal variables.\n    defaultView;\n    postMessage;\n    addGlobalEventListener;\n    removeGlobalEventListener;\n    [58 /* TransferrableKeys.allowTransfer */] = true;\n    [7 /* TransferrableKeys.index */] = -1;\n    constructor() {\n        this.defaultView = { document: this };\n    }\n    [59 /* TransferrableKeys.observe */]() {\n        setPhase(2 /* Phase.Mutating */);\n    }\n}\n//# sourceMappingURL=DocumentStub.js.map","const ALLOWLISTED_GLOBALS = {\n    Array: true,\n    ArrayBuffer: true,\n    BigInt: true,\n    BigInt64Array: true,\n    BigUint64Array: true,\n    Boolean: true,\n    Cache: true,\n    CustomEvent: true,\n    DataView: true,\n    Date: true,\n    Error: true,\n    EvalError: true,\n    Event: true,\n    EventTarget: true,\n    Float32Array: true,\n    Float64Array: true,\n    Function: true,\n    Infinity: true,\n    Int16Array: true,\n    Int32Array: true,\n    Int8Array: true,\n    Intl: true,\n    JSON: true,\n    Map: true,\n    Math: true,\n    NaN: true,\n    Number: true,\n    Object: true,\n    Promise: true,\n    Proxy: true,\n    RangeError: true,\n    ReferenceError: true,\n    Reflect: true,\n    RegExp: true,\n    Set: true,\n    String: true,\n    Symbol: true,\n    SyntaxError: true,\n    TextDecoder: true,\n    TextEncoder: true,\n    TypeError: true,\n    URIError: true,\n    URL: true,\n    Uint16Array: true,\n    Uint32Array: true,\n    Uint8Array: true,\n    Uint8ClampedArray: true,\n    WeakMap: true,\n    WeakSet: true,\n    WebAssembly: true,\n    WebSocket: true,\n    XMLHttpRequest: true,\n    atob: true,\n    addEventListener: true,\n    removeEventListener: true,\n    btoa: true,\n    caches: true,\n    clearInterval: true,\n    clearTimeout: true,\n    console: true,\n    decodeURI: true,\n    decodeURIComponent: true,\n    document: true,\n    encodeURI: true,\n    encodeURIComponent: true,\n    escape: true,\n    fetch: true,\n    indexedDB: true,\n    isFinite: true,\n    isNaN: true,\n    location: true,\n    navigator: true,\n    onerror: true,\n    onrejectionhandled: true,\n    onunhandledrejection: true,\n    parseFloat: true,\n    parseInt: true,\n    performance: true,\n    requestAnimationFrame: true,\n    cancelAnimationFrame: true,\n    self: true,\n    setTimeout: true,\n    setInterval: true,\n    unescape: true,\n};\n// Modify global scope by removing disallowed properties.\nexport function deleteGlobals(global) {\n    /**\n     * @param object\n     * @param property\n     * @return True if property was deleted from object. Otherwise, false.\n     */\n    const deleteUnsafe = (object, property) => {\n        if (!ALLOWLISTED_GLOBALS.hasOwnProperty(property)) {\n            try {\n                delete object[property];\n                return true;\n            }\n            catch (e) { }\n        }\n        return false;\n    };\n    // Walk up global's prototype chain and dereference non-allowlisted properties\n    // until EventTarget is reached.\n    let current = global;\n    while (current && current.constructor !== EventTarget) {\n        const deleted = [];\n        const failedToDelete = [];\n        Object.getOwnPropertyNames(current).forEach((prop) => {\n            if (deleteUnsafe(current, prop)) {\n                deleted.push(prop);\n            }\n            else {\n                failedToDelete.push(prop);\n            }\n        });\n        console.info(`Removed ${deleted.length} references from`, current, ':', deleted);\n        if (failedToDelete.length) {\n            console.info(`Failed to remove ${failedToDelete.length} references from`, current, ':', failedToDelete);\n        }\n        current = Object.getPrototypeOf(current);\n    }\n}\n//# sourceMappingURL=delete-globals.js.map","import { store } from './strings';\nimport { transfer } from './MutationTransfer';\n/**\n * @param document\n * @param location\n * @param data\n */\nexport function createStorage(document, location, data) {\n    const storage = Object.assign(Object.create(null), data);\n    // Define properties on a prototype-less object instead of a class so that\n    // it behaves more like normal objects, e.g. bracket notation and JSON.stringify.\n    const define = Object.defineProperty;\n    define(storage, 'length', {\n        get() {\n            return Object.keys(this).length;\n        },\n    });\n    define(storage, 'key', {\n        value(n) {\n            const keys = Object.keys(this);\n            return n >= 0 && n < keys.length ? keys[n] : null;\n        },\n    });\n    define(storage, 'getItem', {\n        value(key) {\n            const value = this[key];\n            return value ? value : null;\n        },\n    });\n    define(storage, 'setItem', {\n        value(key, value) {\n            const stringValue = String(value);\n            this[key] = stringValue;\n            transfer(document, [12 /* TransferrableMutationType.STORAGE */, 2 /* GetOrSet.SET */, location, store(key) + 1, store(stringValue) + 1]);\n        },\n    });\n    define(storage, 'removeItem', {\n        value(key) {\n            delete this[key];\n            transfer(document, [\n                12 /* TransferrableMutationType.STORAGE */,\n                2 /* GetOrSet.SET */,\n                location,\n                store(key) + 1,\n                0, // value == 0 represents deletion.\n            ]);\n        },\n    });\n    define(storage, 'clear', {\n        value() {\n            Object.keys(this).forEach((key) => {\n                delete this[key];\n            });\n            transfer(document, [\n                12 /* TransferrableMutationType.STORAGE */,\n                2 /* GetOrSet.SET */,\n                location,\n                0,\n                0, // value == 0 represents deletion.\n            ]);\n        },\n    });\n    return storage;\n}\n//# sourceMappingURL=Storage.js.map","import { createStorage } from './Storage';\nexport function initializeStorage(document, localStorageInit, sessionStorageInit) {\n    const window = document.defaultView;\n    if (localStorageInit.storage) {\n        window.localStorage = createStorage(document, 0 /* StorageLocation.Local */, localStorageInit.storage);\n    }\n    else {\n        console.warn(localStorageInit.errorMsg);\n    }\n    if (sessionStorageInit.storage) {\n        window.sessionStorage = createStorage(document, 1 /* StorageLocation.Session */, sessionStorageInit.storage);\n    }\n    else {\n        console.warn(sessionStorageInit.errorMsg);\n    }\n}\n//# sourceMappingURL=initialize-storage.js.map","import { AMP } from './amp/amp';\nimport { callFunctionMessageHandler, exportFunction } from './function';\nimport { DocumentStub } from './dom/DocumentStub';\nimport { deleteGlobals } from './amp/delete-globals';\nimport { initializeStorage } from './initialize-storage';\nconst noop = () => void 0;\nexport const workerDOM = (function (postMessage, addEventListener, removeEventListener) {\n    const document = new DocumentStub();\n    // TODO(choumx): Avoid polluting Document's public API.\n    document.postMessage = postMessage;\n    document.addGlobalEventListener = addEventListener;\n    document.removeGlobalEventListener = removeEventListener;\n    return document.defaultView;\n})(postMessage.bind(self) || noop, addEventListener.bind(self) || noop, removeEventListener.bind(self) || noop);\n// Modify global scope by removing disallowed properties.\ndeleteGlobals(self);\n// Offer APIs like AMP.setState() on the global scope.\nself.AMP = new AMP(workerDOM.document);\n// Allows for function invocation\nself.exportFunction = exportFunction;\naddEventListener('message', (evt) => callFunctionMessageHandler(evt, workerDOM.document));\nexport const hydrate = (document, strings, hydrateableNode, cssKeys, globalEventHandlerKeys, size, localStorageInit, sessionStorageInit) => {\n    initializeStorage(document, localStorageInit, sessionStorageInit);\n};\n//# sourceMappingURL=index.nodom.amp.js.map"],"names":["count","transfer","mapping","Map","store","value","has","get","set","push","phase","newPhase","pending","pendingMutations","document","mutation","concat","Promise","resolve","then","_","nodes","Uint16Array","consumeNodes","reduce","acc","node","buffer","mutations","postMessage","_defineProperty","AMP","_classCallCheck","_createClass","key","getState","_this","arguments","length","undefined","messageHandler","event","message","data","storageMessage","removeGlobalEventListener","addGlobalEventListener","setTimeout","setState","state","stringified","JSON","stringify","e","Error","exportedFunctions","callFunctionMessageHandler","msg","functionMessage","fnIdentifier","fnArguments","parse","index","fn","f","apply","err","errorMessage","exportFunction","name","_typeof","DocumentStub","defaultView","setPhase","ALLOWLISTED_GLOBALS","Array","ArrayBuffer","BigInt","BigInt64Array","BigUint64Array","Boolean","Cache","CustomEvent","DataView","Date","EvalError","Event","EventTarget","Float32Array","Float64Array","Function","Infinity","Int16Array","Int32Array","Int8Array","Intl","Math","NaN","Number","Object","Proxy","RangeError","ReferenceError","Reflect","RegExp","Set","String","Symbol","SyntaxError","TextDecoder","TextEncoder","TypeError","URIError","URL","Uint32Array","Uint8Array","Uint8ClampedArray","WeakMap","WeakSet","WebAssembly","WebSocket","XMLHttpRequest","atob","addEventListener","removeEventListener","btoa","caches","clearInterval","clearTimeout","console","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","escape","fetch","indexedDB","isFinite","isNaN","location","navigator","onerror","onrejectionhandled","onunhandledrejection","parseFloat","parseInt","performance","requestAnimationFrame","cancelAnimationFrame","self","setInterval","unescape","deleteGlobals","global","deleteUnsafe","object","property","hasOwnProperty","current","_loop","deleted","failedToDelete","getOwnPropertyNames","forEach","prop","info","getPrototypeOf","constructor","createStorage","storage","assign","create","define","defineProperty","keys","n","stringValue","initializeStorage","localStorageInit","sessionStorageInit","window","localStorage","warn","errorMsg","sessionStorage","noop","workerDOM","bind","evt","hydrate","strings","hydrateableNode","cssKeys","globalEventHandlerKeys","size"],"mappings":"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"}