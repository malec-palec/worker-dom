{"version":3,"file":"worker.js","sources":["../../../output/utils.js","../../../output/worker-thread/dom/matchElements.js","../../../output/worker-thread/phase.js","../../../output/worker-thread/nodes.js","../../../output/worker-thread/strings.js","../../../output/worker-thread/MutationTransfer.js","../../../output/worker-thread/MutationObserver.js","../../../output/worker-thread/dom/Node.js","../../../output/worker-thread/dom/ParentNode.js","../../../output/worker-thread/dom/DOMTokenList.js","../../../output/worker-thread/dom/Attr.js","../../../output/worker-thread/css/CSSStyleDeclaration.js","../../../output/worker-thread/dom/enhanceElement.js","../../../output/transfer/TransferrableNodes.js","../../../output/third_party/html-parser/html-parser.js","../../../output/worker-thread/Event.js","../../../output/worker-thread/dom/elementSibling.js","../../../output/worker-thread/dom/Element.js","../../../output/worker-thread/dom/HTMLElement.js","../../../output/worker-thread/dom/SVGElement.js","../../../output/worker-thread/dom/HTMLAnchorElement.js","../../../output/worker-thread/dom/HTMLButtonElement.js","../../../output/worker-thread/serializeTransferrableObject.js","../../../output/worker-thread/canvas/CanvasGradient.js","../../../output/worker-thread/canvas/CanvasPattern.js","../../../output/worker-thread/canvas/OffscreenCanvasPolyfill.js","../../../output/worker-thread/canvas/canvas-utils.js","../../../output/worker-thread/canvas/FakeNativeCanvasPattern.js","../../../output/worker-thread/canvas/CanvasRenderingContext2D.js","../../../output/worker-thread/dom/HTMLCanvasElement.js","../../../output/worker-thread/dom/HTMLDataElement.js","../../../output/worker-thread/dom/HTMLEmbedElement.js","../../../output/worker-thread/dom/HTMLFormControlsMixin.js","../../../output/worker-thread/dom/HTMLFieldSetElement.js","../../../output/worker-thread/dom/HTMLFormElement.js","../../../output/worker-thread/dom/HTMLIFrameElement.js","../../../output/worker-thread/dom/HTMLImageElement.js","../../../output/worker-thread/dom/HTMLInputLabelsMixin.js","../../../output/worker-thread/dom/HTMLInputElement.js","../../../output/worker-thread/dom/HTMLLabelElement.js","../../../output/worker-thread/dom/HTMLLinkElement.js","../../../output/worker-thread/dom/HTMLMapElement.js","../../../output/worker-thread/dom/HTMLMeterElement.js","../../../output/worker-thread/dom/HTMLModElement.js","../../../output/worker-thread/dom/HTMLOListElement.js","../../../output/worker-thread/dom/HTMLOptionElement.js","../../../output/worker-thread/dom/HTMLProgressElement.js","../../../output/worker-thread/dom/HTMLQuoteElement.js","../../../output/worker-thread/dom/HTMLScriptElement.js","../../../output/worker-thread/dom/HTMLSelectElement.js","../../../output/worker-thread/dom/HTMLSourceElement.js","../../../output/worker-thread/dom/HTMLStyleElement.js","../../../output/worker-thread/dom/HTMLTableCellElement.js","../../../output/worker-thread/dom/HTMLTableColElement.js","../../../output/worker-thread/dom/HTMLTableElement.js","../../../output/worker-thread/dom/HTMLTableRowElement.js","../../../output/worker-thread/dom/HTMLTableSectionElement.js","../../../output/worker-thread/dom/HTMLTimeElement.js","../../../output/worker-thread/dom/HTMLDataListElement.js","../../../output/worker-thread/dom/CharacterData.js","../../../output/worker-thread/dom/Text.js","../../../output/worker-thread/dom/Comment.js","../../../output/worker-thread/dom/DocumentFragment.js","../../../output/worker-thread/SyncValuePropagation.js","../../../output/worker-thread/ResizePropagation.js","../../../output/worker-thread/dom/Document.js","../../../output/worker-thread/Storage.js","../../../output/worker-thread/initialize-storage.js","../../../output/worker-thread/initialize.js","../../../output/worker-thread/AnimationFrame.js","../../../output/worker-thread/index.js"],"sourcesContent":["export const toLower = (value) => value.toLowerCase();\nexport const toUpper = (value) => value.toUpperCase();\nexport const containsIndexOf = (pos) => pos !== -1;\nexport const keyValueString = (key, value) => `${key}=\"${value}\"`;\n//# sourceMappingURL=utils.js.map","import { toLower, toUpper } from '../../utils';\n// To future authors: It would be great if we could enforce that elements are not modified by a ConditionPredicate.\nexport const tagNameConditionPredicate = (tagNames) => (element) => {\n    console.assert(tagNames.every((t) => t === toUpper(t)), 'tagNames must be all uppercase.');\n    return tagNames.includes(element.tagName);\n};\nexport const elementPredicate = (node) => node.nodeType === 1 /* NodeType.ELEMENT_NODE */;\nexport const matchChildrenElements = (node, conditionPredicate) => {\n    const matchingElements = [];\n    node.childNodes.forEach((child) => {\n        if (elementPredicate(child)) {\n            if (conditionPredicate(child)) {\n                matchingElements.push(child);\n            }\n            matchingElements.push(...matchChildrenElements(child, conditionPredicate));\n        }\n    });\n    return matchingElements;\n};\nexport const matchChildElement = (element, conditionPredicate) => {\n    let returnValue = null;\n    element.children.some((child) => {\n        if (conditionPredicate(child)) {\n            returnValue = child;\n            return true;\n        }\n        const grandChildMatch = matchChildElement(child, conditionPredicate);\n        if (grandChildMatch !== null) {\n            returnValue = grandChildMatch;\n            return true;\n        }\n        return false;\n    });\n    return returnValue;\n};\nexport const matchNearestParent = (element, conditionPredicate) => {\n    while ((element = element.parentNode)) {\n        if (conditionPredicate(element)) {\n            return element;\n        }\n    }\n    return null;\n};\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors\n * @param attrSelector the selector we are trying to match for.\n * @param element the element being tested.\n * @return boolean for whether we match the condition\n */\nexport const matchAttrReference = (attrSelector, element) => {\n    if (!attrSelector) {\n        return false;\n    }\n    const equalPos = attrSelector.indexOf('=');\n    const selectorLength = attrSelector.length;\n    const caseInsensitive = attrSelector.charAt(selectorLength - 2) === 'i';\n    const endPos = caseInsensitive ? selectorLength - 3 : selectorLength - 1;\n    if (equalPos !== -1) {\n        const equalSuffix = attrSelector.charAt(equalPos - 1);\n        const possibleSuffixes = ['~', '|', '$', '^', '*'];\n        const attrString = possibleSuffixes.includes(equalSuffix) ? attrSelector.substring(1, equalPos - 1) : attrSelector.substring(1, equalPos);\n        const rawValue = attrSelector.substring(equalPos + 1, endPos);\n        const rawAttrValue = element.getAttribute(attrString);\n        if (rawAttrValue) {\n            const casedValue = caseInsensitive ? toLower(rawValue) : rawValue;\n            const casedAttrValue = caseInsensitive ? toLower(rawAttrValue) : rawAttrValue;\n            switch (equalSuffix) {\n                case '~':\n                    return casedAttrValue.split(' ').indexOf(casedValue) !== -1;\n                case '|':\n                    return casedAttrValue === casedValue || casedAttrValue === `${casedValue}-`;\n                case '^':\n                    return casedAttrValue.startsWith(casedValue);\n                case '$':\n                    return casedAttrValue.endsWith(casedValue);\n                case '*':\n                    return casedAttrValue.indexOf(casedValue) !== -1;\n                default:\n                    return casedAttrValue === casedValue;\n            }\n        }\n        return false;\n    }\n    else {\n        return element.hasAttribute(attrSelector.substring(1, endPos));\n    }\n};\n//# sourceMappingURL=matchElements.js.map","export let phase = 0 /* Phase.Initializing */;\nexport const set = (newPhase) => (phase = newPhase);\n//# sourceMappingURL=phase.js.map","import { phase } from './phase';\nlet count = 0;\nlet transfer = [];\nconst mapping = new Map();\n/**\n * Override the store for a node during the initialization phase.\n * @param node Node to store and modify with index\n * @param override Override number to use as the identifier.\n *\n * NOTE: THIS IS ONLY TO BE USED DURING INITIALIZATION.\n */\nexport function storeOverride(node, override) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (phase === 0 /* Phase.Initializing */) {\n        mapping.set((node[7 /* TransferrableKeys.index */] = override), node);\n        count = Math.max(count, override);\n    }\n    return override;\n}\n/**\n * Stores a node in mapping, and makes the index available on the Node directly.\n * @param node Node to store and modify with index\n * @return index Node was stored with in mapping\n */\nexport function store(node) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (node[7 /* TransferrableKeys.index */] !== undefined) {\n        return node[7 /* TransferrableKeys.index */];\n    }\n    mapping.set((node[7 /* TransferrableKeys.index */] = ++count), node);\n    if (phase > 0 /* Phase.Initializing */) {\n        // After Initialization, include all future dom node creation into the list for next transfer.\n        transfer.push(node);\n    }\n    return count;\n}\n/**\n * Retrieves a node based on an index.\n * @param index location in map to retrieve a Node for\n * @return either the Node represented in index position, or null if not available.\n */\nexport function get(index) {\n    // mapping has a 1 based index, since on first store we ++count before storing.\n    return (!!index && mapping.get(index)) || null;\n}\n/**\n * Returns nodes registered but not yet transferred.\n * Side effect: Resets the transfer array to default value, to prevent passing the same values multiple times.\n */\nexport function consume() {\n    const copy = transfer;\n    transfer = [];\n    return copy;\n}\n//# sourceMappingURL=nodes.js.map","let count = 0;\nlet transfer = [];\nconst mapping = new Map();\n/**\n * Stores a string in mapping and returns the index of the location.\n * @param value string to store\n * @return location in map\n */\nexport function store(value) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (mapping.has(value)) {\n        // Safe to cast since we verified the mapping contains the value\n        return mapping.get(value);\n    }\n    mapping.set(value, count);\n    transfer.push(value);\n    return count++;\n}\n/**\n * Retrieve the index for a string (mostly used for tests).\n * @param value string value we need to know the index of\n * @returns index in the map for the string\n */\nexport function getForTesting(value) {\n    return mapping.get(value);\n}\nexport function getForTestingPartial(value) {\n    const found = Array.from(mapping.keys()).find((str) => str.includes(value));\n    if (found) {\n        return mapping.get(found);\n    }\n}\n/**\n * Returns strings registered but not yet transferred.\n * Side effect: Resets the transfer array to default value, to prevent passing the same values multiple times.\n */\nexport function consume() {\n    const strings = transfer;\n    transfer = [];\n    return strings;\n}\n//# sourceMappingURL=strings.js.map","import { consume as consumeNodes } from './nodes';\nimport { consume as consumeStrings } from './strings';\nimport { phase, set as setPhase } from './phase';\nlet pending = false;\nlet pendingMutations = [];\n// TODO(choumx): Change `mutation` to Array<Uint16> to prevent casting errors e.g. integer underflow, precision loss.\nexport function transfer(document, mutation) {\n    if (process.env.SERVER) {\n        return;\n    }\n    if (phase > 0 /* Phase.Initializing */ && document[58 /* TransferrableKeys.allowTransfer */]) {\n        pending = true;\n        pendingMutations = pendingMutations.concat(mutation);\n        Promise.resolve().then((_) => {\n            if (pending) {\n                const nodes = new Uint16Array(consumeNodes().reduce((acc, node) => acc.concat(node[8 /* TransferrableKeys.creationFormat */]), [])).buffer;\n                const mutations = new Uint16Array(pendingMutations).buffer;\n                document.postMessage({\n                    [54 /* TransferrableKeys.phase */]: phase,\n                    [12 /* TransferrableKeys.type */]: phase === 2 /* Phase.Mutating */ ? 3 /* MessageType.MUTATE */ : 2 /* MessageType.HYDRATE */,\n                    [37 /* TransferrableKeys.nodes */]: nodes,\n                    [41 /* TransferrableKeys.strings */]: consumeStrings(),\n                    [36 /* TransferrableKeys.mutations */]: mutations,\n                }, [nodes, mutations]);\n                pendingMutations = [];\n                pending = false;\n                setPhase(2 /* Phase.Mutating */);\n            }\n        });\n    }\n}\n//# sourceMappingURL=MutationTransfer.js.map","import { transfer } from './MutationTransfer';\nconst observers = [];\nlet pendingMutations = false;\n/**\n * @param observerTarget\n * @param target\n */\nconst matchesIndex = (observerTarget, target) => {\n    return !!observerTarget && observerTarget[7 /* TransferrableKeys.index */] === target[7 /* TransferrableKeys.index */];\n};\n/**\n * @param observer\n * @param record\n */\nconst pushMutation = (observer, record) => {\n    observer.pushRecord(record);\n    if (!pendingMutations) {\n        pendingMutations = true;\n        Promise.resolve().then(() => {\n            pendingMutations = false;\n            observers.forEach((observer) => observer.callback(observer.takeRecords()));\n        });\n    }\n};\n/**\n * @param document\n * @param record\n * @param transferable\n */\nexport function mutate(document, record, transferable) {\n    // Post-message `transferable` to the main thread to apply mutations.\n    transfer(document, transferable);\n    // The MutationRecord is only used for external callers of MutationObserver.\n    observers.forEach((observer) => {\n        for (let t = record.target; t; t = t.parentNode) {\n            if (matchesIndex(observer.target, t)) {\n                pushMutation(observer, record);\n                break;\n            }\n        }\n    });\n}\nexport class MutationObserver {\n    callback;\n    [42 /* TransferrableKeys.records */] = [];\n    target;\n    options;\n    constructor(callback) {\n        this.callback = callback;\n    }\n    /**\n     * Register the MutationObserver instance to observe a Nodes mutations.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     * @param target Node to observe DOM mutations\n     */\n    observe(target, options) {\n        this.disconnect();\n        this.target = target;\n        this.options = options || {};\n        observers.push(this);\n    }\n    /**\n     * Stop the MutationObserver instance from observing a Nodes mutations.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     */\n    disconnect() {\n        this.target = null;\n        const index = observers.indexOf(this);\n        if (index >= 0) {\n            observers.splice(index, 1);\n        }\n    }\n    /**\n     * Empties the MutationObserver instance's record queue and returns what was in there.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     * @return Mutation Records stored on this MutationObserver instance.\n     */\n    takeRecords() {\n        const records = this[42 /* TransferrableKeys.records */];\n        return records.splice(0, records.length);\n    }\n    /**\n     * NOTE: This method doesn't exist on native MutationObserver.\n     * @param record MutationRecord to store for this instance.\n     */\n    pushRecord(record) {\n        this[42 /* TransferrableKeys.records */].push(record);\n    }\n}\n//# sourceMappingURL=MutationObserver.js.map","import { store as storeNodeMapping, storeOverride as storeOverrideNodeMapping } from '../nodes';\nimport { toLower } from '../../utils';\nimport { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\n/**\n * Propagates a property change for a Node to itself and all childNodes.\n * @param node Node to start applying change to\n * @param property Property to modify\n * @param value New value to apply\n */\nexport const propagate = (node, property, value) => {\n    node[property] = value;\n    node.childNodes.forEach((child) => propagate(child, property, value));\n};\n// https://developer.mozilla.org/en-US/docs/Web/API/Node\n// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\n//\n// Please note, in this implmentation Node doesn't extend EventTarget.\n// This is intentional to reduce the number of classes.\nexport class Node {\n    ownerDocument; // TODO(choumx): Should be a Document.\n    // https://drafts.csswg.org/selectors-4/#scoping-root\n    [45 /* TransferrableKeys.scopingRoot */];\n    nodeType;\n    nodeName;\n    childNodes = [];\n    parentNode = null;\n    isConnected = false;\n    [7 /* TransferrableKeys.index */];\n    [9 /* TransferrableKeys.transferredFormat */];\n    [8 /* TransferrableKeys.creationFormat */];\n    [10 /* TransferrableKeys.handlers */] = {};\n    constructor(nodeType, nodeName, ownerDocument, overrideIndex) {\n        this.nodeType = nodeType;\n        this.nodeName = nodeName;\n        this.ownerDocument = ownerDocument || this;\n        this[45 /* TransferrableKeys.scopingRoot */] = this;\n        if (process.env.SERVER) {\n            return;\n        }\n        this[7 /* TransferrableKeys.index */] = overrideIndex ? storeOverrideNodeMapping(this, overrideIndex) : storeNodeMapping(this);\n        this[9 /* TransferrableKeys.transferredFormat */] = [this[7 /* TransferrableKeys.index */]];\n    }\n    // Unimplemented Properties\n    // Node.baseURI – https://developer.mozilla.org/en-US/docs/Web/API/Node/baseURI\n    // Unimplemented Methods\n    // Node.compareDocumentPosition() – https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n    // Node.getRootNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/getRootNode\n    // Node.isDefaultNamespace() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isDefaultNamespace\n    // Node.isEqualNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isEqualNode\n    // Node.isSameNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isSameNode\n    // Node.lookupPrefix() – https://developer.mozilla.org/en-US/docs/Web/API/Node/lookupPrefix\n    // Node.lookupNamespaceURI() – https://developer.mozilla.org/en-US/docs/Web/API/Node/lookupNamespaceURI\n    // Node.normalize() – https://developer.mozilla.org/en-US/docs/Web/API/Node/normalize\n    // Implemented at Element/Text layer\n    // Node.nodeValue – https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeValue\n    // Node.cloneNode – https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n    /**\n     * Getter returning the text representation of Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @return text from all childNodes.\n     */\n    get textContent() {\n        return this.getTextContent();\n    }\n    /**\n     * Use `this.getTextContent()` instead of `super.textContent` to avoid incorrect or expensive ES5 transpilation.\n     */\n    getTextContent() {\n        let textContent = '';\n        const childNodes = this.childNodes;\n        if (childNodes.length) {\n            childNodes.forEach((childNode) => (textContent += childNode.textContent));\n            return textContent;\n        }\n        return '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/firstChild\n     * @return Node's first child in the tree, or null if the node has no children.\n     */\n    get firstChild() {\n        return this.childNodes[0] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/lastChild\n     * @return The last child of a node, or null if there are no child elements.\n     */\n    get lastChild() {\n        return this.childNodes[this.childNodes.length - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/nextSibling\n     * @return node immediately following the specified one in it's parent's childNodes, or null if one doesn't exist.\n     */\n    get nextSibling() {\n        if (this.parentNode === null) {\n            return null;\n        }\n        const parentChildNodes = this.parentNode.childNodes;\n        return parentChildNodes[parentChildNodes.indexOf(this) + 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/previousSibling\n     * @return node immediately preceding the specified one in its parent's childNodes, or null if the specified node is the first in that list.\n     */\n    get previousSibling() {\n        if (this.parentNode === null) {\n            return null;\n        }\n        const parentChildNodes = this.parentNode.childNodes;\n        return parentChildNodes[parentChildNodes.indexOf(this) - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/hasChildNodes\n     * @return boolean if the Node has childNodes.\n     */\n    hasChildNodes() {\n        return this.childNodes.length > 0;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/contains\n     * @param otherNode\n     * @return whether a Node is a descendant of a given Node\n     */\n    contains(otherNode) {\n        if (otherNode === this) {\n            return true;\n        }\n        if (this.childNodes.length > 0) {\n            if (this.childNodes.includes(this)) {\n                return true;\n            }\n            return this.childNodes.some((child) => child.contains(otherNode));\n        }\n        return false;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/insertBefore\n     * @param child\n     * @param referenceNode\n     * @return child after it has been inserted.\n     */\n    insertBefore(child, referenceNode) {\n        if (child === null || child === this) {\n            // The new child cannot contain the parent.\n            return child;\n        }\n        if (child.nodeType === 11 /* NodeType.DOCUMENT_FRAGMENT_NODE */) {\n            child.childNodes.slice().forEach((node) => this.insertBefore(node, referenceNode));\n        }\n        else if (referenceNode == null) {\n            // When a referenceNode is not valid, appendChild(child).\n            return this.appendChild(child);\n        }\n        else if (this.childNodes.indexOf(referenceNode) >= 0) {\n            // Should only insertBefore direct children of this Node.\n            child.remove();\n            // Removing a child can cause this.childNodes to change, meaning we need to splice from its updated location.\n            this.childNodes.splice(this.childNodes.indexOf(referenceNode), 0, child);\n            this[56 /* TransferrableKeys.insertedNode */](child);\n            mutate(this.ownerDocument, {\n                addedNodes: [child],\n                nextSibling: referenceNode,\n                type: 2 /* MutationRecordType.CHILD_LIST */,\n                target: this,\n            }, [\n                2 /* TransferrableMutationType.CHILD_LIST */,\n                this[7 /* TransferrableKeys.index */],\n                referenceNode[7 /* TransferrableKeys.index */],\n                0,\n                1,\n                0,\n                child[7 /* TransferrableKeys.index */],\n            ]);\n            return child;\n        }\n        return null;\n    }\n    /**\n     * When a Node is inserted, this method is called (and can be extended by other classes)\n     * @param child\n     */\n    [56 /* TransferrableKeys.insertedNode */](child) {\n        child.parentNode = this;\n        propagate(child, 'isConnected', this.isConnected);\n        propagate(child, 45 /* TransferrableKeys.scopingRoot */, this[45 /* TransferrableKeys.scopingRoot */]);\n    }\n    /**\n     * When a node is removed, this method is called (and can be extended by other classes)\n     * @param child\n     */\n    [57 /* TransferrableKeys.removedNode */](child) {\n        child.parentNode = null;\n        propagate(child, 'isConnected', false);\n        propagate(child, 45 /* TransferrableKeys.scopingRoot */, child);\n    }\n    /**\n     * Adds the specified childNode argument as the last child to the current node.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/appendChild\n     * @param child Child Node to append to this Node.\n     * @return Node the appended node.\n     */\n    appendChild(child) {\n        if (child.nodeType === 11 /* NodeType.DOCUMENT_FRAGMENT_NODE */) {\n            child.childNodes.slice().forEach(this.appendChild, this);\n        }\n        else {\n            child.remove();\n            this.childNodes.push(child);\n            this[56 /* TransferrableKeys.insertedNode */](child);\n            const previousSibling = this.childNodes[this.childNodes.length - 2];\n            mutate(this.ownerDocument, {\n                addedNodes: [child],\n                previousSibling,\n                type: 2 /* MutationRecordType.CHILD_LIST */,\n                target: this,\n            }, [\n                2 /* TransferrableMutationType.CHILD_LIST */,\n                this[7 /* TransferrableKeys.index */],\n                0,\n                previousSibling ? previousSibling[7 /* TransferrableKeys.index */] : 0,\n                1,\n                0,\n                child[7 /* TransferrableKeys.index */],\n            ]);\n        }\n        return child;\n    }\n    /**\n     * Removes a child node from the current element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/removeChild\n     * @param child Child Node to remove from this Node.\n     * @return Node removed from the tree or null if the node wasn't attached to this tree.\n     */\n    removeChild(child) {\n        const index = this.childNodes.indexOf(child);\n        const exists = index >= 0;\n        if (exists) {\n            this.childNodes.splice(index, 1);\n            this[57 /* TransferrableKeys.removedNode */](child);\n            mutate(this.ownerDocument, {\n                removedNodes: [child],\n                type: 2 /* MutationRecordType.CHILD_LIST */,\n                target: this,\n            }, [2 /* TransferrableMutationType.CHILD_LIST */, this[7 /* TransferrableKeys.index */], 0, 0, 0, 1, child[7 /* TransferrableKeys.index */]]);\n            return child;\n        }\n        return null;\n    }\n    /**\n     * @param newChild\n     * @param oldChild\n     * @return child that was replaced.\n     * @note `HierarchyRequestError` not handled e.g. newChild is an ancestor of current node.\n     * @see https://dom.spec.whatwg.org/#concept-node-replace\n     */\n    replaceChild(newChild, oldChild) {\n        if (newChild === oldChild ||\n            // In DOM, this throws DOMException: \"The node to be replaced is not a child of this node.\"\n            oldChild.parentNode !== this ||\n            // In DOM, this throws DOMException: \"The new child element contains the parent.\"\n            newChild.contains(this)) {\n            return oldChild;\n        }\n        // If newChild already exists in the DOM, it is first removed.\n        // TODO: Consider using a mutation-free API here to avoid two mutations\n        // per replaceChild() call.\n        newChild.remove();\n        const index = this.childNodes.indexOf(oldChild);\n        this.childNodes.splice(index, 1, newChild);\n        this[57 /* TransferrableKeys.removedNode */](oldChild);\n        this[56 /* TransferrableKeys.insertedNode */](newChild);\n        mutate(this.ownerDocument, {\n            addedNodes: [newChild],\n            removedNodes: [oldChild],\n            type: 2 /* MutationRecordType.CHILD_LIST */,\n            nextSibling: this.childNodes[index + 1],\n            target: this,\n        }, [\n            2 /* TransferrableMutationType.CHILD_LIST */,\n            this[7 /* TransferrableKeys.index */],\n            this.childNodes[index + 1] ? this.childNodes[index + 1][7 /* TransferrableKeys.index */] : 0,\n            0,\n            1,\n            1,\n            newChild[7 /* TransferrableKeys.index */],\n            oldChild[7 /* TransferrableKeys.index */],\n        ]);\n        return oldChild;\n    }\n    /**\n     * Replaces the current node with the provided Array<node|string>.\n     * @param nodes\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/replaceWith\n     */\n    replaceWith(...nodes) {\n        const parent = this.parentNode;\n        let nodeIterator = nodes.length;\n        let currentNode;\n        if (!parent) {\n            return;\n        }\n        if (!nodeIterator) {\n            parent.removeChild(this);\n        }\n        while (nodeIterator--) {\n            currentNode = nodes[nodeIterator];\n            if (typeof currentNode !== 'object') {\n                currentNode = this.ownerDocument.createTextNode(currentNode);\n            }\n            // TODO: Investigate inserting all new nodes in a single operation.\n            if (!nodeIterator) {\n                // currentNode is the first argument (currentNode === arguments[0])\n                parent.replaceChild(currentNode, this);\n            }\n            else {\n                parent.insertBefore(currentNode, this.nextSibling);\n            }\n        }\n    }\n    /**\n     * Removes this Node from the tree it belogs too.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/remove\n     */\n    remove() {\n        if (this.parentNode) {\n            this.parentNode.removeChild(this);\n        }\n    }\n    /**\n     * Add an event listener to callback when a specific event type is dispatched.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n     * @param type Event Type (i.e 'click')\n     * @param handler Function called when event is dispatched.\n     */\n    addEventListener(type, handler, options = {}) {\n        const lowerType = toLower(type);\n        const storedType = storeString(lowerType);\n        const handlers = this[10 /* TransferrableKeys.handlers */][lowerType];\n        let index = 0;\n        if (handlers) {\n            index = handlers.push(handler);\n        }\n        else {\n            this[10 /* TransferrableKeys.handlers */][lowerType] = [handler];\n        }\n        transfer(this.ownerDocument, [\n            4 /* TransferrableMutationType.EVENT_SUBSCRIPTION */,\n            this[7 /* TransferrableKeys.index */],\n            0,\n            1,\n            storedType,\n            index,\n            Number(Boolean(options.capture)),\n            Number(Boolean(options.once)),\n            Number(Boolean(options.passive)),\n            Number(Boolean(options.workerDOMPreventDefault)),\n        ]);\n    }\n    /**\n     * Remove a registered event listener for a specific event type.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n     * @param type Event Type (i.e 'click')\n     * @param handler Function to stop calling when event is dispatched.\n     */\n    removeEventListener(type, handler) {\n        const lowerType = toLower(type);\n        const handlers = this[10 /* TransferrableKeys.handlers */][lowerType];\n        const index = !!handlers ? handlers.indexOf(handler) : -1;\n        if (index >= 0) {\n            handlers.splice(index, 1);\n            transfer(this.ownerDocument, [\n                4 /* TransferrableMutationType.EVENT_SUBSCRIPTION */,\n                this[7 /* TransferrableKeys.index */],\n                1,\n                0,\n                storeString(lowerType),\n                index,\n            ]);\n        }\n    }\n    /**\n     * Dispatch an event for this Node.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent\n     * @param event Event to dispatch to this node and potentially cascade to parents.\n     */\n    dispatchEvent(event) {\n        let target = (event.currentTarget = this);\n        let handlers;\n        let iterator;\n        do {\n            handlers = target && target[10 /* TransferrableKeys.handlers */] && target[10 /* TransferrableKeys.handlers */][toLower(event.type)];\n            if (handlers) {\n                for (iterator = handlers.length; iterator--;) {\n                    if ((handlers[iterator].call(target, event) === false || event[51 /* TransferrableKeys.end */]) && event.cancelable) {\n                        break;\n                    }\n                }\n            }\n        } while (event.bubbles && !(event.cancelable && event[50 /* TransferrableKeys.stop */]) && (target = target && target.parentNode));\n        return !event.defaultPrevented;\n    }\n}\n//# sourceMappingURL=Node.js.map","import { elementPredicate, matchAttrReference, matchChildrenElements } from './matchElements';\nimport { Node } from './Node';\nimport { containsIndexOf, toLower } from '../../utils';\n/*\nNormally ParentNode is implemented as a mixin, but since the Node class is an abstract\nthis makes it hard to build a mixin that recieves a base of the representations of Node needing\nthe mixed in functionality.\n\n// Partially implemented Mixin Methods\n// Both Element.querySelector() and Element.querySelector() are only implemented for the following simple selectors:\n// - Element selectors\n// - ID selectors\n// - Class selectors\n// - Attribute selectors\n// Element.querySelector() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n// Element.querySelectorAll() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n*/\nexport class ParentNode extends Node {\n    /**\n     * Getter returning children of an Element that are Elements themselves.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/children\n     * @return Element objects that are children of this ParentNode, omitting all of its non-element nodes.\n     */\n    get children() {\n        return this.childNodes.filter(elementPredicate);\n    }\n    /**\n     * Getter returning the number of child elements of a Element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/childElementCount\n     * @return number of child elements of the given Element.\n     */\n    get childElementCount() {\n        return this.children.length;\n    }\n    /**\n     * Getter returning the first Element in Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/firstElementChild\n     * @return first childNode that is also an element.\n     */\n    get firstElementChild() {\n        return this.childNodes.find(elementPredicate) || null;\n    }\n    /**\n     * Getter returning the last Element in Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/lastElementChild\n     * @return first childNode that is also an element.\n     */\n    get lastElementChild() {\n        const children = this.children;\n        return children[children.length - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n     * @param selector the selector we are trying to match for.\n     * @return Element with matching selector.\n     */\n    querySelector(selector) {\n        const matches = querySelectorAll(this, selector);\n        return matches ? matches[0] : null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n     * @param selector the selector we are trying to match for.\n     * @return Elements with matching selector.\n     */\n    querySelectorAll(selector) {\n        return querySelectorAll(this, selector);\n    }\n}\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n * @param node the node to filter results under.\n * @param selector the selector we are trying to match for.\n * @return Element with matching selector.\n */\nfunction querySelectorAll(node, selector) {\n    // As per spec: https://dom.spec.whatwg.org/#scope-match-a-selectors-string\n    // First, parse the selector\n    const selectorBracketIndexes = [selector.indexOf('['), selector.indexOf(']')];\n    const selectorHasAttr = containsIndexOf(selectorBracketIndexes[0]) && containsIndexOf(selectorBracketIndexes[1]);\n    const elementSelector = selectorHasAttr ? selector.substring(0, selectorBracketIndexes[0]) : selector;\n    const attrSelector = selectorHasAttr ? selector.substring(selectorBracketIndexes[0], selectorBracketIndexes[1] + 1) : null;\n    // TODO(nainar): Parsing selectors is needed when we add in more complex selectors.\n    // Second, find all the matching elements on the Document\n    let matcher;\n    if (selector[0] === '[') {\n        matcher = (element) => matchAttrReference(selector, element);\n    }\n    else if (elementSelector[0] === '#') {\n        matcher = selectorHasAttr\n            ? (element) => element.id === elementSelector.substr(1) && matchAttrReference(attrSelector, element)\n            : (element) => element.id === elementSelector.substr(1);\n    }\n    else if (elementSelector[0] === '.') {\n        matcher = selectorHasAttr\n            ? (element) => element.classList.contains(elementSelector.substr(1)) && matchAttrReference(attrSelector, element)\n            : (element) => element.classList.contains(elementSelector.substr(1));\n    }\n    else {\n        matcher = selectorHasAttr\n            ? (element) => element.localName === toLower(elementSelector) && matchAttrReference(attrSelector, element)\n            : (element) => element.localName === toLower(elementSelector);\n    }\n    // Third, filter to return elements that exist within the querying element's descendants.\n    return matcher\n        ? matchChildrenElements(node[45 /* TransferrableKeys.scopingRoot */], matcher).filter((element) => node !== element && node.contains(element))\n        : [];\n}\n//# sourceMappingURL=ParentNode.js.map","import { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\nconst WHITESPACE_REGEX = /\\s/;\n/**\n * Synchronizes the string getter/setter with the actual DOMTokenList instance.\n * @param defineOn Element or class extension to define getter/setter pair for token list access.\n * @param accessorKey Key used to access DOMTokenList directly from specific element.\n * @param propertyName Key used to access DOMTokenList as string getter/setter.\n */\nexport function synchronizedAccessor(defineOn, accessorKey, propertyName) {\n    Object.defineProperty(defineOn.prototype, propertyName, {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return this[accessorKey].value;\n        },\n        set(value) {\n            this[accessorKey].value = value;\n        },\n    });\n}\nexport class DOMTokenList {\n    [43 /* TransferrableKeys.tokens */] = [];\n    [13 /* TransferrableKeys.target */];\n    [18 /* TransferrableKeys.attributeName */];\n    [44 /* TransferrableKeys.storeAttribute */];\n    /**\n     * The DOMTokenList interface represents a set of space-separated tokens.\n     * It is indexed beginning with 0 as with JavaScript Array objects and is case-sensitive.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList\n     * @param target Specific Element instance to modify when value is changed.\n     * @param attributeName Name of the attribute used by Element to access DOMTokenList.\n     */\n    constructor(target, attributeName) {\n        this[13 /* TransferrableKeys.target */] = target;\n        this[18 /* TransferrableKeys.attributeName */] = attributeName;\n        this[44 /* TransferrableKeys.storeAttribute */] = target[44 /* TransferrableKeys.storeAttribute */].bind(target);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/value\n     * @return string representation of tokens (space delimitted).\n     */\n    get value() {\n        return this[43 /* TransferrableKeys.tokens */].join(' ');\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/length\n     * @return integer representing the number of objects stored in the object.\n     */\n    get length() {\n        return this[43 /* TransferrableKeys.tokens */].length;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/value\n     * @param collection String of values space delimited to replace the current DOMTokenList with.\n     */\n    set value(collection) {\n        const oldValue = this.value;\n        const newValue = collection.trim();\n        // Replace current tokens with new tokens.\n        this[43 /* TransferrableKeys.tokens */].splice(0, this[43 /* TransferrableKeys.tokens */].length, ...(newValue !== '' ? newValue.split(/\\s+/) : ''));\n        this[67 /* TransferrableKeys.mutated */](oldValue, newValue);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/item\n     * @param index number from DOMTokenList entities to retrieve value of\n     * @return value stored at the index requested, or undefined if beyond known range.\n     */\n    item(index) {\n        return this[43 /* TransferrableKeys.tokens */][index];\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/contains\n     * @param token value the DOMTokenList is tested for.\n     * @return boolean indicating if the token is contained by the DOMTokenList.\n     */\n    contains(token) {\n        return this[43 /* TransferrableKeys.tokens */].includes(token);\n    }\n    /**\n     * Add a token or tokens to the list.\n     * Note: All duplicates are removed, and the first token's position with the value is preserved.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/add\n     * @param tokens each token is a string to add to a TokenList.\n     */\n    add(...tokens) {\n        const oldValue = this.value;\n        this[43 /* TransferrableKeys.tokens */].splice(0, this[43 /* TransferrableKeys.tokens */].length, ...Array.from(new Set(this[43 /* TransferrableKeys.tokens */].concat(tokens))));\n        this[67 /* TransferrableKeys.mutated */](oldValue, this.value);\n    }\n    /**\n     * Remove a token or tokens from the list.\n     * Note: All duplicates are removed, and the first token's position with the value is preserved.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/remove\n     * @param tokens each token is a string to remove from a TokenList.\n     */\n    remove(...tokens) {\n        const oldValue = this.value;\n        this[43 /* TransferrableKeys.tokens */].splice(0, this[43 /* TransferrableKeys.tokens */].length, ...Array.from(new Set(this[43 /* TransferrableKeys.tokens */].filter((token) => !tokens.includes(token)))));\n        this[67 /* TransferrableKeys.mutated */](oldValue, this.value);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/replace\n     * @param token\n     * @param newToken\n     */\n    replace(token, newToken) {\n        if (!this[43 /* TransferrableKeys.tokens */].includes(token)) {\n            return;\n        }\n        const oldValue = this.value;\n        const set = new Set(this[43 /* TransferrableKeys.tokens */]);\n        if (token !== newToken) {\n            set.delete(token);\n            if (newToken !== '') {\n                set.add(newToken);\n            }\n        }\n        this[43 /* TransferrableKeys.tokens */].splice(0, this[43 /* TransferrableKeys.tokens */].length, ...Array.from(set));\n        this[67 /* TransferrableKeys.mutated */](oldValue, this.value);\n    }\n    /**\n     * Adds or removes a token based on its presence in the token list.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/toggle\n     * @param token string to add or remove from the token list\n     * @param force changes toggle into a one way-only operation. true => token added. false => token removed.\n     * @return true if the token is in the list following mutation, false if not.\n     */\n    toggle(token, force) {\n        if (WHITESPACE_REGEX.test(token)) {\n            throw new TypeError('Uncaught DOMException');\n        }\n        if (!this[43 /* TransferrableKeys.tokens */].includes(token)) {\n            if (force === undefined || !!force) {\n                // Note, this will add the token if force is undefined (not passed into the method), or truthy.\n                this.add(token);\n            }\n            return true;\n        }\n        else if (!force) {\n            // Note, this will remove the token if force is undefined (not passed into the method), or falsey.\n            this.remove(token);\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Report tokenList mutations to MutationObserver.\n     * @param oldValue value before mutation\n     * @param value value after mutation\n     * @private\n     */\n    [67 /* TransferrableKeys.mutated */](oldValue, value) {\n        this[44 /* TransferrableKeys.storeAttribute */](this[13 /* TransferrableKeys.target */].namespaceURI, this[18 /* TransferrableKeys.attributeName */], value);\n        mutate(this[13 /* TransferrableKeys.target */].ownerDocument, {\n            type: 0 /* MutationRecordType.ATTRIBUTES */,\n            target: this[13 /* TransferrableKeys.target */],\n            attributeName: this[18 /* TransferrableKeys.attributeName */],\n            value,\n            oldValue,\n        }, [\n            0 /* TransferrableMutationType.ATTRIBUTES */,\n            this[13 /* TransferrableKeys.target */][7 /* TransferrableKeys.index */],\n            storeString(this[18 /* TransferrableKeys.attributeName */]),\n            0,\n            value !== null ? storeString(value) + 1 : 0,\n        ]);\n    }\n}\n//# sourceMappingURL=DOMTokenList.js.map","import { keyValueString } from '../../utils';\nexport const toString = (attributes) => attributes.map((attr) => keyValueString(attr.name, attr.value)).join(' ');\nexport const matchPredicate = (namespaceURI, name) => (attr) => attr.namespaceURI === namespaceURI && attr.name === name;\n//# sourceMappingURL=Attr.js.map","import { mutate } from '../MutationObserver';\nimport { toLower } from '../../utils';\nimport { store as storeString } from '../strings';\nconst hyphenateKey = (key) => toLower(key.replace(/(webkit|ms|moz|khtml)/g, '-$1').replace(/([a-zA-Z])(?=[A-Z])/g, '$1-'));\nexport const appendKeys = (keys) => {\n    const keysToAppend = keys.filter((key) => isNaN(key) && !CSSStyleDeclaration.prototype.hasOwnProperty(key));\n    if (keysToAppend.length <= 0) {\n        return;\n    }\n    const previousPrototypeLength = (CSSStyleDeclaration.prototype.length || 0);\n    if (previousPrototypeLength !== 0) {\n        CSSStyleDeclaration.prototype.length = previousPrototypeLength + keysToAppend.length;\n    }\n    else {\n        Object.defineProperty(CSSStyleDeclaration.prototype, 'length', {\n            configurable: true,\n            writable: true,\n            value: keysToAppend.length,\n        });\n    }\n    keysToAppend.forEach((key, index) => {\n        const hyphenatedKey = hyphenateKey(key);\n        CSSStyleDeclaration.prototype[index + previousPrototypeLength] = hyphenatedKey;\n        Object.defineProperties(CSSStyleDeclaration.prototype, {\n            [key]: {\n                get() {\n                    return this.getPropertyValue(hyphenatedKey);\n                },\n                set(value) {\n                    this.setProperty(hyphenatedKey, value);\n                },\n            },\n        });\n    });\n};\nexport class CSSStyleDeclaration {\n    [3 /* TransferrableKeys.properties */] = {};\n    [44 /* TransferrableKeys.storeAttribute */];\n    [13 /* TransferrableKeys.target */];\n    constructor(target) {\n        this[44 /* TransferrableKeys.storeAttribute */] = target[44 /* TransferrableKeys.storeAttribute */].bind(target);\n        this[13 /* TransferrableKeys.target */] = target;\n    }\n    /**\n     * Retrieve the value for a given property key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/getPropertyValue\n     * @param key the name of the property to retrieve the value for.\n     * @return value stored for the provided key.\n     */\n    getPropertyValue(key) {\n        return this[3 /* TransferrableKeys.properties */][key] || '';\n    }\n    /**\n     * Remove a value for a given property key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/removeProperty\n     * @param key the name of the property to retrieve the value for.\n     * @return previously stored value for the provided key.\n     */\n    removeProperty(key) {\n        const oldValue = this.getPropertyValue(key);\n        this[3 /* TransferrableKeys.properties */][key] = null;\n        this.mutated(this.cssText);\n        return oldValue;\n    }\n    /**\n     * Stores a given value for the provided key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/setProperty\n     * @param key modify this key\n     * @param value store this value\n     */\n    setProperty(key, value) {\n        this[3 /* TransferrableKeys.properties */][key] = value;\n        this.mutated(this.cssText);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/cssText\n     * @return css text string representing known and valid style declarations.\n     */\n    get cssText() {\n        let value;\n        let returnValue = '';\n        for (const key in this[3 /* TransferrableKeys.properties */]) {\n            if ((value = this.getPropertyValue(key)) !== '') {\n                returnValue += `${key}: ${value}; `;\n            }\n        }\n        return returnValue.trim();\n    }\n    /**\n     * Replace all style declarations with new values parsed from a cssText string.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/cssText\n     * @param value css text string to parse and store\n     */\n    set cssText(value) {\n        // value should have an \"unknown\" type but get/set can't have different types.\n        // https://github.com/Microsoft/TypeScript/issues/2521\n        const stringValue = typeof value === 'string' ? value : '';\n        this[3 /* TransferrableKeys.properties */] = {};\n        const values = stringValue.split(/[:;]/);\n        const length = values.length;\n        for (let index = 0; index + 1 < length; index += 2) {\n            this[3 /* TransferrableKeys.properties */][toLower(values[index].trim())] = values[index + 1].trim();\n        }\n        this.mutated(this.cssText);\n    }\n    /**\n     * Report CSSStyleDeclaration mutations to MutationObserver.\n     * @param value value after mutation\n     * @private\n     * // TODO(KB): Write a test to ensure mutations are fired for CSSStyleDeclaration changes.\n     */\n    mutated(value) {\n        const oldValue = this[44 /* TransferrableKeys.storeAttribute */](this[13 /* TransferrableKeys.target */].namespaceURI, 'style', value);\n        mutate(this[13 /* TransferrableKeys.target */].ownerDocument, {\n            type: 0 /* MutationRecordType.ATTRIBUTES */,\n            target: this[13 /* TransferrableKeys.target */],\n            attributeName: 'style',\n            value,\n            oldValue,\n        }, [\n            0 /* TransferrableMutationType.ATTRIBUTES */,\n            this[13 /* TransferrableKeys.target */][7 /* TransferrableKeys.index */],\n            storeString('style'),\n            0,\n            value !== null ? storeString(value) + 1 : 0,\n        ]);\n    }\n}\n//# sourceMappingURL=CSSStyleDeclaration.js.map","import { toLower } from '../../utils';\n// TODO: Do all boolean attributes have boolean properties?\n// TODO: Do enumerated attributes with non-boolean properties exist?\nexport const reflectProperties = (properties, defineOn) => {\n    properties.forEach((pair) => {\n        for (const property in pair) {\n            const { 0: defaultValue, 1: attributeName = toLower(property), 2: keywords } = pair[property];\n            // Boolean attributes only care about presence, not attribute value.\n            // https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes\n            const isBooleanAttribute = typeof defaultValue === 'boolean';\n            Object.defineProperty(defineOn.prototype, property, {\n                enumerable: true,\n                get() {\n                    const element = this;\n                    const attributeValue = element.getAttribute(attributeName);\n                    if (keywords) {\n                        return element.hasAttribute(attributeName) ? attributeValue === keywords[0] : defaultValue;\n                    }\n                    if (isBooleanAttribute) {\n                        return element.hasAttribute(attributeName);\n                    }\n                    const castableValue = attributeValue || defaultValue;\n                    return typeof defaultValue === 'number' ? Number(castableValue) : String(castableValue);\n                },\n                set(value) {\n                    const element = this;\n                    if (keywords) {\n                        element.setAttribute(attributeName, value ? keywords[0] : keywords[1]);\n                    }\n                    else if (isBooleanAttribute) {\n                        value ? element.setAttribute(attributeName, '') : element.removeAttribute(attributeName);\n                    }\n                    else {\n                        element.setAttribute(attributeName, String(value));\n                    }\n                },\n            });\n        }\n    });\n};\n//# sourceMappingURL=enhanceElement.js.map","export const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n//# sourceMappingURL=TransferrableNodes.js.map","import { SVG_NAMESPACE, HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { toLower, toUpper } from '../../utils';\nfunction arr_back(arr) {\n    return arr[arr.length - 1];\n}\n// https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\nconst kMarkupPattern = /<!--([^]*)-->|<(\\/?)([a-z][-.0-9_a-z]*)([^>]*?)(\\/?)>/gi;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\nconst kAttributePattern = /(^|\\s)([^\\s\"'>\\/=]+)\\s*=\\s*(\"([^\"]+)\"|'([^']+)'|(\\S+))/gi;\nconst kSelfClosingElements = {\n    AREA: true,\n    BASE: true,\n    BR: true,\n    COL: true,\n    HR: true,\n    IMG: true,\n    INPUT: true,\n    LINK: true,\n    META: true,\n    PARAM: true,\n    SOURCE: true,\n    TRACK: true,\n    WBR: true,\n};\nconst kElementsClosedByOpening = {\n    LI: { LI: true },\n    DT: { DT: true, DD: true },\n    DD: { DD: true, DT: true },\n    P: {\n        ADDRESS: true,\n        ARTICLE: true,\n        ASIDE: true,\n        BLOCKQUOTE: true,\n        DETAILS: true,\n        DIV: true,\n        DL: true,\n        FIELDSET: true,\n        FIGCAPTION: true,\n        FIGURE: true,\n        FOOTER: true,\n        FORM: true,\n        H1: true,\n        H2: true,\n        H3: true,\n        H4: true,\n        H5: true,\n        H6: true,\n        HEADER: true,\n        HR: true,\n        MAIN: true,\n        NAV: true,\n        OL: true,\n        P: true,\n        PRE: true,\n        SECTION: true,\n        TABLE: true,\n        UL: true,\n    },\n    RT: { RT: true, RP: true },\n    RP: { RT: true, RP: true },\n    OPTGROUP: { OPTGROUP: true },\n    OPTION: { OPTION: true, OPTGROUP: true },\n    THEAD: { TBODY: true, TFOOT: true },\n    TBODY: { TBODY: true, TFOOT: true },\n    TR: { TR: true },\n    TD: { TD: true, TH: true },\n    TH: { TD: true, TH: true },\n};\nconst kElementsClosedByClosing = {\n    LI: { UL: true, OL: true },\n    A: { DIV: true },\n    B: { DIV: true },\n    I: { DIV: true },\n    P: { DIV: true },\n    TD: { TR: true, TABLE: true },\n    TH: { TR: true, TABLE: true },\n};\nconst kBlockTextElements = {\n    SCRIPT: true,\n    NOSCRIPT: true,\n    STYLE: true,\n    PRE: true,\n};\n/**\n * Parses HTML and returns a root element\n * Parse a chuck of HTML source.\n * @param  {string} data HTML in string format.\n * @param {!Element} root The element to use as root.\n * @return {Element}      root element\n */\nexport function parse(data, rootElement) {\n    const ownerDocument = rootElement.ownerDocument;\n    const root = ownerDocument.createElementNS(rootElement.namespaceURI, rootElement.localName);\n    let currentParent = root;\n    let currentNamespace = root.namespaceURI;\n    const stack = [root];\n    let lastTextPos = 0;\n    let match;\n    data = '<q>' + data + '</q>';\n    const tagsClosed = [];\n    if (currentNamespace !== SVG_NAMESPACE && currentNamespace !== HTML_NAMESPACE) {\n        throw new Error('Namespace not supported: ' + currentNamespace);\n    }\n    while ((match = kMarkupPattern.exec(data))) {\n        const commentContents = match[1]; // <!--contents-->\n        const beginningSlash = match[2]; // ... </ ...\n        const tagName = match[3];\n        const matchAttributes = match[4];\n        const endSlash = match[5]; // ... /> ...\n        if (lastTextPos < match.index) {\n            // if has content\n            const text = data.slice(lastTextPos, match.index);\n            currentParent.appendChild(ownerDocument.createTextNode(decodeEntities(text)));\n        }\n        lastTextPos = kMarkupPattern.lastIndex;\n        if (commentContents !== undefined) {\n            // this is a comment\n            currentParent.appendChild(ownerDocument.createComment(commentContents));\n            continue;\n        }\n        const normalizedTagName = toUpper(tagName);\n        if (normalizedTagName === 'SVG') {\n            currentNamespace = beginningSlash ? HTML_NAMESPACE : SVG_NAMESPACE;\n        }\n        if (!beginningSlash) {\n            // not </ tags\n            if (!endSlash && kElementsClosedByOpening[currentParent.tagName]) {\n                if (kElementsClosedByOpening[currentParent.tagName][normalizedTagName]) {\n                    stack.pop();\n                    currentParent = arr_back(stack);\n                }\n            }\n            const childToAppend = ownerDocument.createElementNS(currentNamespace, currentNamespace === HTML_NAMESPACE ? toLower(tagName) : tagName);\n            for (let attMatch; (attMatch = kAttributePattern.exec(matchAttributes));) {\n                const attrName = attMatch[2];\n                const attrValue = attMatch[4] || attMatch[5] || attMatch[6];\n                childToAppend.setAttribute(attrName, attrValue);\n            }\n            currentParent = currentParent.appendChild(childToAppend);\n            stack.push(currentParent);\n            if (kBlockTextElements[normalizedTagName]) {\n                // a little test to find next </script> or </style> ...\n                const closeMarkup = '</' + toLower(normalizedTagName) + '>';\n                const index = data.indexOf(closeMarkup, kMarkupPattern.lastIndex);\n                if (index == -1) {\n                    throw new Error('Close markup not found.');\n                }\n                else {\n                    kMarkupPattern.lastIndex = index;\n                }\n            }\n        }\n        if (tagName === 'foreignObject') {\n            currentNamespace = beginningSlash ? SVG_NAMESPACE : HTML_NAMESPACE;\n        }\n        if (beginningSlash || endSlash || kSelfClosingElements[normalizedTagName]) {\n            // </ or /> or <br> etc.\n            while (true) {\n                if (stack.length <= 1) {\n                    break;\n                }\n                if (toUpper(currentParent.nodeName) == normalizedTagName) {\n                    stack.pop();\n                    currentParent = arr_back(stack);\n                    break;\n                }\n                else {\n                    // Trying to close current tag, and move on\n                    if (kElementsClosedByClosing[currentParent.tagName]) {\n                        if (kElementsClosedByClosing[currentParent.tagName][normalizedTagName]) {\n                            stack.pop();\n                            currentParent = arr_back(stack);\n                            continue;\n                        }\n                    }\n                    // Use aggressive strategy to handle unmatching markups.\n                    break;\n                }\n            }\n        }\n    }\n    for (const node of stack) {\n        if (tagsClosed[tagsClosed.length - 1] == node.nodeName) {\n            stack.pop();\n            tagsClosed.pop();\n            currentParent = arr_back(stack);\n        }\n        else\n            break;\n    }\n    const valid = stack.length === 1;\n    if (!valid) {\n        throw new Error('Attempting to parse invalid HTML content.');\n    }\n    const wrapper = root.firstChild;\n    if (wrapper) {\n        wrapper.parentNode = null;\n        wrapper.childNodes.forEach((node) => {\n            node.parentNode = null;\n        });\n        return wrapper;\n    }\n    throw new Error('Attempting to parse invalid HTML.');\n}\n/**\n * Decodes HTML Entities.\n * Currently only works for numeric entities, as well as the 4 named entities\n * required for encoding HTML: &, \", <, >.\n * See https://developer.mozilla.org/en-US/docs/Glossary/Entity.\n *\n * TODO: create solution for other named entities.\n */\nconst RESERVED_CHARACTERS = {\n    __proto__: null,\n    amp: '&',\n    lt: '<',\n    gt: '>',\n    quot: '\"',\n};\nfunction decodeEntities(html) {\n    return html.replace(/&(?:(#x?[\\da-f]+)|([\\w]+));?/gi, function (s, numericEntity, namedEntity) {\n        // Numeric entity\n        if (numericEntity) {\n            let code = numericEntity.charAt(1).toLowerCase() === 'x' ? parseInt(numericEntity.substr(2), 16) : parseInt(numericEntity.substr(1), 10);\n            // 1114111 is the largest valid unicode codepoint.\n            if (isNaN(code) || code > 1114111) {\n                return s;\n            }\n            return String.fromCodePoint(code) || s;\n        }\n        // Named entity. Only HTML reserved entities are currently supported.\n        if (namedEntity) {\n            return RESERVED_CHARACTERS[namedEntity.toLowerCase()] || s;\n        }\n        return s;\n    });\n}\n//# sourceMappingURL=html-parser.js.map","/**\n * @fileoverview\n * WorkerDOM's `Event` class. `CustomEvent` is available natively in web worker.\n */\nimport { get } from './nodes';\nexport class Event {\n    bubbles;\n    cancelable;\n    cancelBubble;\n    currentTarget;\n    defaultPrevented;\n    eventPhase;\n    isTrusted;\n    returnValue;\n    // public srcElement: Element | null;\n    // TODO(KB): Restore srcElement.\n    target;\n    timeStamp;\n    type;\n    scoped;\n    [50 /* TransferrableKeys.stop */] = false;\n    [51 /* TransferrableKeys.end */] = false;\n    pageX;\n    pageY;\n    offsetX;\n    offsetY;\n    touches;\n    changedTouches;\n    constructor(type, opts) {\n        this.type = type;\n        this.bubbles = !!opts.bubbles;\n        this.cancelable = !!opts.cancelable;\n    }\n    stopPropagation() {\n        this[50 /* TransferrableKeys.stop */] = true;\n    }\n    stopImmediatePropagation() {\n        this[51 /* TransferrableKeys.end */] = this[50 /* TransferrableKeys.stop */] = true;\n    }\n    preventDefault() {\n        this.defaultPrevented = true;\n    }\n    /** Event.initEvent() is deprecated but supported here for legacy usage.  */\n    initEvent(type, bubbles, cancelable) {\n        this.type = type;\n        this.bubbles = bubbles;\n        this.cancelable = cancelable;\n    }\n}\n/**\n * Determine the target for a TransferrableEvent.\n * @param document Event intended within the scope of this document.\n * @param event\n */\nconst targetFromTransfer = (document, event) => {\n    if (event[13 /* TransferrableKeys.target */] !== null) {\n        const index = event[13 /* TransferrableKeys.target */][0];\n        // If the target was sent as index 0, use the current document.\n        return get(index !== 0 ? index : document[7 /* TransferrableKeys.index */]);\n    }\n    return null;\n};\n/**\n *\n * @param document\n * @param event\n */\nconst touchListFromTransfer = (document, event, key) => {\n    if (event[key] !== undefined) {\n        const touchListKeys = Object.keys(event[key]);\n        const list = {\n            length: touchListKeys.length,\n            item(index) {\n                return this[index] || null;\n            },\n        };\n        touchListKeys.forEach((touchListKey) => {\n            const numericKey = Number(touchListKey);\n            const transferredTouch = event[key][numericKey];\n            list[numericKey] = {\n                identifier: transferredTouch[0],\n                screenX: transferredTouch[1],\n                screenY: transferredTouch[2],\n                clientX: transferredTouch[3],\n                clientY: transferredTouch[4],\n                pageX: transferredTouch[5],\n                pageY: transferredTouch[6],\n                target: get(transferredTouch[7] !== 0 ? transferredTouch[7] : document[7 /* TransferrableKeys.index */]),\n            };\n        });\n        return list;\n    }\n    return undefined;\n};\n/**\n * When an event is dispatched from the main thread, it needs to be propagated in the worker thread.\n * Propagate adds an event listener to the worker global scope and uses the WorkerDOM Node.dispatchEvent\n * method to dispatch the transfered event in the worker thread.\n */\nexport function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* TransferrableKeys.type */] !== 1 /* MessageType.EVENT */) {\n            return;\n        }\n        const event = data[39 /* TransferrableKeys.event */];\n        const node = get(event[7 /* TransferrableKeys.index */]);\n        if (node !== null) {\n            node.dispatchEvent(Object.assign(new Event(event[12 /* TransferrableKeys.type */], {\n                bubbles: event[25 /* TransferrableKeys.bubbles */],\n                cancelable: event[26 /* TransferrableKeys.cancelable */],\n            }), {\n                cancelBubble: event[27 /* TransferrableKeys.cancelBubble */],\n                defaultPrevented: event[29 /* TransferrableKeys.defaultPrevented */],\n                eventPhase: event[30 /* TransferrableKeys.eventPhase */],\n                isTrusted: event[31 /* TransferrableKeys.isTrusted */],\n                returnValue: event[32 /* TransferrableKeys.returnValue */],\n                target: targetFromTransfer(global.document, event),\n                timeStamp: event[33 /* TransferrableKeys.timeStamp */],\n                scoped: event[34 /* TransferrableKeys.scoped */],\n                keyCode: event[35 /* TransferrableKeys.keyCode */],\n                pageX: event[60 /* TransferrableKeys.pageX */],\n                pageY: event[61 /* TransferrableKeys.pageY */],\n                offsetX: event[65 /* TransferrableKeys.offsetX */],\n                offsetY: event[66 /* TransferrableKeys.offsetY */],\n                touches: touchListFromTransfer(global.document, event, 62 /* TransferrableKeys.touches */),\n                changedTouches: touchListFromTransfer(global.document, event, 63 /* TransferrableKeys.changedTouches */),\n            }));\n        }\n    });\n}\n//# sourceMappingURL=Event.js.map","export function getPreviousElementSibling(node) {\n    let parentNodes = node.parentNode && node.parentNode.childNodes;\n    if (!parentNodes) {\n        return null;\n    }\n    for (let i = parentNodes.indexOf(node) - 1; i >= 0; i--) {\n        let node = parentNodes[i];\n        if (node.nodeType === 1 /* NodeType.ELEMENT_NODE */) {\n            return node;\n        }\n    }\n    return null;\n}\nexport function getNextElementSibling(node) {\n    let parentNodes = node.parentNode && node.parentNode.childNodes;\n    if (!parentNodes) {\n        return null;\n    }\n    for (let i = parentNodes.indexOf(node) + 1; i < parentNodes.length; i++) {\n        let node = parentNodes[i];\n        if (node.nodeType === 1 /* NodeType.ELEMENT_NODE */) {\n            return node;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=elementSibling.js.map","import { ParentNode } from './ParentNode';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nimport { toString as attrsToString, matchPredicate as matchAttrPredicate } from './Attr';\nimport { mutate } from '../MutationObserver';\nimport { toLower, toUpper } from '../../utils';\nimport { CSSStyleDeclaration } from '../css/CSSStyleDeclaration';\nimport { matchChildrenElements } from './matchElements';\nimport { reflectProperties } from './enhanceElement';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\nimport { HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { parse } from '../../third_party/html-parser/html-parser';\nimport { propagate } from './Node';\nimport { Event } from '../Event';\nimport { getNextElementSibling, getPreviousElementSibling } from './elementSibling';\nexport const NS_NAME_TO_CLASS = {};\nexport const registerSubclass = (localName, subclass, namespace = HTML_NAMESPACE) => (NS_NAME_TO_CLASS[`${namespace}:${localName}`] = subclass);\nexport function definePropertyBackedAttributes(defineOn, attributes) {\n    const sub = Object.create(defineOn[46 /* TransferrableKeys.propertyBackedAttributes */]);\n    defineOn[46 /* TransferrableKeys.propertyBackedAttributes */] = Object.assign(sub, attributes);\n}\n/**\n * There are six kinds of elements, each having different start/close tag semantics.\n * @see https://html.spec.whatwg.org/multipage/syntax.html#elements-2\n */\nvar ElementKind;\n(function (ElementKind) {\n    ElementKind[ElementKind[\"NORMAL\"] = 0] = \"NORMAL\";\n    ElementKind[ElementKind[\"VOID\"] = 1] = \"VOID\";\n    // The following element kinds have no special handling in worker-dom yet\n    // and are lumped into the NORMAL kind.\n    /*\n    FOREIGN,\n    TEMPLATE,\n    RAW_TEXT,\n    ESCAPABLE_RAW,\n    */\n})(ElementKind || (ElementKind = {}));\n/**\n * @see https://html.spec.whatwg.org/multipage/syntax.html#void-elements\n */\nconst VOID_ELEMENTS = ['AREA', 'BASE', 'BR', 'COL', 'EMBED', 'HR', 'IMG', 'INPUT', 'LINK', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR'];\nexport class Element extends ParentNode {\n    _classList;\n    static [46 /* TransferrableKeys.propertyBackedAttributes */] = {\n        class: [(el) => el.classList.value, (el, value) => (el.classList.value = value)],\n        style: [(el) => el.cssText, (el, value) => (el.cssText = value)],\n    };\n    localName;\n    attributes = [];\n    namespaceURI;\n    style_;\n    /**\n     * Element \"kind\" dictates certain behaviors e.g. start/end tag semantics.\n     * @see https://html.spec.whatwg.org/multipage/syntax.html#elements-2\n     */\n    kind;\n    constructor(nodeType, localName, namespaceURI, ownerDocument, overrideIndex) {\n        super(nodeType, toUpper(localName), ownerDocument, overrideIndex);\n        this.namespaceURI = namespaceURI || HTML_NAMESPACE;\n        this.localName = localName;\n        this.kind = VOID_ELEMENTS.includes(this.tagName) ? ElementKind.VOID : ElementKind.NORMAL;\n        this[8 /* TransferrableKeys.creationFormat */] = [\n            this[7 /* TransferrableKeys.index */],\n            this.nodeType,\n            storeString(this.localName),\n            0,\n            this.namespaceURI === null ? 0 : storeString(this.namespaceURI),\n        ];\n    }\n    // We lazily instantiate the CSSStyleDeclaration to keep element creation cheap\n    // See https://github.com/ampproject/worker-dom/pull/1096 for context.\n    get style() {\n        if (!this.style_) {\n            this.style_ = new CSSStyleDeclaration(this);\n        }\n        return this.style_;\n    }\n    // Unimplemented properties\n    // Element.clientHeight – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientHeight\n    // Element.clientLeft – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientLeft\n    // Element.clientTop – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientTop\n    // Element.clientWidth – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientWidth\n    // set Element.innerHTML – https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n    // Element.prefix – https://developer.mozilla.org/en-US/docs/Web/API/Element/prefix\n    // Element.scrollHeight – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight\n    // Element.scrollLeft – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeft\n    // Element.scrollLeftMax – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeftMax\n    // Element.scrollTop – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTop\n    // Element.scrollTopMax – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTopMax\n    // Element.scrollWidth – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollWidth\n    // Element.shadowRoot – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/shadowRoot\n    // Element.slot – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/slot\n    // Element.tabStop – https://developer.mozilla.org/en-US/docs/Web/API/Element/tabStop\n    // Element.undoManager – https://developer.mozilla.org/en-US/docs/Web/API/Element/undoManager\n    // Element.undoScope – https://developer.mozilla.org/en-US/docs/Web/API/Element/undoScope\n    // Unimplemented Methods\n    // Element.attachShadow() – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow\n    // Element.animate() – https://developer.mozilla.org/en-US/docs/Web/API/Element/animate\n    // Element.closest() – https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n    // Element.getAttributeNames() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNames\n    // Element.getBoundingClientRect() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    // Element.getClientRects() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getClientRects\n    // Element.getElementsByTagNameNS() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagNameNS\n    // Element.insertAdjacentElement() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentElement\n    // Element.insertAdjacentHTML() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentHTML\n    // Element.insertAdjacentText() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentText\n    // Element.matches() – https://developer.mozilla.org/en-US/docs/Web/API/Element/matches\n    // Element.releasePointerCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/releasePointerCapture\n    // Element.requestFullscreen() – https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n    // Element.requestPointerLock() – https://developer.mozilla.org/en-US/docs/Web/API/Element/requestPointerLock\n    // Element.scrollIntoView() – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n    // Element.setCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/setCapture\n    // Element.setPointerCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/setPointerCapture\n    // Partially implemented Mixin Methods\n    // Both Element.querySelector() and Element.querySelector() are only implemented for the following simple selectors:\n    // - Element selectors\n    // - ID selectors\n    // - Class selectors\n    // - Attribute selectors\n    // Element.querySelector() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n    // Element.querySelectorAll() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n    // Mixins not implemented\n    // Slotable.assignedSlot – https://developer.mozilla.org/en-US/docs/Web/API/Slotable/assignedSlot\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/previousElementSibling\n     * Returns the Element immediately prior to the specified one in its parent's children list,\n     * or null if the specified element is the first one in the list.\n     */\n    get previousElementSibling() {\n        return getPreviousElementSibling(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/nextElementSibling\n     * Returns the Element immediately following the specified one in its parent's children list,\n     * or null if the specified element is the last one in the list.\n     */\n    get nextElementSibling() {\n        return getNextElementSibling(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/outerHTML\n     * @return string representation of serialized HTML describing the Element and its descendants.\n     */\n    get outerHTML() {\n        const tag = this.localName || this.tagName;\n        const start = `<${[tag, attrsToString(this.attributes)].join(' ').trim()}>`;\n        const contents = this.innerHTML;\n        if (!contents) {\n            if (this.kind === ElementKind.VOID) {\n                // Void elements e.g. <input> only have a start tag (unless children are added programmatically).\n                // https://html.spec.whatwg.org/multipage/syntax.html#void-elements\n                return start;\n            }\n        }\n        return start + contents + `</${tag}>`;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n     * @return string representation of serialized HTML describing the Element's descendants.\n     */\n    get innerHTML() {\n        const childNodes = this.childNodes;\n        if (childNodes.length) {\n            return childNodes\n                .map((child) => {\n                switch (child.nodeType) {\n                    case 3 /* NodeType.TEXT_NODE */:\n                        return child.textContent;\n                    case 8 /* NodeType.COMMENT_NODE */:\n                        return `<!--${child.textContent}-->`;\n                    default:\n                        return child.outerHTML;\n                }\n            })\n                .join('');\n        }\n        return '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n     * @param html The raw html string to parse.\n     */\n    set innerHTML(html) {\n        const root = parse(html, this);\n        // remove previous children\n        this.childNodes.forEach((n) => {\n            propagate(n, 'isConnected', false);\n            propagate(n, 45 /* TransferrableKeys.scopingRoot */, n);\n        });\n        mutate(this.ownerDocument, {\n            removedNodes: this.childNodes,\n            type: 2 /* MutationRecordType.CHILD_LIST */,\n            target: this,\n        }, [\n            2 /* TransferrableMutationType.CHILD_LIST */,\n            this[7 /* TransferrableKeys.index */],\n            0,\n            0,\n            0,\n            this.childNodes.length,\n            ...this.childNodes.map((node) => node[7 /* TransferrableKeys.index */]),\n        ]);\n        this.childNodes = [];\n        // add new children\n        root.childNodes.forEach((child) => this.appendChild(child));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @param text new text replacing all childNodes content.\n     */\n    set textContent(text) {\n        // TODO(KB): Investigate removing all children in a single .splice to childNodes.\n        this.childNodes.slice().forEach((child) => child.remove());\n        this.appendChild(this.ownerDocument.createTextNode(text));\n    }\n    /**\n     * Getter returning the text representation of Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @return text from all childNodes.\n     */\n    get textContent() {\n        return this.getTextContent();\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/tagName\n     * @return string tag name (i.e 'div')\n     */\n    get tagName() {\n        return this.nodeName;\n    }\n    /**\n     * Sets the value of an attribute on this element using a null namespace.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute\n     * @param name attribute name\n     * @param value attribute value\n     */\n    setAttribute(name, value) {\n        this.setAttributeNS(HTML_NAMESPACE, name, value);\n    }\n    /**\n     * Get the value of an attribute on this Element with the null namespace.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute\n     * @param name attribute name\n     * @return value of a specified attribute on the element, or null if the attribute doesn't exist.\n     */\n    getAttribute(name) {\n        return this.getAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * Remove an attribute from this element in the null namespace.\n     *\n     * Method returns void, so it is not chainable.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute\n     * @param name attribute name\n     */\n    removeAttribute(name) {\n        this.removeAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttribute\n     * @param name attribute name\n     * @return Boolean indicating if the element has the specified attribute.\n     */\n    hasAttribute(name) {\n        return this.hasAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttributes\n     * @return Boolean indicating if the element has any attributes.\n     */\n    hasAttributes() {\n        return this.attributes.length > 0;\n    }\n    /**\n     * Sets the value of an attribute on this Element with the provided namespace.\n     *\n     * If the attribute already exists, the value is updated; otherwise a new attribute is added with the specified name and value.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttributeNS\n     * @param namespaceURI\n     * @param name attribute name\n     * @param value attribute value\n     */\n    setAttributeNS(namespaceURI, name, value) {\n        const valueAsString = String(value);\n        const propertyBacked = this.constructor[46 /* TransferrableKeys.propertyBackedAttributes */][name];\n        if (propertyBacked !== undefined) {\n            if (!this.attributes.find(matchAttrPredicate(namespaceURI, name))) {\n                this.attributes.push({\n                    namespaceURI,\n                    name,\n                    value: valueAsString,\n                });\n            }\n            propertyBacked[1](this, valueAsString);\n            return;\n        }\n        const oldValue = this[44 /* TransferrableKeys.storeAttribute */](namespaceURI, name, valueAsString);\n        mutate(this.ownerDocument, {\n            type: 0 /* MutationRecordType.ATTRIBUTES */,\n            target: this,\n            attributeName: name,\n            attributeNamespace: namespaceURI,\n            value: valueAsString,\n            oldValue,\n        }, [\n            0 /* TransferrableMutationType.ATTRIBUTES */,\n            this[7 /* TransferrableKeys.index */],\n            storeString(name),\n            storeString(namespaceURI),\n            value !== null ? storeString(valueAsString) + 1 : 0,\n        ]);\n    }\n    [44 /* TransferrableKeys.storeAttribute */](namespaceURI, name, value) {\n        const attr = this.attributes.find(matchAttrPredicate(namespaceURI, name));\n        const oldValue = (attr && attr.value) || '';\n        if (attr) {\n            attr.value = value;\n        }\n        else {\n            this.attributes.push({\n                namespaceURI,\n                name,\n                value,\n            });\n        }\n        return oldValue;\n    }\n    /**\n     * Get the value of an attribute on this Element with the specified namespace.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     * @return value of a specified attribute on the element, or null if the attribute doesn't exist.\n     */\n    getAttributeNS(namespaceURI, name) {\n        const attr = this.attributes.find(matchAttrPredicate(namespaceURI, name));\n        if (attr) {\n            const propertyBacked = this.constructor[46 /* TransferrableKeys.propertyBackedAttributes */][name];\n            return propertyBacked !== undefined ? propertyBacked[0](this) : attr.value;\n        }\n        return null;\n    }\n    /**\n     * Remove an attribute from this element in the specified namespace.\n     *\n     * Method returns void, so it is not chainable.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     */\n    removeAttributeNS(namespaceURI, name) {\n        const index = this.attributes.findIndex(matchAttrPredicate(namespaceURI, name));\n        if (index >= 0) {\n            const oldValue = this.attributes[index].value;\n            this.attributes.splice(index, 1);\n            mutate(this.ownerDocument, {\n                type: 0 /* MutationRecordType.ATTRIBUTES */,\n                target: this,\n                attributeName: name,\n                attributeNamespace: namespaceURI,\n                oldValue,\n            }, [\n                0 /* TransferrableMutationType.ATTRIBUTES */,\n                this[7 /* TransferrableKeys.index */],\n                storeString(name),\n                storeString(namespaceURI),\n                0, // 0 means no value\n            ]);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttributeNS\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     * @return Boolean indicating if the element has the specified attribute.\n     */\n    hasAttributeNS(namespaceURI, name) {\n        return this.attributes.some(matchAttrPredicate(namespaceURI, name));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByClassName\n     * @param names contains one more more classnames to match on. Multiples are space seperated, indicating an AND operation.\n     * @return Element array with matching classnames\n     */\n    getElementsByClassName(names) {\n        const inputClassList = names.split(' ');\n        // TODO(KB) – Compare performance of [].some(value => DOMTokenList.contains(value)) and regex.\n        // const classRegex = new RegExp(classNames.split(' ').map(name => `(?=.*${name})`).join(''));\n        return matchChildrenElements(this, (element) => inputClassList.some((inputClassName) => element.classList.contains(inputClassName)));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagName\n     * @param tagName the qualified name to look for. The special string \"*\" represents all elements.\n     * @return Element array with matching tagnames\n     */\n    getElementsByTagName(tagName) {\n        const lowerTagName = toLower(tagName);\n        return matchChildrenElements(this, tagName === '*'\n            ? (_) => true\n            : (element) => (element.namespaceURI === HTML_NAMESPACE ? element.localName === lowerTagName : element.tagName === tagName));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByName\n     * @param name value of name attribute elements must have to be returned\n     * @return Element array with matching name attributes\n     */\n    getElementsByName(name) {\n        const stringName = '' + name;\n        return matchChildrenElements(this, (element) => element.getAttribute('name') === stringName);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @param deep boolean determines if the clone should include a recursive copy of all childNodes.\n     * @return Element containing all current attributes and potentially childNode clones of the Element requested to be cloned.\n     */\n    cloneNode(deep = false) {\n        const clone = this.ownerDocument.createElementNS(this.namespaceURI, this.namespaceURI === HTML_NAMESPACE ? toLower(this.tagName) : this.tagName);\n        this.attributes.forEach((attr) => clone.setAttribute(attr.name, attr.value));\n        if (deep) {\n            this.childNodes.forEach((child) => clone.appendChild(child.cloneNode(deep)));\n        }\n        return clone;\n    }\n    /**\n     * Return the ClientRect for an Element once determined by the main thread.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n     * @return Promise<ClientRect>\n     *\n     * Note: Edge and IE11 do not return the x/y value, but top/left are equivalent. Normalize the values here.\n     */\n    getBoundingClientRectAsync() {\n        const defaultValue = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0,\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n        return new Promise((resolve) => {\n            const messageHandler = ({ data }) => {\n                if (data[12 /* TransferrableKeys.type */] === 6 /* MessageType.GET_BOUNDING_CLIENT_RECT */ &&\n                    data[13 /* TransferrableKeys.target */][0] === this[7 /* TransferrableKeys.index */]) {\n                    this.ownerDocument.removeGlobalEventListener('message', messageHandler);\n                    const transferredBoundingClientRect = data[38 /* TransferrableKeys.data */];\n                    resolve({\n                        top: transferredBoundingClientRect[0],\n                        right: transferredBoundingClientRect[1],\n                        bottom: transferredBoundingClientRect[2],\n                        left: transferredBoundingClientRect[3],\n                        width: transferredBoundingClientRect[4],\n                        height: transferredBoundingClientRect[5],\n                        x: transferredBoundingClientRect[0],\n                        y: transferredBoundingClientRect[3],\n                    });\n                }\n            };\n            if (!this.ownerDocument.addGlobalEventListener || !this.isConnected) {\n                // Elements run within Node runtimes are missing addEventListener as a global.\n                // In this case, treat the return value the same as a disconnected node.\n                resolve(defaultValue);\n            }\n            else {\n                this.ownerDocument.addGlobalEventListener('message', messageHandler);\n                transfer(this.ownerDocument, [5 /* TransferrableMutationType.GET_BOUNDING_CLIENT_RECT */, this[7 /* TransferrableKeys.index */]]);\n                setTimeout(resolve, 500, defaultValue); // TODO: Why a magical constant, define and explain.\n            }\n        });\n    }\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/click\n    click() {\n        const event = new Event('click', {});\n        event.target = this;\n        this.dispatchEvent(event);\n    }\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n    scrollIntoView() {\n        if (this.isConnected) {\n            transfer(this.ownerDocument, [14 /* TransferrableMutationType.SCROLL_INTO_VIEW */, this[7 /* TransferrableKeys.index */]]);\n        }\n    }\n    get classList() {\n        return this._classList || (this._classList = new DOMTokenList(this, 'class'));\n    }\n}\nsynchronizedAccessor(Element, 'classList', 'className');\nreflectProperties([{ id: [''] }], Element);\n//# sourceMappingURL=Element.js.map","import { Element } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { matchNearestParent, tagNameConditionPredicate } from './matchElements';\nexport const appendGlobalEventProperties = (keys) => {\n    const keysToAppend = keys.filter((key) => !HTMLElement.prototype.hasOwnProperty(key));\n    if (keysToAppend.length <= 0) {\n        return;\n    }\n    keysToAppend.forEach((key) => {\n        const normalizedKey = key.replace(/on/, '');\n        Object.defineProperty(HTMLElement.prototype, key, {\n            enumerable: true,\n            get() {\n                return this[76 /* TransferrableKeys.propertyEventHandlers */][normalizedKey] || null;\n            },\n            set(value) {\n                const stored = this[76 /* TransferrableKeys.propertyEventHandlers */][normalizedKey];\n                if (stored) {\n                    this.removeEventListener(normalizedKey, stored);\n                }\n                if (value instanceof Function) {\n                    this.addEventListener(normalizedKey, value);\n                }\n                this[76 /* TransferrableKeys.propertyEventHandlers */][normalizedKey] = value;\n            },\n        });\n    });\n};\nexport class HTMLElement extends Element {\n    [76 /* TransferrableKeys.propertyEventHandlers */] = {};\n    /**\n     * Find the nearest parent form element.\n     * Implemented in HTMLElement since so many extensions of HTMLElement repeat this functionality. This is not to spec.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFieldSetElement\n     * @return nearest parent form element.\n     */\n    get form() {\n        return matchNearestParent(this, tagNameConditionPredicate(['FORM']));\n    }\n    [68 /* TransferrableKeys.serializeAsTransferrableObject */]() {\n        return [7 /* TransferrableObjectType.HTMLElement */, this[7 /* TransferrableKeys.index */]];\n    }\n}\n// Reflected properties\n// HTMLElement.accessKey => string, reflected attribute\n// HTMLElement.contentEditable => string, reflected attribute\n// HTMLElement.dir => string, reflected attribute\n// HTMLElement.lang => string, reflected attribute\n// HTMLElement.title => string, reflected attribute\n// HTMLElement.draggable => boolean, reflected attribute\n// HTMLElement.hidden => boolean, reflected attribute\n// HTMLElement.noModule => boolean, reflected attribute\n// HTMLElement.spellcheck => boolean, reflected attribute\n// HTMLElement.translate => boolean, reflected attribute\nreflectProperties([\n    { accessKey: [''] },\n    { contentEditable: ['inherit'] },\n    { dir: [''] },\n    { lang: [''] },\n    { title: [''] },\n    {\n        draggable: [false, /* attr */ undefined, /* keywords */ ['true', 'false']],\n    },\n    { hidden: [false, /* attr */ undefined] },\n    { noModule: [false] },\n    {\n        spellcheck: [true, /* attr */ undefined, /* keywords */ ['true', 'false']],\n    },\n    { translate: [true, /* attr */ undefined, /* keywords */ ['yes', 'no']] },\n], HTMLElement);\n// Properties\n// HTMLElement.accessKeyLabel => string, readonly value of \"accessKey\"\n// HTMLElement.isContentEditable => boolean, readonly value of contentEditable\n// HTMLElement.nonce => string, NOT REFLECTED\n// HTMLElement.tabIndex => number, reflected attribute\n// Layout Properties (TBD)\n// HTMLElement.offsetHeight => double, readonly\n// HTMLElement.offsetLeft => double, readonly\n// HTMLElement.offsetParent => Element\n// HTMLElement.offsetTop => double, readonly\n// HTMLElement.offsetWidth => double, readonly\n// Unimplemented Properties\n// HTMLElement.contextMenu => HTMLElement\n// HTMLElement.dataset => Map<string (get/set), string>\n// HTMLElement.dropzone => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.inert => boolean, reflected\n// HTMLElement.itemScope => boolean\n// HTMLElement.itemType => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemId => string\n// HTMLElement.itemRef => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemProp => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemValue => object\n// HTMLElement.properties => HTMLPropertiesCollection, readonly\n//# sourceMappingURL=HTMLElement.js.map","import { Element, registerSubclass } from './Element';\nimport { SVG_NAMESPACE } from '../../transfer/TransferrableNodes';\nexport class SVGElement extends Element {\n    constructor(nodeType, localName, namespaceURI, ownerDocument) {\n        super(nodeType, localName, SVG_NAMESPACE, ownerDocument);\n        // Element uppercases its nodeName, but SVG elements don't.\n        this.nodeName = localName;\n    }\n}\nregisterSubclass('svg', SVGElement, SVG_NAMESPACE);\n//# sourceMappingURL=SVGElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLAnchorElement extends HTMLElement {\n    _relList;\n    get relList() {\n        return this._relList || (this._relList = new DOMTokenList(this, 'rel'));\n    }\n    /**\n     * Returns the href property/attribute value\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/toString\n     * @return string href attached to HTMLAnchorElement\n     */\n    toString() {\n        return this.href;\n    }\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * A Synonym for the Node.textContent property setter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement\n     * @param text replacement for all current childNodes.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n}\nregisterSubclass('a', HTMLAnchorElement);\ndefinePropertyBackedAttributes(HTMLAnchorElement, {\n    rel: [(el) => el.relList.value, (el, value) => (el.relList.value = value)],\n});\nsynchronizedAccessor(HTMLAnchorElement, 'relList', 'rel');\n// Reflected properties, strings.\n// HTMLAnchorElement.href => string, reflected attribute\n// HTMLAnchorElement.hreflang => string, reflected attribute\n// HTMLAnchorElement.media => string, reflected attribute\n// HTMLAnchorElement.target => string, reflected attribute\n// HTMLAnchorElement.type => string, reflected attribute\nreflectProperties([{ href: [''] }, { hreflang: [''] }, { media: [''] }, { target: [''] }, { type: [''] }], HTMLAnchorElement);\n// Unimplemented\n// HTMLAnchorElement.download => string, reflected attribute\n// HTMLAnchorElement.type => Is a DOMString that reflects the type HTML attribute, indicating the MIME type of the linked resource.\n// Unimplemented URL parse of href attribute due to IE11 compatibility and low usage.\n// Note: Implementation doable using a private url property\n/*\n  class {\n    private url: URL | null = null;\n\n    constructor(...) {\n      // Element.getAttribute('href') => Element.href.\n      Object.assign(this[TransferrableKeys.propertyBackedAttributes], {\n        href: this.href,\n      });\n    }\n\n    get href(): string {\n      return this.url ? this.url.href : '';\n    }\n    set href(url: string) {\n      this.url = new URL(url);\n      this.setAttribute('href', this.url.href);\n    }\n  }\n*/\n// HTMLAnchorElement.host => string\n// HTMLAnchorElement.hostname => string\n// HTMLAnchorElement.protocol => string\n// HTMLAnchorElement.pathname => string\n// HTMLAnchorElement.search => string\n// HTMLAnchorElement.hash => string\n// HTMLAnchorElement.username => string\n// HTMLAnchorElement.password => string\n// HTMLAnchorElement.origin => string, readonly (getter no setter)\n//# sourceMappingURL=HTMLAnchorElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLButtonElement extends HTMLElement {\n}\nregisterSubclass('button', HTMLButtonElement);\n// Reflected properties, strings.\n// HTMLButtonElement.formAction => string, reflected attribute\n// HTMLButtonElement.formEnctype => string, reflected attribute\n// HTMLButtonElement.formMethod => string, reflected attribute\n// HTMLButtonElement.formTarget => string, reflected attribute\n// HTMLButtonElement.name => string, reflected attribute\n// HTMLButtonElement.type => string, reflected attribute (default submit)\n// HTMLButtonElement.value => string, reflected attribute\n// HTMLButtonElement.autofocus => boolean, reflected attribute\n// HTMLButtonElement.disabled => boolean, reflected attribute\nreflectProperties([\n    { formAction: [''] },\n    { formEnctype: [''] },\n    { formMethod: [''] },\n    { formTarget: [''] },\n    { name: [''] },\n    { type: ['submit'] },\n    { value: [''] },\n    { autofocus: [false] },\n    { disabled: [false] },\n], HTMLButtonElement);\n// Not reflected\n// HTMLButtonElement.formNoValidate => boolean\n// HTMLButtonElement.validity => ValidityState, readonly\n// Unimplemented\n// HTMLButtonElement.form => HTMLFormElement | null, readonly\n// HTMLButtonElement.labels => Array<HTMLLabelElement>, readonly\n// HTMLButtonElement.menu => HTMLMenuElement\n// HTMLButtonElement.willValidate => boolean, readonly\n// HTMLButtonElement.validationMessage => string, readonly\n//# sourceMappingURL=HTMLButtonElement.js.map","import { store } from './strings';\nconst f32 = new Float32Array(1);\nconst u16 = new Uint16Array(f32.buffer);\nfunction isSmallInt(num) {\n    u16[0] = num;\n    // If the Uint16Array doesn't coerce it to another value, that means it fits\n    // into a Uint16Array.\n    return u16[0] === num;\n}\n/**\n * Serializes arguments into a Uint16 compatible format.\n *\n * The serialization format uses a variable length tuple, with the first item\n * being the encoded representation's type and any number of values afterwards.\n *\n * @param args The arguments to serialize\n */\nexport function serializeTransferrableObject(args) {\n    const serialized = [];\n    for (let i = 0; i < args.length; i++) {\n        const arg = args[i];\n        if (typeof arg === 'number') {\n            if (isSmallInt(arg)) {\n                serialized.push(1 /* TransferrableObjectType.SmallInt */, arg);\n            }\n            else {\n                f32[0] = arg;\n                serialized.push(2 /* TransferrableObjectType.Float */, u16[0], u16[1]);\n            }\n            continue;\n        }\n        if (typeof arg === 'string') {\n            serialized.push(3 /* TransferrableObjectType.String */, store(arg));\n            continue;\n        }\n        if (Array.isArray(arg)) {\n            serialized.push(4 /* TransferrableObjectType.Array */, arg.length);\n            const serializedArray = serializeTransferrableObject(arg);\n            for (let i = 0; i < serializedArray.length; i++) {\n                serialized.push(serializedArray[i]);\n            }\n            continue;\n        }\n        if (typeof arg === 'object') {\n            const serializedObject = arg[68 /* TransferrableKeys.serializeAsTransferrableObject */]();\n            for (let i = 0; i < serializedObject.length; i++) {\n                serialized.push(serializedObject[i]);\n            }\n            continue;\n        }\n        throw new Error('Cannot serialize argument.');\n    }\n    return serialized;\n}\n//# sourceMappingURL=serializeTransferrableObject.js.map","import { transfer } from '../MutationTransfer';\nimport { serializeTransferrableObject } from '../serializeTransferrableObject';\nimport { store } from '../strings';\n/**\n * Wrapper class for CanvasGradient. The user will be able to manipulate as a regular CanvasGradient object.\n */\nexport class CanvasGradient {\n    id;\n    document;\n    constructor(id, document) {\n        this.document = document;\n        this.id = id;\n    }\n    addColorStop(offset, color) {\n        transfer(this.document, [\n            9 /* TransferrableMutationType.OBJECT_MUTATION */,\n            store('addColorStop'),\n            2,\n            ...this[68 /* TransferrableKeys.serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject([...arguments]),\n        ]);\n    }\n    [68 /* TransferrableKeys.serializeAsTransferrableObject */]() {\n        return [5 /* TransferrableObjectType.TransferObject */, this.id];\n    }\n}\n//# sourceMappingURL=CanvasGradient.js.map","/**\n * Wrapper class for CanvasPattern. The user will be able to manipulate as a regular CanvasPattern object.\n * This class will be used when the CanvasRenderingContext is using an OffscreenCanvas polyfill.\n */\nexport class CanvasPattern {\n    id;\n    constructor(id) {\n        this.id = id;\n    }\n    /**\n     * This is an experimental method.\n     */\n    setTransform() { }\n    [68 /* TransferrableKeys.serializeAsTransferrableObject */]() {\n        return [5 /* TransferrableObjectType.TransferObject */, this.id];\n    }\n}\n//# sourceMappingURL=CanvasPattern.js.map","import { transfer } from '../MutationTransfer';\nimport { toLower } from '../../utils';\nimport { store } from '../strings';\nimport { serializeTransferrableObject } from '../serializeTransferrableObject';\nimport { CanvasGradient } from './CanvasGradient';\nimport { CanvasPattern } from './CanvasPattern';\n/**\n * Handles calls to a CanvasRenderingContext2D object in cases where the user's environment does not\n * support native OffscreenCanvas.\n */\nexport class OffscreenCanvasPolyfill {\n    canvas;\n    context;\n    constructor(canvas) {\n        this.canvas = canvas;\n    }\n    getContext(contextType) {\n        if (!this.context) {\n            if (toLower(contextType) === '2d') {\n                this.context = new OffscreenCanvasRenderingContext2DPolyfill(this.canvas);\n            }\n            else {\n                throw new Error('Context type not supported.');\n            }\n        }\n        return this.context;\n    }\n}\nclass OffscreenCanvasRenderingContext2DPolyfill {\n    canvasElement;\n    lineDash;\n    objectIndex = 0;\n    constructor(canvas) {\n        this.canvasElement = canvas;\n        this.lineDash = [];\n    }\n    [67 /* TransferrableKeys.mutated */](fnName, args) {\n        transfer(this.canvasElement.ownerDocument, [\n            9 /* TransferrableMutationType.OBJECT_MUTATION */,\n            store(fnName),\n            args.length,\n            ...this[68 /* TransferrableKeys.serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject(args),\n        ]);\n    }\n    [68 /* TransferrableKeys.serializeAsTransferrableObject */]() {\n        return [6 /* TransferrableObjectType.CanvasRenderingContext2D */, this.canvasElement[7 /* TransferrableKeys.index */]];\n    }\n    /**\n     * Creates object in the main thread, and associates it with the id provided.\n     * @param objectId ID to associate the created object with.\n     * @param creationMethod Method to use for object creation.\n     * @param creationArgs Arguments to pass into the creation method.\n     */\n    createObjectReference(objectId, creationMethod, creationArgs) {\n        transfer(this.canvasElement.ownerDocument, [\n            10 /* TransferrableMutationType.OBJECT_CREATION */,\n            store(creationMethod),\n            objectId,\n            creationArgs.length,\n            ...this[68 /* TransferrableKeys.serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject(creationArgs),\n        ]);\n    }\n    get canvas() {\n        return this.canvasElement;\n    }\n    clearRect(x, y, w, h) {\n        this[67 /* TransferrableKeys.mutated */]('clearRect', [...arguments]);\n    }\n    fillRect(x, y, w, h) {\n        this[67 /* TransferrableKeys.mutated */]('fillRect', [...arguments]);\n    }\n    strokeRect(x, y, w, h) {\n        this[67 /* TransferrableKeys.mutated */]('strokeRect', [...arguments]);\n    }\n    roundRect(x, y, w, h, radii) {\n        this[67 /* TransferrableKeys.mutated */]('roundRect', [...arguments]);\n    }\n    set lineWidth(value) {\n        this[67 /* TransferrableKeys.mutated */]('lineWidth', [...arguments]);\n    }\n    fillText(text, x, y, maxWidth) {\n        this[67 /* TransferrableKeys.mutated */]('fillText', [...arguments]);\n    }\n    moveTo(x, y) {\n        this[67 /* TransferrableKeys.mutated */]('moveTo', [...arguments]);\n    }\n    lineTo(x, y) {\n        this[67 /* TransferrableKeys.mutated */]('lineTo', [...arguments]);\n    }\n    closePath() {\n        this[67 /* TransferrableKeys.mutated */]('closePath', []);\n    }\n    stroke() {\n        this[67 /* TransferrableKeys.mutated */]('stroke', []);\n    }\n    restore() {\n        this[67 /* TransferrableKeys.mutated */]('restore', []);\n    }\n    save() {\n        this[67 /* TransferrableKeys.mutated */]('save', []);\n    }\n    resetTransform() {\n        this[67 /* TransferrableKeys.mutated */]('resetTransform', []);\n    }\n    rotate(angle) {\n        this[67 /* TransferrableKeys.mutated */]('rotate', [...arguments]);\n    }\n    transform(a, b, c, d, e, f) {\n        this[67 /* TransferrableKeys.mutated */]('transform', [...arguments]);\n    }\n    translate(x, y) {\n        this[67 /* TransferrableKeys.mutated */]('translate', [...arguments]);\n    }\n    scale(x, y) {\n        this[67 /* TransferrableKeys.mutated */]('scale', [...arguments]);\n    }\n    set globalAlpha(value) {\n        this[67 /* TransferrableKeys.mutated */]('globalAlpha', [...arguments]);\n    }\n    set globalCompositeOperation(value) {\n        this[67 /* TransferrableKeys.mutated */]('globalCompositeOperation', [...arguments]);\n    }\n    set imageSmoothingQuality(value) {\n        this[67 /* TransferrableKeys.mutated */]('imageSmoothingQuality', [...arguments]);\n    }\n    set fillStyle(value) {\n        this[67 /* TransferrableKeys.mutated */]('fillStyle', [...arguments]);\n    }\n    set strokeStyle(value) {\n        this[67 /* TransferrableKeys.mutated */]('strokeStyle', [...arguments]);\n    }\n    set shadowBlur(value) {\n        this[67 /* TransferrableKeys.mutated */]('shadowBlur', [...arguments]);\n    }\n    set shadowColor(value) {\n        this[67 /* TransferrableKeys.mutated */]('shadowColor', [...arguments]);\n    }\n    set shadowOffsetX(value) {\n        this[67 /* TransferrableKeys.mutated */]('shadowOffsetX', [...arguments]);\n    }\n    set shadowOffsetY(value) {\n        this[67 /* TransferrableKeys.mutated */]('shadowOffsetY', [...arguments]);\n    }\n    set filter(value) {\n        this[67 /* TransferrableKeys.mutated */]('filter', [...arguments]);\n    }\n    beginPath() {\n        this[67 /* TransferrableKeys.mutated */]('beginPath', []);\n    }\n    strokeText(text, x, y, maxWidth) {\n        this[67 /* TransferrableKeys.mutated */]('strokeText', [...arguments]);\n    }\n    set textAlign(value) {\n        this[67 /* TransferrableKeys.mutated */]('textAlign', [...arguments]);\n    }\n    set textBaseline(value) {\n        this[67 /* TransferrableKeys.mutated */]('textBaseline', [...arguments]);\n    }\n    set lineCap(value) {\n        this[67 /* TransferrableKeys.mutated */]('lineCap', [...arguments]);\n    }\n    set lineDashOffset(value) {\n        this[67 /* TransferrableKeys.mutated */]('lineDashOffset', [...arguments]);\n    }\n    set lineJoin(value) {\n        this[67 /* TransferrableKeys.mutated */]('lineJoin', [...arguments]);\n    }\n    set miterLimit(value) {\n        this[67 /* TransferrableKeys.mutated */]('miterLimit', [...arguments]);\n    }\n    arc(x, y, radius, startAngle, endAngle, anticlockwise) {\n        this[67 /* TransferrableKeys.mutated */]('arc', [...arguments]);\n    }\n    arcTo(x1, y1, x2, y2, radius) {\n        this[67 /* TransferrableKeys.mutated */]('arcTo', [...arguments]);\n    }\n    set direction(value) {\n        this[67 /* TransferrableKeys.mutated */]('direction', [...arguments]);\n    }\n    set font(value) {\n        this[67 /* TransferrableKeys.mutated */]('font', [...arguments]);\n    }\n    ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, anticlockwise) {\n        this[67 /* TransferrableKeys.mutated */]('ellipse', [...arguments]);\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this[67 /* TransferrableKeys.mutated */]('bezierCurveTo', [...arguments]);\n    }\n    rect(x, y, width, height) {\n        this[67 /* TransferrableKeys.mutated */]('rect', [...arguments]);\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this[67 /* TransferrableKeys.mutated */]('quadraticCurveTo', [...arguments]);\n    }\n    set imageSmoothingEnabled(value) {\n        this[67 /* TransferrableKeys.mutated */]('imageSmoothingEnabled', [...arguments]);\n    }\n    setLineDash(lineDash) {\n        lineDash = [...lineDash];\n        if (lineDash.length % 2 !== 0) {\n            lineDash = lineDash.concat(lineDash);\n        }\n        this.lineDash = lineDash;\n        this[67 /* TransferrableKeys.mutated */]('setLineDash', [...arguments]);\n    }\n    getLineDash() {\n        return [...this.lineDash];\n    }\n    clip(pathOrFillRule, fillRule) {\n        if (typeof pathOrFillRule === 'object') {\n            throw new Error('clip(Path2D) is currently not supported!');\n        }\n        this[67 /* TransferrableKeys.mutated */]('clip', [...arguments]);\n    }\n    fill(pathOrFillRule, fillRule) {\n        if (typeof pathOrFillRule === 'object') {\n            throw new Error('fill(Path2D) is currently not supported!');\n        }\n        this[67 /* TransferrableKeys.mutated */]('fill', [...arguments]);\n    }\n    // Method has a different signature in MDN than it does in HTML spec\n    setTransform(transformOrA, bOrC, cOrD, dOrE, eOrF, f) {\n        if (typeof transformOrA === 'object') {\n            throw new Error('setTransform(DOMMatrix2DInit) is currently not supported!');\n        }\n        this[67 /* TransferrableKeys.mutated */]('setTransform', [...arguments]);\n    }\n    createLinearGradient(x0, y0, x1, y1) {\n        const gradientId = this.objectIndex++;\n        this.createObjectReference(gradientId, 'createLinearGradient', [...arguments]);\n        return new CanvasGradient(gradientId, this.canvasElement.ownerDocument);\n    }\n    createRadialGradient(x0, y0, r0, x1, y1, r1) {\n        const gradientId = this.objectIndex++;\n        this.createObjectReference(gradientId, 'createRadialGradient', [...arguments]);\n        return new CanvasGradient(gradientId, this.canvasElement.ownerDocument);\n    }\n    createPattern(image, repetition) {\n        const patternId = this.objectIndex++;\n        this.createObjectReference(patternId, 'createPattern', [...arguments]);\n        return new CanvasPattern(patternId);\n    }\n    drawImage(image, dx, dy) {\n        this[67 /* TransferrableKeys.mutated */]('drawImage', [...arguments]);\n    }\n    createImageData() {\n        return {};\n    }\n    getImageData() {\n        return {};\n    }\n    putImageData() { }\n    isPointInPath() {\n        throw new Error('isPointInPath is not implemented.');\n    }\n    isPointInStroke() {\n        throw new Error('isPointInStroke is not implemented.');\n    }\n    measureText() {\n        throw new Error('measureText is not implemented.');\n    }\n}\n//# sourceMappingURL=OffscreenCanvasPolyfill.js.map","import { transfer } from '../MutationTransfer';\nlet indexTracker = 0;\nexport function retrieveImageBitmap(image, canvas) {\n    const callIndex = indexTracker++;\n    const document = canvas.ownerDocument;\n    return new Promise((resolve) => {\n        const messageHandler = ({ data }) => {\n            if (data[12 /* TransferrableKeys.type */] === 10 /* MessageType.IMAGE_BITMAP_INSTANCE */ && data[73 /* TransferrableKeys.callIndex */] === callIndex) {\n                document.removeGlobalEventListener('message', messageHandler);\n                const transferredImageBitmap = data[38 /* TransferrableKeys.data */];\n                resolve(transferredImageBitmap);\n            }\n        };\n        if (!document.addGlobalEventListener) {\n            throw new Error('addGlobalEventListener is not defined.');\n        }\n        else {\n            document.addGlobalEventListener('message', messageHandler);\n            transfer(canvas.ownerDocument, [11 /* TransferrableMutationType.IMAGE_BITMAP_INSTANCE */, image[7 /* TransferrableKeys.index */], callIndex]);\n        }\n    });\n}\n//# sourceMappingURL=canvas-utils.js.map","import { retrieveImageBitmap } from './canvas-utils';\n/**\n * Wraps CanvasPattern for usage in a native OffscreenCanvas case.\n */\nexport class FakeNativeCanvasPattern {\n    [70 /* TransferrableKeys.patternImplementation */] = {};\n    [71 /* TransferrableKeys.patternUpgraded */] = false;\n    [72 /* TransferrableKeys.patternUpgradePromise */];\n    /**\n     * Retrieves ImageBitmap object from main-thread, which replicates the input image. Upon\n     * retrieval, uses it to create a real CanvasPattern and upgrade the implementation property.\n     * @param canvas Canvas element used to create the pattern.\n     * @param image Image to be used as the pattern's image\n     * @param repetition DOMStrings indicating how to repeat the pattern's image.\n     */\n    [69 /* TransferrableKeys.retrieveCanvasPattern */](canvas, image, repetition) {\n        this[72 /* TransferrableKeys.patternUpgradePromise */] = retrieveImageBitmap(image, canvas)\n            // Create new pattern with retrieved ImageBitmap\n            .then((instance) => {\n            const pattern = canvas.getContext('2d').createPattern(instance, repetition);\n            if (!pattern) {\n                throw new Error('Pattern is null!');\n            }\n            this[70 /* TransferrableKeys.patternImplementation */] = pattern;\n            this[71 /* TransferrableKeys.patternUpgraded */] = true;\n        });\n        return this[72 /* TransferrableKeys.patternUpgradePromise */];\n    }\n    // This method is experimental.\n    // Takes an SVGMatrix as an argument, which is a deprecated API.\n    setTransform() { }\n}\n//# sourceMappingURL=FakeNativeCanvasPattern.js.map","import { transfer } from '../MutationTransfer';\nimport { OffscreenCanvasPolyfill } from './OffscreenCanvasPolyfill';\nimport { FakeNativeCanvasPattern } from './FakeNativeCanvasPattern';\nimport { retrieveImageBitmap } from './canvas-utils';\nexport const deferredUpgrades = new WeakMap();\n/**\n * Delegates all CanvasRenderingContext2D calls, either to an OffscreenCanvas or a polyfill\n * (depending on whether it is supported).\n */\nexport class CanvasRenderingContext2DShim {\n    queue = [];\n    implementation;\n    upgraded = false;\n    canvasElement;\n    polyfillUsed;\n    // createPattern calls need to retrieve an ImageBitmap from the main-thread. Since those can\n    // happen subsequently, we must keep track of these to avoid reentrancy problems.\n    unresolvedCalls = 0;\n    goodImplementation;\n    constructor(canvas) {\n        this.canvasElement = canvas;\n        const OffscreenCanvas = canvas.ownerDocument.defaultView.OffscreenCanvas;\n        // If the browser does not support OffscreenCanvas, use polyfill\n        if (typeof OffscreenCanvas === 'undefined') {\n            this.implementation = new OffscreenCanvasPolyfill(canvas).getContext('2d');\n            this.upgraded = true;\n            this.polyfillUsed = true;\n        }\n        // If the browser supports OffscreenCanvas:\n        // 1. Use un-upgraded (not auto-synchronized) version for all calls performed immediately after\n        // creation. All calls will be queued to call on upgraded version after.\n        // 2. Retrieve an auto-synchronized OffscreenCanvas from the main-thread and call all methods\n        // in the queue.\n        else {\n            this.implementation = new OffscreenCanvas(0, 0).getContext('2d');\n            this.getOffscreenCanvasAsync(this.canvasElement);\n            this.polyfillUsed = false;\n        }\n    }\n    /**\n     * Retrieves auto-synchronized version of an OffscreenCanvas from the main-thread.\n     * @param canvas HTMLCanvasElement associated with this context.\n     */\n    getOffscreenCanvasAsync(canvas) {\n        this.unresolvedCalls++;\n        const deferred = {};\n        const document = this.canvasElement.ownerDocument;\n        const isTestMode = !document.addGlobalEventListener;\n        const upgradePromise = new Promise((resolve) => {\n            const messageHandler = ({ data }) => {\n                if (data[12 /* TransferrableKeys.type */] === 9 /* MessageType.OFFSCREEN_CANVAS_INSTANCE */ &&\n                    data[13 /* TransferrableKeys.target */][0] === canvas[7 /* TransferrableKeys.index */]) {\n                    document.removeGlobalEventListener('message', messageHandler);\n                    const transferredOffscreenCanvas = data[38 /* TransferrableKeys.data */];\n                    resolve(transferredOffscreenCanvas);\n                }\n            };\n            if (!document.addGlobalEventListener) {\n                if (isTestMode) {\n                    deferred.resolve = resolve;\n                }\n                else {\n                    throw new Error('addGlobalEventListener is not defined.');\n                }\n            }\n            else {\n                document.addGlobalEventListener('message', messageHandler);\n                transfer(canvas.ownerDocument, [8 /* TransferrableMutationType.OFFSCREEN_CANVAS_INSTANCE */, canvas[7 /* TransferrableKeys.index */]]);\n            }\n        }).then((instance) => {\n            this.goodImplementation = instance.getContext('2d');\n            this.maybeUpgradeImplementation();\n        });\n        if (isTestMode) {\n            deferred.upgradePromise = upgradePromise;\n            deferredUpgrades.set(canvas, deferred);\n        }\n        return upgradePromise;\n    }\n    /**\n     * Degrades the underlying context implementation and adds to the unresolved call count.\n     */\n    degradeImplementation() {\n        this.upgraded = false;\n        const OffscreenCanvas = this.canvasElement.ownerDocument.defaultView.OffscreenCanvas;\n        this.implementation = new OffscreenCanvas(0, 0).getContext('2d');\n        this.unresolvedCalls++;\n    }\n    /**\n     * Will upgrade the underlying context implementation if no more unresolved calls remain.\n     */\n    maybeUpgradeImplementation() {\n        this.unresolvedCalls--;\n        if (this.unresolvedCalls === 0) {\n            this.implementation = this.goodImplementation;\n            this.upgraded = true;\n            this.flushQueue();\n        }\n    }\n    flushQueue() {\n        for (const call of this.queue) {\n            if (call.isSetter) {\n                this[call.fnName] = call.args[0];\n            }\n            else {\n                this[call.fnName](...call.args);\n            }\n        }\n        this.queue.length = 0;\n    }\n    delegateFunc(name, args) {\n        const returnValue = this.implementation[name](...args);\n        if (!this.upgraded) {\n            this.queue.push({ fnName: name, args, isSetter: false });\n        }\n        return returnValue;\n    }\n    delegateSetter(name, args) {\n        this.implementation[name] = args[0];\n        if (!this.upgraded) {\n            this.queue.push({ fnName: name, args, isSetter: true });\n        }\n    }\n    delegateGetter(name) {\n        return this.implementation[name];\n    }\n    /* DRAWING RECTANGLES */\n    clearRect(x, y, width, height) {\n        this.delegateFunc('clearRect', [...arguments]);\n    }\n    fillRect(x, y, width, height) {\n        this.delegateFunc('fillRect', [...arguments]);\n    }\n    strokeRect(x, y, width, height) {\n        this.delegateFunc('strokeRect', [...arguments]);\n    }\n    roundRect(x, y, w, h, radii) {\n        this.delegateFunc('roundRect', [...arguments]);\n    }\n    /* DRAWING TEXT */\n    fillText(text, x, y, maxWidth) {\n        this.delegateFunc('fillText', [...arguments]);\n    }\n    strokeText(text, x, y, maxWidth) {\n        this.delegateFunc('strokeText', [...arguments]);\n    }\n    measureText(text) {\n        return this.delegateFunc('measureText', [...arguments]);\n    }\n    /* LINE STYLES */\n    set lineWidth(value) {\n        this.delegateSetter('lineWidth', [...arguments]);\n    }\n    get lineWidth() {\n        return this.delegateGetter('lineWidth');\n    }\n    set lineCap(value) {\n        this.delegateSetter('lineCap', [...arguments]);\n    }\n    get lineCap() {\n        return this.delegateGetter('lineCap');\n    }\n    set lineJoin(value) {\n        this.delegateSetter('lineJoin', [...arguments]);\n    }\n    get lineJoin() {\n        return this.delegateGetter('lineJoin');\n    }\n    set miterLimit(value) {\n        this.delegateSetter('miterLimit', [...arguments]);\n    }\n    get miterLimit() {\n        return this.delegateGetter('miterLimit');\n    }\n    getLineDash() {\n        return this.delegateFunc('getLineDash', [...arguments]);\n    }\n    setLineDash(segments) {\n        this.delegateFunc('setLineDash', [...arguments]);\n    }\n    set lineDashOffset(value) {\n        this.delegateSetter('lineDashOffset', [...arguments]);\n    }\n    get lineDashOffset() {\n        return this.delegateGetter('lineDashOffset');\n    }\n    /* TEXT STYLES */\n    set font(value) {\n        this.delegateSetter('font', [...arguments]);\n    }\n    get font() {\n        return this.delegateGetter('font');\n    }\n    set textAlign(value) {\n        this.delegateSetter('textAlign', [...arguments]);\n    }\n    get textAlign() {\n        return this.delegateGetter('textAlign');\n    }\n    set textBaseline(value) {\n        this.delegateSetter('textBaseline', [...arguments]);\n    }\n    get textBaseline() {\n        return this.delegateGetter('textBaseline');\n    }\n    set direction(value) {\n        this.delegateSetter('direction', [...arguments]);\n    }\n    get direction() {\n        return this.delegateGetter('direction');\n    }\n    /* FILL AND STROKE STYLES */\n    set fillStyle(value) {\n        // 1. Native pattern instances given to the user hold the 'real' pattern as their implementation prop.\n        // 2. Pattern must be upgraded, otherwise an undefined 'implementation' will be queued instead of the wrapper object.\n        if (value instanceof FakeNativeCanvasPattern && this.upgraded) {\n            // This case occurs only when an un-upgraded pattern is passed into a different (already\n            // upgraded) canvas context.\n            if (!value[71 /* TransferrableKeys.patternUpgraded */]) {\n                this.queue.push({ fnName: 'fillStyle', args: [value], isSetter: true });\n                this.degradeImplementation();\n                value[72 /* TransferrableKeys.patternUpgradePromise */].then(() => {\n                    this.maybeUpgradeImplementation();\n                });\n            }\n            else {\n                this.delegateSetter('fillStyle', [value[70 /* TransferrableKeys.patternImplementation */]]);\n            }\n            // Any other case does not require special handling.\n        }\n        else {\n            this.delegateSetter('fillStyle', [...arguments]);\n        }\n    }\n    get fillStyle() {\n        return this.delegateGetter('fillStyle');\n    }\n    set strokeStyle(value) {\n        // 1. Native pattern instances given to the user hold the 'real' pattern as their implementation prop.\n        // 2. Pattern must be upgraded, otherwise an undefined 'implementation' could be queued instead of the wrapper object.\n        if (value instanceof FakeNativeCanvasPattern && this.upgraded) {\n            // This case occurs only when an un-upgraded pattern is passed into a different (already\n            // upgraded) canvas context.\n            if (!value[71 /* TransferrableKeys.patternUpgraded */]) {\n                this.queue.push({\n                    fnName: 'strokeStyle',\n                    args: [value],\n                    isSetter: true,\n                });\n                this.degradeImplementation();\n                value[72 /* TransferrableKeys.patternUpgradePromise */].then(() => {\n                    this.maybeUpgradeImplementation();\n                });\n            }\n            else {\n                this.delegateSetter('strokeStyle', [value[70 /* TransferrableKeys.patternImplementation */]]);\n            }\n            // Any other case does not require special handling.\n        }\n        else {\n            this.delegateSetter('strokeStyle', [...arguments]);\n        }\n    }\n    get strokeStyle() {\n        return this.delegateGetter('strokeStyle');\n    }\n    /* GRADIENTS AND PATTERNS */\n    createLinearGradient(x0, y0, x1, y1) {\n        return this.delegateFunc('createLinearGradient', [...arguments]);\n    }\n    createRadialGradient(x0, y0, r0, x1, y1, r1) {\n        return this.delegateFunc('createRadialGradient', [...arguments]);\n    }\n    createPattern(image, repetition) {\n        const ImageBitmap = this.canvasElement.ownerDocument.defaultView.ImageBitmap;\n        // Only HTMLElement image sources require special handling. ImageBitmap is OK to use.\n        if (this.polyfillUsed || image instanceof ImageBitmap) {\n            return this.delegateFunc('createPattern', [...arguments]);\n        }\n        else {\n            // Degrade the underlying implementation because we don't want calls on the real one until\n            // after pattern is retrieved\n            this.degradeImplementation();\n            const fakePattern = new FakeNativeCanvasPattern();\n            fakePattern[69 /* TransferrableKeys.retrieveCanvasPattern */](this.canvas, image, repetition).then(() => {\n                this.maybeUpgradeImplementation();\n            });\n            return fakePattern;\n        }\n    }\n    /* DRAWING IMAGES */\n    drawImage(image, dx, dy) {\n        const ImageBitmap = this.canvasElement.ownerDocument.defaultView.ImageBitmap;\n        // Only HTMLElement image sources require special handling. ImageBitmap is OK to use.\n        if (this.polyfillUsed || image instanceof ImageBitmap) {\n            this.delegateFunc('drawImage', [...arguments]);\n        }\n        else {\n            // Queue the drawImage call to make sure it gets called in correct order\n            const args = [];\n            this.queue.push({ fnName: 'drawImage', args, isSetter: false });\n            // Degrade the underlying implementation because we don't want calls on the real one\n            // until after the ImageBitmap is received.\n            this.degradeImplementation();\n            // Retrieve an ImageBitmap from the main-thread with the same image as the input image\n            retrieveImageBitmap(image, this.canvas)\n                // Then call the actual method with the retrieved ImageBitmap\n                .then((instance) => {\n                args.push(instance, dx, dy);\n                this.maybeUpgradeImplementation();\n            });\n        }\n    }\n    /* SHADOWS */\n    set shadowBlur(value) {\n        this.delegateSetter('shadowBlur', [...arguments]);\n    }\n    get shadowBlur() {\n        return this.delegateGetter('shadowBlur');\n    }\n    set shadowColor(value) {\n        this.delegateSetter('shadowColor', [...arguments]);\n    }\n    get shadowColor() {\n        return this.delegateGetter('shadowColor');\n    }\n    set shadowOffsetX(value) {\n        this.delegateSetter('shadowOffsetX', [...arguments]);\n    }\n    get shadowOffsetX() {\n        return this.delegateGetter('shadowOffsetX');\n    }\n    set shadowOffsetY(value) {\n        this.delegateSetter('shadowOffsetY', [...arguments]);\n    }\n    get shadowOffsetY() {\n        return this.delegateGetter('shadowOffsetY');\n    }\n    /* PATHS */\n    beginPath() {\n        this.delegateFunc('beginPath', [...arguments]);\n    }\n    closePath() {\n        this.delegateFunc('closePath', [...arguments]);\n    }\n    moveTo(x, y) {\n        this.delegateFunc('moveTo', [...arguments]);\n    }\n    lineTo(x, y) {\n        this.delegateFunc('lineTo', [...arguments]);\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this.delegateFunc('bezierCurveTo', [...arguments]);\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this.delegateFunc('quadraticCurveTo', [...arguments]);\n    }\n    arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n        this.delegateFunc('arc', [...arguments]);\n    }\n    arcTo(x1, y1, x2, y2, radius) {\n        this.delegateFunc('arcTo', [...arguments]);\n    }\n    ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise) {\n        this.delegateFunc('ellipse', [...arguments]);\n    }\n    rect(x, y, width, height) {\n        this.delegateFunc('rect', [...arguments]);\n    }\n    /* DRAWING PATHS */\n    fill(pathOrFillRule, fillRule) {\n        const args = [...arguments];\n        this.delegateFunc('fill', args);\n    }\n    stroke(path) {\n        const args = [...arguments];\n        this.delegateFunc('stroke', args);\n    }\n    clip(pathOrFillRule, fillRule) {\n        const args = [...arguments];\n        this.delegateFunc('clip', args);\n    }\n    isPointInPath(pathOrX, xOrY, yOrFillRule, fillRule) {\n        const args = [...arguments];\n        return this.delegateFunc('isPointInPath', args);\n    }\n    isPointInStroke(pathOrX, xOrY, y) {\n        const args = [...arguments];\n        return this.delegateFunc('isPointInStroke', args);\n    }\n    /* TRANSFORMATIONS */\n    rotate(angle) {\n        this.delegateFunc('rotate', [...arguments]);\n    }\n    scale(x, y) {\n        this.delegateFunc('scale', [...arguments]);\n    }\n    translate(x, y) {\n        this.delegateFunc('translate', [...arguments]);\n    }\n    transform(a, b, c, d, e, f) {\n        this.delegateFunc('transform', [...arguments]);\n    }\n    setTransform(transformOrA, bOrC, cOrD, dOrE, eOrF, f) {\n        const args = [...arguments];\n        this.delegateFunc('setTransform', args);\n    }\n    /* experimental */ resetTransform() {\n        this.delegateFunc('resetTransform', [...arguments]);\n    }\n    /* COMPOSITING */\n    set globalAlpha(value) {\n        this.delegateSetter('globalAlpha', [...arguments]);\n    }\n    get globalAlpha() {\n        return this.delegateGetter('globalAlpha');\n    }\n    set globalCompositeOperation(value) {\n        this.delegateSetter('globalCompositeOperation', [...arguments]);\n    }\n    get globalCompositeOperation() {\n        return this.delegateGetter('globalCompositeOperation');\n    }\n    /* PIXEL MANIPULATION */\n    createImageData(imagedataOrWidth, height) {\n        const args = [...arguments];\n        return this.delegateFunc('createImageData', args);\n    }\n    getImageData(sx, sy, sw, sh) {\n        return this.delegateFunc('getImageData', [...arguments]);\n    }\n    putImageData(imageData, dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight) {\n        this.delegateFunc('putImageData', [...arguments]);\n    }\n    /* IMAGE SMOOTHING */\n    /* experimental */ set imageSmoothingEnabled(value) {\n        this.delegateSetter('imageSmoothingEnabled', [...arguments]);\n    }\n    /* experimental */ get imageSmoothingEnabled() {\n        return this.delegateGetter('imageSmoothingEnabled');\n    }\n    /* experimental */ set imageSmoothingQuality(value) {\n        this.delegateSetter('imageSmoothingQuality', [...arguments]);\n    }\n    /* experimental */ get imageSmoothingQuality() {\n        return this.delegateGetter('imageSmoothingQuality');\n    }\n    /* THE CANVAS STATE */\n    save() {\n        this.delegateFunc('save', [...arguments]);\n    }\n    restore() {\n        this.delegateFunc('restore', [...arguments]);\n    }\n    // canvas property is readonly. We don't want to implement getters, but this must be here\n    // in order for TypeScript to not complain (for now)\n    get canvas() {\n        return this.canvasElement;\n    }\n    /* FILTERS */\n    /* experimental */ set filter(value) {\n        this.delegateSetter('filter', [...arguments]);\n    }\n    /* experimental */ get filter() {\n        return this.delegateGetter('filter');\n    }\n}\n//# sourceMappingURL=CanvasRenderingContext2D.js.map","import { HTMLElement } from './HTMLElement';\nimport { registerSubclass } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { CanvasRenderingContext2DShim } from '../canvas/CanvasRenderingContext2D';\nexport class HTMLCanvasElement extends HTMLElement {\n    context;\n    getContext(contextType) {\n        if (!this.context) {\n            if (contextType === '2D' || contextType === '2d') {\n                this.context = new CanvasRenderingContext2DShim(this);\n            }\n            else {\n                throw new Error('Context type not supported.');\n            }\n        }\n        return this.context;\n    }\n}\nregisterSubclass('canvas', HTMLCanvasElement);\n// Reflected Properties\n// HTMLCanvasElement.height => number, reflected attribute\n// HTMLCanvasElement.width => number, reflected attribute\nreflectProperties([{ height: [0] }, { width: [0] }], HTMLCanvasElement);\n// Unimplemented Properties\n// HTMLCanvasElement.mozOpaque => boolean\n// HTMLCanvasElement.mozPrintCallback => function\n// Unimplemented Methods\n// HTMLCanvasElement.captureStream()\n// HTMLCanvasElement.toDataURL()\n// HTMLCanvasElement.toBlob()\n// HTMLCanvasElement.transferControlToOffscreen()\n// HTMLCanvasElement.mozGetAsFile()\n//# sourceMappingURL=HTMLCanvasElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLDataElement extends HTMLElement {\n}\nregisterSubclass('data', HTMLDataElement);\n// Reflected properties, strings.\n// HTMLEmbedElement.value => string, reflected attribute\nreflectProperties([{ value: [''] }], HTMLDataElement);\n//# sourceMappingURL=HTMLDataElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLEmbedElement extends HTMLElement {\n}\nregisterSubclass('embed', HTMLEmbedElement);\n// Reflected properties, strings.\n// HTMLEmbedElement.height => string, reflected attribute\n// HTMLEmbedElement.src => string, reflected attribute\n// HTMLEmbedElement.type => string, reflected attribute\n// HTMLEmbedElement.width => string, reflected attribute\nreflectProperties([{ height: [''] }, { src: [''] }, { type: [''] }, { width: [''] }], HTMLEmbedElement);\n// Unimplemented\n// HTMLEmbedElement.align => string, not reflected\n// HTMLEmbedElement.name => string, not reflected\n//# sourceMappingURL=HTMLEmbedElement.js.map","import { matchChildrenElements, tagNameConditionPredicate } from './matchElements';\nconst MATCHING_CHILD_ELEMENT_TAGNAMES = 'BUTTON FIELDSET INPUT OBJECT OUTPUT SELECT TEXTAREA'.split(' ');\n/**\n * The HTMLFormControlsCollection interface represents a collection of HTML form control elements.\n * It is mixedin to both HTMLFormElement and HTMLFieldSetElement.\n */\nexport const HTMLFormControlsCollectionMixin = (defineOn) => {\n    Object.defineProperty(defineOn.prototype, 'elements', {\n        /**\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormControlsCollection\n         * @return Element array matching children of specific tagnames.\n         */\n        get() {\n            return matchChildrenElements(this, tagNameConditionPredicate(MATCHING_CHILD_ELEMENT_TAGNAMES));\n        },\n    });\n};\n//# sourceMappingURL=HTMLFormControlsMixin.js.map","import { registerSubclass } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLFormControlsCollectionMixin } from './HTMLFormControlsMixin';\nimport { HTMLElement } from './HTMLElement';\nimport { toLower } from '../../utils';\nexport class HTMLFieldSetElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFieldSetElement\n     * @return hardcoded string 'fieldset'\n     */\n    get type() {\n        return toLower(this.tagName);\n    }\n}\nregisterSubclass('fieldset', HTMLFieldSetElement);\nHTMLFormControlsCollectionMixin(HTMLFieldSetElement);\n// Reflected properties\n// HTMLFieldSetElement.name => string, reflected attribute\n// HTMLFieldSetElement.disabled => boolean, reflected attribute\nreflectProperties([{ name: [''] }, { disabled: [false] }], HTMLFieldSetElement);\n// Unimplemented properties\n// HTMLFieldSetElement.validity\n// HTMLFieldSetElement.willValidate\n// HTMLFieldSetElement.validationMessage\n//# sourceMappingURL=HTMLFieldSetElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { HTMLFormControlsCollectionMixin } from './HTMLFormControlsMixin';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLFormElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/length\n     * @return number of controls in the form\n     */\n    get length() {\n        return this.elements.length;\n    }\n}\nregisterSubclass('form', HTMLFormElement);\nHTMLFormControlsCollectionMixin(HTMLFormElement);\n// Reflected properties\n// HTMLFormElement.name => string, reflected attribute\n// HTMLFormElement.method => string, reflected attribute\n// HTMLFormElement.target => string, reflected attribute\n// HTMLFormElement.action => string, reflected attribute\n// HTMLFormElement.enctype => string, reflected attribute\n// HTMLFormElement.acceptCharset => string, reflected attribute\n// HTMLFormElement.autocomplete => string, reflected attribute\n// HTMLFormElement.autocapitalize => string, reflected attribute\nreflectProperties([\n    { name: [''] },\n    { method: ['get'] },\n    { target: [''] },\n    { action: [''] },\n    { enctype: ['application/x-www-form-urlencoded'] },\n    { acceptCharset: ['', /* attr */ 'accept-charset'] },\n    { autocomplete: ['on'] },\n    { autocapitalize: ['sentences'] },\n], HTMLFormElement);\n// Unimplemented properties\n// HTMLFormElement.encoding => string, reflected attribute\n// HTMLFormElement.noValidate => boolean, reflected attribute\n/*\nUnimplemented, TBD:\n\nNamed inputs are added to their owner form instance as properties, and can overwrite native properties\nif they share the same name (eg a form with an input named action will have its action property return\nthat input instead of the form's action HTML attribute).\n*/\n//# sourceMappingURL=HTMLFormElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList } from './DOMTokenList';\nexport class HTMLIFrameElement extends HTMLElement {\n    _sandbox;\n    // HTMLIFrameElement.sandbox, DOMTokenList, reflected attribute\n    get sandbox() {\n        return this._sandbox || (this._sandbox = new DOMTokenList(this, 'sandbox'));\n    }\n}\nregisterSubclass('iframe', HTMLIFrameElement);\ndefinePropertyBackedAttributes(HTMLIFrameElement, {\n    sandbox: [(el) => el.sandbox.value, (el, value) => (el.sandbox.value = value)],\n});\n// Reflected properties\n// HTMLIFrameElement.allow => string, reflected attribute\n// HTMLIFrameElement.allowFullscreen => boolean, reflected attribute\n// HTMLIFrameElement.csp => string, reflected attribute\n// HTMLIFrameElement.height => string, reflected attribute\n// HTMLIFrameElement.name => string, reflected attribute\n// HTMLIFrameElement.referrerPolicy => string, reflected attribute\n// HTMLIFrameElement.src => string, reflected attribute\n// HTMLIFrameElement.srcdoc => string, reflected attribute\n// HTMLIFrameElement.width => string, reflected attribute\nreflectProperties([\n    { allow: [''] },\n    { allowFullscreen: [false] },\n    { csp: [''] },\n    { height: [''] },\n    { name: [''] },\n    { referrerPolicy: [''] },\n    { src: [''] },\n    { srcdoc: [''] },\n    { width: [''] },\n], HTMLIFrameElement);\n// Unimplemented Properties\n// HTMLIFrameElement.allowPaymentRequest => boolean, reflected attribute\n// HTMLIFrameElement.contentDocument => Document, read only (active document in the inline frame's nested browsing context)\n// HTMLIFrameElement.contentWindow => WindowProxy, read only (window proxy for the nested browsing context)\n//# sourceMappingURL=HTMLIFrameElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLImageElement extends HTMLElement {\n}\nregisterSubclass('img', HTMLImageElement);\n// Reflected Properties\n// HTMLImageElement.alt => string, reflected attribute\n// HTMLImageElement.crossOrigin => string, reflected attribute\n// HTMLImageElement.height => number, reflected attribute\n// HTMLImageElement.isMap => boolean, reflected attribute\n// HTMLImageElement.referrerPolicy => string, reflected attribute\n// HTMLImageElement.src => string, reflected attribute\n// HTMLImageElement.sizes => string, reflected attribute\n// HTMLImageElement.srcset => string, reflected attribute\n// HTMLImageElement.useMap => string, reflected attribute\n// HTMLImageElement.width => number, reflected attribute\nreflectProperties([\n    { alt: [''] },\n    { crossOrigin: [''] },\n    { height: [0] },\n    { isMap: [false] },\n    { referrerPolicy: [''] },\n    { src: [''] },\n    { sizes: [''] },\n    { srcset: [''] },\n    { useMap: [''] },\n    { width: [0] },\n], HTMLImageElement);\n// Unimplmented Properties\n// HTMLImageElement.complete Read only\n// Returns a Boolean that is true if the browser has finished fetching the image, whether successful or not. It also shows true, if the image has no src value.\n// HTMLImageElement.currentSrc Read only\n// Returns a DOMString representing the URL to the currently displayed image (which may change, for example in response to media queries).\n// HTMLImageElement.naturalHeight Read only\n// Returns a unsigned long representing the intrinsic height of the image in CSS pixels, if it is available; else, it shows 0.\n// HTMLImageElement.naturalWidth Read only\n// Returns a unsigned long representing the intrinsic width of the image in CSS pixels, if it is available; otherwise, it will show 0.\n//# sourceMappingURL=HTMLImageElement.js.map","import { matchChildrenElements } from './matchElements';\n/**\n * The HTMLInputLabels interface represents a collection of input getters for their related label Elements.\n * It is mixedin to both HTMLInputElement, HTMLMeterElement, and HTMLProgressElement.\n */\nexport const HTMLInputLabelsMixin = (defineOn) => {\n    Object.defineProperty(defineOn.prototype, 'labels', {\n        /**\n         * Getter returning label elements associated to this meter.\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLProgressElement/labels\n         * @return label elements associated to this meter.\n         */\n        get() {\n            return matchChildrenElements(this.ownerDocument || this, (element) => element.tagName === 'LABEL' && element.for && element.for === this.id);\n        },\n    });\n};\n//# sourceMappingURL=HTMLInputLabelsMixin.js.map","import { HTMLElement } from './HTMLElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nimport { reflectProperties } from './enhanceElement';\nimport { registerSubclass } from './Element';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\nexport class HTMLInputElement extends HTMLElement {\n    // Per spec, some attributes like 'value' and 'checked' change behavior based on dirty flags.\n    // Since these flags can only be changed on interaction (outside of worker), we can ignore them here.\n    // Tradeoffs: Consequent attribute changes are missing, HTMLFormElement.reset() doesn't work, etc.\n    // Alternative: Implement dirty flag checking in worker-dom, which would require listening for\n    //     and forwarding interaction events to flag \"dirtiness\".\n    // https://html.spec.whatwg.org/multipage/input.html#common-input-element-apis\n    [21 /* TransferrableKeys.value */] = '';\n    dirtyValue = false;\n    [47 /* TransferrableKeys.checked */] = false;\n    // TODO(willchou): There are a few interrelated issues with `value` property.\n    //   1. \"Dirtiness\" caveat above.\n    //   2. Duplicate SYNC events. Sent by every event fired from elements with a `value`, plus the default 'change' listener.\n    //   3. Duplicate MUTATE events. Caused by stale `value` in worker due to no default 'input' listener (see below).\n    get value() {\n        return !this.dirtyValue ? this.getAttribute('value') || '' : this[21 /* TransferrableKeys.value */];\n    }\n    set value(value) {\n        // Don't early-out if value doesn't appear to have changed.\n        // The worker may have a stale value since 'input' events aren't being forwarded.\n        this[21 /* TransferrableKeys.value */] = String(value);\n        this.dirtyValue = true;\n        transfer(this.ownerDocument, [\n            3 /* TransferrableMutationType.PROPERTIES */,\n            this[7 /* TransferrableKeys.index */],\n            storeString('value'),\n            0 /* NumericBoolean.FALSE */,\n            storeString(value),\n        ]);\n    }\n    get valueAsDate() {\n        // Don't use Date constructor or Date.parse() since ISO 8601 (yyyy-mm-dd) parsing is inconsistent.\n        const date = this.stringToDate(this.value);\n        const invalid = !date || isNaN(date.getTime());\n        return invalid ? null : date;\n    }\n    /** Unlike browsers, does not throw if this input[type] doesn't support dates. */\n    set valueAsDate(value) {\n        if (!(value instanceof Date)) {\n            throw new TypeError('The provided value is not a Date.');\n        }\n        this.value = this.dateToString(value);\n    }\n    get valueAsNumber() {\n        if (this.value.length === 0) {\n            return NaN;\n        }\n        return Number(this.value);\n    }\n    /** Unlike browsers, does not throw if this input[type] doesn't support numbers. */\n    set valueAsNumber(value) {\n        if (typeof value === 'number') {\n            this.value = String(value);\n        }\n        else {\n            this.value = '';\n        }\n    }\n    get checked() {\n        return this[47 /* TransferrableKeys.checked */];\n    }\n    set checked(value) {\n        if (this[47 /* TransferrableKeys.checked */] === value) {\n            return;\n        }\n        this[47 /* TransferrableKeys.checked */] = !!value;\n        transfer(this.ownerDocument, [\n            3 /* TransferrableMutationType.PROPERTIES */,\n            this[7 /* TransferrableKeys.index */],\n            storeString('checked'),\n            1 /* NumericBoolean.TRUE */,\n            value === true ? 1 /* NumericBoolean.TRUE */ : 0 /* NumericBoolean.FALSE */,\n        ]);\n    }\n    /**\n     * Returns a date in 'yyyy-mm-dd' format.\n     * @param date\n     */\n    dateToString(date) {\n        const y = date.getFullYear();\n        const m = date.getMonth() + 1; // getMonth() is 0-index.\n        const d = date.getDate();\n        return `${y}-${m > 9 ? '' : '0'}${m}-${d > 9 ? '' : '0'}${d}`;\n    }\n    /**\n     * Returns a Date from a 'yyyy-mm-dd' format.\n     * @param s\n     */\n    stringToDate(str) {\n        const components = str.split('-');\n        if (components.length !== 3) {\n            return null;\n        }\n        const [y, m, d] = components;\n        // Month is 0-index.\n        return new Date(parseInt(y, 10), parseInt(m, 10) - 1, parseInt(d, 10));\n    }\n}\nregisterSubclass('input', HTMLInputElement);\nHTMLInputLabelsMixin(HTMLInputElement);\n// Reflected Properties\n// HTMLInputElement.formAction => string, reflected attribute\n// HTMLInputElement.formEncType\t=> string, reflected attribute\n// HTMLInputElement.formMethod => string, reflected attribute\n// HTMLInputElement.formTarget => string, reflected attribute\n// HTMLInputElement.name => string, reflected attribute\n// HTMLInputElement.type => string, reflected attribute\n// HTMLInputElement.disabled => boolean, reflected attribute\n// HTMLInputElement.autofocus => boolean, reflected attribute\n// HTMLInputElement.required => boolean, reflected attribute\n// HTMLInputElement.defaultChecked => boolean, reflected attribute (\"checked\")\n// HTMLInputElement.alt => string, reflected attribute\n// HTMLInputElement.height => number, reflected attribute\n// HTMLInputElement.src => string, reflected attribute\n// HTMLInputElement.width => number, reflected attribute\n// HTMLInputElement.accept => string, reflected attribute\n// HTMLInputElement.autocomplete => string, reflected attribute\n// HTMLInputElement.maxLength => number, reflected attribute\n// HTMLInputElement.size => number, reflected attribute\n// HTMLInputElement.pattern => string, reflected attribute\n// HTMLInputElement.placeholder => string, reflected attribute\n// HTMLInputElement.readOnly => boolean, reflected attribute\n// HTMLInputElement.min => string, reflected attribute\n// HTMLInputElement.max => string, reflected attribute\n// HTMLInputElement.defaultValue => string, reflected attribute\n// HTMLInputElement.dirname => string, reflected attribute\n// HTMLInputElement.multiple => boolean, reflected attribute\n// HTMLInputElement.step => string, reflected attribute\n// HTMLInputElement.autocapitalize => string, reflected attribute\nreflectProperties([\n    { accept: [''] },\n    { alt: [''] },\n    { autocapitalize: [''] },\n    { autocomplete: [''] },\n    { autofocus: [false] },\n    { defaultChecked: [false, /* attr */ 'checked'] },\n    { defaultValue: ['', /* attr */ 'value'] },\n    { dirName: [''] },\n    { disabled: [false] },\n    { formAction: [''] },\n    { formEncType: [''] },\n    { formMethod: [''] },\n    { formTarget: [''] },\n    { height: [0] },\n    { max: [''] },\n    { maxLength: [0] },\n    { min: [''] },\n    { multiple: [false] },\n    { name: [''] },\n    { pattern: [''] },\n    { placeholder: [''] },\n    { readOnly: [false] },\n    { required: [false] },\n    { size: [0] },\n    { src: [''] },\n    { step: [''] },\n    { type: ['text'] },\n    { width: [0] },\n], HTMLInputElement);\n// TODO(KB) Not Reflected Properties\n// HTMLInputElement.indeterminate => boolean\n// Unimplemented Properties\n// HTMLInputElement.formNoValidate => string, reflected attribute\n// HTMLInputElement.validity => ValidityState, readonly\n// HTMLInputElement.validationMessage => string, readonly\n// HTMLInputElement.willValidate => boolean, readonly\n// HTMLInputElement.allowdirs => boolean\n// HTMLInputElement.files\t=> Array<File>\n// HTMLInputElement.webkitdirectory\t=> boolean, reflected attribute\n// HTMLInputElement.webkitEntries => Array<FileSystemEntry>\n// HTMLInputElement.selectionStart => number\n// HTMLInputElement.selectionEnd => number\n// HTMLInputElement.selectionDirection => string\n// HTMLInputElement.list => Element, read only (element pointed by list attribute)\n// Unimplemented Methods\n// HTMLInputElement.setSelectionRange()\n// HTMLInputElement.setRangeText()\n// HTMLInputElement.setCustomValidity()\n// HTMLInputElement.checkValidity()\n// HTMLInputElement.stepDown()\n// HTMLInputElement.stepUp()\n//# sourceMappingURL=HTMLInputElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { matchChildElement, tagNameConditionPredicate } from './matchElements';\nexport class HTMLLabelElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control\n     * @return input element\n     */\n    get control() {\n        const htmlFor = this.getAttribute('for');\n        if (htmlFor !== null) {\n            return this.ownerDocument && this.ownerDocument.getElementById(htmlFor);\n        }\n        return matchChildElement(this, tagNameConditionPredicate(['INPUT']));\n    }\n}\nregisterSubclass('label', HTMLLabelElement);\n// Reflected Properties\n// HTMLLabelElement.htmlFor => string, reflected attribute 'for'\nreflectProperties([{ htmlFor: ['', 'for'] }], HTMLLabelElement);\n//# sourceMappingURL=HTMLLabelElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nexport class HTMLLinkElement extends HTMLElement {\n    _relList;\n    get relList() {\n        return this._relList || (this._relList = new DOMTokenList(this, 'rel'));\n    }\n}\nregisterSubclass('link', HTMLLinkElement);\ndefinePropertyBackedAttributes(HTMLLinkElement, {\n    rel: [(el) => el.relList.value, (el, value) => (el.relList.value = value)],\n});\nsynchronizedAccessor(HTMLLinkElement, 'relList', 'rel');\n// Reflected Properties\n// HTMLLinkElement.as => string, reflected attribute\n// HTMLLinkElement.crossOrigin => string, reflected attribute\n// HTMLLinkElement.disabled => boolean, reflected attribute\n// HTMLLinkElement.href => string, reflected attribute\n// HTMLLinkElement.hreflang => string, reflected attribute\n// HTMLLinkElement.media => string, reflected attribute\n// HTMLLinkElement.referrerPolicy => string, reflected attribute\n// HTMLLinkElement.sizes => string, reflected attribute\n// HTMLLinkElement.type => string, reflected attribute\nreflectProperties([\n    { as: [''] },\n    { crossOrigin: [''] },\n    { disabled: [false] },\n    { href: [''] },\n    { hreflang: [''] },\n    { media: [''] },\n    { referrerPolicy: [''] },\n    { sizes: [''] },\n    { type: [''] },\n], HTMLLinkElement);\n// Unimplemented Properties\n// LinkStyle.sheet Read only\n// Returns the StyleSheet object associated with the given element, or null if there is none.\n//# sourceMappingURL=HTMLLinkElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { matchChildrenElements } from './matchElements';\nexport class HTMLMapElement extends HTMLElement {\n    /**\n     * Getter returning area elements associated to this map.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLMapElement\n     * @return area elements associated to this map.\n     */\n    get areas() {\n        return matchChildrenElements(this, (element) => element.tagName === 'AREA');\n    }\n}\nregisterSubclass('map', HTMLMapElement);\n// Reflected Properties\n// HTMLMapElement.name => string, reflected attribute\nreflectProperties([{ name: [''] }], HTMLMapElement);\n//# sourceMappingURL=HTMLMapElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nexport class HTMLMeterElement extends HTMLElement {\n}\nregisterSubclass('meter', HTMLMeterElement);\nHTMLInputLabelsMixin(HTMLMeterElement);\n// Reflected Properties\n// HTMLMeterElement.high => number, reflected attribute\n// HTMLMeterElement.low => number, reflected attribute\n// HTMLMeterElement.max => number, reflected attribute\n// HTMLMeterElement.min => number, reflected attribute\n// HTMLMeterElement.optimum => number, reflected attribute\n// HTMLMeterElement.value => number, reflected attribute\nreflectProperties([{ high: [0] }, { low: [0] }, { max: [1] }, { min: [0] }, { optimum: [0] }, { value: [0] }], HTMLMeterElement);\n//# sourceMappingURL=HTMLMeterElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLModElement extends HTMLElement {\n}\nregisterSubclass('del', HTMLModElement);\nregisterSubclass('ins', HTMLModElement);\n// Reflected Properties\n// HTMLModElement.cite => string, reflected attribute\n// HTMLModElement.datetime => string, reflected attribute\nreflectProperties([{ cite: [''] }, { datetime: [''] }], HTMLModElement);\n//# sourceMappingURL=HTMLModElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLOListElement extends HTMLElement {\n}\nregisterSubclass('ol', HTMLOListElement);\n// Reflected Properties\n// HTMLModElement.reversed => boolean, reflected attribute\n// HTMLModElement.start => number, reflected attribute\n// HTMLOListElement.type => string, reflected attribute\nreflectProperties([{ reversed: [false] }, { start: [1] }, { type: [''] }], HTMLOListElement);\n//# sourceMappingURL=HTMLOListElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { transfer } from '../MutationTransfer';\nimport { store as storeString } from '../strings';\nexport class HTMLOptionElement extends HTMLElement {\n    [52 /* TransferrableKeys.selected */] = false;\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return position of the option within the list of options it's within, or zero if there is no valid parent.\n     */\n    get index() {\n        return (this.parentNode && this.parentNode.children.indexOf(this)) || 0;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return label attribute value or text content if there is no attribute.\n     */\n    get label() {\n        return this.getAttribute('label') || this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param label new label value to store as an attribute.\n     */\n    set label(label) {\n        this.setAttribute('label', label);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return boolean based on if the option element is selected.\n     */\n    get selected() {\n        return this[52 /* TransferrableKeys.selected */];\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param value new selected boolean value.\n     */\n    set selected(value) {\n        this[52 /* TransferrableKeys.selected */] = !!value;\n        transfer(this.ownerDocument, [\n            3 /* TransferrableMutationType.PROPERTIES */,\n            this[7 /* TransferrableKeys.index */],\n            storeString('selected'),\n            1 /* NumericBoolean.TRUE */,\n            this[52 /* TransferrableKeys.selected */] ? 1 /* NumericBoolean.TRUE */ : 0 /* NumericBoolean.FALSE */,\n        ]);\n    }\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param text new text content to store for this Element.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return value attribute value or text content if there is no attribute.\n     */\n    get value() {\n        return this.getAttribute('value') || this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param value new value for an option element.\n     */\n    set value(value) {\n        this.setAttribute('value', value);\n    }\n}\nregisterSubclass('option', HTMLOptionElement);\ndefinePropertyBackedAttributes(HTMLOptionElement, {\n    selected: [(el) => String(el[52 /* TransferrableKeys.selected */]), (el, value) => (el.selected = value === 'true')],\n});\n// Reflected Properties\n// HTMLOptionElement.defaultSelected => boolean, reflected attribute\n// HTMLOptionElement.disabled => boolean, reflected attribute\n// HTMLOptionElement.type => string, reflected attribute\nreflectProperties([{ defaultSelected: [false, /* attr */ 'selected'] }, { disabled: [false] }, { type: [''] }], HTMLOptionElement);\n// Implemented at HTMLElement\n// HTMLOptionElement.form, Read only\t=> HTMLFormElement\n//# sourceMappingURL=HTMLOptionElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nexport class HTMLProgressElement extends HTMLElement {\n    [48 /* TransferrableKeys.indeterminate */] = true;\n    [21 /* TransferrableKeys.value */] = 0;\n    dirtyValue = false;\n    get position() {\n        return this[48 /* TransferrableKeys.indeterminate */] ? -1 : this.value / this.max;\n    }\n    get value() {\n        return !this.dirtyValue ? Number(this.getAttribute('value')) || 0 : this[21 /* TransferrableKeys.value */];\n    }\n    set value(value) {\n        this[48 /* TransferrableKeys.indeterminate */] = false;\n        this[21 /* TransferrableKeys.value */] = value;\n        this.dirtyValue = true;\n        // TODO(KB) This is a property mutation needing tracked.\n    }\n}\nregisterSubclass('progress', HTMLProgressElement);\nHTMLInputLabelsMixin(HTMLProgressElement);\n// Reflected Properties\n// HTMLModElement.max => number, reflected attribute\nreflectProperties([{ max: [1] }], HTMLProgressElement);\n//# sourceMappingURL=HTMLProgressElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLQuoteElement extends HTMLElement {\n}\nregisterSubclass('blockquote', HTMLQuoteElement);\nregisterSubclass('q', HTMLQuoteElement);\n// Reflected Properties\n// HTMLModElement.cite => string, reflected attribute\nreflectProperties([{ cite: [''] }], HTMLQuoteElement);\n//# sourceMappingURL=HTMLQuoteElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLScriptElement extends HTMLElement {\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement\n     * @param text new text content to store for this Element.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n}\nregisterSubclass('script', HTMLScriptElement);\n// Reflected Properties\n// HTMLScriptElement.type => string, reflected attribute\n// HTMLScriptElement.src => string, reflected attribute\n// HTMLScriptElement.charset => string, reflected attribute\n// HTMLScriptElement.async => boolean, reflected attribute\n// HTMLScriptElement.defer => boolean, reflected attribute\n// HTMLScriptElement.crossOrigin => string, reflected attribute\n// HTMLScriptElement.noModule => boolean, reflected attribute\nreflectProperties([{ type: [''] }, { src: [''] }, { charset: [''] }, { async: [false] }, { defer: [false] }, { crossOrigin: [''] }, { noModule: [false] }], HTMLScriptElement);\n//# sourceMappingURL=HTMLScriptElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nimport { matchChildrenElements, matchChildElement, tagNameConditionPredicate } from './matchElements';\nconst isOptionPredicate = tagNameConditionPredicate(['OPTION']);\nconst isSelectedOptionPredicate = (element) => isOptionPredicate(element) && element.selected === true;\nexport class HTMLSelectElement extends HTMLElement {\n    [49 /* TransferrableKeys.size */] = -1 /* SizeDefaults.UNMODIFIED */;\n    /**\n     * Extend functionality after child insertion to make sure the correct option is selected.\n     * @param child\n     */\n    [56 /* TransferrableKeys.insertedNode */](child) {\n        super[56 /* TransferrableKeys.insertedNode */](child);\n        // When this singular value select is appending a child, set the value property for two cases.\n        // 1. The inserted child is already selected.\n        // 2. The current value of the select is the default ('').\n        if ((!this.multiple && isOptionPredicate(child) && child.selected) || this.value === '') {\n            this.value = child.value;\n        }\n    }\n    /**\n     * Extend functionality after child insertion to make sure the correct option is selected.\n     * @param child\n     */\n    [57 /* TransferrableKeys.removedNode */](child) {\n        super[57 /* TransferrableKeys.removedNode */](child);\n        // When this singular value select is removing a selected child\n        // ... set the value property to the first valid option.\n        if (!this.multiple && child.selected) {\n            const options = this.options;\n            if (options.length > 0) {\n                this.value = options[0].value;\n            }\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/length\n     * @return number of controls in the form\n     */\n    get length() {\n        return this.options.length;\n    }\n    /**\n     * Getter returning option elements that are direct children of a HTMLSelectElement\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return Element \"options\" objects that are direct children.\n     */\n    get options() {\n        return this.children.filter(isOptionPredicate);\n    }\n    /**\n     * Getter returning the index of the first selected <option> element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedIndex\n     * @return the index of the first selected option element, or -1 if no element is selected.\n     */\n    get selectedIndex() {\n        const firstSelectedChild = matchChildElement(this, isSelectedOptionPredicate);\n        return firstSelectedChild ? this.children.indexOf(firstSelectedChild) : -1;\n    }\n    /**\n     * Setter making the <option> element at the passed index selected.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedIndex\n     * @param selectedIndex index number to make selected.\n     */\n    set selectedIndex(selectedIndex) {\n        this.children.forEach((element, index) => (element.selected = index === selectedIndex));\n    }\n    /**\n     * Getter returning the <option> elements selected.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedOptions\n     * @return array of Elements currently selected.\n     */\n    get selectedOptions() {\n        return matchChildrenElements(this, isSelectedOptionPredicate);\n    }\n    /**\n     * Getter returning the size of the select element (by default 1 for single and 4 for multiple)\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return size of the select element.\n     */\n    get size() {\n        return this[49 /* TransferrableKeys.size */] === -1 /* SizeDefaults.UNMODIFIED */\n            ? this.multiple\n                ? 4 /* SizeDefaults.MULTIPLE */\n                : 1 /* SizeDefaults.SINGLE */\n            : this[49 /* TransferrableKeys.size */];\n    }\n    /**\n     * Override the size of this element (each positive unit is the height of a single option)\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @param size number to set the size to.\n     */\n    set size(size) {\n        this[49 /* TransferrableKeys.size */] = size > 0 ? size : this.multiple ? 4 /* SizeDefaults.MULTIPLE */ : 1 /* SizeDefaults.SINGLE */;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return string representing the select element type.\n     */\n    get type() {\n        return this.multiple ? \"select-one\" /* TypeDefaults.MULTIPLE */ : \"select-multiple\" /* TypeDefaults.SINGLE */;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return the value of the first selected option\n     */\n    get value() {\n        const firstSelectedChild = matchChildElement(this, isSelectedOptionPredicate);\n        return firstSelectedChild ? firstSelectedChild.value : '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @set value\n     */\n    set value(value) {\n        const stringValue = String(value);\n        this.children.forEach((element) => isOptionPredicate(element) && (element.selected = element.value === stringValue));\n    }\n}\nregisterSubclass('select', HTMLSelectElement);\nHTMLInputLabelsMixin(HTMLSelectElement);\n// Reflected Properties\n// HTMLSelectElement.multiple => boolean, reflected attribute\n// HTMLSelectElement.name => string, reflected attribute\n// HTMLSelectElement.required => boolean, reflected attribute\nreflectProperties([{ multiple: [false] }, { name: [''] }, { required: [false] }], HTMLSelectElement);\n// Implemented on HTMLElement\n// HTMLSelectElement.form => HTMLFormElement, readonly\n// Unimplemented Properties\n// HTMLSelectElement.validation => string\n// HTMLSelectElement.validity => ValidityState\n// HTMLSelectElement.willValidate => boolean\n//# sourceMappingURL=HTMLSelectElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLSourceElement extends HTMLElement {\n}\nregisterSubclass('source', HTMLSourceElement);\n// Reflected Properties\n// HTMLSourceElement.media => string, reflected attribute\n// HTMLSourceElement.sizes => string, reflected attribute\n// HTMLSourceElement.src => string, reflected attribute\n// HTMLSourceElement.srcset => string, reflected attribute\n// HTMLSourceElement.type => string, reflected attribute\nreflectProperties([{ media: [''] }, { sizes: [''] }, { src: [''] }, { srcset: [''] }, { type: [''] }], HTMLSourceElement);\n// Unimplemented Properties\n// HTMLSourceElement.keySystem => string\n//# sourceMappingURL=HTMLSourceElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLStyleElement extends HTMLElement {\n}\nregisterSubclass('style', HTMLStyleElement);\n// Reflected Properties\n// HTMLStyleElement.media => string, reflected attribute\n// HTMLStyleElement.type => string, reflected attribute\nreflectProperties([{ media: [''] }, { type: [''] }], HTMLStyleElement);\n// Unimplemented Properties\n// HTMLStyleElement.disabled => boolean\n// HTMLStyleElement.scoped => boolean, reflected attribute\n// HTMLStyleElement.sheet => StyleSheet, read only\n//# sourceMappingURL=HTMLStyleElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList } from './DOMTokenList';\nimport { matchNearestParent, tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nexport class HTMLTableCellElement extends HTMLElement {\n    _headers;\n    get headers() {\n        return this._headers || (this._headers = new DOMTokenList(this, 'headers'));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCellElement\n     * @return position of the cell within the parent tr, if not nested in a tr the value is -1.\n     */\n    get cellIndex() {\n        const parent = matchNearestParent(this, tagNameConditionPredicate(['TR']));\n        return parent !== null ? matchChildrenElements(parent, tagNameConditionPredicate(['TH', 'TD'])).indexOf(this) : -1;\n    }\n}\nregisterSubclass('th', HTMLTableCellElement);\nregisterSubclass('td', HTMLTableCellElement);\ndefinePropertyBackedAttributes(HTMLTableCellElement, {\n    headers: [(el) => el.headers.value, (el, value) => (el.headers.value = value)],\n});\n// Reflected Properties\n// HTMLTableCellElement.abbr => string, reflected attribute\n// HTMLTableCellElement.colSpan => number, reflected attribute\n// HTMLTableCellElement.rowSpan => number, reflected attribute\n// HTMLTableCellElement.scope => string, reflected attribute\nreflectProperties([{ abbr: [''] }, { colSpan: [1] }, { rowSpan: [1] }, { scope: [''] }], HTMLTableCellElement);\n//# sourceMappingURL=HTMLTableCellElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLTableColElement extends HTMLElement {\n}\nregisterSubclass('col', HTMLTableColElement);\n// Reflected Properties\n// HTMLTableColElement.span => number, reflected attribute\nreflectProperties([{ span: [1] }], HTMLTableColElement);\n//# sourceMappingURL=HTMLTableColElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { matchChildElement, matchChildrenElements, tagNameConditionPredicate } from './matchElements';\nimport { toUpper } from '../../utils';\nconst removeElement = (element) => element && element.remove();\nconst insertBeforeElementsWithTagName = (parent, element, tagNames) => {\n    console.assert(tagNames.every((t) => t === toUpper(t)), 'tagNames must be all uppercase.');\n    const insertBeforeElement = matchChildElement(parent, (element) => !tagNames.includes(element.tagName));\n    if (insertBeforeElement) {\n        parent.insertBefore(element, insertBeforeElement);\n    }\n    else {\n        parent.appendChild(element);\n    }\n};\nexport class HTMLTableElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/caption\n     * @return first matching caption Element or null if none exists.\n     */\n    get caption() {\n        return matchChildElement(this, tagNameConditionPredicate(['CAPTION']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/caption\n     * @param element new caption element to replace the existing, or become the first element child.\n     */\n    set caption(newElement) {\n        if (newElement && newElement.tagName === 'CAPTION') {\n            // If a correct object is given,\n            // it is inserted in the tree as the first child of this element and the first <caption>\n            // that is a child of this element is removed from the tree, if any.\n            removeElement(this.caption);\n            this.insertBefore(newElement, this.firstElementChild);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @return first matching thead Element or null if none exists.\n     */\n    get tHead() {\n        return matchChildElement(this, tagNameConditionPredicate(['THEAD']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @param newElement new thead element to insert in this table.\n     */\n    set tHead(newElement) {\n        if (newElement && newElement.tagName === 'THEAD') {\n            // If a correct object is given,\n            // it is inserted in the tree immediately before the first element that is\n            // neither a <caption>, nor a <colgroup>, or as the last child if there is no such element.\n            // Additionally, the first <thead> that is a child of this element is removed from the tree, if any.\n            removeElement(this.tHead);\n            insertBeforeElementsWithTagName(this, newElement, ['CAPTION', 'COLGROUP']);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @return first matching thead Element or null if none exists.\n     */\n    get tFoot() {\n        return matchChildElement(this, tagNameConditionPredicate(['TFOOT']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @param newElement new tfoot element to insert in this table.\n     */\n    set tFoot(newElement) {\n        if (newElement && newElement.tagName === 'TFOOT') {\n            // If a correct object is given,\n            // it is inserted in the tree immediately before the first element that is neither a <caption>,\n            // a <colgroup>, nor a <thead>, or as the last child if there is no such element, and the first <tfoot> that is a child of\n            // this element is removed from the tree, if any.\n            removeElement(this.tFoot);\n            insertBeforeElementsWithTagName(this, newElement, ['CAPTION', 'COLGROUP', 'THEAD']);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement\n     * @return array of 'tr' tagname elements\n     */\n    get rows() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TR']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement\n     * @return array of 'tbody' tagname elements\n     */\n    get tBodies() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TBODY']));\n    }\n}\nregisterSubclass('table', HTMLTableElement);\n// Unimplemented Properties\n// HTMLTableElement.sortable => boolean\n// Unimplemented Methods\n// HTMLTableElement.createTHead()\n// HTMLTableElement.deleteTHead()\n// HTMLTableElement.createTFoot()\n// HTMLTableElement.deleteTFoot()\n// HTMLTableElement.createCaption()\n// HTMLTableElement.deleteCaption()\n// HTMLTableElement.insertRow()\n// HTMLTableElement.deleteRow()\n//# sourceMappingURL=HTMLTableElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { matchNearestParent, tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nconst TABLE_SECTION_TAGNAMES = 'TABLE TBODY THEAD TFOOT'.split(' ');\nconst indexInAncestor = (element, isValidAncestor) => {\n    const parent = matchNearestParent(element, isValidAncestor);\n    // TODO(KB): This is either a HTMLTableElement or HTMLTableSectionElement.\n    return parent === null ? -1 : parent.rows.indexOf(element);\n};\nexport class HTMLTableRowElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return td and th elements that are children of this row.\n     */\n    get cells() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TD', 'TH']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return position of the row within a table, if not nested within in a table the value is -1.\n     */\n    get rowIndex() {\n        return indexInAncestor(this, tagNameConditionPredicate(['TABLE']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return position of the row within a parent section, if not nested directly in a section the value is -1.\n     */\n    get sectionRowIndex() {\n        return indexInAncestor(this, tagNameConditionPredicate(TABLE_SECTION_TAGNAMES));\n    }\n    /**\n     * Removes the cell in provided position of this row.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @param index position of the cell in the row to remove.\n     */\n    deleteCell(index) {\n        const cell = this.cells[index];\n        if (cell) {\n            cell.remove();\n        }\n    }\n    /**\n     * Insert a new cell ('td') in the row at a specified position.\n     * @param index position in the children to insert before.\n     * @return newly inserted td element.\n     */\n    insertCell(index) {\n        const cells = this.cells;\n        const td = this.ownerDocument.createElement('td');\n        if (index < 0 || index >= cells.length) {\n            this.appendChild(td);\n        }\n        else {\n            this.insertBefore(td, this.children[index]);\n        }\n        return td;\n    }\n}\nregisterSubclass('tr', HTMLTableRowElement);\n//# sourceMappingURL=HTMLTableRowElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nexport class HTMLTableSectionElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @return All rows (tr elements) within the table section.\n     */\n    get rows() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TR']));\n    }\n    /**\n     * Remove a node in a specified position from the section.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @param index position in the section to remove the node of.\n     */\n    deleteRow(index) {\n        const rows = this.rows;\n        if (index >= 0 || index <= rows.length) {\n            rows[index].remove();\n        }\n    }\n    /**\n     * Insert a new row ('tr') in the row at a specified position.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @param index position in the children to insert before.\n     * @return newly inserted tr element.\n     */\n    insertRow(index) {\n        const rows = this.rows;\n        const tr = this.ownerDocument.createElement('tr');\n        if (index < 0 || index >= rows.length) {\n            this.appendChild(tr);\n        }\n        else {\n            this.insertBefore(tr, this.children[index]);\n        }\n        return tr;\n    }\n}\nregisterSubclass('thead', HTMLTableSectionElement);\nregisterSubclass('tfoot', HTMLTableSectionElement);\nregisterSubclass('tbody', HTMLTableSectionElement);\n//# sourceMappingURL=HTMLTableSectionElement.js.map","// <blockquote> and <q>\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLTimeElement extends HTMLElement {\n}\nregisterSubclass('time', HTMLTimeElement);\n// Reflected Properties\n// HTMLTimeElement.dateTime => string, reflected attribute\nreflectProperties([{ dateTime: [''] }], HTMLTimeElement);\n//# sourceMappingURL=HTMLTimeElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nexport class HTMLDataListElement extends HTMLElement {\n    /**\n     * Getter returning option elements that are direct children of a HTMLDataListElement\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLDataListElement\n     * @return Element \"options\" objects that are direct children.\n     */\n    get options() {\n        return this.childNodes.filter((node) => node.nodeName === 'OPTION');\n    }\n}\nregisterSubclass('datalist', HTMLDataListElement);\n/**\n * HTMLDataListElement.options Read only\n * Is a HTMLCollection representing a collection of the contained option elements.\n */\n/**\n * <label for=\"myBrowser\">Choose a browser from this list:</label>\n * <input list=\"browsers\" id=\"myBrowser\" name=\"myBrowser\" />\n * <datalist id=\"browsers\">\n *   <option value=\"Chrome\">\n *   <option value=\"Firefox\">\n *   <option value=\"Internet Explorer\">\n *   <option value=\"Opera\">\n *   <option value=\"Safari\">\n *   <option value=\"Microsoft Edge\">\n * </datalist>\n */\n//# sourceMappingURL=HTMLDataListElement.js.map","import { Node } from './Node';\nimport { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\nimport { getNextElementSibling, getPreviousElementSibling } from './elementSibling';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/CharacterData\nexport class CharacterData extends Node {\n    [38 /* TransferrableKeys.data */];\n    constructor(data, nodeType, nodeName, ownerDocument, overrideIndex) {\n        super(nodeType, nodeName, ownerDocument, overrideIndex);\n        this[38 /* TransferrableKeys.data */] = data;\n        this[8 /* TransferrableKeys.creationFormat */] = [this[7 /* TransferrableKeys.index */], nodeType, storeString(nodeName), storeString(data), 0];\n    }\n    // Unimplemented Methods\n    // NonDocumentTypeChildNode.nextElementSibling – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/nextElementSibling\n    // NonDocumentTypeChildNode.previousElementSibling – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/previousElementSibling\n    // CharacterData.appendData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/appendData\n    // CharacterData.deleteData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/deleteData\n    // CharacterData.insertData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/insertData\n    // CharacterData.replaceData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/replaceData\n    // CharacterData.substringData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/substringData\n    /**\n     * @return Returns the string contained in private CharacterData.data\n     */\n    get data() {\n        return this[38 /* TransferrableKeys.data */];\n    }\n    /**\n     * @param value string value to store as CharacterData.data.\n     */\n    set data(value) {\n        const oldValue = this.data;\n        this[38 /* TransferrableKeys.data */] = value;\n        mutate(this.ownerDocument, {\n            target: this,\n            type: 1 /* MutationRecordType.CHARACTER_DATA */,\n            value,\n            oldValue,\n        }, [1 /* TransferrableMutationType.CHARACTER_DATA */, this[7 /* TransferrableKeys.index */], storeString(value)]);\n    }\n    /**\n     * @return Returns the size of the string contained in CharacterData.data\n     */\n    get length() {\n        return this[38 /* TransferrableKeys.data */].length;\n    }\n    /**\n     * @return Returns the string contained in CharacterData.data\n     */\n    get nodeValue() {\n        return this[38 /* TransferrableKeys.data */];\n    }\n    /**\n     * @param value string value to store as CharacterData.data.\n     */\n    set nodeValue(value) {\n        this.data = value;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/previousElementSibling\n     * Returns the Element immediately prior to the specified one in its parent's children list,\n     * or null if the specified element is the first one in the list.\n     */\n    get previousElementSibling() {\n        return getPreviousElementSibling(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/nextElementSibling\n     * Returns the Element immediately following the specified one in its parent's children list,\n     * or null if the specified element is the last one in the list.\n     */\n    get nextElementSibling() {\n        return getNextElementSibling(this);\n    }\n}\n//# sourceMappingURL=CharacterData.js.map","import { CharacterData } from './CharacterData';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/Text\nexport class Text extends CharacterData {\n    constructor(data, ownerDocument, overrideIndex) {\n        super(data, 3 /* NodeType.TEXT_NODE */, '#text', ownerDocument, overrideIndex);\n    }\n    // Unimplemented Properties\n    // Text.isElementContentWhitespace – https://developer.mozilla.org/en-US/docs/Web/API/Text/isElementContentWhitespace\n    // Text.wholeText – https://developer.mozilla.org/en-US/docs/Web/API/Text/wholeText\n    // Text.assignedSlot – https://developer.mozilla.org/en-US/docs/Web/API/Text/assignedSlot\n    /**\n     * textContent getter, retrieves underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     */\n    get textContent() {\n        return this.data;\n    }\n    /**\n     * textContent setter, mutates underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     * @param value new value\n     */\n    set textContent(value) {\n        // Mutation Observation is performed by CharacterData.\n        this.nodeValue = value;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @return new Text Node with the same data as the Text to clone.\n     */\n    cloneNode() {\n        return this.ownerDocument.createTextNode(this.data);\n    }\n    /**\n     * Breaks Text node into two nodes at the specified offset, keeping both nodes in the tree as siblings.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Text/splitText\n     * @param offset number position to split text at.\n     * @return Text Node after the offset.\n     */\n    splitText(offset) {\n        const remainderTextNode = new Text(this.data.slice(offset, this.data.length), this.ownerDocument);\n        const parentNode = this.parentNode;\n        this.nodeValue = this.data.slice(0, offset);\n        if (parentNode !== null) {\n            // When this node is attached to the DOM, the remainder text needs to be inserted directly after.\n            const parentChildNodes = parentNode.childNodes;\n            const insertBeforePosition = parentChildNodes.indexOf(this) + 1;\n            const insertBeforeNode = parentChildNodes.length >= insertBeforePosition ? parentChildNodes[insertBeforePosition] : null;\n            return parentNode.insertBefore(remainderTextNode, insertBeforeNode);\n        }\n        return remainderTextNode;\n    }\n}\n//# sourceMappingURL=Text.js.map","import { CharacterData } from './CharacterData';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/Comment\nexport class Comment extends CharacterData {\n    constructor(data, ownerDocument, overrideIndex) {\n        super(data, 8 /* NodeType.COMMENT_NODE */, '#comment', ownerDocument, overrideIndex);\n    }\n    /**\n     * textContent getter, retrieves underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     */\n    get textContent() {\n        return this.data;\n    }\n    /**\n     * textContent setter, mutates underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     * @param value new value\n     */\n    set textContent(value) {\n        // Mutation Observation is performed by CharacterData.\n        this.nodeValue = value;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @return new Comment Node with the same data as the Comment to clone.\n     */\n    cloneNode() {\n        return this.ownerDocument.createComment(this.data);\n    }\n}\n//# sourceMappingURL=Comment.js.map","import { ParentNode } from './ParentNode';\nimport { store as storeString } from '../strings';\nexport class DocumentFragment extends ParentNode {\n    constructor(ownerDocument, overrideIndex) {\n        super(11 /* NodeType.DOCUMENT_FRAGMENT_NODE */, '#document-fragment', ownerDocument, overrideIndex);\n        this[8 /* TransferrableKeys.creationFormat */] = [this[7 /* TransferrableKeys.index */], 11 /* NodeType.DOCUMENT_FRAGMENT_NODE */, storeString(this.nodeName), 0, 0];\n    }\n    /**\n     * @param deep boolean determines if the clone should include a recursive copy of all childNodes.\n     * @return DocumentFragment containing childNode clones of the DocumentFragment requested to be cloned.\n     */\n    cloneNode(deep = false) {\n        const clone = this.ownerDocument.createDocumentFragment();\n        if (deep) {\n            this.childNodes.forEach((child) => clone.appendChild(child.cloneNode(deep)));\n        }\n        return clone;\n    }\n}\n//# sourceMappingURL=DocumentFragment.js.map","import { get } from './nodes';\n/**\n * When an event is dispatched from the main thread, it needs to be propagated in the worker thread.\n * Propagate adds an event listener to the worker global scope and uses the WorkerDOM Node.dispatchEvent\n * method to dispatch the transfered event in the worker thread.\n */\nexport function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* TransferrableKeys.type */] !== 4 /* MessageType.SYNC */) {\n            return;\n        }\n        const sync = data[40 /* TransferrableKeys.sync */];\n        const node = get(sync[7 /* TransferrableKeys.index */]);\n        if (node) {\n            node.ownerDocument[58 /* TransferrableKeys.allowTransfer */] = false;\n            // Modify the private backing ivar of `value` property to avoid mutation/sync cycle.\n            node.value = sync[21 /* TransferrableKeys.value */];\n            node.ownerDocument[58 /* TransferrableKeys.allowTransfer */] = true;\n        }\n    });\n}\n//# sourceMappingURL=SyncValuePropagation.js.map","export function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* TransferrableKeys.type */] !== 5 /* MessageType.RESIZE */) {\n            return;\n        }\n        const sync = data[40 /* TransferrableKeys.sync */];\n        if (sync) {\n            global.innerWidth = sync[0];\n            global.innerHeight = sync[1];\n        }\n    });\n}\n//# sourceMappingURL=ResizePropagation.js.map","import { Element, NS_NAME_TO_CLASS } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport './HTMLAnchorElement';\nimport './HTMLButtonElement';\nimport './HTMLCanvasElement';\nimport './HTMLDataElement';\nimport './HTMLDataListElement';\nimport './HTMLEmbedElement';\nimport './HTMLFieldSetElement';\nimport './HTMLFormElement';\nimport './HTMLIFrameElement';\nimport './HTMLImageElement';\nimport './HTMLInputElement';\nimport './HTMLLabelElement';\nimport './HTMLLinkElement';\nimport './HTMLMapElement';\nimport './HTMLMeterElement';\nimport './HTMLModElement';\nimport './HTMLOListElement';\nimport './HTMLOptionElement';\nimport './HTMLProgressElement';\nimport './HTMLQuoteElement';\nimport './HTMLScriptElement';\nimport './HTMLSelectElement';\nimport './HTMLSourceElement';\nimport './HTMLStyleElement';\nimport './HTMLTableCellElement';\nimport './HTMLTableColElement';\nimport './HTMLTableElement';\nimport './HTMLTableRowElement';\nimport './HTMLTableSectionElement';\nimport './HTMLTimeElement';\nimport { matchChildElement } from './matchElements';\nimport { Text } from './Text';\nimport { Comment } from './Comment';\nimport { toLower } from '../../utils';\nimport { DocumentFragment } from './DocumentFragment';\nimport { HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { propagate as propagateEvents } from '../Event';\nimport { propagate as propagateSyncValues } from '../SyncValuePropagation';\nimport { propagate as propagateResize } from '../ResizePropagation';\nimport { set as setPhase } from '../phase';\nconst DOCUMENT_NAME = '#document';\nexport class Document extends Element {\n    defaultView;\n    documentElement;\n    body;\n    // Internal variables.\n    postMessage;\n    addGlobalEventListener;\n    removeGlobalEventListener;\n    [58 /* TransferrableKeys.allowTransfer */] = true;\n    constructor(global) {\n        super(9 /* NodeType.DOCUMENT_NODE */, DOCUMENT_NAME, HTML_NAMESPACE, null);\n        // Element uppercases its nodeName, but Document doesn't.\n        this.nodeName = DOCUMENT_NAME;\n        this.documentElement = this; // TODO(choumx): Should be the <html> element.\n        this.defaultView = Object.assign(global, {\n            document: this,\n            addEventListener: this.addEventListener.bind(this),\n            removeEventListener: this.removeEventListener.bind(this),\n        });\n    }\n    /**\n     * Observing the Document indicates it's attached to a main thread\n     * version of the document.\n     *\n     * Each mutation needs to be transferred, synced values need to propagate.\n     */\n    [59 /* TransferrableKeys.observe */]() {\n        setPhase(1 /* Phase.Hydrating */);\n        propagateEvents(this.defaultView);\n        propagateSyncValues(this.defaultView);\n        propagateResize(this.defaultView);\n    }\n    /**\n     * Hydrate\n     * @param strings\n     * @param skeleton\n     */\n    [64 /* TransferrableKeys.hydrateNode */](strings, skeleton) {\n        switch (skeleton[0 /* TransferrableKeys.nodeType */]) {\n            case 3 /* NodeType.TEXT_NODE */:\n                return new Text(strings[skeleton[5 /* TransferrableKeys.textContent */]], this, skeleton[7 /* TransferrableKeys.index */]);\n            case 8 /* NodeType.COMMENT_NODE */:\n                return new Comment(strings[skeleton[5 /* TransferrableKeys.textContent */]], this, skeleton[7 /* TransferrableKeys.index */]);\n            default:\n                const namespaceURI = strings[skeleton[6 /* TransferrableKeys.namespaceURI */]] || HTML_NAMESPACE;\n                const localName = strings[skeleton[1 /* TransferrableKeys.localOrNodeName */]];\n                const constructor = NS_NAME_TO_CLASS[`${namespaceURI}:${localName}`] || HTMLElement;\n                const node = new constructor(1 /* NodeType.ELEMENT_NODE */, localName, namespaceURI, this, skeleton[7 /* TransferrableKeys.index */]);\n                (skeleton[2 /* TransferrableKeys.attributes */] || []).forEach((attribute) => \n                // AttributeNamespaceURI = strings[attribute[0]] !== 'null' ? strings[attribute[0]] : HTML_NAMESPACE\n                node.setAttributeNS(strings[attribute[0]] !== 'null' ? strings[attribute[0]] : HTML_NAMESPACE, strings[attribute[1]], strings[attribute[2]]));\n                (skeleton[4 /* TransferrableKeys.childNodes */] || []).forEach((child) => node.appendChild(this[64 /* TransferrableKeys.hydrateNode */](strings, child)));\n                return node;\n        }\n    }\n    createElement(name) {\n        return this.createElementNS(HTML_NAMESPACE, toLower(name));\n    }\n    createElementNS(namespaceURI, localName) {\n        const constructor = NS_NAME_TO_CLASS[`${namespaceURI}:${localName}`] || HTMLElement;\n        return new constructor(1 /* NodeType.ELEMENT_NODE */, localName, namespaceURI, this);\n    }\n    /**\n     * Note: Unlike DOM, Event subclasses (e.g. MouseEvent) are not instantiated based on `type`.\n     * @param type\n     */\n    createEvent(type) {\n        return new Event(type, { bubbles: false, cancelable: false });\n    }\n    createTextNode(text) {\n        return new Text(text, this);\n    }\n    createComment(text) {\n        return new Comment(text, this);\n    }\n    createDocumentFragment() {\n        return new DocumentFragment(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementById\n     * @return Element with matching id attribute.\n     */\n    getElementById(id) {\n        return matchChildElement(this.body, (element) => element.id === id);\n    }\n}\n//# sourceMappingURL=Document.js.map","import { store } from './strings';\nimport { transfer } from './MutationTransfer';\n/**\n * @param document\n * @param location\n * @param data\n */\nexport function createStorage(document, location, data) {\n    const storage = Object.assign(Object.create(null), data);\n    // Define properties on a prototype-less object instead of a class so that\n    // it behaves more like normal objects, e.g. bracket notation and JSON.stringify.\n    const define = Object.defineProperty;\n    define(storage, 'length', {\n        get() {\n            return Object.keys(this).length;\n        },\n    });\n    define(storage, 'key', {\n        value(n) {\n            const keys = Object.keys(this);\n            return n >= 0 && n < keys.length ? keys[n] : null;\n        },\n    });\n    define(storage, 'getItem', {\n        value(key) {\n            const value = this[key];\n            return value ? value : null;\n        },\n    });\n    define(storage, 'setItem', {\n        value(key, value) {\n            const stringValue = String(value);\n            this[key] = stringValue;\n            transfer(document, [12 /* TransferrableMutationType.STORAGE */, 2 /* GetOrSet.SET */, location, store(key) + 1, store(stringValue) + 1]);\n        },\n    });\n    define(storage, 'removeItem', {\n        value(key) {\n            delete this[key];\n            transfer(document, [\n                12 /* TransferrableMutationType.STORAGE */,\n                2 /* GetOrSet.SET */,\n                location,\n                store(key) + 1,\n                0, // value == 0 represents deletion.\n            ]);\n        },\n    });\n    define(storage, 'clear', {\n        value() {\n            Object.keys(this).forEach((key) => {\n                delete this[key];\n            });\n            transfer(document, [\n                12 /* TransferrableMutationType.STORAGE */,\n                2 /* GetOrSet.SET */,\n                location,\n                0,\n                0, // value == 0 represents deletion.\n            ]);\n        },\n    });\n    return storage;\n}\n//# sourceMappingURL=Storage.js.map","import { createStorage } from './Storage';\nexport function initializeStorage(document, localStorageInit, sessionStorageInit) {\n    const window = document.defaultView;\n    if (localStorageInit.storage) {\n        window.localStorage = createStorage(document, 0 /* StorageLocation.Local */, localStorageInit.storage);\n    }\n    else {\n        console.warn(localStorageInit.errorMsg);\n    }\n    if (sessionStorageInit.storage) {\n        window.sessionStorage = createStorage(document, 1 /* StorageLocation.Session */, sessionStorageInit.storage);\n    }\n    else {\n        console.warn(sessionStorageInit.errorMsg);\n    }\n}\n//# sourceMappingURL=initialize-storage.js.map","import { store as storeString } from './strings';\nimport { appendKeys as addCssKeys } from './css/CSSStyleDeclaration';\nimport { appendGlobalEventProperties } from './dom/HTMLElement';\nimport { initializeStorage } from './initialize-storage';\nexport function initialize(document, strings, hydrateableNode, cssKeys, globalEventHandlerKeys, [innerWidth, innerHeight], localStorageInit, sessionStorageInit) {\n    addCssKeys(cssKeys);\n    appendGlobalEventProperties(globalEventHandlerKeys);\n    strings.forEach(storeString);\n    (hydrateableNode[4 /* TransferrableKeys.childNodes */] || []).forEach((child) => document.body.appendChild(document[64 /* TransferrableKeys.hydrateNode */](strings, child)));\n    const window = document.defaultView;\n    window.innerWidth = innerWidth;\n    window.innerHeight = innerHeight;\n    initializeStorage(document, localStorageInit, sessionStorageInit);\n}\n//# sourceMappingURL=initialize.js.map","const frameDuration = 1000 / 60;\nlet last = 0;\nlet id = 0;\nlet queue = [];\n/**\n * Schedules the accumulated callbacks to be fired 16ms after the last round.\n */\nfunction scheduleNext() {\n    const now = Date.now();\n    const next = Math.round(Math.max(0, frameDuration - (Date.now() - last)));\n    last = now + next;\n    setTimeout(function () {\n        var cp = queue.slice(0);\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0;\n        for (var i = 0; i < cp.length; i++) {\n            if (cp[i].cancelled) {\n                continue;\n            }\n            try {\n                cp[i].callback(last);\n            }\n            catch (e) {\n                setTimeout(function () {\n                    throw e;\n                }, 0);\n            }\n        }\n    }, next);\n}\nexport function rafPolyfill(callback) {\n    if (queue.length === 0) {\n        scheduleNext();\n    }\n    if (id === Number.MAX_SAFE_INTEGER) {\n        id = 0;\n    }\n    queue.push({\n        handle: ++id,\n        callback,\n        cancelled: false,\n    });\n    return id;\n}\nexport function cafPolyfill(handle) {\n    for (let i = 0; i < queue.length; i++) {\n        if (queue[i].handle === handle) {\n            queue[i].cancelled = true;\n            return;\n        }\n    }\n}\n//# sourceMappingURL=AnimationFrame.js.map","import { HTMLElement } from './dom/HTMLElement';\nimport { SVGElement } from './dom/SVGElement';\nimport { HTMLAnchorElement } from './dom/HTMLAnchorElement';\nimport { HTMLButtonElement } from './dom/HTMLButtonElement';\nimport { HTMLCanvasElement } from './dom/HTMLCanvasElement';\nimport { HTMLDataElement } from './dom/HTMLDataElement';\nimport { HTMLEmbedElement } from './dom/HTMLEmbedElement';\nimport { HTMLFieldSetElement } from './dom/HTMLFieldSetElement';\nimport { HTMLFormElement } from './dom/HTMLFormElement';\nimport { HTMLIFrameElement } from './dom/HTMLIFrameElement';\nimport { HTMLImageElement } from './dom/HTMLImageElement';\nimport { HTMLInputElement } from './dom/HTMLInputElement';\nimport { HTMLLabelElement } from './dom/HTMLLabelElement';\nimport { HTMLLinkElement } from './dom/HTMLLinkElement';\nimport { HTMLMapElement } from './dom/HTMLMapElement';\nimport { HTMLMeterElement } from './dom/HTMLMeterElement';\nimport { HTMLModElement } from './dom/HTMLModElement';\nimport { HTMLOListElement } from './dom/HTMLOListElement';\nimport { HTMLOptionElement } from './dom/HTMLOptionElement';\nimport { HTMLProgressElement } from './dom/HTMLProgressElement';\nimport { HTMLQuoteElement } from './dom/HTMLQuoteElement';\nimport { HTMLScriptElement } from './dom/HTMLScriptElement';\nimport { HTMLSelectElement } from './dom/HTMLSelectElement';\nimport { HTMLSourceElement } from './dom/HTMLSourceElement';\nimport { HTMLStyleElement } from './dom/HTMLStyleElement';\nimport { HTMLTableCellElement } from './dom/HTMLTableCellElement';\nimport { HTMLTableColElement } from './dom/HTMLTableColElement';\nimport { HTMLTableElement } from './dom/HTMLTableElement';\nimport { HTMLTableRowElement } from './dom/HTMLTableRowElement';\nimport { HTMLTableSectionElement } from './dom/HTMLTableSectionElement';\nimport { HTMLTimeElement } from './dom/HTMLTimeElement';\nimport { Document } from './dom/Document';\nimport { initialize } from './initialize';\nimport { MutationObserver } from './MutationObserver';\nimport { Event as WorkerDOMEvent } from './Event';\nimport { Text } from './dom/Text';\nimport { HTMLDataListElement } from './dom/HTMLDataListElement';\nimport { CharacterData } from './dom/CharacterData';\nimport { Comment } from './dom/Comment';\nimport { DOMTokenList } from './dom/DOMTokenList';\nimport { DocumentFragment } from './dom/DocumentFragment';\nimport { Element } from './dom/Element';\nimport { rafPolyfill, cafPolyfill } from './AnimationFrame';\nconst globalScope = {\n    innerWidth: 0,\n    innerHeight: 0,\n    CharacterData,\n    Comment,\n    DOMTokenList,\n    Document,\n    DocumentFragment,\n    Element,\n    HTMLAnchorElement,\n    HTMLButtonElement,\n    HTMLCanvasElement,\n    HTMLDataElement,\n    HTMLDataListElement,\n    HTMLElement,\n    HTMLEmbedElement,\n    HTMLFieldSetElement,\n    HTMLFormElement,\n    HTMLIFrameElement,\n    HTMLImageElement,\n    HTMLInputElement,\n    HTMLLabelElement,\n    HTMLLinkElement,\n    HTMLMapElement,\n    HTMLMeterElement,\n    HTMLModElement,\n    HTMLOListElement,\n    HTMLOptionElement,\n    HTMLProgressElement,\n    HTMLQuoteElement,\n    HTMLScriptElement,\n    HTMLSelectElement,\n    HTMLSourceElement,\n    HTMLStyleElement,\n    HTMLTableCellElement,\n    HTMLTableColElement,\n    HTMLTableElement,\n    HTMLTableRowElement,\n    HTMLTableSectionElement,\n    HTMLTimeElement,\n    SVGElement,\n    Text,\n    Event: WorkerDOMEvent,\n    MutationObserver,\n    requestAnimationFrame: self.requestAnimationFrame || rafPolyfill,\n    cancelAnimationFrame: self.cancelAnimationFrame || cafPolyfill,\n};\nconst noop = () => void 0;\n// WorkerDOM.Document.defaultView ends up being the window object.\n// React requires the classes to exist off the window object for instanceof checks.\nexport const workerDOM = (function (postMessage, addEventListener, removeEventListener) {\n    const document = new Document(globalScope);\n    // TODO(choumx): Avoid polluting Document's public API.\n    document.postMessage = postMessage;\n    document.addGlobalEventListener = addEventListener;\n    document.removeGlobalEventListener = removeEventListener;\n    // TODO(choumx): Remove once defaultView contains all native worker globals.\n    // Canvas's use of native OffscreenCanvas checks the existence of the property\n    // on the WorkerDOMGlobalScope.\n    globalScope.OffscreenCanvas = self['OffscreenCanvas'];\n    globalScope.ImageBitmap = self['ImageBitmap'];\n    document.isConnected = true;\n    document.appendChild((document.body = document.createElement('body')));\n    return document.defaultView;\n})(postMessage.bind(self) || noop, addEventListener.bind(self) || noop, removeEventListener.bind(self) || noop);\nexport const hydrate = initialize;\n//# sourceMappingURL=index.js.map"],"names":["toLower","value","toLowerCase","toUpper","toUpperCase","containsIndexOf","pos","keyValueString","key","concat","tagNameConditionPredicate","tagNames","element","includes","tagName","elementPredicate","node","nodeType","matchChildrenElements","conditionPredicate","matchingElements","childNodes","forEach","child","push","apply","_toConsumableArray","matchChildElement","returnValue","children","some","grandChildMatch","matchNearestParent","parentNode","matchAttrReference","attrSelector","equalPos","indexOf","selectorLength","length","caseInsensitive","charAt","endPos","equalSuffix","possibleSuffixes","attrString","substring","rawValue","rawAttrValue","getAttribute","casedValue","casedAttrValue","split","startsWith","endsWith","hasAttribute","phase","set","newPhase","count","transfer","mapping","Map","storeOverride","override","Math","max","store","undefined","get","index","has","pending","pendingMutations","document","mutation","Promise","resolve","then","_","nodes","Uint16Array","consumeNodes","reduce","acc","buffer","mutations","postMessage","_defineProperty","observers","matchesIndex","observerTarget","target","pushMutation","observer","record","pushRecord","callback","takeRecords","mutate","transferable","t","MutationObserver","_classCallCheck","options","_createClass","observe","disconnect","splice","records","propagate","property","Node","nodeName","ownerDocument","overrideIndex","isConnected","storeOverrideNodeMapping","storeNodeMapping","getTextContent","textContent","childNode","parentChildNodes","hasChildNodes","contains","otherNode","insertBefore","referenceNode","_this","slice","appendChild","remove","addedNodes","nextSibling","type","previousSibling","removeChild","exists","removedNodes","replaceChild","newChild","oldChild","replaceWith","parent","_len","arguments","Array","_key","nodeIterator","currentNode","_typeof","createTextNode","ParentNode","_Node","_inherits","_super","_createSuper","filter","find","querySelector","selector","matches","querySelectorAll","selectorBracketIndexes","selectorHasAttr","elementSelector","matcher","id","substr","classList","localName","WHITESPACE_REGEX","synchronizedAccessor","defineOn","accessorKey","propertyName","Object","defineProperty","prototype","enumerable","configurable","DOMTokenList","attributeName","bind","join","collection","_this$","oldValue","newValue","trim","item","token","add","_this$2","tokens","from","Set","_this$3","_len2","_key2","replace","newToken","_this$4","delete","toggle","force","test","TypeError","namespaceURI","storeString","toString","attributes","map","attr","name","matchPredicate","hyphenateKey","appendKeys","keys","keysToAppend","isNaN","CSSStyleDeclaration","hasOwnProperty","previousPrototypeLength","writable","hyphenatedKey","defineProperties","getPropertyValue","setProperty","removeProperty","mutated","cssText","stringValue","values","reflectProperties","properties","pair","_loop","_pair$property","defaultValue","_pair$property$","keywords","isBooleanAttribute","attributeValue","castableValue","Number","String","setAttribute","removeAttribute","HTML_NAMESPACE","SVG_NAMESPACE","arr_back","arr","kMarkupPattern","kAttributePattern","kSelfClosingElements","AREA","BASE","BR","COL","HR","IMG","INPUT","LINK","META","PARAM","SOURCE","TRACK","WBR","kElementsClosedByOpening","LI","DT","DD","P","ADDRESS","ARTICLE","ASIDE","BLOCKQUOTE","DETAILS","DIV","DL","FIELDSET","FIGCAPTION","FIGURE","FOOTER","FORM","H1","H2","H3","H4","H5","H6","HEADER","MAIN","NAV","OL","PRE","SECTION","TABLE","UL","RT","RP","OPTGROUP","OPTION","THEAD","TBODY","TFOOT","TR","TD","TH","kElementsClosedByClosing","A","B","I","kBlockTextElements","SCRIPT","NOSCRIPT","STYLE","parse","data","rootElement","root","createElementNS","currentParent","currentNamespace","stack","lastTextPos","match","tagsClosed","Error","exec","commentContents","beginningSlash","matchAttributes","endSlash","text","decodeEntities","lastIndex","createComment","normalizedTagName","pop","childToAppend","attMatch","attrName","attrValue","closeMarkup","_i","_stack","valid","wrapper","firstChild","RESERVED_CHARACTERS","__proto__","amp","lt","gt","quot","html","s","numericEntity","namedEntity","code","parseInt","fromCodePoint","Event","opts","bubbles","cancelable","cancelBubble","currentTarget","defaultPrevented","eventPhase","isTrusted","timeStamp","scoped","pageX","pageY","offsetX","offsetY","touches","changedTouches","stopPropagation","stopImmediatePropagation","preventDefault","initEvent","targetFromTransfer","event","touchListFromTransfer","touchListKeys","list","touchListKey","numericKey","transferredTouch","identifier","screenX","screenY","clientX","clientY","global","addGlobalEventListener","_ref","dispatchEvent","assign","keyCode","getPreviousElementSibling","parentNodes","i","getNextElementSibling","NS_NAME_TO_CLASS","registerSubclass","subclass","namespace","definePropertyBackedAttributes","sub","create","ElementKind","VOID_ELEMENTS","Element","_ParentNode","call","_classList","style_","kind","VOID","NORMAL","tag","start","attrsToString","contents","innerHTML","outerHTML","_this2","n","setAttributeNS","getAttributeNS","removeAttributeNS","hasAttributeNS","hasAttributes","valueAsString","propertyBacked","constructor","matchAttrPredicate","attributeNamespace","findIndex","getElementsByClassName","names","inputClassList","inputClassName","getElementsByTagName","lowerTagName","getElementsByName","stringName","cloneNode","deep","clone","getBoundingClientRectAsync","_this3","left","top","right","bottom","x","y","width","height","messageHandler","removeGlobalEventListener","transferredBoundingClientRect","setTimeout","click","scrollIntoView","class","el","style","appendGlobalEventProperties","HTMLElement","normalizedKey","stored","removeEventListener","Function","addEventListener","_Element","args","accessKey","contentEditable","dir","lang","title","draggable","hidden","noModule","spellcheck","translate","SVGElement","HTMLAnchorElement","_HTMLElement","_relList","href","rel","relList","hreflang","media","HTMLButtonElement","formAction","formEnctype","formMethod","formTarget","autofocus","disabled","f32","Float32Array","u16","isSmallInt","num","serializeTransferrableObject","serialized","arg","isArray","serializedArray","serializedObject","CanvasGradient","addColorStop","offset","color","CanvasPattern","setTransform","OffscreenCanvasPolyfill","canvas","context","getContext","contextType","OffscreenCanvasRenderingContext2DPolyfill","canvasElement","lineDash","objectIndex","fnName","createObjectReference","objectId","creationMethod","creationArgs","clearRect","w","h","fillRect","strokeRect","roundRect","radii","fillText","maxWidth","moveTo","lineTo","closePath","stroke","restore","save","resetTransform","rotate","angle","transform","a","b","c","d","e","f","scale","beginPath","strokeText","arc","radius","startAngle","endAngle","anticlockwise","arcTo","x1","y1","x2","y2","ellipse","radiusX","radiusY","rotation","bezierCurveTo","cp1x","cp1y","cp2x","cp2y","rect","quadraticCurveTo","cpx","cpy","setLineDash","getLineDash","clip","pathOrFillRule","fillRule","fill","transformOrA","bOrC","cOrD","dOrE","eOrF","createLinearGradient","x0","y0","gradientId","createRadialGradient","r0","r1","createPattern","image","repetition","patternId","drawImage","dx","dy","createImageData","getImageData","putImageData","isPointInPath","isPointInStroke","measureText","indexTracker","retrieveImageBitmap","callIndex","transferredImageBitmap","FakeNativeCanvasPattern","instance","pattern","deferredUpgrades","WeakMap","CanvasRenderingContext2DShim","queue","implementation","upgraded","polyfillUsed","unresolvedCalls","goodImplementation","OffscreenCanvas","defaultView","getOffscreenCanvasAsync","deferred","isTestMode","upgradePromise","transferredOffscreenCanvas","maybeUpgradeImplementation","degradeImplementation","flushQueue","_iterator","_createForOfIteratorHelper","_step","done","isSetter","err","delegateFunc","_this$implementation","delegateSetter","delegateGetter","segments","_this4","ImageBitmap","fakePattern","_this5","antiClockwise","path","pathOrX","xOrY","yOrFillRule","imagedataOrWidth","sx","sy","sw","sh","imageData","dirtyX","dirtyY","dirtyWidth","dirtyHeight","HTMLCanvasElement","HTMLDataElement","HTMLEmbedElement","src","MATCHING_CHILD_ELEMENT_TAGNAMES","HTMLFormControlsCollectionMixin","HTMLFieldSetElement","HTMLFormElement","elements","method","action","enctype","acceptCharset","autocomplete","autocapitalize","HTMLIFrameElement","_sandbox","sandbox","allow","allowFullscreen","csp","referrerPolicy","srcdoc","HTMLImageElement","alt","crossOrigin","isMap","sizes","srcset","useMap","HTMLInputLabelsMixin","for","HTMLInputElement","dirtyValue","date","stringToDate","invalid","getTime","Date","dateToString","NaN","getFullYear","m","getMonth","getDate","str","components","_components","_slicedToArray","accept","defaultChecked","dirName","formEncType","maxLength","min","multiple","placeholder","readOnly","required","size","step","HTMLLabelElement","htmlFor","getElementById","HTMLLinkElement","as","HTMLMapElement","HTMLMeterElement","high","low","optimum","HTMLModElement","cite","datetime","HTMLOListElement","reversed","HTMLOptionElement","label","selected","defaultSelected","HTMLProgressElement","HTMLQuoteElement","HTMLScriptElement","charset","async","defer","isOptionPredicate","isSelectedOptionPredicate","HTMLSelectElement","_get","_getPrototypeOf","firstSelectedChild","selectedIndex","HTMLSourceElement","HTMLStyleElement","HTMLTableCellElement","_headers","headers","abbr","colSpan","rowSpan","scope","HTMLTableColElement","span","removeElement","insertBeforeElementsWithTagName","insertBeforeElement","HTMLTableElement","newElement","caption","firstElementChild","tHead","tFoot","TABLE_SECTION_TAGNAMES","indexInAncestor","isValidAncestor","rows","HTMLTableRowElement","deleteCell","cell","cells","insertCell","td","createElement","HTMLTableSectionElement","deleteRow","insertRow","tr","HTMLTimeElement","dateTime","HTMLDataListElement","CharacterData","Text","_CharacterData","nodeValue","splitText","remainderTextNode","insertBeforePosition","insertBeforeNode","Comment","DocumentFragment","createDocumentFragment","sync","innerWidth","innerHeight","DOCUMENT_NAME","Document","documentElement","body","_assertThisInitialized","setPhase","propagateEvents","propagateSyncValues","propagateResize","strings","skeleton","attribute","createEvent","createStorage","location","storage","define","initializeStorage","localStorageInit","sessionStorageInit","window","localStorage","console","warn","errorMsg","sessionStorage","initialize","hydrateableNode","cssKeys","globalEventHandlerKeys","_ref2","addCssKeys","frameDuration","last","scheduleNext","now","next","round","cp","cancelled","rafPolyfill","MAX_SAFE_INTEGER","handle","cafPolyfill","globalScope","WorkerDOMEvent","requestAnimationFrame","self","cancelAnimationFrame","noop","workerDOM","hydrate"],"mappings":"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"}