{"version":3,"file":"server-lib.mjs","sources":["../output/utils.js","../output/worker-thread/dom/matchElements.js","../output/worker-thread/nodes.js","../output/worker-thread/strings.js","../output/worker-thread/MutationTransfer.js","../output/worker-thread/MutationObserver.js","../output/worker-thread/dom/Node.js","../output/worker-thread/dom/ParentNode.js","../output/worker-thread/dom/DOMTokenList.js","../output/worker-thread/dom/Attr.js","../output/worker-thread/css/CSSStyleDeclaration.js","../output/worker-thread/dom/enhanceElement.js","../output/transfer/TransferrableNodes.js","../output/third_party/html-parser/html-parser.js","../output/worker-thread/Event.js","../output/worker-thread/dom/elementSibling.js","../output/worker-thread/dom/Element.js","../output/worker-thread/dom/HTMLElement.js","../output/worker-thread/dom/HTMLAnchorElement.js","../output/worker-thread/dom/HTMLButtonElement.js","../output/worker-thread/serializeTransferrableObject.js","../output/worker-thread/canvas/CanvasGradient.js","../output/worker-thread/canvas/CanvasPattern.js","../output/worker-thread/canvas/OffscreenCanvasPolyfill.js","../output/worker-thread/canvas/canvas-utils.js","../output/worker-thread/canvas/FakeNativeCanvasPattern.js","../output/worker-thread/canvas/CanvasRenderingContext2D.js","../output/worker-thread/dom/HTMLCanvasElement.js","../output/worker-thread/dom/HTMLDataElement.js","../output/worker-thread/dom/HTMLDataListElement.js","../output/worker-thread/dom/HTMLEmbedElement.js","../output/worker-thread/dom/HTMLFormControlsMixin.js","../output/worker-thread/dom/HTMLFieldSetElement.js","../output/worker-thread/dom/HTMLFormElement.js","../output/worker-thread/dom/HTMLIFrameElement.js","../output/worker-thread/dom/HTMLImageElement.js","../output/worker-thread/dom/HTMLInputLabelsMixin.js","../output/worker-thread/dom/HTMLInputElement.js","../output/worker-thread/dom/HTMLLabelElement.js","../output/worker-thread/dom/HTMLLinkElement.js","../output/worker-thread/dom/HTMLMapElement.js","../output/worker-thread/dom/HTMLMeterElement.js","../output/worker-thread/dom/HTMLModElement.js","../output/worker-thread/dom/HTMLOListElement.js","../output/worker-thread/dom/HTMLOptionElement.js","../output/worker-thread/dom/HTMLProgressElement.js","../output/worker-thread/dom/HTMLQuoteElement.js","../output/worker-thread/dom/HTMLScriptElement.js","../output/worker-thread/dom/HTMLSelectElement.js","../output/worker-thread/dom/HTMLSourceElement.js","../output/worker-thread/dom/HTMLStyleElement.js","../output/worker-thread/dom/HTMLTableCellElement.js","../output/worker-thread/dom/HTMLTableColElement.js","../output/worker-thread/dom/HTMLTableElement.js","../output/worker-thread/dom/HTMLTableRowElement.js","../output/worker-thread/dom/HTMLTableSectionElement.js","../output/worker-thread/dom/HTMLTimeElement.js","../output/worker-thread/dom/CharacterData.js","../output/worker-thread/dom/Text.js","../output/worker-thread/dom/Comment.js","../output/worker-thread/dom/DocumentFragment.js","../output/worker-thread/SyncValuePropagation.js","../output/worker-thread/ResizePropagation.js","../output/worker-thread/dom/Document.js","../output/worker-thread/server-lib.js"],"sourcesContent":["export const toLower = (value) => value.toLowerCase();\nexport const toUpper = (value) => value.toUpperCase();\nexport const containsIndexOf = (pos) => pos !== -1;\nexport const keyValueString = (key, value) => `${key}=\"${value}\"`;\n//# sourceMappingURL=utils.js.map","import { toLower, toUpper } from '../../utils';\n// To future authors: It would be great if we could enforce that elements are not modified by a ConditionPredicate.\nexport const tagNameConditionPredicate = (tagNames) => (element) => {\n    console.assert(tagNames.every((t) => t === toUpper(t)), 'tagNames must be all uppercase.');\n    return tagNames.includes(element.tagName);\n};\nexport const elementPredicate = (node) => node.nodeType === 1 /* NodeType.ELEMENT_NODE */;\nexport const matchChildrenElements = (node, conditionPredicate) => {\n    const matchingElements = [];\n    node.childNodes.forEach((child) => {\n        if (elementPredicate(child)) {\n            if (conditionPredicate(child)) {\n                matchingElements.push(child);\n            }\n            matchingElements.push(...matchChildrenElements(child, conditionPredicate));\n        }\n    });\n    return matchingElements;\n};\nexport const matchChildElement = (element, conditionPredicate) => {\n    let returnValue = null;\n    element.children.some((child) => {\n        if (conditionPredicate(child)) {\n            returnValue = child;\n            return true;\n        }\n        const grandChildMatch = matchChildElement(child, conditionPredicate);\n        if (grandChildMatch !== null) {\n            returnValue = grandChildMatch;\n            return true;\n        }\n        return false;\n    });\n    return returnValue;\n};\nexport const matchNearestParent = (element, conditionPredicate) => {\n    while ((element = element.parentNode)) {\n        if (conditionPredicate(element)) {\n            return element;\n        }\n    }\n    return null;\n};\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors\n * @param attrSelector the selector we are trying to match for.\n * @param element the element being tested.\n * @return boolean for whether we match the condition\n */\nexport const matchAttrReference = (attrSelector, element) => {\n    if (!attrSelector) {\n        return false;\n    }\n    const equalPos = attrSelector.indexOf('=');\n    const selectorLength = attrSelector.length;\n    const caseInsensitive = attrSelector.charAt(selectorLength - 2) === 'i';\n    const endPos = caseInsensitive ? selectorLength - 3 : selectorLength - 1;\n    if (equalPos !== -1) {\n        const equalSuffix = attrSelector.charAt(equalPos - 1);\n        const possibleSuffixes = ['~', '|', '$', '^', '*'];\n        const attrString = possibleSuffixes.includes(equalSuffix) ? attrSelector.substring(1, equalPos - 1) : attrSelector.substring(1, equalPos);\n        const rawValue = attrSelector.substring(equalPos + 1, endPos);\n        const rawAttrValue = element.getAttribute(attrString);\n        if (rawAttrValue) {\n            const casedValue = caseInsensitive ? toLower(rawValue) : rawValue;\n            const casedAttrValue = caseInsensitive ? toLower(rawAttrValue) : rawAttrValue;\n            switch (equalSuffix) {\n                case '~':\n                    return casedAttrValue.split(' ').indexOf(casedValue) !== -1;\n                case '|':\n                    return casedAttrValue === casedValue || casedAttrValue === `${casedValue}-`;\n                case '^':\n                    return casedAttrValue.startsWith(casedValue);\n                case '$':\n                    return casedAttrValue.endsWith(casedValue);\n                case '*':\n                    return casedAttrValue.indexOf(casedValue) !== -1;\n                default:\n                    return casedAttrValue === casedValue;\n            }\n        }\n        return false;\n    }\n    else {\n        return element.hasAttribute(attrSelector.substring(1, endPos));\n    }\n};\n//# sourceMappingURL=matchElements.js.map","import { phase } from './phase';\nlet count = 0;\nlet transfer = [];\nconst mapping = new Map();\n/**\n * Override the store for a node during the initialization phase.\n * @param node Node to store and modify with index\n * @param override Override number to use as the identifier.\n *\n * NOTE: THIS IS ONLY TO BE USED DURING INITIALIZATION.\n */\nexport function storeOverride(node, override) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (phase === 0 /* Phase.Initializing */) {\n        mapping.set((node[7 /* TransferrableKeys.index */] = override), node);\n        count = Math.max(count, override);\n    }\n    return override;\n}\n/**\n * Stores a node in mapping, and makes the index available on the Node directly.\n * @param node Node to store and modify with index\n * @return index Node was stored with in mapping\n */\nexport function store(node) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (node[7 /* TransferrableKeys.index */] !== undefined) {\n        return node[7 /* TransferrableKeys.index */];\n    }\n    mapping.set((node[7 /* TransferrableKeys.index */] = ++count), node);\n    if (phase > 0 /* Phase.Initializing */) {\n        // After Initialization, include all future dom node creation into the list for next transfer.\n        transfer.push(node);\n    }\n    return count;\n}\n/**\n * Retrieves a node based on an index.\n * @param index location in map to retrieve a Node for\n * @return either the Node represented in index position, or null if not available.\n */\nexport function get(index) {\n    // mapping has a 1 based index, since on first store we ++count before storing.\n    return (!!index && mapping.get(index)) || null;\n}\n/**\n * Returns nodes registered but not yet transferred.\n * Side effect: Resets the transfer array to default value, to prevent passing the same values multiple times.\n */\nexport function consume() {\n    const copy = transfer;\n    transfer = [];\n    return copy;\n}\n//# sourceMappingURL=nodes.js.map","let count = 0;\nlet transfer = [];\nconst mapping = new Map();\n/**\n * Stores a string in mapping and returns the index of the location.\n * @param value string to store\n * @return location in map\n */\nexport function store(value) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (mapping.has(value)) {\n        // Safe to cast since we verified the mapping contains the value\n        return mapping.get(value);\n    }\n    mapping.set(value, count);\n    transfer.push(value);\n    return count++;\n}\n/**\n * Retrieve the index for a string (mostly used for tests).\n * @param value string value we need to know the index of\n * @returns index in the map for the string\n */\nexport function getForTesting(value) {\n    return mapping.get(value);\n}\nexport function getForTestingPartial(value) {\n    const found = Array.from(mapping.keys()).find((str) => str.includes(value));\n    if (found) {\n        return mapping.get(found);\n    }\n}\n/**\n * Returns strings registered but not yet transferred.\n * Side effect: Resets the transfer array to default value, to prevent passing the same values multiple times.\n */\nexport function consume() {\n    const strings = transfer;\n    transfer = [];\n    return strings;\n}\n//# sourceMappingURL=strings.js.map","import { consume as consumeNodes } from './nodes';\nimport { consume as consumeStrings } from './strings';\nimport { phase, set as setPhase } from './phase';\nlet pending = false;\nlet pendingMutations = [];\n// TODO(choumx): Change `mutation` to Array<Uint16> to prevent casting errors e.g. integer underflow, precision loss.\nexport function transfer(document, mutation) {\n    if (process.env.SERVER) {\n        return;\n    }\n    if (phase > 0 /* Phase.Initializing */ && document[58 /* TransferrableKeys.allowTransfer */]) {\n        pending = true;\n        pendingMutations = pendingMutations.concat(mutation);\n        Promise.resolve().then((_) => {\n            if (pending) {\n                const nodes = new Uint16Array(consumeNodes().reduce((acc, node) => acc.concat(node[8 /* TransferrableKeys.creationFormat */]), [])).buffer;\n                const mutations = new Uint16Array(pendingMutations).buffer;\n                document.postMessage({\n                    [54 /* TransferrableKeys.phase */]: phase,\n                    [12 /* TransferrableKeys.type */]: phase === 2 /* Phase.Mutating */ ? 3 /* MessageType.MUTATE */ : 2 /* MessageType.HYDRATE */,\n                    [37 /* TransferrableKeys.nodes */]: nodes,\n                    [41 /* TransferrableKeys.strings */]: consumeStrings(),\n                    [36 /* TransferrableKeys.mutations */]: mutations,\n                }, [nodes, mutations]);\n                pendingMutations = [];\n                pending = false;\n                setPhase(2 /* Phase.Mutating */);\n            }\n        });\n    }\n}\n//# sourceMappingURL=MutationTransfer.js.map","import { transfer } from './MutationTransfer';\nconst observers = [];\nlet pendingMutations = false;\n/**\n * @param observerTarget\n * @param target\n */\nconst matchesIndex = (observerTarget, target) => {\n    return !!observerTarget && observerTarget[7 /* TransferrableKeys.index */] === target[7 /* TransferrableKeys.index */];\n};\n/**\n * @param observer\n * @param record\n */\nconst pushMutation = (observer, record) => {\n    observer.pushRecord(record);\n    if (!pendingMutations) {\n        pendingMutations = true;\n        Promise.resolve().then(() => {\n            pendingMutations = false;\n            observers.forEach((observer) => observer.callback(observer.takeRecords()));\n        });\n    }\n};\n/**\n * @param document\n * @param record\n * @param transferable\n */\nexport function mutate(document, record, transferable) {\n    // Post-message `transferable` to the main thread to apply mutations.\n    transfer(document, transferable);\n    // The MutationRecord is only used for external callers of MutationObserver.\n    observers.forEach((observer) => {\n        for (let t = record.target; t; t = t.parentNode) {\n            if (matchesIndex(observer.target, t)) {\n                pushMutation(observer, record);\n                break;\n            }\n        }\n    });\n}\nexport class MutationObserver {\n    callback;\n    [42 /* TransferrableKeys.records */] = [];\n    target;\n    options;\n    constructor(callback) {\n        this.callback = callback;\n    }\n    /**\n     * Register the MutationObserver instance to observe a Nodes mutations.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     * @param target Node to observe DOM mutations\n     */\n    observe(target, options) {\n        this.disconnect();\n        this.target = target;\n        this.options = options || {};\n        observers.push(this);\n    }\n    /**\n     * Stop the MutationObserver instance from observing a Nodes mutations.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     */\n    disconnect() {\n        this.target = null;\n        const index = observers.indexOf(this);\n        if (index >= 0) {\n            observers.splice(index, 1);\n        }\n    }\n    /**\n     * Empties the MutationObserver instance's record queue and returns what was in there.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     * @return Mutation Records stored on this MutationObserver instance.\n     */\n    takeRecords() {\n        const records = this[42 /* TransferrableKeys.records */];\n        return records.splice(0, records.length);\n    }\n    /**\n     * NOTE: This method doesn't exist on native MutationObserver.\n     * @param record MutationRecord to store for this instance.\n     */\n    pushRecord(record) {\n        this[42 /* TransferrableKeys.records */].push(record);\n    }\n}\n//# sourceMappingURL=MutationObserver.js.map","import { store as storeNodeMapping, storeOverride as storeOverrideNodeMapping } from '../nodes';\nimport { toLower } from '../../utils';\nimport { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\n/**\n * Propagates a property change for a Node to itself and all childNodes.\n * @param node Node to start applying change to\n * @param property Property to modify\n * @param value New value to apply\n */\nexport const propagate = (node, property, value) => {\n    node[property] = value;\n    node.childNodes.forEach((child) => propagate(child, property, value));\n};\n// https://developer.mozilla.org/en-US/docs/Web/API/Node\n// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\n//\n// Please note, in this implmentation Node doesn't extend EventTarget.\n// This is intentional to reduce the number of classes.\nexport class Node {\n    ownerDocument; // TODO(choumx): Should be a Document.\n    // https://drafts.csswg.org/selectors-4/#scoping-root\n    [45 /* TransferrableKeys.scopingRoot */];\n    nodeType;\n    nodeName;\n    childNodes = [];\n    parentNode = null;\n    isConnected = false;\n    [7 /* TransferrableKeys.index */];\n    [9 /* TransferrableKeys.transferredFormat */];\n    [8 /* TransferrableKeys.creationFormat */];\n    [10 /* TransferrableKeys.handlers */] = {};\n    constructor(nodeType, nodeName, ownerDocument, overrideIndex) {\n        this.nodeType = nodeType;\n        this.nodeName = nodeName;\n        this.ownerDocument = ownerDocument || this;\n        this[45 /* TransferrableKeys.scopingRoot */] = this;\n        if (process.env.SERVER) {\n            return;\n        }\n        this[7 /* TransferrableKeys.index */] = overrideIndex ? storeOverrideNodeMapping(this, overrideIndex) : storeNodeMapping(this);\n        this[9 /* TransferrableKeys.transferredFormat */] = [this[7 /* TransferrableKeys.index */]];\n    }\n    // Unimplemented Properties\n    // Node.baseURI – https://developer.mozilla.org/en-US/docs/Web/API/Node/baseURI\n    // Unimplemented Methods\n    // Node.compareDocumentPosition() – https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n    // Node.getRootNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/getRootNode\n    // Node.isDefaultNamespace() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isDefaultNamespace\n    // Node.isEqualNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isEqualNode\n    // Node.isSameNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isSameNode\n    // Node.lookupPrefix() – https://developer.mozilla.org/en-US/docs/Web/API/Node/lookupPrefix\n    // Node.lookupNamespaceURI() – https://developer.mozilla.org/en-US/docs/Web/API/Node/lookupNamespaceURI\n    // Node.normalize() – https://developer.mozilla.org/en-US/docs/Web/API/Node/normalize\n    // Implemented at Element/Text layer\n    // Node.nodeValue – https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeValue\n    // Node.cloneNode – https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n    /**\n     * Getter returning the text representation of Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @return text from all childNodes.\n     */\n    get textContent() {\n        return this.getTextContent();\n    }\n    /**\n     * Use `this.getTextContent()` instead of `super.textContent` to avoid incorrect or expensive ES5 transpilation.\n     */\n    getTextContent() {\n        let textContent = '';\n        const childNodes = this.childNodes;\n        if (childNodes.length) {\n            childNodes.forEach((childNode) => (textContent += childNode.textContent));\n            return textContent;\n        }\n        return '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/firstChild\n     * @return Node's first child in the tree, or null if the node has no children.\n     */\n    get firstChild() {\n        return this.childNodes[0] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/lastChild\n     * @return The last child of a node, or null if there are no child elements.\n     */\n    get lastChild() {\n        return this.childNodes[this.childNodes.length - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/nextSibling\n     * @return node immediately following the specified one in it's parent's childNodes, or null if one doesn't exist.\n     */\n    get nextSibling() {\n        if (this.parentNode === null) {\n            return null;\n        }\n        const parentChildNodes = this.parentNode.childNodes;\n        return parentChildNodes[parentChildNodes.indexOf(this) + 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/previousSibling\n     * @return node immediately preceding the specified one in its parent's childNodes, or null if the specified node is the first in that list.\n     */\n    get previousSibling() {\n        if (this.parentNode === null) {\n            return null;\n        }\n        const parentChildNodes = this.parentNode.childNodes;\n        return parentChildNodes[parentChildNodes.indexOf(this) - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/hasChildNodes\n     * @return boolean if the Node has childNodes.\n     */\n    hasChildNodes() {\n        return this.childNodes.length > 0;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/contains\n     * @param otherNode\n     * @return whether a Node is a descendant of a given Node\n     */\n    contains(otherNode) {\n        if (otherNode === this) {\n            return true;\n        }\n        if (this.childNodes.length > 0) {\n            if (this.childNodes.includes(this)) {\n                return true;\n            }\n            return this.childNodes.some((child) => child.contains(otherNode));\n        }\n        return false;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/insertBefore\n     * @param child\n     * @param referenceNode\n     * @return child after it has been inserted.\n     */\n    insertBefore(child, referenceNode) {\n        if (child === null || child === this) {\n            // The new child cannot contain the parent.\n            return child;\n        }\n        if (child.nodeType === 11 /* NodeType.DOCUMENT_FRAGMENT_NODE */) {\n            child.childNodes.slice().forEach((node) => this.insertBefore(node, referenceNode));\n        }\n        else if (referenceNode == null) {\n            // When a referenceNode is not valid, appendChild(child).\n            return this.appendChild(child);\n        }\n        else if (this.childNodes.indexOf(referenceNode) >= 0) {\n            // Should only insertBefore direct children of this Node.\n            child.remove();\n            // Removing a child can cause this.childNodes to change, meaning we need to splice from its updated location.\n            this.childNodes.splice(this.childNodes.indexOf(referenceNode), 0, child);\n            this[56 /* TransferrableKeys.insertedNode */](child);\n            mutate(this.ownerDocument, {\n                addedNodes: [child],\n                nextSibling: referenceNode,\n                type: 2 /* MutationRecordType.CHILD_LIST */,\n                target: this,\n            }, [\n                2 /* TransferrableMutationType.CHILD_LIST */,\n                this[7 /* TransferrableKeys.index */],\n                referenceNode[7 /* TransferrableKeys.index */],\n                0,\n                1,\n                0,\n                child[7 /* TransferrableKeys.index */],\n            ]);\n            return child;\n        }\n        return null;\n    }\n    /**\n     * When a Node is inserted, this method is called (and can be extended by other classes)\n     * @param child\n     */\n    [56 /* TransferrableKeys.insertedNode */](child) {\n        child.parentNode = this;\n        propagate(child, 'isConnected', this.isConnected);\n        propagate(child, 45 /* TransferrableKeys.scopingRoot */, this[45 /* TransferrableKeys.scopingRoot */]);\n    }\n    /**\n     * When a node is removed, this method is called (and can be extended by other classes)\n     * @param child\n     */\n    [57 /* TransferrableKeys.removedNode */](child) {\n        child.parentNode = null;\n        propagate(child, 'isConnected', false);\n        propagate(child, 45 /* TransferrableKeys.scopingRoot */, child);\n    }\n    /**\n     * Adds the specified childNode argument as the last child to the current node.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/appendChild\n     * @param child Child Node to append to this Node.\n     * @return Node the appended node.\n     */\n    appendChild(child) {\n        if (child.nodeType === 11 /* NodeType.DOCUMENT_FRAGMENT_NODE */) {\n            child.childNodes.slice().forEach(this.appendChild, this);\n        }\n        else {\n            child.remove();\n            this.childNodes.push(child);\n            this[56 /* TransferrableKeys.insertedNode */](child);\n            const previousSibling = this.childNodes[this.childNodes.length - 2];\n            mutate(this.ownerDocument, {\n                addedNodes: [child],\n                previousSibling,\n                type: 2 /* MutationRecordType.CHILD_LIST */,\n                target: this,\n            }, [\n                2 /* TransferrableMutationType.CHILD_LIST */,\n                this[7 /* TransferrableKeys.index */],\n                0,\n                previousSibling ? previousSibling[7 /* TransferrableKeys.index */] : 0,\n                1,\n                0,\n                child[7 /* TransferrableKeys.index */],\n            ]);\n        }\n        return child;\n    }\n    /**\n     * Removes a child node from the current element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/removeChild\n     * @param child Child Node to remove from this Node.\n     * @return Node removed from the tree or null if the node wasn't attached to this tree.\n     */\n    removeChild(child) {\n        const index = this.childNodes.indexOf(child);\n        const exists = index >= 0;\n        if (exists) {\n            this.childNodes.splice(index, 1);\n            this[57 /* TransferrableKeys.removedNode */](child);\n            mutate(this.ownerDocument, {\n                removedNodes: [child],\n                type: 2 /* MutationRecordType.CHILD_LIST */,\n                target: this,\n            }, [2 /* TransferrableMutationType.CHILD_LIST */, this[7 /* TransferrableKeys.index */], 0, 0, 0, 1, child[7 /* TransferrableKeys.index */]]);\n            return child;\n        }\n        return null;\n    }\n    /**\n     * @param newChild\n     * @param oldChild\n     * @return child that was replaced.\n     * @note `HierarchyRequestError` not handled e.g. newChild is an ancestor of current node.\n     * @see https://dom.spec.whatwg.org/#concept-node-replace\n     */\n    replaceChild(newChild, oldChild) {\n        if (newChild === oldChild ||\n            // In DOM, this throws DOMException: \"The node to be replaced is not a child of this node.\"\n            oldChild.parentNode !== this ||\n            // In DOM, this throws DOMException: \"The new child element contains the parent.\"\n            newChild.contains(this)) {\n            return oldChild;\n        }\n        // If newChild already exists in the DOM, it is first removed.\n        // TODO: Consider using a mutation-free API here to avoid two mutations\n        // per replaceChild() call.\n        newChild.remove();\n        const index = this.childNodes.indexOf(oldChild);\n        this.childNodes.splice(index, 1, newChild);\n        this[57 /* TransferrableKeys.removedNode */](oldChild);\n        this[56 /* TransferrableKeys.insertedNode */](newChild);\n        mutate(this.ownerDocument, {\n            addedNodes: [newChild],\n            removedNodes: [oldChild],\n            type: 2 /* MutationRecordType.CHILD_LIST */,\n            nextSibling: this.childNodes[index + 1],\n            target: this,\n        }, [\n            2 /* TransferrableMutationType.CHILD_LIST */,\n            this[7 /* TransferrableKeys.index */],\n            this.childNodes[index + 1] ? this.childNodes[index + 1][7 /* TransferrableKeys.index */] : 0,\n            0,\n            1,\n            1,\n            newChild[7 /* TransferrableKeys.index */],\n            oldChild[7 /* TransferrableKeys.index */],\n        ]);\n        return oldChild;\n    }\n    /**\n     * Replaces the current node with the provided Array<node|string>.\n     * @param nodes\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/replaceWith\n     */\n    replaceWith(...nodes) {\n        const parent = this.parentNode;\n        let nodeIterator = nodes.length;\n        let currentNode;\n        if (!parent) {\n            return;\n        }\n        if (!nodeIterator) {\n            parent.removeChild(this);\n        }\n        while (nodeIterator--) {\n            currentNode = nodes[nodeIterator];\n            if (typeof currentNode !== 'object') {\n                currentNode = this.ownerDocument.createTextNode(currentNode);\n            }\n            // TODO: Investigate inserting all new nodes in a single operation.\n            if (!nodeIterator) {\n                // currentNode is the first argument (currentNode === arguments[0])\n                parent.replaceChild(currentNode, this);\n            }\n            else {\n                parent.insertBefore(currentNode, this.nextSibling);\n            }\n        }\n    }\n    /**\n     * Removes this Node from the tree it belogs too.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/remove\n     */\n    remove() {\n        if (this.parentNode) {\n            this.parentNode.removeChild(this);\n        }\n    }\n    /**\n     * Add an event listener to callback when a specific event type is dispatched.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n     * @param type Event Type (i.e 'click')\n     * @param handler Function called when event is dispatched.\n     */\n    addEventListener(type, handler, options = {}) {\n        const lowerType = toLower(type);\n        const storedType = storeString(lowerType);\n        const handlers = this[10 /* TransferrableKeys.handlers */][lowerType];\n        let index = 0;\n        if (handlers) {\n            index = handlers.push(handler);\n        }\n        else {\n            this[10 /* TransferrableKeys.handlers */][lowerType] = [handler];\n        }\n        transfer(this.ownerDocument, [\n            4 /* TransferrableMutationType.EVENT_SUBSCRIPTION */,\n            this[7 /* TransferrableKeys.index */],\n            0,\n            1,\n            storedType,\n            index,\n            Number(Boolean(options.capture)),\n            Number(Boolean(options.once)),\n            Number(Boolean(options.passive)),\n            Number(Boolean(options.workerDOMPreventDefault)),\n        ]);\n    }\n    /**\n     * Remove a registered event listener for a specific event type.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n     * @param type Event Type (i.e 'click')\n     * @param handler Function to stop calling when event is dispatched.\n     */\n    removeEventListener(type, handler) {\n        const lowerType = toLower(type);\n        const handlers = this[10 /* TransferrableKeys.handlers */][lowerType];\n        const index = !!handlers ? handlers.indexOf(handler) : -1;\n        if (index >= 0) {\n            handlers.splice(index, 1);\n            transfer(this.ownerDocument, [\n                4 /* TransferrableMutationType.EVENT_SUBSCRIPTION */,\n                this[7 /* TransferrableKeys.index */],\n                1,\n                0,\n                storeString(lowerType),\n                index,\n            ]);\n        }\n    }\n    /**\n     * Dispatch an event for this Node.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent\n     * @param event Event to dispatch to this node and potentially cascade to parents.\n     */\n    dispatchEvent(event) {\n        let target = (event.currentTarget = this);\n        let handlers;\n        let iterator;\n        do {\n            handlers = target && target[10 /* TransferrableKeys.handlers */] && target[10 /* TransferrableKeys.handlers */][toLower(event.type)];\n            if (handlers) {\n                for (iterator = handlers.length; iterator--;) {\n                    if ((handlers[iterator].call(target, event) === false || event[51 /* TransferrableKeys.end */]) && event.cancelable) {\n                        break;\n                    }\n                }\n            }\n        } while (event.bubbles && !(event.cancelable && event[50 /* TransferrableKeys.stop */]) && (target = target && target.parentNode));\n        return !event.defaultPrevented;\n    }\n}\n//# sourceMappingURL=Node.js.map","import { elementPredicate, matchAttrReference, matchChildrenElements } from './matchElements';\nimport { Node } from './Node';\nimport { containsIndexOf, toLower } from '../../utils';\n/*\nNormally ParentNode is implemented as a mixin, but since the Node class is an abstract\nthis makes it hard to build a mixin that recieves a base of the representations of Node needing\nthe mixed in functionality.\n\n// Partially implemented Mixin Methods\n// Both Element.querySelector() and Element.querySelector() are only implemented for the following simple selectors:\n// - Element selectors\n// - ID selectors\n// - Class selectors\n// - Attribute selectors\n// Element.querySelector() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n// Element.querySelectorAll() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n*/\nexport class ParentNode extends Node {\n    /**\n     * Getter returning children of an Element that are Elements themselves.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/children\n     * @return Element objects that are children of this ParentNode, omitting all of its non-element nodes.\n     */\n    get children() {\n        return this.childNodes.filter(elementPredicate);\n    }\n    /**\n     * Getter returning the number of child elements of a Element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/childElementCount\n     * @return number of child elements of the given Element.\n     */\n    get childElementCount() {\n        return this.children.length;\n    }\n    /**\n     * Getter returning the first Element in Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/firstElementChild\n     * @return first childNode that is also an element.\n     */\n    get firstElementChild() {\n        return this.childNodes.find(elementPredicate) || null;\n    }\n    /**\n     * Getter returning the last Element in Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/lastElementChild\n     * @return first childNode that is also an element.\n     */\n    get lastElementChild() {\n        const children = this.children;\n        return children[children.length - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n     * @param selector the selector we are trying to match for.\n     * @return Element with matching selector.\n     */\n    querySelector(selector) {\n        const matches = querySelectorAll(this, selector);\n        return matches ? matches[0] : null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n     * @param selector the selector we are trying to match for.\n     * @return Elements with matching selector.\n     */\n    querySelectorAll(selector) {\n        return querySelectorAll(this, selector);\n    }\n}\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n * @param node the node to filter results under.\n * @param selector the selector we are trying to match for.\n * @return Element with matching selector.\n */\nfunction querySelectorAll(node, selector) {\n    // As per spec: https://dom.spec.whatwg.org/#scope-match-a-selectors-string\n    // First, parse the selector\n    const selectorBracketIndexes = [selector.indexOf('['), selector.indexOf(']')];\n    const selectorHasAttr = containsIndexOf(selectorBracketIndexes[0]) && containsIndexOf(selectorBracketIndexes[1]);\n    const elementSelector = selectorHasAttr ? selector.substring(0, selectorBracketIndexes[0]) : selector;\n    const attrSelector = selectorHasAttr ? selector.substring(selectorBracketIndexes[0], selectorBracketIndexes[1] + 1) : null;\n    // TODO(nainar): Parsing selectors is needed when we add in more complex selectors.\n    // Second, find all the matching elements on the Document\n    let matcher;\n    if (selector[0] === '[') {\n        matcher = (element) => matchAttrReference(selector, element);\n    }\n    else if (elementSelector[0] === '#') {\n        matcher = selectorHasAttr\n            ? (element) => element.id === elementSelector.substr(1) && matchAttrReference(attrSelector, element)\n            : (element) => element.id === elementSelector.substr(1);\n    }\n    else if (elementSelector[0] === '.') {\n        matcher = selectorHasAttr\n            ? (element) => element.classList.contains(elementSelector.substr(1)) && matchAttrReference(attrSelector, element)\n            : (element) => element.classList.contains(elementSelector.substr(1));\n    }\n    else {\n        matcher = selectorHasAttr\n            ? (element) => element.localName === toLower(elementSelector) && matchAttrReference(attrSelector, element)\n            : (element) => element.localName === toLower(elementSelector);\n    }\n    // Third, filter to return elements that exist within the querying element's descendants.\n    return matcher\n        ? matchChildrenElements(node[45 /* TransferrableKeys.scopingRoot */], matcher).filter((element) => node !== element && node.contains(element))\n        : [];\n}\n//# sourceMappingURL=ParentNode.js.map","import { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\nconst WHITESPACE_REGEX = /\\s/;\n/**\n * Synchronizes the string getter/setter with the actual DOMTokenList instance.\n * @param defineOn Element or class extension to define getter/setter pair for token list access.\n * @param accessorKey Key used to access DOMTokenList directly from specific element.\n * @param propertyName Key used to access DOMTokenList as string getter/setter.\n */\nexport function synchronizedAccessor(defineOn, accessorKey, propertyName) {\n    Object.defineProperty(defineOn.prototype, propertyName, {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return this[accessorKey].value;\n        },\n        set(value) {\n            this[accessorKey].value = value;\n        },\n    });\n}\nexport class DOMTokenList {\n    [43 /* TransferrableKeys.tokens */] = [];\n    [13 /* TransferrableKeys.target */];\n    [18 /* TransferrableKeys.attributeName */];\n    [44 /* TransferrableKeys.storeAttribute */];\n    /**\n     * The DOMTokenList interface represents a set of space-separated tokens.\n     * It is indexed beginning with 0 as with JavaScript Array objects and is case-sensitive.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList\n     * @param target Specific Element instance to modify when value is changed.\n     * @param attributeName Name of the attribute used by Element to access DOMTokenList.\n     */\n    constructor(target, attributeName) {\n        this[13 /* TransferrableKeys.target */] = target;\n        this[18 /* TransferrableKeys.attributeName */] = attributeName;\n        this[44 /* TransferrableKeys.storeAttribute */] = target[44 /* TransferrableKeys.storeAttribute */].bind(target);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/value\n     * @return string representation of tokens (space delimitted).\n     */\n    get value() {\n        return this[43 /* TransferrableKeys.tokens */].join(' ');\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/length\n     * @return integer representing the number of objects stored in the object.\n     */\n    get length() {\n        return this[43 /* TransferrableKeys.tokens */].length;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/value\n     * @param collection String of values space delimited to replace the current DOMTokenList with.\n     */\n    set value(collection) {\n        const oldValue = this.value;\n        const newValue = collection.trim();\n        // Replace current tokens with new tokens.\n        this[43 /* TransferrableKeys.tokens */].splice(0, this[43 /* TransferrableKeys.tokens */].length, ...(newValue !== '' ? newValue.split(/\\s+/) : ''));\n        this[67 /* TransferrableKeys.mutated */](oldValue, newValue);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/item\n     * @param index number from DOMTokenList entities to retrieve value of\n     * @return value stored at the index requested, or undefined if beyond known range.\n     */\n    item(index) {\n        return this[43 /* TransferrableKeys.tokens */][index];\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/contains\n     * @param token value the DOMTokenList is tested for.\n     * @return boolean indicating if the token is contained by the DOMTokenList.\n     */\n    contains(token) {\n        return this[43 /* TransferrableKeys.tokens */].includes(token);\n    }\n    /**\n     * Add a token or tokens to the list.\n     * Note: All duplicates are removed, and the first token's position with the value is preserved.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/add\n     * @param tokens each token is a string to add to a TokenList.\n     */\n    add(...tokens) {\n        const oldValue = this.value;\n        this[43 /* TransferrableKeys.tokens */].splice(0, this[43 /* TransferrableKeys.tokens */].length, ...Array.from(new Set(this[43 /* TransferrableKeys.tokens */].concat(tokens))));\n        this[67 /* TransferrableKeys.mutated */](oldValue, this.value);\n    }\n    /**\n     * Remove a token or tokens from the list.\n     * Note: All duplicates are removed, and the first token's position with the value is preserved.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/remove\n     * @param tokens each token is a string to remove from a TokenList.\n     */\n    remove(...tokens) {\n        const oldValue = this.value;\n        this[43 /* TransferrableKeys.tokens */].splice(0, this[43 /* TransferrableKeys.tokens */].length, ...Array.from(new Set(this[43 /* TransferrableKeys.tokens */].filter((token) => !tokens.includes(token)))));\n        this[67 /* TransferrableKeys.mutated */](oldValue, this.value);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/replace\n     * @param token\n     * @param newToken\n     */\n    replace(token, newToken) {\n        if (!this[43 /* TransferrableKeys.tokens */].includes(token)) {\n            return;\n        }\n        const oldValue = this.value;\n        const set = new Set(this[43 /* TransferrableKeys.tokens */]);\n        if (token !== newToken) {\n            set.delete(token);\n            if (newToken !== '') {\n                set.add(newToken);\n            }\n        }\n        this[43 /* TransferrableKeys.tokens */].splice(0, this[43 /* TransferrableKeys.tokens */].length, ...Array.from(set));\n        this[67 /* TransferrableKeys.mutated */](oldValue, this.value);\n    }\n    /**\n     * Adds or removes a token based on its presence in the token list.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/toggle\n     * @param token string to add or remove from the token list\n     * @param force changes toggle into a one way-only operation. true => token added. false => token removed.\n     * @return true if the token is in the list following mutation, false if not.\n     */\n    toggle(token, force) {\n        if (WHITESPACE_REGEX.test(token)) {\n            throw new TypeError('Uncaught DOMException');\n        }\n        if (!this[43 /* TransferrableKeys.tokens */].includes(token)) {\n            if (force === undefined || !!force) {\n                // Note, this will add the token if force is undefined (not passed into the method), or truthy.\n                this.add(token);\n            }\n            return true;\n        }\n        else if (!force) {\n            // Note, this will remove the token if force is undefined (not passed into the method), or falsey.\n            this.remove(token);\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Report tokenList mutations to MutationObserver.\n     * @param oldValue value before mutation\n     * @param value value after mutation\n     * @private\n     */\n    [67 /* TransferrableKeys.mutated */](oldValue, value) {\n        this[44 /* TransferrableKeys.storeAttribute */](this[13 /* TransferrableKeys.target */].namespaceURI, this[18 /* TransferrableKeys.attributeName */], value);\n        mutate(this[13 /* TransferrableKeys.target */].ownerDocument, {\n            type: 0 /* MutationRecordType.ATTRIBUTES */,\n            target: this[13 /* TransferrableKeys.target */],\n            attributeName: this[18 /* TransferrableKeys.attributeName */],\n            value,\n            oldValue,\n        }, [\n            0 /* TransferrableMutationType.ATTRIBUTES */,\n            this[13 /* TransferrableKeys.target */][7 /* TransferrableKeys.index */],\n            storeString(this[18 /* TransferrableKeys.attributeName */]),\n            0,\n            value !== null ? storeString(value) + 1 : 0,\n        ]);\n    }\n}\n//# sourceMappingURL=DOMTokenList.js.map","import { keyValueString } from '../../utils';\nexport const toString = (attributes) => attributes.map((attr) => keyValueString(attr.name, attr.value)).join(' ');\nexport const matchPredicate = (namespaceURI, name) => (attr) => attr.namespaceURI === namespaceURI && attr.name === name;\n//# sourceMappingURL=Attr.js.map","import { mutate } from '../MutationObserver';\nimport { toLower } from '../../utils';\nimport { store as storeString } from '../strings';\nconst hyphenateKey = (key) => toLower(key.replace(/(webkit|ms|moz|khtml)/g, '-$1').replace(/([a-zA-Z])(?=[A-Z])/g, '$1-'));\nexport const appendKeys = (keys) => {\n    const keysToAppend = keys.filter((key) => isNaN(key) && !CSSStyleDeclaration.prototype.hasOwnProperty(key));\n    if (keysToAppend.length <= 0) {\n        return;\n    }\n    const previousPrototypeLength = (CSSStyleDeclaration.prototype.length || 0);\n    if (previousPrototypeLength !== 0) {\n        CSSStyleDeclaration.prototype.length = previousPrototypeLength + keysToAppend.length;\n    }\n    else {\n        Object.defineProperty(CSSStyleDeclaration.prototype, 'length', {\n            configurable: true,\n            writable: true,\n            value: keysToAppend.length,\n        });\n    }\n    keysToAppend.forEach((key, index) => {\n        const hyphenatedKey = hyphenateKey(key);\n        CSSStyleDeclaration.prototype[index + previousPrototypeLength] = hyphenatedKey;\n        Object.defineProperties(CSSStyleDeclaration.prototype, {\n            [key]: {\n                get() {\n                    return this.getPropertyValue(hyphenatedKey);\n                },\n                set(value) {\n                    this.setProperty(hyphenatedKey, value);\n                },\n            },\n        });\n    });\n};\nexport class CSSStyleDeclaration {\n    [3 /* TransferrableKeys.properties */] = {};\n    [44 /* TransferrableKeys.storeAttribute */];\n    [13 /* TransferrableKeys.target */];\n    constructor(target) {\n        this[44 /* TransferrableKeys.storeAttribute */] = target[44 /* TransferrableKeys.storeAttribute */].bind(target);\n        this[13 /* TransferrableKeys.target */] = target;\n    }\n    /**\n     * Retrieve the value for a given property key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/getPropertyValue\n     * @param key the name of the property to retrieve the value for.\n     * @return value stored for the provided key.\n     */\n    getPropertyValue(key) {\n        return this[3 /* TransferrableKeys.properties */][key] || '';\n    }\n    /**\n     * Remove a value for a given property key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/removeProperty\n     * @param key the name of the property to retrieve the value for.\n     * @return previously stored value for the provided key.\n     */\n    removeProperty(key) {\n        const oldValue = this.getPropertyValue(key);\n        this[3 /* TransferrableKeys.properties */][key] = null;\n        this.mutated(this.cssText);\n        return oldValue;\n    }\n    /**\n     * Stores a given value for the provided key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/setProperty\n     * @param key modify this key\n     * @param value store this value\n     */\n    setProperty(key, value) {\n        this[3 /* TransferrableKeys.properties */][key] = value;\n        this.mutated(this.cssText);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/cssText\n     * @return css text string representing known and valid style declarations.\n     */\n    get cssText() {\n        let value;\n        let returnValue = '';\n        for (const key in this[3 /* TransferrableKeys.properties */]) {\n            if ((value = this.getPropertyValue(key)) !== '') {\n                returnValue += `${key}: ${value}; `;\n            }\n        }\n        return returnValue.trim();\n    }\n    /**\n     * Replace all style declarations with new values parsed from a cssText string.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/cssText\n     * @param value css text string to parse and store\n     */\n    set cssText(value) {\n        // value should have an \"unknown\" type but get/set can't have different types.\n        // https://github.com/Microsoft/TypeScript/issues/2521\n        const stringValue = typeof value === 'string' ? value : '';\n        this[3 /* TransferrableKeys.properties */] = {};\n        const values = stringValue.split(/[:;]/);\n        const length = values.length;\n        for (let index = 0; index + 1 < length; index += 2) {\n            this[3 /* TransferrableKeys.properties */][toLower(values[index].trim())] = values[index + 1].trim();\n        }\n        this.mutated(this.cssText);\n    }\n    /**\n     * Report CSSStyleDeclaration mutations to MutationObserver.\n     * @param value value after mutation\n     * @private\n     * // TODO(KB): Write a test to ensure mutations are fired for CSSStyleDeclaration changes.\n     */\n    mutated(value) {\n        const oldValue = this[44 /* TransferrableKeys.storeAttribute */](this[13 /* TransferrableKeys.target */].namespaceURI, 'style', value);\n        mutate(this[13 /* TransferrableKeys.target */].ownerDocument, {\n            type: 0 /* MutationRecordType.ATTRIBUTES */,\n            target: this[13 /* TransferrableKeys.target */],\n            attributeName: 'style',\n            value,\n            oldValue,\n        }, [\n            0 /* TransferrableMutationType.ATTRIBUTES */,\n            this[13 /* TransferrableKeys.target */][7 /* TransferrableKeys.index */],\n            storeString('style'),\n            0,\n            value !== null ? storeString(value) + 1 : 0,\n        ]);\n    }\n}\n//# sourceMappingURL=CSSStyleDeclaration.js.map","import { toLower } from '../../utils';\n// TODO: Do all boolean attributes have boolean properties?\n// TODO: Do enumerated attributes with non-boolean properties exist?\nexport const reflectProperties = (properties, defineOn) => {\n    properties.forEach((pair) => {\n        for (const property in pair) {\n            const { 0: defaultValue, 1: attributeName = toLower(property), 2: keywords } = pair[property];\n            // Boolean attributes only care about presence, not attribute value.\n            // https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes\n            const isBooleanAttribute = typeof defaultValue === 'boolean';\n            Object.defineProperty(defineOn.prototype, property, {\n                enumerable: true,\n                get() {\n                    const element = this;\n                    const attributeValue = element.getAttribute(attributeName);\n                    if (keywords) {\n                        return element.hasAttribute(attributeName) ? attributeValue === keywords[0] : defaultValue;\n                    }\n                    if (isBooleanAttribute) {\n                        return element.hasAttribute(attributeName);\n                    }\n                    const castableValue = attributeValue || defaultValue;\n                    return typeof defaultValue === 'number' ? Number(castableValue) : String(castableValue);\n                },\n                set(value) {\n                    const element = this;\n                    if (keywords) {\n                        element.setAttribute(attributeName, value ? keywords[0] : keywords[1]);\n                    }\n                    else if (isBooleanAttribute) {\n                        value ? element.setAttribute(attributeName, '') : element.removeAttribute(attributeName);\n                    }\n                    else {\n                        element.setAttribute(attributeName, String(value));\n                    }\n                },\n            });\n        }\n    });\n};\n//# sourceMappingURL=enhanceElement.js.map","export const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n//# sourceMappingURL=TransferrableNodes.js.map","import { SVG_NAMESPACE, HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { toLower, toUpper } from '../../utils';\nfunction arr_back(arr) {\n    return arr[arr.length - 1];\n}\n// https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\nconst kMarkupPattern = /<!--([^]*)-->|<(\\/?)([a-z][-.0-9_a-z]*)([^>]*?)(\\/?)>/gi;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\nconst kAttributePattern = /(^|\\s)([^\\s\"'>\\/=]+)\\s*=\\s*(\"([^\"]+)\"|'([^']+)'|(\\S+))/gi;\nconst kSelfClosingElements = {\n    AREA: true,\n    BASE: true,\n    BR: true,\n    COL: true,\n    HR: true,\n    IMG: true,\n    INPUT: true,\n    LINK: true,\n    META: true,\n    PARAM: true,\n    SOURCE: true,\n    TRACK: true,\n    WBR: true,\n};\nconst kElementsClosedByOpening = {\n    LI: { LI: true },\n    DT: { DT: true, DD: true },\n    DD: { DD: true, DT: true },\n    P: {\n        ADDRESS: true,\n        ARTICLE: true,\n        ASIDE: true,\n        BLOCKQUOTE: true,\n        DETAILS: true,\n        DIV: true,\n        DL: true,\n        FIELDSET: true,\n        FIGCAPTION: true,\n        FIGURE: true,\n        FOOTER: true,\n        FORM: true,\n        H1: true,\n        H2: true,\n        H3: true,\n        H4: true,\n        H5: true,\n        H6: true,\n        HEADER: true,\n        HR: true,\n        MAIN: true,\n        NAV: true,\n        OL: true,\n        P: true,\n        PRE: true,\n        SECTION: true,\n        TABLE: true,\n        UL: true,\n    },\n    RT: { RT: true, RP: true },\n    RP: { RT: true, RP: true },\n    OPTGROUP: { OPTGROUP: true },\n    OPTION: { OPTION: true, OPTGROUP: true },\n    THEAD: { TBODY: true, TFOOT: true },\n    TBODY: { TBODY: true, TFOOT: true },\n    TR: { TR: true },\n    TD: { TD: true, TH: true },\n    TH: { TD: true, TH: true },\n};\nconst kElementsClosedByClosing = {\n    LI: { UL: true, OL: true },\n    A: { DIV: true },\n    B: { DIV: true },\n    I: { DIV: true },\n    P: { DIV: true },\n    TD: { TR: true, TABLE: true },\n    TH: { TR: true, TABLE: true },\n};\nconst kBlockTextElements = {\n    SCRIPT: true,\n    NOSCRIPT: true,\n    STYLE: true,\n    PRE: true,\n};\n/**\n * Parses HTML and returns a root element\n * Parse a chuck of HTML source.\n * @param  {string} data HTML in string format.\n * @param {!Element} root The element to use as root.\n * @return {Element}      root element\n */\nexport function parse(data, rootElement) {\n    const ownerDocument = rootElement.ownerDocument;\n    const root = ownerDocument.createElementNS(rootElement.namespaceURI, rootElement.localName);\n    let currentParent = root;\n    let currentNamespace = root.namespaceURI;\n    const stack = [root];\n    let lastTextPos = 0;\n    let match;\n    data = '<q>' + data + '</q>';\n    const tagsClosed = [];\n    if (currentNamespace !== SVG_NAMESPACE && currentNamespace !== HTML_NAMESPACE) {\n        throw new Error('Namespace not supported: ' + currentNamespace);\n    }\n    while ((match = kMarkupPattern.exec(data))) {\n        const commentContents = match[1]; // <!--contents-->\n        const beginningSlash = match[2]; // ... </ ...\n        const tagName = match[3];\n        const matchAttributes = match[4];\n        const endSlash = match[5]; // ... /> ...\n        if (lastTextPos < match.index) {\n            // if has content\n            const text = data.slice(lastTextPos, match.index);\n            currentParent.appendChild(ownerDocument.createTextNode(decodeEntities(text)));\n        }\n        lastTextPos = kMarkupPattern.lastIndex;\n        if (commentContents !== undefined) {\n            // this is a comment\n            currentParent.appendChild(ownerDocument.createComment(commentContents));\n            continue;\n        }\n        const normalizedTagName = toUpper(tagName);\n        if (normalizedTagName === 'SVG') {\n            currentNamespace = beginningSlash ? HTML_NAMESPACE : SVG_NAMESPACE;\n        }\n        if (!beginningSlash) {\n            // not </ tags\n            if (!endSlash && kElementsClosedByOpening[currentParent.tagName]) {\n                if (kElementsClosedByOpening[currentParent.tagName][normalizedTagName]) {\n                    stack.pop();\n                    currentParent = arr_back(stack);\n                }\n            }\n            const childToAppend = ownerDocument.createElementNS(currentNamespace, currentNamespace === HTML_NAMESPACE ? toLower(tagName) : tagName);\n            for (let attMatch; (attMatch = kAttributePattern.exec(matchAttributes));) {\n                const attrName = attMatch[2];\n                const attrValue = attMatch[4] || attMatch[5] || attMatch[6];\n                childToAppend.setAttribute(attrName, attrValue);\n            }\n            currentParent = currentParent.appendChild(childToAppend);\n            stack.push(currentParent);\n            if (kBlockTextElements[normalizedTagName]) {\n                // a little test to find next </script> or </style> ...\n                const closeMarkup = '</' + toLower(normalizedTagName) + '>';\n                const index = data.indexOf(closeMarkup, kMarkupPattern.lastIndex);\n                if (index == -1) {\n                    throw new Error('Close markup not found.');\n                }\n                else {\n                    kMarkupPattern.lastIndex = index;\n                }\n            }\n        }\n        if (tagName === 'foreignObject') {\n            currentNamespace = beginningSlash ? SVG_NAMESPACE : HTML_NAMESPACE;\n        }\n        if (beginningSlash || endSlash || kSelfClosingElements[normalizedTagName]) {\n            // </ or /> or <br> etc.\n            while (true) {\n                if (stack.length <= 1) {\n                    break;\n                }\n                if (toUpper(currentParent.nodeName) == normalizedTagName) {\n                    stack.pop();\n                    currentParent = arr_back(stack);\n                    break;\n                }\n                else {\n                    // Trying to close current tag, and move on\n                    if (kElementsClosedByClosing[currentParent.tagName]) {\n                        if (kElementsClosedByClosing[currentParent.tagName][normalizedTagName]) {\n                            stack.pop();\n                            currentParent = arr_back(stack);\n                            continue;\n                        }\n                    }\n                    // Use aggressive strategy to handle unmatching markups.\n                    break;\n                }\n            }\n        }\n    }\n    for (const node of stack) {\n        if (tagsClosed[tagsClosed.length - 1] == node.nodeName) {\n            stack.pop();\n            tagsClosed.pop();\n            currentParent = arr_back(stack);\n        }\n        else\n            break;\n    }\n    const valid = stack.length === 1;\n    if (!valid) {\n        throw new Error('Attempting to parse invalid HTML content.');\n    }\n    const wrapper = root.firstChild;\n    if (wrapper) {\n        wrapper.parentNode = null;\n        wrapper.childNodes.forEach((node) => {\n            node.parentNode = null;\n        });\n        return wrapper;\n    }\n    throw new Error('Attempting to parse invalid HTML.');\n}\n/**\n * Decodes HTML Entities.\n * Currently only works for numeric entities, as well as the 4 named entities\n * required for encoding HTML: &, \", <, >.\n * See https://developer.mozilla.org/en-US/docs/Glossary/Entity.\n *\n * TODO: create solution for other named entities.\n */\nconst RESERVED_CHARACTERS = {\n    __proto__: null,\n    amp: '&',\n    lt: '<',\n    gt: '>',\n    quot: '\"',\n};\nfunction decodeEntities(html) {\n    return html.replace(/&(?:(#x?[\\da-f]+)|([\\w]+));?/gi, function (s, numericEntity, namedEntity) {\n        // Numeric entity\n        if (numericEntity) {\n            let code = numericEntity.charAt(1).toLowerCase() === 'x' ? parseInt(numericEntity.substr(2), 16) : parseInt(numericEntity.substr(1), 10);\n            // 1114111 is the largest valid unicode codepoint.\n            if (isNaN(code) || code > 1114111) {\n                return s;\n            }\n            return String.fromCodePoint(code) || s;\n        }\n        // Named entity. Only HTML reserved entities are currently supported.\n        if (namedEntity) {\n            return RESERVED_CHARACTERS[namedEntity.toLowerCase()] || s;\n        }\n        return s;\n    });\n}\n//# sourceMappingURL=html-parser.js.map","/**\n * @fileoverview\n * WorkerDOM's `Event` class. `CustomEvent` is available natively in web worker.\n */\nimport { get } from './nodes';\nexport class Event {\n    bubbles;\n    cancelable;\n    cancelBubble;\n    currentTarget;\n    defaultPrevented;\n    eventPhase;\n    isTrusted;\n    returnValue;\n    // public srcElement: Element | null;\n    // TODO(KB): Restore srcElement.\n    target;\n    timeStamp;\n    type;\n    scoped;\n    [50 /* TransferrableKeys.stop */] = false;\n    [51 /* TransferrableKeys.end */] = false;\n    pageX;\n    pageY;\n    offsetX;\n    offsetY;\n    touches;\n    changedTouches;\n    constructor(type, opts) {\n        this.type = type;\n        this.bubbles = !!opts.bubbles;\n        this.cancelable = !!opts.cancelable;\n    }\n    stopPropagation() {\n        this[50 /* TransferrableKeys.stop */] = true;\n    }\n    stopImmediatePropagation() {\n        this[51 /* TransferrableKeys.end */] = this[50 /* TransferrableKeys.stop */] = true;\n    }\n    preventDefault() {\n        this.defaultPrevented = true;\n    }\n    /** Event.initEvent() is deprecated but supported here for legacy usage.  */\n    initEvent(type, bubbles, cancelable) {\n        this.type = type;\n        this.bubbles = bubbles;\n        this.cancelable = cancelable;\n    }\n}\n/**\n * Determine the target for a TransferrableEvent.\n * @param document Event intended within the scope of this document.\n * @param event\n */\nconst targetFromTransfer = (document, event) => {\n    if (event[13 /* TransferrableKeys.target */] !== null) {\n        const index = event[13 /* TransferrableKeys.target */][0];\n        // If the target was sent as index 0, use the current document.\n        return get(index !== 0 ? index : document[7 /* TransferrableKeys.index */]);\n    }\n    return null;\n};\n/**\n *\n * @param document\n * @param event\n */\nconst touchListFromTransfer = (document, event, key) => {\n    if (event[key] !== undefined) {\n        const touchListKeys = Object.keys(event[key]);\n        const list = {\n            length: touchListKeys.length,\n            item(index) {\n                return this[index] || null;\n            },\n        };\n        touchListKeys.forEach((touchListKey) => {\n            const numericKey = Number(touchListKey);\n            const transferredTouch = event[key][numericKey];\n            list[numericKey] = {\n                identifier: transferredTouch[0],\n                screenX: transferredTouch[1],\n                screenY: transferredTouch[2],\n                clientX: transferredTouch[3],\n                clientY: transferredTouch[4],\n                pageX: transferredTouch[5],\n                pageY: transferredTouch[6],\n                target: get(transferredTouch[7] !== 0 ? transferredTouch[7] : document[7 /* TransferrableKeys.index */]),\n            };\n        });\n        return list;\n    }\n    return undefined;\n};\n/**\n * When an event is dispatched from the main thread, it needs to be propagated in the worker thread.\n * Propagate adds an event listener to the worker global scope and uses the WorkerDOM Node.dispatchEvent\n * method to dispatch the transfered event in the worker thread.\n */\nexport function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* TransferrableKeys.type */] !== 1 /* MessageType.EVENT */) {\n            return;\n        }\n        const event = data[39 /* TransferrableKeys.event */];\n        const node = get(event[7 /* TransferrableKeys.index */]);\n        if (node !== null) {\n            node.dispatchEvent(Object.assign(new Event(event[12 /* TransferrableKeys.type */], {\n                bubbles: event[25 /* TransferrableKeys.bubbles */],\n                cancelable: event[26 /* TransferrableKeys.cancelable */],\n            }), {\n                cancelBubble: event[27 /* TransferrableKeys.cancelBubble */],\n                defaultPrevented: event[29 /* TransferrableKeys.defaultPrevented */],\n                eventPhase: event[30 /* TransferrableKeys.eventPhase */],\n                isTrusted: event[31 /* TransferrableKeys.isTrusted */],\n                returnValue: event[32 /* TransferrableKeys.returnValue */],\n                target: targetFromTransfer(global.document, event),\n                timeStamp: event[33 /* TransferrableKeys.timeStamp */],\n                scoped: event[34 /* TransferrableKeys.scoped */],\n                keyCode: event[35 /* TransferrableKeys.keyCode */],\n                pageX: event[60 /* TransferrableKeys.pageX */],\n                pageY: event[61 /* TransferrableKeys.pageY */],\n                offsetX: event[65 /* TransferrableKeys.offsetX */],\n                offsetY: event[66 /* TransferrableKeys.offsetY */],\n                touches: touchListFromTransfer(global.document, event, 62 /* TransferrableKeys.touches */),\n                changedTouches: touchListFromTransfer(global.document, event, 63 /* TransferrableKeys.changedTouches */),\n            }));\n        }\n    });\n}\n//# sourceMappingURL=Event.js.map","export function getPreviousElementSibling(node) {\n    let parentNodes = node.parentNode && node.parentNode.childNodes;\n    if (!parentNodes) {\n        return null;\n    }\n    for (let i = parentNodes.indexOf(node) - 1; i >= 0; i--) {\n        let node = parentNodes[i];\n        if (node.nodeType === 1 /* NodeType.ELEMENT_NODE */) {\n            return node;\n        }\n    }\n    return null;\n}\nexport function getNextElementSibling(node) {\n    let parentNodes = node.parentNode && node.parentNode.childNodes;\n    if (!parentNodes) {\n        return null;\n    }\n    for (let i = parentNodes.indexOf(node) + 1; i < parentNodes.length; i++) {\n        let node = parentNodes[i];\n        if (node.nodeType === 1 /* NodeType.ELEMENT_NODE */) {\n            return node;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=elementSibling.js.map","import { ParentNode } from './ParentNode';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nimport { toString as attrsToString, matchPredicate as matchAttrPredicate } from './Attr';\nimport { mutate } from '../MutationObserver';\nimport { toLower, toUpper } from '../../utils';\nimport { CSSStyleDeclaration } from '../css/CSSStyleDeclaration';\nimport { matchChildrenElements } from './matchElements';\nimport { reflectProperties } from './enhanceElement';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\nimport { HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { parse } from '../../third_party/html-parser/html-parser';\nimport { propagate } from './Node';\nimport { Event } from '../Event';\nimport { getNextElementSibling, getPreviousElementSibling } from './elementSibling';\nexport const NS_NAME_TO_CLASS = {};\nexport const registerSubclass = (localName, subclass, namespace = HTML_NAMESPACE) => (NS_NAME_TO_CLASS[`${namespace}:${localName}`] = subclass);\nexport function definePropertyBackedAttributes(defineOn, attributes) {\n    const sub = Object.create(defineOn[46 /* TransferrableKeys.propertyBackedAttributes */]);\n    defineOn[46 /* TransferrableKeys.propertyBackedAttributes */] = Object.assign(sub, attributes);\n}\n/**\n * There are six kinds of elements, each having different start/close tag semantics.\n * @see https://html.spec.whatwg.org/multipage/syntax.html#elements-2\n */\nvar ElementKind;\n(function (ElementKind) {\n    ElementKind[ElementKind[\"NORMAL\"] = 0] = \"NORMAL\";\n    ElementKind[ElementKind[\"VOID\"] = 1] = \"VOID\";\n    // The following element kinds have no special handling in worker-dom yet\n    // and are lumped into the NORMAL kind.\n    /*\n    FOREIGN,\n    TEMPLATE,\n    RAW_TEXT,\n    ESCAPABLE_RAW,\n    */\n})(ElementKind || (ElementKind = {}));\n/**\n * @see https://html.spec.whatwg.org/multipage/syntax.html#void-elements\n */\nconst VOID_ELEMENTS = ['AREA', 'BASE', 'BR', 'COL', 'EMBED', 'HR', 'IMG', 'INPUT', 'LINK', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR'];\nexport class Element extends ParentNode {\n    _classList;\n    static [46 /* TransferrableKeys.propertyBackedAttributes */] = {\n        class: [(el) => el.classList.value, (el, value) => (el.classList.value = value)],\n        style: [(el) => el.cssText, (el, value) => (el.cssText = value)],\n    };\n    localName;\n    attributes = [];\n    namespaceURI;\n    style_;\n    /**\n     * Element \"kind\" dictates certain behaviors e.g. start/end tag semantics.\n     * @see https://html.spec.whatwg.org/multipage/syntax.html#elements-2\n     */\n    kind;\n    constructor(nodeType, localName, namespaceURI, ownerDocument, overrideIndex) {\n        super(nodeType, toUpper(localName), ownerDocument, overrideIndex);\n        this.namespaceURI = namespaceURI || HTML_NAMESPACE;\n        this.localName = localName;\n        this.kind = VOID_ELEMENTS.includes(this.tagName) ? ElementKind.VOID : ElementKind.NORMAL;\n        this[8 /* TransferrableKeys.creationFormat */] = [\n            this[7 /* TransferrableKeys.index */],\n            this.nodeType,\n            storeString(this.localName),\n            0,\n            this.namespaceURI === null ? 0 : storeString(this.namespaceURI),\n        ];\n    }\n    // We lazily instantiate the CSSStyleDeclaration to keep element creation cheap\n    // See https://github.com/ampproject/worker-dom/pull/1096 for context.\n    get style() {\n        if (!this.style_) {\n            this.style_ = new CSSStyleDeclaration(this);\n        }\n        return this.style_;\n    }\n    // Unimplemented properties\n    // Element.clientHeight – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientHeight\n    // Element.clientLeft – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientLeft\n    // Element.clientTop – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientTop\n    // Element.clientWidth – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientWidth\n    // set Element.innerHTML – https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n    // Element.prefix – https://developer.mozilla.org/en-US/docs/Web/API/Element/prefix\n    // Element.scrollHeight – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight\n    // Element.scrollLeft – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeft\n    // Element.scrollLeftMax – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeftMax\n    // Element.scrollTop – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTop\n    // Element.scrollTopMax – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTopMax\n    // Element.scrollWidth – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollWidth\n    // Element.shadowRoot – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/shadowRoot\n    // Element.slot – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/slot\n    // Element.tabStop – https://developer.mozilla.org/en-US/docs/Web/API/Element/tabStop\n    // Element.undoManager – https://developer.mozilla.org/en-US/docs/Web/API/Element/undoManager\n    // Element.undoScope – https://developer.mozilla.org/en-US/docs/Web/API/Element/undoScope\n    // Unimplemented Methods\n    // Element.attachShadow() – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow\n    // Element.animate() – https://developer.mozilla.org/en-US/docs/Web/API/Element/animate\n    // Element.closest() – https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n    // Element.getAttributeNames() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNames\n    // Element.getBoundingClientRect() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    // Element.getClientRects() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getClientRects\n    // Element.getElementsByTagNameNS() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagNameNS\n    // Element.insertAdjacentElement() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentElement\n    // Element.insertAdjacentHTML() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentHTML\n    // Element.insertAdjacentText() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentText\n    // Element.matches() – https://developer.mozilla.org/en-US/docs/Web/API/Element/matches\n    // Element.releasePointerCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/releasePointerCapture\n    // Element.requestFullscreen() – https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n    // Element.requestPointerLock() – https://developer.mozilla.org/en-US/docs/Web/API/Element/requestPointerLock\n    // Element.scrollIntoView() – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n    // Element.setCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/setCapture\n    // Element.setPointerCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/setPointerCapture\n    // Partially implemented Mixin Methods\n    // Both Element.querySelector() and Element.querySelector() are only implemented for the following simple selectors:\n    // - Element selectors\n    // - ID selectors\n    // - Class selectors\n    // - Attribute selectors\n    // Element.querySelector() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n    // Element.querySelectorAll() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n    // Mixins not implemented\n    // Slotable.assignedSlot – https://developer.mozilla.org/en-US/docs/Web/API/Slotable/assignedSlot\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/previousElementSibling\n     * Returns the Element immediately prior to the specified one in its parent's children list,\n     * or null if the specified element is the first one in the list.\n     */\n    get previousElementSibling() {\n        return getPreviousElementSibling(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/nextElementSibling\n     * Returns the Element immediately following the specified one in its parent's children list,\n     * or null if the specified element is the last one in the list.\n     */\n    get nextElementSibling() {\n        return getNextElementSibling(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/outerHTML\n     * @return string representation of serialized HTML describing the Element and its descendants.\n     */\n    get outerHTML() {\n        const tag = this.localName || this.tagName;\n        const start = `<${[tag, attrsToString(this.attributes)].join(' ').trim()}>`;\n        const contents = this.innerHTML;\n        if (!contents) {\n            if (this.kind === ElementKind.VOID) {\n                // Void elements e.g. <input> only have a start tag (unless children are added programmatically).\n                // https://html.spec.whatwg.org/multipage/syntax.html#void-elements\n                return start;\n            }\n        }\n        return start + contents + `</${tag}>`;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n     * @return string representation of serialized HTML describing the Element's descendants.\n     */\n    get innerHTML() {\n        const childNodes = this.childNodes;\n        if (childNodes.length) {\n            return childNodes\n                .map((child) => {\n                switch (child.nodeType) {\n                    case 3 /* NodeType.TEXT_NODE */:\n                        return child.textContent;\n                    case 8 /* NodeType.COMMENT_NODE */:\n                        return `<!--${child.textContent}-->`;\n                    default:\n                        return child.outerHTML;\n                }\n            })\n                .join('');\n        }\n        return '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n     * @param html The raw html string to parse.\n     */\n    set innerHTML(html) {\n        const root = parse(html, this);\n        // remove previous children\n        this.childNodes.forEach((n) => {\n            propagate(n, 'isConnected', false);\n            propagate(n, 45 /* TransferrableKeys.scopingRoot */, n);\n        });\n        mutate(this.ownerDocument, {\n            removedNodes: this.childNodes,\n            type: 2 /* MutationRecordType.CHILD_LIST */,\n            target: this,\n        }, [\n            2 /* TransferrableMutationType.CHILD_LIST */,\n            this[7 /* TransferrableKeys.index */],\n            0,\n            0,\n            0,\n            this.childNodes.length,\n            ...this.childNodes.map((node) => node[7 /* TransferrableKeys.index */]),\n        ]);\n        this.childNodes = [];\n        // add new children\n        root.childNodes.forEach((child) => this.appendChild(child));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @param text new text replacing all childNodes content.\n     */\n    set textContent(text) {\n        // TODO(KB): Investigate removing all children in a single .splice to childNodes.\n        this.childNodes.slice().forEach((child) => child.remove());\n        this.appendChild(this.ownerDocument.createTextNode(text));\n    }\n    /**\n     * Getter returning the text representation of Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @return text from all childNodes.\n     */\n    get textContent() {\n        return this.getTextContent();\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/tagName\n     * @return string tag name (i.e 'div')\n     */\n    get tagName() {\n        return this.nodeName;\n    }\n    /**\n     * Sets the value of an attribute on this element using a null namespace.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute\n     * @param name attribute name\n     * @param value attribute value\n     */\n    setAttribute(name, value) {\n        this.setAttributeNS(HTML_NAMESPACE, name, value);\n    }\n    /**\n     * Get the value of an attribute on this Element with the null namespace.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute\n     * @param name attribute name\n     * @return value of a specified attribute on the element, or null if the attribute doesn't exist.\n     */\n    getAttribute(name) {\n        return this.getAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * Remove an attribute from this element in the null namespace.\n     *\n     * Method returns void, so it is not chainable.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute\n     * @param name attribute name\n     */\n    removeAttribute(name) {\n        this.removeAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttribute\n     * @param name attribute name\n     * @return Boolean indicating if the element has the specified attribute.\n     */\n    hasAttribute(name) {\n        return this.hasAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttributes\n     * @return Boolean indicating if the element has any attributes.\n     */\n    hasAttributes() {\n        return this.attributes.length > 0;\n    }\n    /**\n     * Sets the value of an attribute on this Element with the provided namespace.\n     *\n     * If the attribute already exists, the value is updated; otherwise a new attribute is added with the specified name and value.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttributeNS\n     * @param namespaceURI\n     * @param name attribute name\n     * @param value attribute value\n     */\n    setAttributeNS(namespaceURI, name, value) {\n        const valueAsString = String(value);\n        const propertyBacked = this.constructor[46 /* TransferrableKeys.propertyBackedAttributes */][name];\n        if (propertyBacked !== undefined) {\n            if (!this.attributes.find(matchAttrPredicate(namespaceURI, name))) {\n                this.attributes.push({\n                    namespaceURI,\n                    name,\n                    value: valueAsString,\n                });\n            }\n            propertyBacked[1](this, valueAsString);\n            return;\n        }\n        const oldValue = this[44 /* TransferrableKeys.storeAttribute */](namespaceURI, name, valueAsString);\n        mutate(this.ownerDocument, {\n            type: 0 /* MutationRecordType.ATTRIBUTES */,\n            target: this,\n            attributeName: name,\n            attributeNamespace: namespaceURI,\n            value: valueAsString,\n            oldValue,\n        }, [\n            0 /* TransferrableMutationType.ATTRIBUTES */,\n            this[7 /* TransferrableKeys.index */],\n            storeString(name),\n            storeString(namespaceURI),\n            value !== null ? storeString(valueAsString) + 1 : 0,\n        ]);\n    }\n    [44 /* TransferrableKeys.storeAttribute */](namespaceURI, name, value) {\n        const attr = this.attributes.find(matchAttrPredicate(namespaceURI, name));\n        const oldValue = (attr && attr.value) || '';\n        if (attr) {\n            attr.value = value;\n        }\n        else {\n            this.attributes.push({\n                namespaceURI,\n                name,\n                value,\n            });\n        }\n        return oldValue;\n    }\n    /**\n     * Get the value of an attribute on this Element with the specified namespace.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     * @return value of a specified attribute on the element, or null if the attribute doesn't exist.\n     */\n    getAttributeNS(namespaceURI, name) {\n        const attr = this.attributes.find(matchAttrPredicate(namespaceURI, name));\n        if (attr) {\n            const propertyBacked = this.constructor[46 /* TransferrableKeys.propertyBackedAttributes */][name];\n            return propertyBacked !== undefined ? propertyBacked[0](this) : attr.value;\n        }\n        return null;\n    }\n    /**\n     * Remove an attribute from this element in the specified namespace.\n     *\n     * Method returns void, so it is not chainable.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     */\n    removeAttributeNS(namespaceURI, name) {\n        const index = this.attributes.findIndex(matchAttrPredicate(namespaceURI, name));\n        if (index >= 0) {\n            const oldValue = this.attributes[index].value;\n            this.attributes.splice(index, 1);\n            mutate(this.ownerDocument, {\n                type: 0 /* MutationRecordType.ATTRIBUTES */,\n                target: this,\n                attributeName: name,\n                attributeNamespace: namespaceURI,\n                oldValue,\n            }, [\n                0 /* TransferrableMutationType.ATTRIBUTES */,\n                this[7 /* TransferrableKeys.index */],\n                storeString(name),\n                storeString(namespaceURI),\n                0, // 0 means no value\n            ]);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttributeNS\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     * @return Boolean indicating if the element has the specified attribute.\n     */\n    hasAttributeNS(namespaceURI, name) {\n        return this.attributes.some(matchAttrPredicate(namespaceURI, name));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByClassName\n     * @param names contains one more more classnames to match on. Multiples are space seperated, indicating an AND operation.\n     * @return Element array with matching classnames\n     */\n    getElementsByClassName(names) {\n        const inputClassList = names.split(' ');\n        // TODO(KB) – Compare performance of [].some(value => DOMTokenList.contains(value)) and regex.\n        // const classRegex = new RegExp(classNames.split(' ').map(name => `(?=.*${name})`).join(''));\n        return matchChildrenElements(this, (element) => inputClassList.some((inputClassName) => element.classList.contains(inputClassName)));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagName\n     * @param tagName the qualified name to look for. The special string \"*\" represents all elements.\n     * @return Element array with matching tagnames\n     */\n    getElementsByTagName(tagName) {\n        const lowerTagName = toLower(tagName);\n        return matchChildrenElements(this, tagName === '*'\n            ? (_) => true\n            : (element) => (element.namespaceURI === HTML_NAMESPACE ? element.localName === lowerTagName : element.tagName === tagName));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByName\n     * @param name value of name attribute elements must have to be returned\n     * @return Element array with matching name attributes\n     */\n    getElementsByName(name) {\n        const stringName = '' + name;\n        return matchChildrenElements(this, (element) => element.getAttribute('name') === stringName);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @param deep boolean determines if the clone should include a recursive copy of all childNodes.\n     * @return Element containing all current attributes and potentially childNode clones of the Element requested to be cloned.\n     */\n    cloneNode(deep = false) {\n        const clone = this.ownerDocument.createElementNS(this.namespaceURI, this.namespaceURI === HTML_NAMESPACE ? toLower(this.tagName) : this.tagName);\n        this.attributes.forEach((attr) => clone.setAttribute(attr.name, attr.value));\n        if (deep) {\n            this.childNodes.forEach((child) => clone.appendChild(child.cloneNode(deep)));\n        }\n        return clone;\n    }\n    /**\n     * Return the ClientRect for an Element once determined by the main thread.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n     * @return Promise<ClientRect>\n     *\n     * Note: Edge and IE11 do not return the x/y value, but top/left are equivalent. Normalize the values here.\n     */\n    getBoundingClientRectAsync() {\n        const defaultValue = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0,\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n        return new Promise((resolve) => {\n            const messageHandler = ({ data }) => {\n                if (data[12 /* TransferrableKeys.type */] === 6 /* MessageType.GET_BOUNDING_CLIENT_RECT */ &&\n                    data[13 /* TransferrableKeys.target */][0] === this[7 /* TransferrableKeys.index */]) {\n                    this.ownerDocument.removeGlobalEventListener('message', messageHandler);\n                    const transferredBoundingClientRect = data[38 /* TransferrableKeys.data */];\n                    resolve({\n                        top: transferredBoundingClientRect[0],\n                        right: transferredBoundingClientRect[1],\n                        bottom: transferredBoundingClientRect[2],\n                        left: transferredBoundingClientRect[3],\n                        width: transferredBoundingClientRect[4],\n                        height: transferredBoundingClientRect[5],\n                        x: transferredBoundingClientRect[0],\n                        y: transferredBoundingClientRect[3],\n                    });\n                }\n            };\n            if (!this.ownerDocument.addGlobalEventListener || !this.isConnected) {\n                // Elements run within Node runtimes are missing addEventListener as a global.\n                // In this case, treat the return value the same as a disconnected node.\n                resolve(defaultValue);\n            }\n            else {\n                this.ownerDocument.addGlobalEventListener('message', messageHandler);\n                transfer(this.ownerDocument, [5 /* TransferrableMutationType.GET_BOUNDING_CLIENT_RECT */, this[7 /* TransferrableKeys.index */]]);\n                setTimeout(resolve, 500, defaultValue); // TODO: Why a magical constant, define and explain.\n            }\n        });\n    }\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/click\n    click() {\n        const event = new Event('click', {});\n        event.target = this;\n        this.dispatchEvent(event);\n    }\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n    scrollIntoView() {\n        if (this.isConnected) {\n            transfer(this.ownerDocument, [14 /* TransferrableMutationType.SCROLL_INTO_VIEW */, this[7 /* TransferrableKeys.index */]]);\n        }\n    }\n    get classList() {\n        return this._classList || (this._classList = new DOMTokenList(this, 'class'));\n    }\n}\nsynchronizedAccessor(Element, 'classList', 'className');\nreflectProperties([{ id: [''] }], Element);\n//# sourceMappingURL=Element.js.map","import { Element } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { matchNearestParent, tagNameConditionPredicate } from './matchElements';\nexport const appendGlobalEventProperties = (keys) => {\n    const keysToAppend = keys.filter((key) => !HTMLElement.prototype.hasOwnProperty(key));\n    if (keysToAppend.length <= 0) {\n        return;\n    }\n    keysToAppend.forEach((key) => {\n        const normalizedKey = key.replace(/on/, '');\n        Object.defineProperty(HTMLElement.prototype, key, {\n            enumerable: true,\n            get() {\n                return this[76 /* TransferrableKeys.propertyEventHandlers */][normalizedKey] || null;\n            },\n            set(value) {\n                const stored = this[76 /* TransferrableKeys.propertyEventHandlers */][normalizedKey];\n                if (stored) {\n                    this.removeEventListener(normalizedKey, stored);\n                }\n                if (value instanceof Function) {\n                    this.addEventListener(normalizedKey, value);\n                }\n                this[76 /* TransferrableKeys.propertyEventHandlers */][normalizedKey] = value;\n            },\n        });\n    });\n};\nexport class HTMLElement extends Element {\n    [76 /* TransferrableKeys.propertyEventHandlers */] = {};\n    /**\n     * Find the nearest parent form element.\n     * Implemented in HTMLElement since so many extensions of HTMLElement repeat this functionality. This is not to spec.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFieldSetElement\n     * @return nearest parent form element.\n     */\n    get form() {\n        return matchNearestParent(this, tagNameConditionPredicate(['FORM']));\n    }\n    [68 /* TransferrableKeys.serializeAsTransferrableObject */]() {\n        return [7 /* TransferrableObjectType.HTMLElement */, this[7 /* TransferrableKeys.index */]];\n    }\n}\n// Reflected properties\n// HTMLElement.accessKey => string, reflected attribute\n// HTMLElement.contentEditable => string, reflected attribute\n// HTMLElement.dir => string, reflected attribute\n// HTMLElement.lang => string, reflected attribute\n// HTMLElement.title => string, reflected attribute\n// HTMLElement.draggable => boolean, reflected attribute\n// HTMLElement.hidden => boolean, reflected attribute\n// HTMLElement.noModule => boolean, reflected attribute\n// HTMLElement.spellcheck => boolean, reflected attribute\n// HTMLElement.translate => boolean, reflected attribute\nreflectProperties([\n    { accessKey: [''] },\n    { contentEditable: ['inherit'] },\n    { dir: [''] },\n    { lang: [''] },\n    { title: [''] },\n    {\n        draggable: [false, /* attr */ undefined, /* keywords */ ['true', 'false']],\n    },\n    { hidden: [false, /* attr */ undefined] },\n    { noModule: [false] },\n    {\n        spellcheck: [true, /* attr */ undefined, /* keywords */ ['true', 'false']],\n    },\n    { translate: [true, /* attr */ undefined, /* keywords */ ['yes', 'no']] },\n], HTMLElement);\n// Properties\n// HTMLElement.accessKeyLabel => string, readonly value of \"accessKey\"\n// HTMLElement.isContentEditable => boolean, readonly value of contentEditable\n// HTMLElement.nonce => string, NOT REFLECTED\n// HTMLElement.tabIndex => number, reflected attribute\n// Layout Properties (TBD)\n// HTMLElement.offsetHeight => double, readonly\n// HTMLElement.offsetLeft => double, readonly\n// HTMLElement.offsetParent => Element\n// HTMLElement.offsetTop => double, readonly\n// HTMLElement.offsetWidth => double, readonly\n// Unimplemented Properties\n// HTMLElement.contextMenu => HTMLElement\n// HTMLElement.dataset => Map<string (get/set), string>\n// HTMLElement.dropzone => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.inert => boolean, reflected\n// HTMLElement.itemScope => boolean\n// HTMLElement.itemType => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemId => string\n// HTMLElement.itemRef => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemProp => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemValue => object\n// HTMLElement.properties => HTMLPropertiesCollection, readonly\n//# sourceMappingURL=HTMLElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLAnchorElement extends HTMLElement {\n    _relList;\n    get relList() {\n        return this._relList || (this._relList = new DOMTokenList(this, 'rel'));\n    }\n    /**\n     * Returns the href property/attribute value\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/toString\n     * @return string href attached to HTMLAnchorElement\n     */\n    toString() {\n        return this.href;\n    }\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * A Synonym for the Node.textContent property setter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement\n     * @param text replacement for all current childNodes.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n}\nregisterSubclass('a', HTMLAnchorElement);\ndefinePropertyBackedAttributes(HTMLAnchorElement, {\n    rel: [(el) => el.relList.value, (el, value) => (el.relList.value = value)],\n});\nsynchronizedAccessor(HTMLAnchorElement, 'relList', 'rel');\n// Reflected properties, strings.\n// HTMLAnchorElement.href => string, reflected attribute\n// HTMLAnchorElement.hreflang => string, reflected attribute\n// HTMLAnchorElement.media => string, reflected attribute\n// HTMLAnchorElement.target => string, reflected attribute\n// HTMLAnchorElement.type => string, reflected attribute\nreflectProperties([{ href: [''] }, { hreflang: [''] }, { media: [''] }, { target: [''] }, { type: [''] }], HTMLAnchorElement);\n// Unimplemented\n// HTMLAnchorElement.download => string, reflected attribute\n// HTMLAnchorElement.type => Is a DOMString that reflects the type HTML attribute, indicating the MIME type of the linked resource.\n// Unimplemented URL parse of href attribute due to IE11 compatibility and low usage.\n// Note: Implementation doable using a private url property\n/*\n  class {\n    private url: URL | null = null;\n\n    constructor(...) {\n      // Element.getAttribute('href') => Element.href.\n      Object.assign(this[TransferrableKeys.propertyBackedAttributes], {\n        href: this.href,\n      });\n    }\n\n    get href(): string {\n      return this.url ? this.url.href : '';\n    }\n    set href(url: string) {\n      this.url = new URL(url);\n      this.setAttribute('href', this.url.href);\n    }\n  }\n*/\n// HTMLAnchorElement.host => string\n// HTMLAnchorElement.hostname => string\n// HTMLAnchorElement.protocol => string\n// HTMLAnchorElement.pathname => string\n// HTMLAnchorElement.search => string\n// HTMLAnchorElement.hash => string\n// HTMLAnchorElement.username => string\n// HTMLAnchorElement.password => string\n// HTMLAnchorElement.origin => string, readonly (getter no setter)\n//# sourceMappingURL=HTMLAnchorElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLButtonElement extends HTMLElement {\n}\nregisterSubclass('button', HTMLButtonElement);\n// Reflected properties, strings.\n// HTMLButtonElement.formAction => string, reflected attribute\n// HTMLButtonElement.formEnctype => string, reflected attribute\n// HTMLButtonElement.formMethod => string, reflected attribute\n// HTMLButtonElement.formTarget => string, reflected attribute\n// HTMLButtonElement.name => string, reflected attribute\n// HTMLButtonElement.type => string, reflected attribute (default submit)\n// HTMLButtonElement.value => string, reflected attribute\n// HTMLButtonElement.autofocus => boolean, reflected attribute\n// HTMLButtonElement.disabled => boolean, reflected attribute\nreflectProperties([\n    { formAction: [''] },\n    { formEnctype: [''] },\n    { formMethod: [''] },\n    { formTarget: [''] },\n    { name: [''] },\n    { type: ['submit'] },\n    { value: [''] },\n    { autofocus: [false] },\n    { disabled: [false] },\n], HTMLButtonElement);\n// Not reflected\n// HTMLButtonElement.formNoValidate => boolean\n// HTMLButtonElement.validity => ValidityState, readonly\n// Unimplemented\n// HTMLButtonElement.form => HTMLFormElement | null, readonly\n// HTMLButtonElement.labels => Array<HTMLLabelElement>, readonly\n// HTMLButtonElement.menu => HTMLMenuElement\n// HTMLButtonElement.willValidate => boolean, readonly\n// HTMLButtonElement.validationMessage => string, readonly\n//# sourceMappingURL=HTMLButtonElement.js.map","import { store } from './strings';\nconst f32 = new Float32Array(1);\nconst u16 = new Uint16Array(f32.buffer);\nfunction isSmallInt(num) {\n    u16[0] = num;\n    // If the Uint16Array doesn't coerce it to another value, that means it fits\n    // into a Uint16Array.\n    return u16[0] === num;\n}\n/**\n * Serializes arguments into a Uint16 compatible format.\n *\n * The serialization format uses a variable length tuple, with the first item\n * being the encoded representation's type and any number of values afterwards.\n *\n * @param args The arguments to serialize\n */\nexport function serializeTransferrableObject(args) {\n    const serialized = [];\n    for (let i = 0; i < args.length; i++) {\n        const arg = args[i];\n        if (typeof arg === 'number') {\n            if (isSmallInt(arg)) {\n                serialized.push(1 /* TransferrableObjectType.SmallInt */, arg);\n            }\n            else {\n                f32[0] = arg;\n                serialized.push(2 /* TransferrableObjectType.Float */, u16[0], u16[1]);\n            }\n            continue;\n        }\n        if (typeof arg === 'string') {\n            serialized.push(3 /* TransferrableObjectType.String */, store(arg));\n            continue;\n        }\n        if (Array.isArray(arg)) {\n            serialized.push(4 /* TransferrableObjectType.Array */, arg.length);\n            const serializedArray = serializeTransferrableObject(arg);\n            for (let i = 0; i < serializedArray.length; i++) {\n                serialized.push(serializedArray[i]);\n            }\n            continue;\n        }\n        if (typeof arg === 'object') {\n            const serializedObject = arg[68 /* TransferrableKeys.serializeAsTransferrableObject */]();\n            for (let i = 0; i < serializedObject.length; i++) {\n                serialized.push(serializedObject[i]);\n            }\n            continue;\n        }\n        throw new Error('Cannot serialize argument.');\n    }\n    return serialized;\n}\n//# sourceMappingURL=serializeTransferrableObject.js.map","import { transfer } from '../MutationTransfer';\nimport { serializeTransferrableObject } from '../serializeTransferrableObject';\nimport { store } from '../strings';\n/**\n * Wrapper class for CanvasGradient. The user will be able to manipulate as a regular CanvasGradient object.\n */\nexport class CanvasGradient {\n    id;\n    document;\n    constructor(id, document) {\n        this.document = document;\n        this.id = id;\n    }\n    addColorStop(offset, color) {\n        transfer(this.document, [\n            9 /* TransferrableMutationType.OBJECT_MUTATION */,\n            store('addColorStop'),\n            2,\n            ...this[68 /* TransferrableKeys.serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject([...arguments]),\n        ]);\n    }\n    [68 /* TransferrableKeys.serializeAsTransferrableObject */]() {\n        return [5 /* TransferrableObjectType.TransferObject */, this.id];\n    }\n}\n//# sourceMappingURL=CanvasGradient.js.map","/**\n * Wrapper class for CanvasPattern. The user will be able to manipulate as a regular CanvasPattern object.\n * This class will be used when the CanvasRenderingContext is using an OffscreenCanvas polyfill.\n */\nexport class CanvasPattern {\n    id;\n    constructor(id) {\n        this.id = id;\n    }\n    /**\n     * This is an experimental method.\n     */\n    setTransform() { }\n    [68 /* TransferrableKeys.serializeAsTransferrableObject */]() {\n        return [5 /* TransferrableObjectType.TransferObject */, this.id];\n    }\n}\n//# sourceMappingURL=CanvasPattern.js.map","import { transfer } from '../MutationTransfer';\nimport { toLower } from '../../utils';\nimport { store } from '../strings';\nimport { serializeTransferrableObject } from '../serializeTransferrableObject';\nimport { CanvasGradient } from './CanvasGradient';\nimport { CanvasPattern } from './CanvasPattern';\n/**\n * Handles calls to a CanvasRenderingContext2D object in cases where the user's environment does not\n * support native OffscreenCanvas.\n */\nexport class OffscreenCanvasPolyfill {\n    canvas;\n    context;\n    constructor(canvas) {\n        this.canvas = canvas;\n    }\n    getContext(contextType) {\n        if (!this.context) {\n            if (toLower(contextType) === '2d') {\n                this.context = new OffscreenCanvasRenderingContext2DPolyfill(this.canvas);\n            }\n            else {\n                throw new Error('Context type not supported.');\n            }\n        }\n        return this.context;\n    }\n}\nclass OffscreenCanvasRenderingContext2DPolyfill {\n    canvasElement;\n    lineDash;\n    objectIndex = 0;\n    constructor(canvas) {\n        this.canvasElement = canvas;\n        this.lineDash = [];\n    }\n    [67 /* TransferrableKeys.mutated */](fnName, args) {\n        transfer(this.canvasElement.ownerDocument, [\n            9 /* TransferrableMutationType.OBJECT_MUTATION */,\n            store(fnName),\n            args.length,\n            ...this[68 /* TransferrableKeys.serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject(args),\n        ]);\n    }\n    [68 /* TransferrableKeys.serializeAsTransferrableObject */]() {\n        return [6 /* TransferrableObjectType.CanvasRenderingContext2D */, this.canvasElement[7 /* TransferrableKeys.index */]];\n    }\n    /**\n     * Creates object in the main thread, and associates it with the id provided.\n     * @param objectId ID to associate the created object with.\n     * @param creationMethod Method to use for object creation.\n     * @param creationArgs Arguments to pass into the creation method.\n     */\n    createObjectReference(objectId, creationMethod, creationArgs) {\n        transfer(this.canvasElement.ownerDocument, [\n            10 /* TransferrableMutationType.OBJECT_CREATION */,\n            store(creationMethod),\n            objectId,\n            creationArgs.length,\n            ...this[68 /* TransferrableKeys.serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject(creationArgs),\n        ]);\n    }\n    get canvas() {\n        return this.canvasElement;\n    }\n    clearRect(x, y, w, h) {\n        this[67 /* TransferrableKeys.mutated */]('clearRect', [...arguments]);\n    }\n    fillRect(x, y, w, h) {\n        this[67 /* TransferrableKeys.mutated */]('fillRect', [...arguments]);\n    }\n    strokeRect(x, y, w, h) {\n        this[67 /* TransferrableKeys.mutated */]('strokeRect', [...arguments]);\n    }\n    roundRect(x, y, w, h, radii) {\n        this[67 /* TransferrableKeys.mutated */]('roundRect', [...arguments]);\n    }\n    set lineWidth(value) {\n        this[67 /* TransferrableKeys.mutated */]('lineWidth', [...arguments]);\n    }\n    fillText(text, x, y, maxWidth) {\n        this[67 /* TransferrableKeys.mutated */]('fillText', [...arguments]);\n    }\n    moveTo(x, y) {\n        this[67 /* TransferrableKeys.mutated */]('moveTo', [...arguments]);\n    }\n    lineTo(x, y) {\n        this[67 /* TransferrableKeys.mutated */]('lineTo', [...arguments]);\n    }\n    closePath() {\n        this[67 /* TransferrableKeys.mutated */]('closePath', []);\n    }\n    stroke() {\n        this[67 /* TransferrableKeys.mutated */]('stroke', []);\n    }\n    restore() {\n        this[67 /* TransferrableKeys.mutated */]('restore', []);\n    }\n    save() {\n        this[67 /* TransferrableKeys.mutated */]('save', []);\n    }\n    resetTransform() {\n        this[67 /* TransferrableKeys.mutated */]('resetTransform', []);\n    }\n    rotate(angle) {\n        this[67 /* TransferrableKeys.mutated */]('rotate', [...arguments]);\n    }\n    transform(a, b, c, d, e, f) {\n        this[67 /* TransferrableKeys.mutated */]('transform', [...arguments]);\n    }\n    translate(x, y) {\n        this[67 /* TransferrableKeys.mutated */]('translate', [...arguments]);\n    }\n    scale(x, y) {\n        this[67 /* TransferrableKeys.mutated */]('scale', [...arguments]);\n    }\n    set globalAlpha(value) {\n        this[67 /* TransferrableKeys.mutated */]('globalAlpha', [...arguments]);\n    }\n    set globalCompositeOperation(value) {\n        this[67 /* TransferrableKeys.mutated */]('globalCompositeOperation', [...arguments]);\n    }\n    set imageSmoothingQuality(value) {\n        this[67 /* TransferrableKeys.mutated */]('imageSmoothingQuality', [...arguments]);\n    }\n    set fillStyle(value) {\n        this[67 /* TransferrableKeys.mutated */]('fillStyle', [...arguments]);\n    }\n    set strokeStyle(value) {\n        this[67 /* TransferrableKeys.mutated */]('strokeStyle', [...arguments]);\n    }\n    set shadowBlur(value) {\n        this[67 /* TransferrableKeys.mutated */]('shadowBlur', [...arguments]);\n    }\n    set shadowColor(value) {\n        this[67 /* TransferrableKeys.mutated */]('shadowColor', [...arguments]);\n    }\n    set shadowOffsetX(value) {\n        this[67 /* TransferrableKeys.mutated */]('shadowOffsetX', [...arguments]);\n    }\n    set shadowOffsetY(value) {\n        this[67 /* TransferrableKeys.mutated */]('shadowOffsetY', [...arguments]);\n    }\n    set filter(value) {\n        this[67 /* TransferrableKeys.mutated */]('filter', [...arguments]);\n    }\n    beginPath() {\n        this[67 /* TransferrableKeys.mutated */]('beginPath', []);\n    }\n    strokeText(text, x, y, maxWidth) {\n        this[67 /* TransferrableKeys.mutated */]('strokeText', [...arguments]);\n    }\n    set textAlign(value) {\n        this[67 /* TransferrableKeys.mutated */]('textAlign', [...arguments]);\n    }\n    set textBaseline(value) {\n        this[67 /* TransferrableKeys.mutated */]('textBaseline', [...arguments]);\n    }\n    set lineCap(value) {\n        this[67 /* TransferrableKeys.mutated */]('lineCap', [...arguments]);\n    }\n    set lineDashOffset(value) {\n        this[67 /* TransferrableKeys.mutated */]('lineDashOffset', [...arguments]);\n    }\n    set lineJoin(value) {\n        this[67 /* TransferrableKeys.mutated */]('lineJoin', [...arguments]);\n    }\n    set miterLimit(value) {\n        this[67 /* TransferrableKeys.mutated */]('miterLimit', [...arguments]);\n    }\n    arc(x, y, radius, startAngle, endAngle, anticlockwise) {\n        this[67 /* TransferrableKeys.mutated */]('arc', [...arguments]);\n    }\n    arcTo(x1, y1, x2, y2, radius) {\n        this[67 /* TransferrableKeys.mutated */]('arcTo', [...arguments]);\n    }\n    set direction(value) {\n        this[67 /* TransferrableKeys.mutated */]('direction', [...arguments]);\n    }\n    set font(value) {\n        this[67 /* TransferrableKeys.mutated */]('font', [...arguments]);\n    }\n    ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, anticlockwise) {\n        this[67 /* TransferrableKeys.mutated */]('ellipse', [...arguments]);\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this[67 /* TransferrableKeys.mutated */]('bezierCurveTo', [...arguments]);\n    }\n    rect(x, y, width, height) {\n        this[67 /* TransferrableKeys.mutated */]('rect', [...arguments]);\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this[67 /* TransferrableKeys.mutated */]('quadraticCurveTo', [...arguments]);\n    }\n    set imageSmoothingEnabled(value) {\n        this[67 /* TransferrableKeys.mutated */]('imageSmoothingEnabled', [...arguments]);\n    }\n    setLineDash(lineDash) {\n        lineDash = [...lineDash];\n        if (lineDash.length % 2 !== 0) {\n            lineDash = lineDash.concat(lineDash);\n        }\n        this.lineDash = lineDash;\n        this[67 /* TransferrableKeys.mutated */]('setLineDash', [...arguments]);\n    }\n    getLineDash() {\n        return [...this.lineDash];\n    }\n    clip(pathOrFillRule, fillRule) {\n        if (typeof pathOrFillRule === 'object') {\n            throw new Error('clip(Path2D) is currently not supported!');\n        }\n        this[67 /* TransferrableKeys.mutated */]('clip', [...arguments]);\n    }\n    fill(pathOrFillRule, fillRule) {\n        if (typeof pathOrFillRule === 'object') {\n            throw new Error('fill(Path2D) is currently not supported!');\n        }\n        this[67 /* TransferrableKeys.mutated */]('fill', [...arguments]);\n    }\n    // Method has a different signature in MDN than it does in HTML spec\n    setTransform(transformOrA, bOrC, cOrD, dOrE, eOrF, f) {\n        if (typeof transformOrA === 'object') {\n            throw new Error('setTransform(DOMMatrix2DInit) is currently not supported!');\n        }\n        this[67 /* TransferrableKeys.mutated */]('setTransform', [...arguments]);\n    }\n    createLinearGradient(x0, y0, x1, y1) {\n        const gradientId = this.objectIndex++;\n        this.createObjectReference(gradientId, 'createLinearGradient', [...arguments]);\n        return new CanvasGradient(gradientId, this.canvasElement.ownerDocument);\n    }\n    createRadialGradient(x0, y0, r0, x1, y1, r1) {\n        const gradientId = this.objectIndex++;\n        this.createObjectReference(gradientId, 'createRadialGradient', [...arguments]);\n        return new CanvasGradient(gradientId, this.canvasElement.ownerDocument);\n    }\n    createPattern(image, repetition) {\n        const patternId = this.objectIndex++;\n        this.createObjectReference(patternId, 'createPattern', [...arguments]);\n        return new CanvasPattern(patternId);\n    }\n    drawImage(image, dx, dy) {\n        this[67 /* TransferrableKeys.mutated */]('drawImage', [...arguments]);\n    }\n    createImageData() {\n        return {};\n    }\n    getImageData() {\n        return {};\n    }\n    putImageData() { }\n    isPointInPath() {\n        throw new Error('isPointInPath is not implemented.');\n    }\n    isPointInStroke() {\n        throw new Error('isPointInStroke is not implemented.');\n    }\n    measureText() {\n        throw new Error('measureText is not implemented.');\n    }\n}\n//# sourceMappingURL=OffscreenCanvasPolyfill.js.map","import { transfer } from '../MutationTransfer';\nlet indexTracker = 0;\nexport function retrieveImageBitmap(image, canvas) {\n    const callIndex = indexTracker++;\n    const document = canvas.ownerDocument;\n    return new Promise((resolve) => {\n        const messageHandler = ({ data }) => {\n            if (data[12 /* TransferrableKeys.type */] === 10 /* MessageType.IMAGE_BITMAP_INSTANCE */ && data[73 /* TransferrableKeys.callIndex */] === callIndex) {\n                document.removeGlobalEventListener('message', messageHandler);\n                const transferredImageBitmap = data[38 /* TransferrableKeys.data */];\n                resolve(transferredImageBitmap);\n            }\n        };\n        if (!document.addGlobalEventListener) {\n            throw new Error('addGlobalEventListener is not defined.');\n        }\n        else {\n            document.addGlobalEventListener('message', messageHandler);\n            transfer(canvas.ownerDocument, [11 /* TransferrableMutationType.IMAGE_BITMAP_INSTANCE */, image[7 /* TransferrableKeys.index */], callIndex]);\n        }\n    });\n}\n//# sourceMappingURL=canvas-utils.js.map","import { retrieveImageBitmap } from './canvas-utils';\n/**\n * Wraps CanvasPattern for usage in a native OffscreenCanvas case.\n */\nexport class FakeNativeCanvasPattern {\n    [70 /* TransferrableKeys.patternImplementation */] = {};\n    [71 /* TransferrableKeys.patternUpgraded */] = false;\n    [72 /* TransferrableKeys.patternUpgradePromise */];\n    /**\n     * Retrieves ImageBitmap object from main-thread, which replicates the input image. Upon\n     * retrieval, uses it to create a real CanvasPattern and upgrade the implementation property.\n     * @param canvas Canvas element used to create the pattern.\n     * @param image Image to be used as the pattern's image\n     * @param repetition DOMStrings indicating how to repeat the pattern's image.\n     */\n    [69 /* TransferrableKeys.retrieveCanvasPattern */](canvas, image, repetition) {\n        this[72 /* TransferrableKeys.patternUpgradePromise */] = retrieveImageBitmap(image, canvas)\n            // Create new pattern with retrieved ImageBitmap\n            .then((instance) => {\n            const pattern = canvas.getContext('2d').createPattern(instance, repetition);\n            if (!pattern) {\n                throw new Error('Pattern is null!');\n            }\n            this[70 /* TransferrableKeys.patternImplementation */] = pattern;\n            this[71 /* TransferrableKeys.patternUpgraded */] = true;\n        });\n        return this[72 /* TransferrableKeys.patternUpgradePromise */];\n    }\n    // This method is experimental.\n    // Takes an SVGMatrix as an argument, which is a deprecated API.\n    setTransform() { }\n}\n//# sourceMappingURL=FakeNativeCanvasPattern.js.map","import { transfer } from '../MutationTransfer';\nimport { OffscreenCanvasPolyfill } from './OffscreenCanvasPolyfill';\nimport { FakeNativeCanvasPattern } from './FakeNativeCanvasPattern';\nimport { retrieveImageBitmap } from './canvas-utils';\nexport const deferredUpgrades = new WeakMap();\n/**\n * Delegates all CanvasRenderingContext2D calls, either to an OffscreenCanvas or a polyfill\n * (depending on whether it is supported).\n */\nexport class CanvasRenderingContext2DShim {\n    queue = [];\n    implementation;\n    upgraded = false;\n    canvasElement;\n    polyfillUsed;\n    // createPattern calls need to retrieve an ImageBitmap from the main-thread. Since those can\n    // happen subsequently, we must keep track of these to avoid reentrancy problems.\n    unresolvedCalls = 0;\n    goodImplementation;\n    constructor(canvas) {\n        this.canvasElement = canvas;\n        const OffscreenCanvas = canvas.ownerDocument.defaultView.OffscreenCanvas;\n        // If the browser does not support OffscreenCanvas, use polyfill\n        if (typeof OffscreenCanvas === 'undefined') {\n            this.implementation = new OffscreenCanvasPolyfill(canvas).getContext('2d');\n            this.upgraded = true;\n            this.polyfillUsed = true;\n        }\n        // If the browser supports OffscreenCanvas:\n        // 1. Use un-upgraded (not auto-synchronized) version for all calls performed immediately after\n        // creation. All calls will be queued to call on upgraded version after.\n        // 2. Retrieve an auto-synchronized OffscreenCanvas from the main-thread and call all methods\n        // in the queue.\n        else {\n            this.implementation = new OffscreenCanvas(0, 0).getContext('2d');\n            this.getOffscreenCanvasAsync(this.canvasElement);\n            this.polyfillUsed = false;\n        }\n    }\n    /**\n     * Retrieves auto-synchronized version of an OffscreenCanvas from the main-thread.\n     * @param canvas HTMLCanvasElement associated with this context.\n     */\n    getOffscreenCanvasAsync(canvas) {\n        this.unresolvedCalls++;\n        const deferred = {};\n        const document = this.canvasElement.ownerDocument;\n        const isTestMode = !document.addGlobalEventListener;\n        const upgradePromise = new Promise((resolve) => {\n            const messageHandler = ({ data }) => {\n                if (data[12 /* TransferrableKeys.type */] === 9 /* MessageType.OFFSCREEN_CANVAS_INSTANCE */ &&\n                    data[13 /* TransferrableKeys.target */][0] === canvas[7 /* TransferrableKeys.index */]) {\n                    document.removeGlobalEventListener('message', messageHandler);\n                    const transferredOffscreenCanvas = data[38 /* TransferrableKeys.data */];\n                    resolve(transferredOffscreenCanvas);\n                }\n            };\n            if (!document.addGlobalEventListener) {\n                if (isTestMode) {\n                    deferred.resolve = resolve;\n                }\n                else {\n                    throw new Error('addGlobalEventListener is not defined.');\n                }\n            }\n            else {\n                document.addGlobalEventListener('message', messageHandler);\n                transfer(canvas.ownerDocument, [8 /* TransferrableMutationType.OFFSCREEN_CANVAS_INSTANCE */, canvas[7 /* TransferrableKeys.index */]]);\n            }\n        }).then((instance) => {\n            this.goodImplementation = instance.getContext('2d');\n            this.maybeUpgradeImplementation();\n        });\n        if (isTestMode) {\n            deferred.upgradePromise = upgradePromise;\n            deferredUpgrades.set(canvas, deferred);\n        }\n        return upgradePromise;\n    }\n    /**\n     * Degrades the underlying context implementation and adds to the unresolved call count.\n     */\n    degradeImplementation() {\n        this.upgraded = false;\n        const OffscreenCanvas = this.canvasElement.ownerDocument.defaultView.OffscreenCanvas;\n        this.implementation = new OffscreenCanvas(0, 0).getContext('2d');\n        this.unresolvedCalls++;\n    }\n    /**\n     * Will upgrade the underlying context implementation if no more unresolved calls remain.\n     */\n    maybeUpgradeImplementation() {\n        this.unresolvedCalls--;\n        if (this.unresolvedCalls === 0) {\n            this.implementation = this.goodImplementation;\n            this.upgraded = true;\n            this.flushQueue();\n        }\n    }\n    flushQueue() {\n        for (const call of this.queue) {\n            if (call.isSetter) {\n                this[call.fnName] = call.args[0];\n            }\n            else {\n                this[call.fnName](...call.args);\n            }\n        }\n        this.queue.length = 0;\n    }\n    delegateFunc(name, args) {\n        const returnValue = this.implementation[name](...args);\n        if (!this.upgraded) {\n            this.queue.push({ fnName: name, args, isSetter: false });\n        }\n        return returnValue;\n    }\n    delegateSetter(name, args) {\n        this.implementation[name] = args[0];\n        if (!this.upgraded) {\n            this.queue.push({ fnName: name, args, isSetter: true });\n        }\n    }\n    delegateGetter(name) {\n        return this.implementation[name];\n    }\n    /* DRAWING RECTANGLES */\n    clearRect(x, y, width, height) {\n        this.delegateFunc('clearRect', [...arguments]);\n    }\n    fillRect(x, y, width, height) {\n        this.delegateFunc('fillRect', [...arguments]);\n    }\n    strokeRect(x, y, width, height) {\n        this.delegateFunc('strokeRect', [...arguments]);\n    }\n    roundRect(x, y, w, h, radii) {\n        this.delegateFunc('roundRect', [...arguments]);\n    }\n    /* DRAWING TEXT */\n    fillText(text, x, y, maxWidth) {\n        this.delegateFunc('fillText', [...arguments]);\n    }\n    strokeText(text, x, y, maxWidth) {\n        this.delegateFunc('strokeText', [...arguments]);\n    }\n    measureText(text) {\n        return this.delegateFunc('measureText', [...arguments]);\n    }\n    /* LINE STYLES */\n    set lineWidth(value) {\n        this.delegateSetter('lineWidth', [...arguments]);\n    }\n    get lineWidth() {\n        return this.delegateGetter('lineWidth');\n    }\n    set lineCap(value) {\n        this.delegateSetter('lineCap', [...arguments]);\n    }\n    get lineCap() {\n        return this.delegateGetter('lineCap');\n    }\n    set lineJoin(value) {\n        this.delegateSetter('lineJoin', [...arguments]);\n    }\n    get lineJoin() {\n        return this.delegateGetter('lineJoin');\n    }\n    set miterLimit(value) {\n        this.delegateSetter('miterLimit', [...arguments]);\n    }\n    get miterLimit() {\n        return this.delegateGetter('miterLimit');\n    }\n    getLineDash() {\n        return this.delegateFunc('getLineDash', [...arguments]);\n    }\n    setLineDash(segments) {\n        this.delegateFunc('setLineDash', [...arguments]);\n    }\n    set lineDashOffset(value) {\n        this.delegateSetter('lineDashOffset', [...arguments]);\n    }\n    get lineDashOffset() {\n        return this.delegateGetter('lineDashOffset');\n    }\n    /* TEXT STYLES */\n    set font(value) {\n        this.delegateSetter('font', [...arguments]);\n    }\n    get font() {\n        return this.delegateGetter('font');\n    }\n    set textAlign(value) {\n        this.delegateSetter('textAlign', [...arguments]);\n    }\n    get textAlign() {\n        return this.delegateGetter('textAlign');\n    }\n    set textBaseline(value) {\n        this.delegateSetter('textBaseline', [...arguments]);\n    }\n    get textBaseline() {\n        return this.delegateGetter('textBaseline');\n    }\n    set direction(value) {\n        this.delegateSetter('direction', [...arguments]);\n    }\n    get direction() {\n        return this.delegateGetter('direction');\n    }\n    /* FILL AND STROKE STYLES */\n    set fillStyle(value) {\n        // 1. Native pattern instances given to the user hold the 'real' pattern as their implementation prop.\n        // 2. Pattern must be upgraded, otherwise an undefined 'implementation' will be queued instead of the wrapper object.\n        if (value instanceof FakeNativeCanvasPattern && this.upgraded) {\n            // This case occurs only when an un-upgraded pattern is passed into a different (already\n            // upgraded) canvas context.\n            if (!value[71 /* TransferrableKeys.patternUpgraded */]) {\n                this.queue.push({ fnName: 'fillStyle', args: [value], isSetter: true });\n                this.degradeImplementation();\n                value[72 /* TransferrableKeys.patternUpgradePromise */].then(() => {\n                    this.maybeUpgradeImplementation();\n                });\n            }\n            else {\n                this.delegateSetter('fillStyle', [value[70 /* TransferrableKeys.patternImplementation */]]);\n            }\n            // Any other case does not require special handling.\n        }\n        else {\n            this.delegateSetter('fillStyle', [...arguments]);\n        }\n    }\n    get fillStyle() {\n        return this.delegateGetter('fillStyle');\n    }\n    set strokeStyle(value) {\n        // 1. Native pattern instances given to the user hold the 'real' pattern as their implementation prop.\n        // 2. Pattern must be upgraded, otherwise an undefined 'implementation' could be queued instead of the wrapper object.\n        if (value instanceof FakeNativeCanvasPattern && this.upgraded) {\n            // This case occurs only when an un-upgraded pattern is passed into a different (already\n            // upgraded) canvas context.\n            if (!value[71 /* TransferrableKeys.patternUpgraded */]) {\n                this.queue.push({\n                    fnName: 'strokeStyle',\n                    args: [value],\n                    isSetter: true,\n                });\n                this.degradeImplementation();\n                value[72 /* TransferrableKeys.patternUpgradePromise */].then(() => {\n                    this.maybeUpgradeImplementation();\n                });\n            }\n            else {\n                this.delegateSetter('strokeStyle', [value[70 /* TransferrableKeys.patternImplementation */]]);\n            }\n            // Any other case does not require special handling.\n        }\n        else {\n            this.delegateSetter('strokeStyle', [...arguments]);\n        }\n    }\n    get strokeStyle() {\n        return this.delegateGetter('strokeStyle');\n    }\n    /* GRADIENTS AND PATTERNS */\n    createLinearGradient(x0, y0, x1, y1) {\n        return this.delegateFunc('createLinearGradient', [...arguments]);\n    }\n    createRadialGradient(x0, y0, r0, x1, y1, r1) {\n        return this.delegateFunc('createRadialGradient', [...arguments]);\n    }\n    createPattern(image, repetition) {\n        const ImageBitmap = this.canvasElement.ownerDocument.defaultView.ImageBitmap;\n        // Only HTMLElement image sources require special handling. ImageBitmap is OK to use.\n        if (this.polyfillUsed || image instanceof ImageBitmap) {\n            return this.delegateFunc('createPattern', [...arguments]);\n        }\n        else {\n            // Degrade the underlying implementation because we don't want calls on the real one until\n            // after pattern is retrieved\n            this.degradeImplementation();\n            const fakePattern = new FakeNativeCanvasPattern();\n            fakePattern[69 /* TransferrableKeys.retrieveCanvasPattern */](this.canvas, image, repetition).then(() => {\n                this.maybeUpgradeImplementation();\n            });\n            return fakePattern;\n        }\n    }\n    /* DRAWING IMAGES */\n    drawImage(image, dx, dy) {\n        const ImageBitmap = this.canvasElement.ownerDocument.defaultView.ImageBitmap;\n        // Only HTMLElement image sources require special handling. ImageBitmap is OK to use.\n        if (this.polyfillUsed || image instanceof ImageBitmap) {\n            this.delegateFunc('drawImage', [...arguments]);\n        }\n        else {\n            // Queue the drawImage call to make sure it gets called in correct order\n            const args = [];\n            this.queue.push({ fnName: 'drawImage', args, isSetter: false });\n            // Degrade the underlying implementation because we don't want calls on the real one\n            // until after the ImageBitmap is received.\n            this.degradeImplementation();\n            // Retrieve an ImageBitmap from the main-thread with the same image as the input image\n            retrieveImageBitmap(image, this.canvas)\n                // Then call the actual method with the retrieved ImageBitmap\n                .then((instance) => {\n                args.push(instance, dx, dy);\n                this.maybeUpgradeImplementation();\n            });\n        }\n    }\n    /* SHADOWS */\n    set shadowBlur(value) {\n        this.delegateSetter('shadowBlur', [...arguments]);\n    }\n    get shadowBlur() {\n        return this.delegateGetter('shadowBlur');\n    }\n    set shadowColor(value) {\n        this.delegateSetter('shadowColor', [...arguments]);\n    }\n    get shadowColor() {\n        return this.delegateGetter('shadowColor');\n    }\n    set shadowOffsetX(value) {\n        this.delegateSetter('shadowOffsetX', [...arguments]);\n    }\n    get shadowOffsetX() {\n        return this.delegateGetter('shadowOffsetX');\n    }\n    set shadowOffsetY(value) {\n        this.delegateSetter('shadowOffsetY', [...arguments]);\n    }\n    get shadowOffsetY() {\n        return this.delegateGetter('shadowOffsetY');\n    }\n    /* PATHS */\n    beginPath() {\n        this.delegateFunc('beginPath', [...arguments]);\n    }\n    closePath() {\n        this.delegateFunc('closePath', [...arguments]);\n    }\n    moveTo(x, y) {\n        this.delegateFunc('moveTo', [...arguments]);\n    }\n    lineTo(x, y) {\n        this.delegateFunc('lineTo', [...arguments]);\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this.delegateFunc('bezierCurveTo', [...arguments]);\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this.delegateFunc('quadraticCurveTo', [...arguments]);\n    }\n    arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n        this.delegateFunc('arc', [...arguments]);\n    }\n    arcTo(x1, y1, x2, y2, radius) {\n        this.delegateFunc('arcTo', [...arguments]);\n    }\n    ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise) {\n        this.delegateFunc('ellipse', [...arguments]);\n    }\n    rect(x, y, width, height) {\n        this.delegateFunc('rect', [...arguments]);\n    }\n    /* DRAWING PATHS */\n    fill(pathOrFillRule, fillRule) {\n        const args = [...arguments];\n        this.delegateFunc('fill', args);\n    }\n    stroke(path) {\n        const args = [...arguments];\n        this.delegateFunc('stroke', args);\n    }\n    clip(pathOrFillRule, fillRule) {\n        const args = [...arguments];\n        this.delegateFunc('clip', args);\n    }\n    isPointInPath(pathOrX, xOrY, yOrFillRule, fillRule) {\n        const args = [...arguments];\n        return this.delegateFunc('isPointInPath', args);\n    }\n    isPointInStroke(pathOrX, xOrY, y) {\n        const args = [...arguments];\n        return this.delegateFunc('isPointInStroke', args);\n    }\n    /* TRANSFORMATIONS */\n    rotate(angle) {\n        this.delegateFunc('rotate', [...arguments]);\n    }\n    scale(x, y) {\n        this.delegateFunc('scale', [...arguments]);\n    }\n    translate(x, y) {\n        this.delegateFunc('translate', [...arguments]);\n    }\n    transform(a, b, c, d, e, f) {\n        this.delegateFunc('transform', [...arguments]);\n    }\n    setTransform(transformOrA, bOrC, cOrD, dOrE, eOrF, f) {\n        const args = [...arguments];\n        this.delegateFunc('setTransform', args);\n    }\n    /* experimental */ resetTransform() {\n        this.delegateFunc('resetTransform', [...arguments]);\n    }\n    /* COMPOSITING */\n    set globalAlpha(value) {\n        this.delegateSetter('globalAlpha', [...arguments]);\n    }\n    get globalAlpha() {\n        return this.delegateGetter('globalAlpha');\n    }\n    set globalCompositeOperation(value) {\n        this.delegateSetter('globalCompositeOperation', [...arguments]);\n    }\n    get globalCompositeOperation() {\n        return this.delegateGetter('globalCompositeOperation');\n    }\n    /* PIXEL MANIPULATION */\n    createImageData(imagedataOrWidth, height) {\n        const args = [...arguments];\n        return this.delegateFunc('createImageData', args);\n    }\n    getImageData(sx, sy, sw, sh) {\n        return this.delegateFunc('getImageData', [...arguments]);\n    }\n    putImageData(imageData, dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight) {\n        this.delegateFunc('putImageData', [...arguments]);\n    }\n    /* IMAGE SMOOTHING */\n    /* experimental */ set imageSmoothingEnabled(value) {\n        this.delegateSetter('imageSmoothingEnabled', [...arguments]);\n    }\n    /* experimental */ get imageSmoothingEnabled() {\n        return this.delegateGetter('imageSmoothingEnabled');\n    }\n    /* experimental */ set imageSmoothingQuality(value) {\n        this.delegateSetter('imageSmoothingQuality', [...arguments]);\n    }\n    /* experimental */ get imageSmoothingQuality() {\n        return this.delegateGetter('imageSmoothingQuality');\n    }\n    /* THE CANVAS STATE */\n    save() {\n        this.delegateFunc('save', [...arguments]);\n    }\n    restore() {\n        this.delegateFunc('restore', [...arguments]);\n    }\n    // canvas property is readonly. We don't want to implement getters, but this must be here\n    // in order for TypeScript to not complain (for now)\n    get canvas() {\n        return this.canvasElement;\n    }\n    /* FILTERS */\n    /* experimental */ set filter(value) {\n        this.delegateSetter('filter', [...arguments]);\n    }\n    /* experimental */ get filter() {\n        return this.delegateGetter('filter');\n    }\n}\n//# sourceMappingURL=CanvasRenderingContext2D.js.map","import { HTMLElement } from './HTMLElement';\nimport { registerSubclass } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { CanvasRenderingContext2DShim } from '../canvas/CanvasRenderingContext2D';\nexport class HTMLCanvasElement extends HTMLElement {\n    context;\n    getContext(contextType) {\n        if (!this.context) {\n            if (contextType === '2D' || contextType === '2d') {\n                this.context = new CanvasRenderingContext2DShim(this);\n            }\n            else {\n                throw new Error('Context type not supported.');\n            }\n        }\n        return this.context;\n    }\n}\nregisterSubclass('canvas', HTMLCanvasElement);\n// Reflected Properties\n// HTMLCanvasElement.height => number, reflected attribute\n// HTMLCanvasElement.width => number, reflected attribute\nreflectProperties([{ height: [0] }, { width: [0] }], HTMLCanvasElement);\n// Unimplemented Properties\n// HTMLCanvasElement.mozOpaque => boolean\n// HTMLCanvasElement.mozPrintCallback => function\n// Unimplemented Methods\n// HTMLCanvasElement.captureStream()\n// HTMLCanvasElement.toDataURL()\n// HTMLCanvasElement.toBlob()\n// HTMLCanvasElement.transferControlToOffscreen()\n// HTMLCanvasElement.mozGetAsFile()\n//# sourceMappingURL=HTMLCanvasElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLDataElement extends HTMLElement {\n}\nregisterSubclass('data', HTMLDataElement);\n// Reflected properties, strings.\n// HTMLEmbedElement.value => string, reflected attribute\nreflectProperties([{ value: [''] }], HTMLDataElement);\n//# sourceMappingURL=HTMLDataElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nexport class HTMLDataListElement extends HTMLElement {\n    /**\n     * Getter returning option elements that are direct children of a HTMLDataListElement\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLDataListElement\n     * @return Element \"options\" objects that are direct children.\n     */\n    get options() {\n        return this.childNodes.filter((node) => node.nodeName === 'OPTION');\n    }\n}\nregisterSubclass('datalist', HTMLDataListElement);\n/**\n * HTMLDataListElement.options Read only\n * Is a HTMLCollection representing a collection of the contained option elements.\n */\n/**\n * <label for=\"myBrowser\">Choose a browser from this list:</label>\n * <input list=\"browsers\" id=\"myBrowser\" name=\"myBrowser\" />\n * <datalist id=\"browsers\">\n *   <option value=\"Chrome\">\n *   <option value=\"Firefox\">\n *   <option value=\"Internet Explorer\">\n *   <option value=\"Opera\">\n *   <option value=\"Safari\">\n *   <option value=\"Microsoft Edge\">\n * </datalist>\n */\n//# sourceMappingURL=HTMLDataListElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLEmbedElement extends HTMLElement {\n}\nregisterSubclass('embed', HTMLEmbedElement);\n// Reflected properties, strings.\n// HTMLEmbedElement.height => string, reflected attribute\n// HTMLEmbedElement.src => string, reflected attribute\n// HTMLEmbedElement.type => string, reflected attribute\n// HTMLEmbedElement.width => string, reflected attribute\nreflectProperties([{ height: [''] }, { src: [''] }, { type: [''] }, { width: [''] }], HTMLEmbedElement);\n// Unimplemented\n// HTMLEmbedElement.align => string, not reflected\n// HTMLEmbedElement.name => string, not reflected\n//# sourceMappingURL=HTMLEmbedElement.js.map","import { matchChildrenElements, tagNameConditionPredicate } from './matchElements';\nconst MATCHING_CHILD_ELEMENT_TAGNAMES = 'BUTTON FIELDSET INPUT OBJECT OUTPUT SELECT TEXTAREA'.split(' ');\n/**\n * The HTMLFormControlsCollection interface represents a collection of HTML form control elements.\n * It is mixedin to both HTMLFormElement and HTMLFieldSetElement.\n */\nexport const HTMLFormControlsCollectionMixin = (defineOn) => {\n    Object.defineProperty(defineOn.prototype, 'elements', {\n        /**\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormControlsCollection\n         * @return Element array matching children of specific tagnames.\n         */\n        get() {\n            return matchChildrenElements(this, tagNameConditionPredicate(MATCHING_CHILD_ELEMENT_TAGNAMES));\n        },\n    });\n};\n//# sourceMappingURL=HTMLFormControlsMixin.js.map","import { registerSubclass } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLFormControlsCollectionMixin } from './HTMLFormControlsMixin';\nimport { HTMLElement } from './HTMLElement';\nimport { toLower } from '../../utils';\nexport class HTMLFieldSetElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFieldSetElement\n     * @return hardcoded string 'fieldset'\n     */\n    get type() {\n        return toLower(this.tagName);\n    }\n}\nregisterSubclass('fieldset', HTMLFieldSetElement);\nHTMLFormControlsCollectionMixin(HTMLFieldSetElement);\n// Reflected properties\n// HTMLFieldSetElement.name => string, reflected attribute\n// HTMLFieldSetElement.disabled => boolean, reflected attribute\nreflectProperties([{ name: [''] }, { disabled: [false] }], HTMLFieldSetElement);\n// Unimplemented properties\n// HTMLFieldSetElement.validity\n// HTMLFieldSetElement.willValidate\n// HTMLFieldSetElement.validationMessage\n//# sourceMappingURL=HTMLFieldSetElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { HTMLFormControlsCollectionMixin } from './HTMLFormControlsMixin';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLFormElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/length\n     * @return number of controls in the form\n     */\n    get length() {\n        return this.elements.length;\n    }\n}\nregisterSubclass('form', HTMLFormElement);\nHTMLFormControlsCollectionMixin(HTMLFormElement);\n// Reflected properties\n// HTMLFormElement.name => string, reflected attribute\n// HTMLFormElement.method => string, reflected attribute\n// HTMLFormElement.target => string, reflected attribute\n// HTMLFormElement.action => string, reflected attribute\n// HTMLFormElement.enctype => string, reflected attribute\n// HTMLFormElement.acceptCharset => string, reflected attribute\n// HTMLFormElement.autocomplete => string, reflected attribute\n// HTMLFormElement.autocapitalize => string, reflected attribute\nreflectProperties([\n    { name: [''] },\n    { method: ['get'] },\n    { target: [''] },\n    { action: [''] },\n    { enctype: ['application/x-www-form-urlencoded'] },\n    { acceptCharset: ['', /* attr */ 'accept-charset'] },\n    { autocomplete: ['on'] },\n    { autocapitalize: ['sentences'] },\n], HTMLFormElement);\n// Unimplemented properties\n// HTMLFormElement.encoding => string, reflected attribute\n// HTMLFormElement.noValidate => boolean, reflected attribute\n/*\nUnimplemented, TBD:\n\nNamed inputs are added to their owner form instance as properties, and can overwrite native properties\nif they share the same name (eg a form with an input named action will have its action property return\nthat input instead of the form's action HTML attribute).\n*/\n//# sourceMappingURL=HTMLFormElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList } from './DOMTokenList';\nexport class HTMLIFrameElement extends HTMLElement {\n    _sandbox;\n    // HTMLIFrameElement.sandbox, DOMTokenList, reflected attribute\n    get sandbox() {\n        return this._sandbox || (this._sandbox = new DOMTokenList(this, 'sandbox'));\n    }\n}\nregisterSubclass('iframe', HTMLIFrameElement);\ndefinePropertyBackedAttributes(HTMLIFrameElement, {\n    sandbox: [(el) => el.sandbox.value, (el, value) => (el.sandbox.value = value)],\n});\n// Reflected properties\n// HTMLIFrameElement.allow => string, reflected attribute\n// HTMLIFrameElement.allowFullscreen => boolean, reflected attribute\n// HTMLIFrameElement.csp => string, reflected attribute\n// HTMLIFrameElement.height => string, reflected attribute\n// HTMLIFrameElement.name => string, reflected attribute\n// HTMLIFrameElement.referrerPolicy => string, reflected attribute\n// HTMLIFrameElement.src => string, reflected attribute\n// HTMLIFrameElement.srcdoc => string, reflected attribute\n// HTMLIFrameElement.width => string, reflected attribute\nreflectProperties([\n    { allow: [''] },\n    { allowFullscreen: [false] },\n    { csp: [''] },\n    { height: [''] },\n    { name: [''] },\n    { referrerPolicy: [''] },\n    { src: [''] },\n    { srcdoc: [''] },\n    { width: [''] },\n], HTMLIFrameElement);\n// Unimplemented Properties\n// HTMLIFrameElement.allowPaymentRequest => boolean, reflected attribute\n// HTMLIFrameElement.contentDocument => Document, read only (active document in the inline frame's nested browsing context)\n// HTMLIFrameElement.contentWindow => WindowProxy, read only (window proxy for the nested browsing context)\n//# sourceMappingURL=HTMLIFrameElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLImageElement extends HTMLElement {\n}\nregisterSubclass('img', HTMLImageElement);\n// Reflected Properties\n// HTMLImageElement.alt => string, reflected attribute\n// HTMLImageElement.crossOrigin => string, reflected attribute\n// HTMLImageElement.height => number, reflected attribute\n// HTMLImageElement.isMap => boolean, reflected attribute\n// HTMLImageElement.referrerPolicy => string, reflected attribute\n// HTMLImageElement.src => string, reflected attribute\n// HTMLImageElement.sizes => string, reflected attribute\n// HTMLImageElement.srcset => string, reflected attribute\n// HTMLImageElement.useMap => string, reflected attribute\n// HTMLImageElement.width => number, reflected attribute\nreflectProperties([\n    { alt: [''] },\n    { crossOrigin: [''] },\n    { height: [0] },\n    { isMap: [false] },\n    { referrerPolicy: [''] },\n    { src: [''] },\n    { sizes: [''] },\n    { srcset: [''] },\n    { useMap: [''] },\n    { width: [0] },\n], HTMLImageElement);\n// Unimplmented Properties\n// HTMLImageElement.complete Read only\n// Returns a Boolean that is true if the browser has finished fetching the image, whether successful or not. It also shows true, if the image has no src value.\n// HTMLImageElement.currentSrc Read only\n// Returns a DOMString representing the URL to the currently displayed image (which may change, for example in response to media queries).\n// HTMLImageElement.naturalHeight Read only\n// Returns a unsigned long representing the intrinsic height of the image in CSS pixels, if it is available; else, it shows 0.\n// HTMLImageElement.naturalWidth Read only\n// Returns a unsigned long representing the intrinsic width of the image in CSS pixels, if it is available; otherwise, it will show 0.\n//# sourceMappingURL=HTMLImageElement.js.map","import { matchChildrenElements } from './matchElements';\n/**\n * The HTMLInputLabels interface represents a collection of input getters for their related label Elements.\n * It is mixedin to both HTMLInputElement, HTMLMeterElement, and HTMLProgressElement.\n */\nexport const HTMLInputLabelsMixin = (defineOn) => {\n    Object.defineProperty(defineOn.prototype, 'labels', {\n        /**\n         * Getter returning label elements associated to this meter.\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLProgressElement/labels\n         * @return label elements associated to this meter.\n         */\n        get() {\n            return matchChildrenElements(this.ownerDocument || this, (element) => element.tagName === 'LABEL' && element.for && element.for === this.id);\n        },\n    });\n};\n//# sourceMappingURL=HTMLInputLabelsMixin.js.map","import { HTMLElement } from './HTMLElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nimport { reflectProperties } from './enhanceElement';\nimport { registerSubclass } from './Element';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\nexport class HTMLInputElement extends HTMLElement {\n    // Per spec, some attributes like 'value' and 'checked' change behavior based on dirty flags.\n    // Since these flags can only be changed on interaction (outside of worker), we can ignore them here.\n    // Tradeoffs: Consequent attribute changes are missing, HTMLFormElement.reset() doesn't work, etc.\n    // Alternative: Implement dirty flag checking in worker-dom, which would require listening for\n    //     and forwarding interaction events to flag \"dirtiness\".\n    // https://html.spec.whatwg.org/multipage/input.html#common-input-element-apis\n    [21 /* TransferrableKeys.value */] = '';\n    dirtyValue = false;\n    [47 /* TransferrableKeys.checked */] = false;\n    // TODO(willchou): There are a few interrelated issues with `value` property.\n    //   1. \"Dirtiness\" caveat above.\n    //   2. Duplicate SYNC events. Sent by every event fired from elements with a `value`, plus the default 'change' listener.\n    //   3. Duplicate MUTATE events. Caused by stale `value` in worker due to no default 'input' listener (see below).\n    get value() {\n        return !this.dirtyValue ? this.getAttribute('value') || '' : this[21 /* TransferrableKeys.value */];\n    }\n    set value(value) {\n        // Don't early-out if value doesn't appear to have changed.\n        // The worker may have a stale value since 'input' events aren't being forwarded.\n        this[21 /* TransferrableKeys.value */] = String(value);\n        this.dirtyValue = true;\n        transfer(this.ownerDocument, [\n            3 /* TransferrableMutationType.PROPERTIES */,\n            this[7 /* TransferrableKeys.index */],\n            storeString('value'),\n            0 /* NumericBoolean.FALSE */,\n            storeString(value),\n        ]);\n    }\n    get valueAsDate() {\n        // Don't use Date constructor or Date.parse() since ISO 8601 (yyyy-mm-dd) parsing is inconsistent.\n        const date = this.stringToDate(this.value);\n        const invalid = !date || isNaN(date.getTime());\n        return invalid ? null : date;\n    }\n    /** Unlike browsers, does not throw if this input[type] doesn't support dates. */\n    set valueAsDate(value) {\n        if (!(value instanceof Date)) {\n            throw new TypeError('The provided value is not a Date.');\n        }\n        this.value = this.dateToString(value);\n    }\n    get valueAsNumber() {\n        if (this.value.length === 0) {\n            return NaN;\n        }\n        return Number(this.value);\n    }\n    /** Unlike browsers, does not throw if this input[type] doesn't support numbers. */\n    set valueAsNumber(value) {\n        if (typeof value === 'number') {\n            this.value = String(value);\n        }\n        else {\n            this.value = '';\n        }\n    }\n    get checked() {\n        return this[47 /* TransferrableKeys.checked */];\n    }\n    set checked(value) {\n        if (this[47 /* TransferrableKeys.checked */] === value) {\n            return;\n        }\n        this[47 /* TransferrableKeys.checked */] = !!value;\n        transfer(this.ownerDocument, [\n            3 /* TransferrableMutationType.PROPERTIES */,\n            this[7 /* TransferrableKeys.index */],\n            storeString('checked'),\n            1 /* NumericBoolean.TRUE */,\n            value === true ? 1 /* NumericBoolean.TRUE */ : 0 /* NumericBoolean.FALSE */,\n        ]);\n    }\n    /**\n     * Returns a date in 'yyyy-mm-dd' format.\n     * @param date\n     */\n    dateToString(date) {\n        const y = date.getFullYear();\n        const m = date.getMonth() + 1; // getMonth() is 0-index.\n        const d = date.getDate();\n        return `${y}-${m > 9 ? '' : '0'}${m}-${d > 9 ? '' : '0'}${d}`;\n    }\n    /**\n     * Returns a Date from a 'yyyy-mm-dd' format.\n     * @param s\n     */\n    stringToDate(str) {\n        const components = str.split('-');\n        if (components.length !== 3) {\n            return null;\n        }\n        const [y, m, d] = components;\n        // Month is 0-index.\n        return new Date(parseInt(y, 10), parseInt(m, 10) - 1, parseInt(d, 10));\n    }\n}\nregisterSubclass('input', HTMLInputElement);\nHTMLInputLabelsMixin(HTMLInputElement);\n// Reflected Properties\n// HTMLInputElement.formAction => string, reflected attribute\n// HTMLInputElement.formEncType\t=> string, reflected attribute\n// HTMLInputElement.formMethod => string, reflected attribute\n// HTMLInputElement.formTarget => string, reflected attribute\n// HTMLInputElement.name => string, reflected attribute\n// HTMLInputElement.type => string, reflected attribute\n// HTMLInputElement.disabled => boolean, reflected attribute\n// HTMLInputElement.autofocus => boolean, reflected attribute\n// HTMLInputElement.required => boolean, reflected attribute\n// HTMLInputElement.defaultChecked => boolean, reflected attribute (\"checked\")\n// HTMLInputElement.alt => string, reflected attribute\n// HTMLInputElement.height => number, reflected attribute\n// HTMLInputElement.src => string, reflected attribute\n// HTMLInputElement.width => number, reflected attribute\n// HTMLInputElement.accept => string, reflected attribute\n// HTMLInputElement.autocomplete => string, reflected attribute\n// HTMLInputElement.maxLength => number, reflected attribute\n// HTMLInputElement.size => number, reflected attribute\n// HTMLInputElement.pattern => string, reflected attribute\n// HTMLInputElement.placeholder => string, reflected attribute\n// HTMLInputElement.readOnly => boolean, reflected attribute\n// HTMLInputElement.min => string, reflected attribute\n// HTMLInputElement.max => string, reflected attribute\n// HTMLInputElement.defaultValue => string, reflected attribute\n// HTMLInputElement.dirname => string, reflected attribute\n// HTMLInputElement.multiple => boolean, reflected attribute\n// HTMLInputElement.step => string, reflected attribute\n// HTMLInputElement.autocapitalize => string, reflected attribute\nreflectProperties([\n    { accept: [''] },\n    { alt: [''] },\n    { autocapitalize: [''] },\n    { autocomplete: [''] },\n    { autofocus: [false] },\n    { defaultChecked: [false, /* attr */ 'checked'] },\n    { defaultValue: ['', /* attr */ 'value'] },\n    { dirName: [''] },\n    { disabled: [false] },\n    { formAction: [''] },\n    { formEncType: [''] },\n    { formMethod: [''] },\n    { formTarget: [''] },\n    { height: [0] },\n    { max: [''] },\n    { maxLength: [0] },\n    { min: [''] },\n    { multiple: [false] },\n    { name: [''] },\n    { pattern: [''] },\n    { placeholder: [''] },\n    { readOnly: [false] },\n    { required: [false] },\n    { size: [0] },\n    { src: [''] },\n    { step: [''] },\n    { type: ['text'] },\n    { width: [0] },\n], HTMLInputElement);\n// TODO(KB) Not Reflected Properties\n// HTMLInputElement.indeterminate => boolean\n// Unimplemented Properties\n// HTMLInputElement.formNoValidate => string, reflected attribute\n// HTMLInputElement.validity => ValidityState, readonly\n// HTMLInputElement.validationMessage => string, readonly\n// HTMLInputElement.willValidate => boolean, readonly\n// HTMLInputElement.allowdirs => boolean\n// HTMLInputElement.files\t=> Array<File>\n// HTMLInputElement.webkitdirectory\t=> boolean, reflected attribute\n// HTMLInputElement.webkitEntries => Array<FileSystemEntry>\n// HTMLInputElement.selectionStart => number\n// HTMLInputElement.selectionEnd => number\n// HTMLInputElement.selectionDirection => string\n// HTMLInputElement.list => Element, read only (element pointed by list attribute)\n// Unimplemented Methods\n// HTMLInputElement.setSelectionRange()\n// HTMLInputElement.setRangeText()\n// HTMLInputElement.setCustomValidity()\n// HTMLInputElement.checkValidity()\n// HTMLInputElement.stepDown()\n// HTMLInputElement.stepUp()\n//# sourceMappingURL=HTMLInputElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { matchChildElement, tagNameConditionPredicate } from './matchElements';\nexport class HTMLLabelElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control\n     * @return input element\n     */\n    get control() {\n        const htmlFor = this.getAttribute('for');\n        if (htmlFor !== null) {\n            return this.ownerDocument && this.ownerDocument.getElementById(htmlFor);\n        }\n        return matchChildElement(this, tagNameConditionPredicate(['INPUT']));\n    }\n}\nregisterSubclass('label', HTMLLabelElement);\n// Reflected Properties\n// HTMLLabelElement.htmlFor => string, reflected attribute 'for'\nreflectProperties([{ htmlFor: ['', 'for'] }], HTMLLabelElement);\n//# sourceMappingURL=HTMLLabelElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nexport class HTMLLinkElement extends HTMLElement {\n    _relList;\n    get relList() {\n        return this._relList || (this._relList = new DOMTokenList(this, 'rel'));\n    }\n}\nregisterSubclass('link', HTMLLinkElement);\ndefinePropertyBackedAttributes(HTMLLinkElement, {\n    rel: [(el) => el.relList.value, (el, value) => (el.relList.value = value)],\n});\nsynchronizedAccessor(HTMLLinkElement, 'relList', 'rel');\n// Reflected Properties\n// HTMLLinkElement.as => string, reflected attribute\n// HTMLLinkElement.crossOrigin => string, reflected attribute\n// HTMLLinkElement.disabled => boolean, reflected attribute\n// HTMLLinkElement.href => string, reflected attribute\n// HTMLLinkElement.hreflang => string, reflected attribute\n// HTMLLinkElement.media => string, reflected attribute\n// HTMLLinkElement.referrerPolicy => string, reflected attribute\n// HTMLLinkElement.sizes => string, reflected attribute\n// HTMLLinkElement.type => string, reflected attribute\nreflectProperties([\n    { as: [''] },\n    { crossOrigin: [''] },\n    { disabled: [false] },\n    { href: [''] },\n    { hreflang: [''] },\n    { media: [''] },\n    { referrerPolicy: [''] },\n    { sizes: [''] },\n    { type: [''] },\n], HTMLLinkElement);\n// Unimplemented Properties\n// LinkStyle.sheet Read only\n// Returns the StyleSheet object associated with the given element, or null if there is none.\n//# sourceMappingURL=HTMLLinkElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { matchChildrenElements } from './matchElements';\nexport class HTMLMapElement extends HTMLElement {\n    /**\n     * Getter returning area elements associated to this map.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLMapElement\n     * @return area elements associated to this map.\n     */\n    get areas() {\n        return matchChildrenElements(this, (element) => element.tagName === 'AREA');\n    }\n}\nregisterSubclass('map', HTMLMapElement);\n// Reflected Properties\n// HTMLMapElement.name => string, reflected attribute\nreflectProperties([{ name: [''] }], HTMLMapElement);\n//# sourceMappingURL=HTMLMapElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nexport class HTMLMeterElement extends HTMLElement {\n}\nregisterSubclass('meter', HTMLMeterElement);\nHTMLInputLabelsMixin(HTMLMeterElement);\n// Reflected Properties\n// HTMLMeterElement.high => number, reflected attribute\n// HTMLMeterElement.low => number, reflected attribute\n// HTMLMeterElement.max => number, reflected attribute\n// HTMLMeterElement.min => number, reflected attribute\n// HTMLMeterElement.optimum => number, reflected attribute\n// HTMLMeterElement.value => number, reflected attribute\nreflectProperties([{ high: [0] }, { low: [0] }, { max: [1] }, { min: [0] }, { optimum: [0] }, { value: [0] }], HTMLMeterElement);\n//# sourceMappingURL=HTMLMeterElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLModElement extends HTMLElement {\n}\nregisterSubclass('del', HTMLModElement);\nregisterSubclass('ins', HTMLModElement);\n// Reflected Properties\n// HTMLModElement.cite => string, reflected attribute\n// HTMLModElement.datetime => string, reflected attribute\nreflectProperties([{ cite: [''] }, { datetime: [''] }], HTMLModElement);\n//# sourceMappingURL=HTMLModElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLOListElement extends HTMLElement {\n}\nregisterSubclass('ol', HTMLOListElement);\n// Reflected Properties\n// HTMLModElement.reversed => boolean, reflected attribute\n// HTMLModElement.start => number, reflected attribute\n// HTMLOListElement.type => string, reflected attribute\nreflectProperties([{ reversed: [false] }, { start: [1] }, { type: [''] }], HTMLOListElement);\n//# sourceMappingURL=HTMLOListElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { transfer } from '../MutationTransfer';\nimport { store as storeString } from '../strings';\nexport class HTMLOptionElement extends HTMLElement {\n    [52 /* TransferrableKeys.selected */] = false;\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return position of the option within the list of options it's within, or zero if there is no valid parent.\n     */\n    get index() {\n        return (this.parentNode && this.parentNode.children.indexOf(this)) || 0;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return label attribute value or text content if there is no attribute.\n     */\n    get label() {\n        return this.getAttribute('label') || this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param label new label value to store as an attribute.\n     */\n    set label(label) {\n        this.setAttribute('label', label);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return boolean based on if the option element is selected.\n     */\n    get selected() {\n        return this[52 /* TransferrableKeys.selected */];\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param value new selected boolean value.\n     */\n    set selected(value) {\n        this[52 /* TransferrableKeys.selected */] = !!value;\n        transfer(this.ownerDocument, [\n            3 /* TransferrableMutationType.PROPERTIES */,\n            this[7 /* TransferrableKeys.index */],\n            storeString('selected'),\n            1 /* NumericBoolean.TRUE */,\n            this[52 /* TransferrableKeys.selected */] ? 1 /* NumericBoolean.TRUE */ : 0 /* NumericBoolean.FALSE */,\n        ]);\n    }\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param text new text content to store for this Element.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return value attribute value or text content if there is no attribute.\n     */\n    get value() {\n        return this.getAttribute('value') || this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param value new value for an option element.\n     */\n    set value(value) {\n        this.setAttribute('value', value);\n    }\n}\nregisterSubclass('option', HTMLOptionElement);\ndefinePropertyBackedAttributes(HTMLOptionElement, {\n    selected: [(el) => String(el[52 /* TransferrableKeys.selected */]), (el, value) => (el.selected = value === 'true')],\n});\n// Reflected Properties\n// HTMLOptionElement.defaultSelected => boolean, reflected attribute\n// HTMLOptionElement.disabled => boolean, reflected attribute\n// HTMLOptionElement.type => string, reflected attribute\nreflectProperties([{ defaultSelected: [false, /* attr */ 'selected'] }, { disabled: [false] }, { type: [''] }], HTMLOptionElement);\n// Implemented at HTMLElement\n// HTMLOptionElement.form, Read only\t=> HTMLFormElement\n//# sourceMappingURL=HTMLOptionElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nexport class HTMLProgressElement extends HTMLElement {\n    [48 /* TransferrableKeys.indeterminate */] = true;\n    [21 /* TransferrableKeys.value */] = 0;\n    dirtyValue = false;\n    get position() {\n        return this[48 /* TransferrableKeys.indeterminate */] ? -1 : this.value / this.max;\n    }\n    get value() {\n        return !this.dirtyValue ? Number(this.getAttribute('value')) || 0 : this[21 /* TransferrableKeys.value */];\n    }\n    set value(value) {\n        this[48 /* TransferrableKeys.indeterminate */] = false;\n        this[21 /* TransferrableKeys.value */] = value;\n        this.dirtyValue = true;\n        // TODO(KB) This is a property mutation needing tracked.\n    }\n}\nregisterSubclass('progress', HTMLProgressElement);\nHTMLInputLabelsMixin(HTMLProgressElement);\n// Reflected Properties\n// HTMLModElement.max => number, reflected attribute\nreflectProperties([{ max: [1] }], HTMLProgressElement);\n//# sourceMappingURL=HTMLProgressElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLQuoteElement extends HTMLElement {\n}\nregisterSubclass('blockquote', HTMLQuoteElement);\nregisterSubclass('q', HTMLQuoteElement);\n// Reflected Properties\n// HTMLModElement.cite => string, reflected attribute\nreflectProperties([{ cite: [''] }], HTMLQuoteElement);\n//# sourceMappingURL=HTMLQuoteElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLScriptElement extends HTMLElement {\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement\n     * @param text new text content to store for this Element.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n}\nregisterSubclass('script', HTMLScriptElement);\n// Reflected Properties\n// HTMLScriptElement.type => string, reflected attribute\n// HTMLScriptElement.src => string, reflected attribute\n// HTMLScriptElement.charset => string, reflected attribute\n// HTMLScriptElement.async => boolean, reflected attribute\n// HTMLScriptElement.defer => boolean, reflected attribute\n// HTMLScriptElement.crossOrigin => string, reflected attribute\n// HTMLScriptElement.noModule => boolean, reflected attribute\nreflectProperties([{ type: [''] }, { src: [''] }, { charset: [''] }, { async: [false] }, { defer: [false] }, { crossOrigin: [''] }, { noModule: [false] }], HTMLScriptElement);\n//# sourceMappingURL=HTMLScriptElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nimport { matchChildrenElements, matchChildElement, tagNameConditionPredicate } from './matchElements';\nconst isOptionPredicate = tagNameConditionPredicate(['OPTION']);\nconst isSelectedOptionPredicate = (element) => isOptionPredicate(element) && element.selected === true;\nexport class HTMLSelectElement extends HTMLElement {\n    [49 /* TransferrableKeys.size */] = -1 /* SizeDefaults.UNMODIFIED */;\n    /**\n     * Extend functionality after child insertion to make sure the correct option is selected.\n     * @param child\n     */\n    [56 /* TransferrableKeys.insertedNode */](child) {\n        super[56 /* TransferrableKeys.insertedNode */](child);\n        // When this singular value select is appending a child, set the value property for two cases.\n        // 1. The inserted child is already selected.\n        // 2. The current value of the select is the default ('').\n        if ((!this.multiple && isOptionPredicate(child) && child.selected) || this.value === '') {\n            this.value = child.value;\n        }\n    }\n    /**\n     * Extend functionality after child insertion to make sure the correct option is selected.\n     * @param child\n     */\n    [57 /* TransferrableKeys.removedNode */](child) {\n        super[57 /* TransferrableKeys.removedNode */](child);\n        // When this singular value select is removing a selected child\n        // ... set the value property to the first valid option.\n        if (!this.multiple && child.selected) {\n            const options = this.options;\n            if (options.length > 0) {\n                this.value = options[0].value;\n            }\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/length\n     * @return number of controls in the form\n     */\n    get length() {\n        return this.options.length;\n    }\n    /**\n     * Getter returning option elements that are direct children of a HTMLSelectElement\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return Element \"options\" objects that are direct children.\n     */\n    get options() {\n        return this.children.filter(isOptionPredicate);\n    }\n    /**\n     * Getter returning the index of the first selected <option> element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedIndex\n     * @return the index of the first selected option element, or -1 if no element is selected.\n     */\n    get selectedIndex() {\n        const firstSelectedChild = matchChildElement(this, isSelectedOptionPredicate);\n        return firstSelectedChild ? this.children.indexOf(firstSelectedChild) : -1;\n    }\n    /**\n     * Setter making the <option> element at the passed index selected.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedIndex\n     * @param selectedIndex index number to make selected.\n     */\n    set selectedIndex(selectedIndex) {\n        this.children.forEach((element, index) => (element.selected = index === selectedIndex));\n    }\n    /**\n     * Getter returning the <option> elements selected.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedOptions\n     * @return array of Elements currently selected.\n     */\n    get selectedOptions() {\n        return matchChildrenElements(this, isSelectedOptionPredicate);\n    }\n    /**\n     * Getter returning the size of the select element (by default 1 for single and 4 for multiple)\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return size of the select element.\n     */\n    get size() {\n        return this[49 /* TransferrableKeys.size */] === -1 /* SizeDefaults.UNMODIFIED */\n            ? this.multiple\n                ? 4 /* SizeDefaults.MULTIPLE */\n                : 1 /* SizeDefaults.SINGLE */\n            : this[49 /* TransferrableKeys.size */];\n    }\n    /**\n     * Override the size of this element (each positive unit is the height of a single option)\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @param size number to set the size to.\n     */\n    set size(size) {\n        this[49 /* TransferrableKeys.size */] = size > 0 ? size : this.multiple ? 4 /* SizeDefaults.MULTIPLE */ : 1 /* SizeDefaults.SINGLE */;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return string representing the select element type.\n     */\n    get type() {\n        return this.multiple ? \"select-one\" /* TypeDefaults.MULTIPLE */ : \"select-multiple\" /* TypeDefaults.SINGLE */;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return the value of the first selected option\n     */\n    get value() {\n        const firstSelectedChild = matchChildElement(this, isSelectedOptionPredicate);\n        return firstSelectedChild ? firstSelectedChild.value : '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @set value\n     */\n    set value(value) {\n        const stringValue = String(value);\n        this.children.forEach((element) => isOptionPredicate(element) && (element.selected = element.value === stringValue));\n    }\n}\nregisterSubclass('select', HTMLSelectElement);\nHTMLInputLabelsMixin(HTMLSelectElement);\n// Reflected Properties\n// HTMLSelectElement.multiple => boolean, reflected attribute\n// HTMLSelectElement.name => string, reflected attribute\n// HTMLSelectElement.required => boolean, reflected attribute\nreflectProperties([{ multiple: [false] }, { name: [''] }, { required: [false] }], HTMLSelectElement);\n// Implemented on HTMLElement\n// HTMLSelectElement.form => HTMLFormElement, readonly\n// Unimplemented Properties\n// HTMLSelectElement.validation => string\n// HTMLSelectElement.validity => ValidityState\n// HTMLSelectElement.willValidate => boolean\n//# sourceMappingURL=HTMLSelectElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLSourceElement extends HTMLElement {\n}\nregisterSubclass('source', HTMLSourceElement);\n// Reflected Properties\n// HTMLSourceElement.media => string, reflected attribute\n// HTMLSourceElement.sizes => string, reflected attribute\n// HTMLSourceElement.src => string, reflected attribute\n// HTMLSourceElement.srcset => string, reflected attribute\n// HTMLSourceElement.type => string, reflected attribute\nreflectProperties([{ media: [''] }, { sizes: [''] }, { src: [''] }, { srcset: [''] }, { type: [''] }], HTMLSourceElement);\n// Unimplemented Properties\n// HTMLSourceElement.keySystem => string\n//# sourceMappingURL=HTMLSourceElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLStyleElement extends HTMLElement {\n}\nregisterSubclass('style', HTMLStyleElement);\n// Reflected Properties\n// HTMLStyleElement.media => string, reflected attribute\n// HTMLStyleElement.type => string, reflected attribute\nreflectProperties([{ media: [''] }, { type: [''] }], HTMLStyleElement);\n// Unimplemented Properties\n// HTMLStyleElement.disabled => boolean\n// HTMLStyleElement.scoped => boolean, reflected attribute\n// HTMLStyleElement.sheet => StyleSheet, read only\n//# sourceMappingURL=HTMLStyleElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList } from './DOMTokenList';\nimport { matchNearestParent, tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nexport class HTMLTableCellElement extends HTMLElement {\n    _headers;\n    get headers() {\n        return this._headers || (this._headers = new DOMTokenList(this, 'headers'));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCellElement\n     * @return position of the cell within the parent tr, if not nested in a tr the value is -1.\n     */\n    get cellIndex() {\n        const parent = matchNearestParent(this, tagNameConditionPredicate(['TR']));\n        return parent !== null ? matchChildrenElements(parent, tagNameConditionPredicate(['TH', 'TD'])).indexOf(this) : -1;\n    }\n}\nregisterSubclass('th', HTMLTableCellElement);\nregisterSubclass('td', HTMLTableCellElement);\ndefinePropertyBackedAttributes(HTMLTableCellElement, {\n    headers: [(el) => el.headers.value, (el, value) => (el.headers.value = value)],\n});\n// Reflected Properties\n// HTMLTableCellElement.abbr => string, reflected attribute\n// HTMLTableCellElement.colSpan => number, reflected attribute\n// HTMLTableCellElement.rowSpan => number, reflected attribute\n// HTMLTableCellElement.scope => string, reflected attribute\nreflectProperties([{ abbr: [''] }, { colSpan: [1] }, { rowSpan: [1] }, { scope: [''] }], HTMLTableCellElement);\n//# sourceMappingURL=HTMLTableCellElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLTableColElement extends HTMLElement {\n}\nregisterSubclass('col', HTMLTableColElement);\n// Reflected Properties\n// HTMLTableColElement.span => number, reflected attribute\nreflectProperties([{ span: [1] }], HTMLTableColElement);\n//# sourceMappingURL=HTMLTableColElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { matchChildElement, matchChildrenElements, tagNameConditionPredicate } from './matchElements';\nimport { toUpper } from '../../utils';\nconst removeElement = (element) => element && element.remove();\nconst insertBeforeElementsWithTagName = (parent, element, tagNames) => {\n    console.assert(tagNames.every((t) => t === toUpper(t)), 'tagNames must be all uppercase.');\n    const insertBeforeElement = matchChildElement(parent, (element) => !tagNames.includes(element.tagName));\n    if (insertBeforeElement) {\n        parent.insertBefore(element, insertBeforeElement);\n    }\n    else {\n        parent.appendChild(element);\n    }\n};\nexport class HTMLTableElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/caption\n     * @return first matching caption Element or null if none exists.\n     */\n    get caption() {\n        return matchChildElement(this, tagNameConditionPredicate(['CAPTION']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/caption\n     * @param element new caption element to replace the existing, or become the first element child.\n     */\n    set caption(newElement) {\n        if (newElement && newElement.tagName === 'CAPTION') {\n            // If a correct object is given,\n            // it is inserted in the tree as the first child of this element and the first <caption>\n            // that is a child of this element is removed from the tree, if any.\n            removeElement(this.caption);\n            this.insertBefore(newElement, this.firstElementChild);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @return first matching thead Element or null if none exists.\n     */\n    get tHead() {\n        return matchChildElement(this, tagNameConditionPredicate(['THEAD']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @param newElement new thead element to insert in this table.\n     */\n    set tHead(newElement) {\n        if (newElement && newElement.tagName === 'THEAD') {\n            // If a correct object is given,\n            // it is inserted in the tree immediately before the first element that is\n            // neither a <caption>, nor a <colgroup>, or as the last child if there is no such element.\n            // Additionally, the first <thead> that is a child of this element is removed from the tree, if any.\n            removeElement(this.tHead);\n            insertBeforeElementsWithTagName(this, newElement, ['CAPTION', 'COLGROUP']);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @return first matching thead Element or null if none exists.\n     */\n    get tFoot() {\n        return matchChildElement(this, tagNameConditionPredicate(['TFOOT']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @param newElement new tfoot element to insert in this table.\n     */\n    set tFoot(newElement) {\n        if (newElement && newElement.tagName === 'TFOOT') {\n            // If a correct object is given,\n            // it is inserted in the tree immediately before the first element that is neither a <caption>,\n            // a <colgroup>, nor a <thead>, or as the last child if there is no such element, and the first <tfoot> that is a child of\n            // this element is removed from the tree, if any.\n            removeElement(this.tFoot);\n            insertBeforeElementsWithTagName(this, newElement, ['CAPTION', 'COLGROUP', 'THEAD']);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement\n     * @return array of 'tr' tagname elements\n     */\n    get rows() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TR']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement\n     * @return array of 'tbody' tagname elements\n     */\n    get tBodies() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TBODY']));\n    }\n}\nregisterSubclass('table', HTMLTableElement);\n// Unimplemented Properties\n// HTMLTableElement.sortable => boolean\n// Unimplemented Methods\n// HTMLTableElement.createTHead()\n// HTMLTableElement.deleteTHead()\n// HTMLTableElement.createTFoot()\n// HTMLTableElement.deleteTFoot()\n// HTMLTableElement.createCaption()\n// HTMLTableElement.deleteCaption()\n// HTMLTableElement.insertRow()\n// HTMLTableElement.deleteRow()\n//# sourceMappingURL=HTMLTableElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { matchNearestParent, tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nconst TABLE_SECTION_TAGNAMES = 'TABLE TBODY THEAD TFOOT'.split(' ');\nconst indexInAncestor = (element, isValidAncestor) => {\n    const parent = matchNearestParent(element, isValidAncestor);\n    // TODO(KB): This is either a HTMLTableElement or HTMLTableSectionElement.\n    return parent === null ? -1 : parent.rows.indexOf(element);\n};\nexport class HTMLTableRowElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return td and th elements that are children of this row.\n     */\n    get cells() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TD', 'TH']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return position of the row within a table, if not nested within in a table the value is -1.\n     */\n    get rowIndex() {\n        return indexInAncestor(this, tagNameConditionPredicate(['TABLE']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return position of the row within a parent section, if not nested directly in a section the value is -1.\n     */\n    get sectionRowIndex() {\n        return indexInAncestor(this, tagNameConditionPredicate(TABLE_SECTION_TAGNAMES));\n    }\n    /**\n     * Removes the cell in provided position of this row.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @param index position of the cell in the row to remove.\n     */\n    deleteCell(index) {\n        const cell = this.cells[index];\n        if (cell) {\n            cell.remove();\n        }\n    }\n    /**\n     * Insert a new cell ('td') in the row at a specified position.\n     * @param index position in the children to insert before.\n     * @return newly inserted td element.\n     */\n    insertCell(index) {\n        const cells = this.cells;\n        const td = this.ownerDocument.createElement('td');\n        if (index < 0 || index >= cells.length) {\n            this.appendChild(td);\n        }\n        else {\n            this.insertBefore(td, this.children[index]);\n        }\n        return td;\n    }\n}\nregisterSubclass('tr', HTMLTableRowElement);\n//# sourceMappingURL=HTMLTableRowElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nexport class HTMLTableSectionElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @return All rows (tr elements) within the table section.\n     */\n    get rows() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TR']));\n    }\n    /**\n     * Remove a node in a specified position from the section.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @param index position in the section to remove the node of.\n     */\n    deleteRow(index) {\n        const rows = this.rows;\n        if (index >= 0 || index <= rows.length) {\n            rows[index].remove();\n        }\n    }\n    /**\n     * Insert a new row ('tr') in the row at a specified position.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @param index position in the children to insert before.\n     * @return newly inserted tr element.\n     */\n    insertRow(index) {\n        const rows = this.rows;\n        const tr = this.ownerDocument.createElement('tr');\n        if (index < 0 || index >= rows.length) {\n            this.appendChild(tr);\n        }\n        else {\n            this.insertBefore(tr, this.children[index]);\n        }\n        return tr;\n    }\n}\nregisterSubclass('thead', HTMLTableSectionElement);\nregisterSubclass('tfoot', HTMLTableSectionElement);\nregisterSubclass('tbody', HTMLTableSectionElement);\n//# sourceMappingURL=HTMLTableSectionElement.js.map","// <blockquote> and <q>\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLTimeElement extends HTMLElement {\n}\nregisterSubclass('time', HTMLTimeElement);\n// Reflected Properties\n// HTMLTimeElement.dateTime => string, reflected attribute\nreflectProperties([{ dateTime: [''] }], HTMLTimeElement);\n//# sourceMappingURL=HTMLTimeElement.js.map","import { Node } from './Node';\nimport { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\nimport { getNextElementSibling, getPreviousElementSibling } from './elementSibling';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/CharacterData\nexport class CharacterData extends Node {\n    [38 /* TransferrableKeys.data */];\n    constructor(data, nodeType, nodeName, ownerDocument, overrideIndex) {\n        super(nodeType, nodeName, ownerDocument, overrideIndex);\n        this[38 /* TransferrableKeys.data */] = data;\n        this[8 /* TransferrableKeys.creationFormat */] = [this[7 /* TransferrableKeys.index */], nodeType, storeString(nodeName), storeString(data), 0];\n    }\n    // Unimplemented Methods\n    // NonDocumentTypeChildNode.nextElementSibling – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/nextElementSibling\n    // NonDocumentTypeChildNode.previousElementSibling – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/previousElementSibling\n    // CharacterData.appendData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/appendData\n    // CharacterData.deleteData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/deleteData\n    // CharacterData.insertData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/insertData\n    // CharacterData.replaceData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/replaceData\n    // CharacterData.substringData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/substringData\n    /**\n     * @return Returns the string contained in private CharacterData.data\n     */\n    get data() {\n        return this[38 /* TransferrableKeys.data */];\n    }\n    /**\n     * @param value string value to store as CharacterData.data.\n     */\n    set data(value) {\n        const oldValue = this.data;\n        this[38 /* TransferrableKeys.data */] = value;\n        mutate(this.ownerDocument, {\n            target: this,\n            type: 1 /* MutationRecordType.CHARACTER_DATA */,\n            value,\n            oldValue,\n        }, [1 /* TransferrableMutationType.CHARACTER_DATA */, this[7 /* TransferrableKeys.index */], storeString(value)]);\n    }\n    /**\n     * @return Returns the size of the string contained in CharacterData.data\n     */\n    get length() {\n        return this[38 /* TransferrableKeys.data */].length;\n    }\n    /**\n     * @return Returns the string contained in CharacterData.data\n     */\n    get nodeValue() {\n        return this[38 /* TransferrableKeys.data */];\n    }\n    /**\n     * @param value string value to store as CharacterData.data.\n     */\n    set nodeValue(value) {\n        this.data = value;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/previousElementSibling\n     * Returns the Element immediately prior to the specified one in its parent's children list,\n     * or null if the specified element is the first one in the list.\n     */\n    get previousElementSibling() {\n        return getPreviousElementSibling(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/nextElementSibling\n     * Returns the Element immediately following the specified one in its parent's children list,\n     * or null if the specified element is the last one in the list.\n     */\n    get nextElementSibling() {\n        return getNextElementSibling(this);\n    }\n}\n//# sourceMappingURL=CharacterData.js.map","import { CharacterData } from './CharacterData';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/Text\nexport class Text extends CharacterData {\n    constructor(data, ownerDocument, overrideIndex) {\n        super(data, 3 /* NodeType.TEXT_NODE */, '#text', ownerDocument, overrideIndex);\n    }\n    // Unimplemented Properties\n    // Text.isElementContentWhitespace – https://developer.mozilla.org/en-US/docs/Web/API/Text/isElementContentWhitespace\n    // Text.wholeText – https://developer.mozilla.org/en-US/docs/Web/API/Text/wholeText\n    // Text.assignedSlot – https://developer.mozilla.org/en-US/docs/Web/API/Text/assignedSlot\n    /**\n     * textContent getter, retrieves underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     */\n    get textContent() {\n        return this.data;\n    }\n    /**\n     * textContent setter, mutates underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     * @param value new value\n     */\n    set textContent(value) {\n        // Mutation Observation is performed by CharacterData.\n        this.nodeValue = value;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @return new Text Node with the same data as the Text to clone.\n     */\n    cloneNode() {\n        return this.ownerDocument.createTextNode(this.data);\n    }\n    /**\n     * Breaks Text node into two nodes at the specified offset, keeping both nodes in the tree as siblings.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Text/splitText\n     * @param offset number position to split text at.\n     * @return Text Node after the offset.\n     */\n    splitText(offset) {\n        const remainderTextNode = new Text(this.data.slice(offset, this.data.length), this.ownerDocument);\n        const parentNode = this.parentNode;\n        this.nodeValue = this.data.slice(0, offset);\n        if (parentNode !== null) {\n            // When this node is attached to the DOM, the remainder text needs to be inserted directly after.\n            const parentChildNodes = parentNode.childNodes;\n            const insertBeforePosition = parentChildNodes.indexOf(this) + 1;\n            const insertBeforeNode = parentChildNodes.length >= insertBeforePosition ? parentChildNodes[insertBeforePosition] : null;\n            return parentNode.insertBefore(remainderTextNode, insertBeforeNode);\n        }\n        return remainderTextNode;\n    }\n}\n//# sourceMappingURL=Text.js.map","import { CharacterData } from './CharacterData';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/Comment\nexport class Comment extends CharacterData {\n    constructor(data, ownerDocument, overrideIndex) {\n        super(data, 8 /* NodeType.COMMENT_NODE */, '#comment', ownerDocument, overrideIndex);\n    }\n    /**\n     * textContent getter, retrieves underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     */\n    get textContent() {\n        return this.data;\n    }\n    /**\n     * textContent setter, mutates underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     * @param value new value\n     */\n    set textContent(value) {\n        // Mutation Observation is performed by CharacterData.\n        this.nodeValue = value;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @return new Comment Node with the same data as the Comment to clone.\n     */\n    cloneNode() {\n        return this.ownerDocument.createComment(this.data);\n    }\n}\n//# sourceMappingURL=Comment.js.map","import { ParentNode } from './ParentNode';\nimport { store as storeString } from '../strings';\nexport class DocumentFragment extends ParentNode {\n    constructor(ownerDocument, overrideIndex) {\n        super(11 /* NodeType.DOCUMENT_FRAGMENT_NODE */, '#document-fragment', ownerDocument, overrideIndex);\n        this[8 /* TransferrableKeys.creationFormat */] = [this[7 /* TransferrableKeys.index */], 11 /* NodeType.DOCUMENT_FRAGMENT_NODE */, storeString(this.nodeName), 0, 0];\n    }\n    /**\n     * @param deep boolean determines if the clone should include a recursive copy of all childNodes.\n     * @return DocumentFragment containing childNode clones of the DocumentFragment requested to be cloned.\n     */\n    cloneNode(deep = false) {\n        const clone = this.ownerDocument.createDocumentFragment();\n        if (deep) {\n            this.childNodes.forEach((child) => clone.appendChild(child.cloneNode(deep)));\n        }\n        return clone;\n    }\n}\n//# sourceMappingURL=DocumentFragment.js.map","import { get } from './nodes';\n/**\n * When an event is dispatched from the main thread, it needs to be propagated in the worker thread.\n * Propagate adds an event listener to the worker global scope and uses the WorkerDOM Node.dispatchEvent\n * method to dispatch the transfered event in the worker thread.\n */\nexport function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* TransferrableKeys.type */] !== 4 /* MessageType.SYNC */) {\n            return;\n        }\n        const sync = data[40 /* TransferrableKeys.sync */];\n        const node = get(sync[7 /* TransferrableKeys.index */]);\n        if (node) {\n            node.ownerDocument[58 /* TransferrableKeys.allowTransfer */] = false;\n            // Modify the private backing ivar of `value` property to avoid mutation/sync cycle.\n            node.value = sync[21 /* TransferrableKeys.value */];\n            node.ownerDocument[58 /* TransferrableKeys.allowTransfer */] = true;\n        }\n    });\n}\n//# sourceMappingURL=SyncValuePropagation.js.map","export function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* TransferrableKeys.type */] !== 5 /* MessageType.RESIZE */) {\n            return;\n        }\n        const sync = data[40 /* TransferrableKeys.sync */];\n        if (sync) {\n            global.innerWidth = sync[0];\n            global.innerHeight = sync[1];\n        }\n    });\n}\n//# sourceMappingURL=ResizePropagation.js.map","import { Element, NS_NAME_TO_CLASS } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport './HTMLAnchorElement';\nimport './HTMLButtonElement';\nimport './HTMLCanvasElement';\nimport './HTMLDataElement';\nimport './HTMLDataListElement';\nimport './HTMLEmbedElement';\nimport './HTMLFieldSetElement';\nimport './HTMLFormElement';\nimport './HTMLIFrameElement';\nimport './HTMLImageElement';\nimport './HTMLInputElement';\nimport './HTMLLabelElement';\nimport './HTMLLinkElement';\nimport './HTMLMapElement';\nimport './HTMLMeterElement';\nimport './HTMLModElement';\nimport './HTMLOListElement';\nimport './HTMLOptionElement';\nimport './HTMLProgressElement';\nimport './HTMLQuoteElement';\nimport './HTMLScriptElement';\nimport './HTMLSelectElement';\nimport './HTMLSourceElement';\nimport './HTMLStyleElement';\nimport './HTMLTableCellElement';\nimport './HTMLTableColElement';\nimport './HTMLTableElement';\nimport './HTMLTableRowElement';\nimport './HTMLTableSectionElement';\nimport './HTMLTimeElement';\nimport { matchChildElement } from './matchElements';\nimport { Text } from './Text';\nimport { Comment } from './Comment';\nimport { toLower } from '../../utils';\nimport { DocumentFragment } from './DocumentFragment';\nimport { HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { propagate as propagateEvents } from '../Event';\nimport { propagate as propagateSyncValues } from '../SyncValuePropagation';\nimport { propagate as propagateResize } from '../ResizePropagation';\nimport { set as setPhase } from '../phase';\nconst DOCUMENT_NAME = '#document';\nexport class Document extends Element {\n    defaultView;\n    documentElement;\n    body;\n    // Internal variables.\n    postMessage;\n    addGlobalEventListener;\n    removeGlobalEventListener;\n    [58 /* TransferrableKeys.allowTransfer */] = true;\n    constructor(global) {\n        super(9 /* NodeType.DOCUMENT_NODE */, DOCUMENT_NAME, HTML_NAMESPACE, null);\n        // Element uppercases its nodeName, but Document doesn't.\n        this.nodeName = DOCUMENT_NAME;\n        this.documentElement = this; // TODO(choumx): Should be the <html> element.\n        this.defaultView = Object.assign(global, {\n            document: this,\n            addEventListener: this.addEventListener.bind(this),\n            removeEventListener: this.removeEventListener.bind(this),\n        });\n    }\n    /**\n     * Observing the Document indicates it's attached to a main thread\n     * version of the document.\n     *\n     * Each mutation needs to be transferred, synced values need to propagate.\n     */\n    [59 /* TransferrableKeys.observe */]() {\n        setPhase(1 /* Phase.Hydrating */);\n        propagateEvents(this.defaultView);\n        propagateSyncValues(this.defaultView);\n        propagateResize(this.defaultView);\n    }\n    /**\n     * Hydrate\n     * @param strings\n     * @param skeleton\n     */\n    [64 /* TransferrableKeys.hydrateNode */](strings, skeleton) {\n        switch (skeleton[0 /* TransferrableKeys.nodeType */]) {\n            case 3 /* NodeType.TEXT_NODE */:\n                return new Text(strings[skeleton[5 /* TransferrableKeys.textContent */]], this, skeleton[7 /* TransferrableKeys.index */]);\n            case 8 /* NodeType.COMMENT_NODE */:\n                return new Comment(strings[skeleton[5 /* TransferrableKeys.textContent */]], this, skeleton[7 /* TransferrableKeys.index */]);\n            default:\n                const namespaceURI = strings[skeleton[6 /* TransferrableKeys.namespaceURI */]] || HTML_NAMESPACE;\n                const localName = strings[skeleton[1 /* TransferrableKeys.localOrNodeName */]];\n                const constructor = NS_NAME_TO_CLASS[`${namespaceURI}:${localName}`] || HTMLElement;\n                const node = new constructor(1 /* NodeType.ELEMENT_NODE */, localName, namespaceURI, this, skeleton[7 /* TransferrableKeys.index */]);\n                (skeleton[2 /* TransferrableKeys.attributes */] || []).forEach((attribute) => \n                // AttributeNamespaceURI = strings[attribute[0]] !== 'null' ? strings[attribute[0]] : HTML_NAMESPACE\n                node.setAttributeNS(strings[attribute[0]] !== 'null' ? strings[attribute[0]] : HTML_NAMESPACE, strings[attribute[1]], strings[attribute[2]]));\n                (skeleton[4 /* TransferrableKeys.childNodes */] || []).forEach((child) => node.appendChild(this[64 /* TransferrableKeys.hydrateNode */](strings, child)));\n                return node;\n        }\n    }\n    createElement(name) {\n        return this.createElementNS(HTML_NAMESPACE, toLower(name));\n    }\n    createElementNS(namespaceURI, localName) {\n        const constructor = NS_NAME_TO_CLASS[`${namespaceURI}:${localName}`] || HTMLElement;\n        return new constructor(1 /* NodeType.ELEMENT_NODE */, localName, namespaceURI, this);\n    }\n    /**\n     * Note: Unlike DOM, Event subclasses (e.g. MouseEvent) are not instantiated based on `type`.\n     * @param type\n     */\n    createEvent(type) {\n        return new Event(type, { bubbles: false, cancelable: false });\n    }\n    createTextNode(text) {\n        return new Text(text, this);\n    }\n    createComment(text) {\n        return new Comment(text, this);\n    }\n    createDocumentFragment() {\n        return new DocumentFragment(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementById\n     * @return Element with matching id attribute.\n     */\n    getElementById(id) {\n        return matchChildElement(this.body, (element) => element.id === id);\n    }\n}\n//# sourceMappingURL=Document.js.map","import { Document } from './dom/Document';\nexport function createDocument() {\n    const win = {};\n    return new Document(win);\n}\n//# sourceMappingURL=server-lib.js.map"],"names":["toLower","value","toLowerCase","toUpper","toUpperCase","containsIndexOf","pos","keyValueString","key","tagNameConditionPredicate","tagNames","element","includes","tagName","elementPredicate","node","nodeType","matchChildrenElements","conditionPredicate","matchingElements","childNodes","forEach","child","push","matchChildElement","returnValue","children","some","grandChildMatch","matchNearestParent","parentNode","matchAttrReference","attrSelector","equalPos","indexOf","selectorLength","length","caseInsensitive","charAt","endPos","equalSuffix","possibleSuffixes","attrString","substring","rawValue","rawAttrValue","getAttribute","casedValue","casedAttrValue","split","startsWith","endsWith","hasAttribute","mapping","Map","get","index","store","transfer","document","mutation","observers","pendingMutations","matchesIndex","observerTarget","target","pushMutation","observer","record","pushRecord","Promise","resolve","then","callback","takeRecords","mutate","transferable","t","propagate","property","Node","constructor","nodeName","ownerDocument","overrideIndex","isConnected","textContent","getTextContent","childNode","firstChild","lastChild","nextSibling","parentChildNodes","previousSibling","hasChildNodes","contains","otherNode","insertBefore","referenceNode","slice","appendChild","remove","splice","addedNodes","type","removeChild","exists","removedNodes","replaceChild","newChild","oldChild","replaceWith","nodes","parent","nodeIterator","currentNode","createTextNode","ParentNode","filter","childElementCount","firstElementChild","find","lastElementChild","querySelector","selector","matches","querySelectorAll","selectorBracketIndexes","selectorHasAttr","elementSelector","matcher","id","substr","classList","localName","WHITESPACE_REGEX","synchronizedAccessor","defineOn","accessorKey","propertyName","Object","defineProperty","prototype","enumerable","configurable","set","DOMTokenList","attributeName","bind","join","collection","oldValue","newValue","trim","item","token","add","tokens","Array","from","Set","concat","replace","newToken","delete","toggle","force","test","TypeError","undefined","namespaceURI","storeString","toString","attributes","map","attr","name","matchPredicate","CSSStyleDeclaration","getPropertyValue","removeProperty","mutated","cssText","setProperty","stringValue","values","reflectProperties","properties","pair","defaultValue","keywords","isBooleanAttribute","attributeValue","castableValue","Number","String","setAttribute","removeAttribute","HTML_NAMESPACE","SVG_NAMESPACE","arr_back","arr","kMarkupPattern","kAttributePattern","kSelfClosingElements","AREA","BASE","BR","COL","HR","IMG","INPUT","LINK","META","PARAM","SOURCE","TRACK","WBR","kElementsClosedByOpening","LI","DT","DD","P","ADDRESS","ARTICLE","ASIDE","BLOCKQUOTE","DETAILS","DIV","DL","FIELDSET","FIGCAPTION","FIGURE","FOOTER","FORM","H1","H2","H3","H4","H5","H6","HEADER","MAIN","NAV","OL","PRE","SECTION","TABLE","UL","RT","RP","OPTGROUP","OPTION","THEAD","TBODY","TFOOT","TR","TD","TH","kElementsClosedByClosing","A","B","I","kBlockTextElements","SCRIPT","NOSCRIPT","STYLE","parse","data","rootElement","root","createElementNS","currentParent","currentNamespace","stack","lastTextPos","match","tagsClosed","Error","exec","commentContents","beginningSlash","matchAttributes","endSlash","text","decodeEntities","lastIndex","createComment","normalizedTagName","pop","childToAppend","attMatch","attrName","attrValue","closeMarkup","valid","wrapper","RESERVED_CHARACTERS","__proto__","amp","lt","gt","quot","html","s","numericEntity","namedEntity","code","parseInt","isNaN","fromCodePoint","Event","opts","bubbles","cancelable","cancelBubble","currentTarget","defaultPrevented","eventPhase","isTrusted","timeStamp","scoped","pageX","pageY","offsetX","offsetY","touches","changedTouches","stopPropagation","stopImmediatePropagation","preventDefault","initEvent","targetFromTransfer","event","touchListFromTransfer","touchListKeys","keys","list","touchListKey","numericKey","transferredTouch","identifier","screenX","screenY","clientX","clientY","global","addGlobalEventListener","dispatchEvent","assign","keyCode","getPreviousElementSibling","parentNodes","i","getNextElementSibling","NS_NAME_TO_CLASS","registerSubclass","subclass","namespace","definePropertyBackedAttributes","sub","create","ElementKind","VOID_ELEMENTS","Element","_classList","style_","kind","VOID","NORMAL","style","previousElementSibling","nextElementSibling","outerHTML","tag","start","attrsToString","contents","innerHTML","n","setAttributeNS","getAttributeNS","removeAttributeNS","hasAttributeNS","hasAttributes","valueAsString","propertyBacked","matchAttrPredicate","attributeNamespace","findIndex","getElementsByClassName","names","inputClassList","inputClassName","getElementsByTagName","lowerTagName","_","getElementsByName","stringName","cloneNode","deep","clone","getBoundingClientRectAsync","left","top","right","bottom","x","y","width","height","messageHandler","removeGlobalEventListener","transferredBoundingClientRect","setTimeout","click","scrollIntoView","class","el","HTMLElement","args","form","accessKey","contentEditable","dir","lang","title","draggable","hidden","noModule","spellcheck","translate","HTMLAnchorElement","_relList","relList","href","rel","hreflang","media","HTMLButtonElement","formAction","formEnctype","formMethod","formTarget","autofocus","disabled","f32","Float32Array","u16","Uint16Array","buffer","isSmallInt","num","serializeTransferrableObject","serialized","arg","isArray","serializedArray","serializedObject","CanvasGradient","addColorStop","offset","color","arguments","CanvasPattern","setTransform","OffscreenCanvasPolyfill","canvas","context","getContext","contextType","OffscreenCanvasRenderingContext2DPolyfill","canvasElement","lineDash","objectIndex","fnName","createObjectReference","objectId","creationMethod","creationArgs","clearRect","w","h","fillRect","strokeRect","roundRect","radii","lineWidth","fillText","maxWidth","moveTo","lineTo","closePath","stroke","restore","save","resetTransform","rotate","angle","transform","a","b","c","d","e","f","scale","globalAlpha","globalCompositeOperation","imageSmoothingQuality","fillStyle","strokeStyle","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","beginPath","strokeText","textAlign","textBaseline","lineCap","lineDashOffset","lineJoin","miterLimit","arc","radius","startAngle","endAngle","anticlockwise","arcTo","x1","y1","x2","y2","direction","font","ellipse","radiusX","radiusY","rotation","bezierCurveTo","cp1x","cp1y","cp2x","cp2y","rect","quadraticCurveTo","cpx","cpy","imageSmoothingEnabled","setLineDash","getLineDash","clip","pathOrFillRule","fillRule","fill","transformOrA","bOrC","cOrD","dOrE","eOrF","createLinearGradient","x0","y0","gradientId","createRadialGradient","r0","r1","createPattern","image","repetition","patternId","drawImage","dx","dy","createImageData","getImageData","putImageData","isPointInPath","isPointInStroke","measureText","indexTracker","retrieveImageBitmap","callIndex","transferredImageBitmap","FakeNativeCanvasPattern","instance","pattern","deferredUpgrades","WeakMap","CanvasRenderingContext2DShim","queue","implementation","upgraded","polyfillUsed","unresolvedCalls","goodImplementation","OffscreenCanvas","defaultView","getOffscreenCanvasAsync","deferred","isTestMode","upgradePromise","transferredOffscreenCanvas","maybeUpgradeImplementation","degradeImplementation","flushQueue","call","isSetter","delegateFunc","delegateSetter","delegateGetter","segments","ImageBitmap","fakePattern","antiClockwise","path","pathOrX","xOrY","yOrFillRule","imagedataOrWidth","sx","sy","sw","sh","imageData","dirtyX","dirtyY","dirtyWidth","dirtyHeight","HTMLCanvasElement","HTMLDataElement","HTMLDataListElement","options","HTMLEmbedElement","src","MATCHING_CHILD_ELEMENT_TAGNAMES","HTMLFormControlsCollectionMixin","HTMLFieldSetElement","HTMLFormElement","elements","method","action","enctype","acceptCharset","autocomplete","autocapitalize","HTMLIFrameElement","_sandbox","sandbox","allow","allowFullscreen","csp","referrerPolicy","srcdoc","HTMLImageElement","alt","crossOrigin","isMap","sizes","srcset","useMap","HTMLInputLabelsMixin","for","HTMLInputElement","dirtyValue","valueAsDate","date","stringToDate","invalid","getTime","Date","dateToString","valueAsNumber","NaN","checked","getFullYear","m","getMonth","getDate","str","components","accept","defaultChecked","dirName","formEncType","max","maxLength","min","multiple","placeholder","readOnly","required","size","step","HTMLLabelElement","control","htmlFor","getElementById","HTMLLinkElement","as","HTMLMapElement","areas","HTMLMeterElement","high","low","optimum","HTMLModElement","cite","datetime","HTMLOListElement","reversed","HTMLOptionElement","label","selected","defaultSelected","HTMLProgressElement","position","HTMLQuoteElement","HTMLScriptElement","charset","async","defer","isOptionPredicate","isSelectedOptionPredicate","HTMLSelectElement","selectedIndex","firstSelectedChild","selectedOptions","HTMLSourceElement","HTMLStyleElement","HTMLTableCellElement","_headers","headers","cellIndex","abbr","colSpan","rowSpan","scope","HTMLTableColElement","span","removeElement","insertBeforeElementsWithTagName","insertBeforeElement","HTMLTableElement","caption","newElement","tHead","tFoot","rows","tBodies","TABLE_SECTION_TAGNAMES","indexInAncestor","isValidAncestor","HTMLTableRowElement","cells","rowIndex","sectionRowIndex","deleteCell","cell","insertCell","td","createElement","HTMLTableSectionElement","deleteRow","insertRow","tr","HTMLTimeElement","dateTime","CharacterData","nodeValue","Text","splitText","remainderTextNode","insertBeforePosition","insertBeforeNode","Comment","DocumentFragment","createDocumentFragment","sync","innerWidth","innerHeight","DOCUMENT_NAME","Document","documentElement","body","postMessage","addEventListener","removeEventListener","propagateEvents","propagateSyncValues","propagateResize","strings","skeleton","attribute","createEvent","createDocument","win"],"mappings":"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"}