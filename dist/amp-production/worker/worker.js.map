{"version":3,"file":"worker.js","sources":["../../../output/worker-thread/strings.js","../../../output/worker-thread/nodes.js","../../../output/worker-thread/MutationTransfer.js","../../../output/worker-thread/MutationObserver.js","../../../output/worker-thread/dom/elementSibling.js","../../../output/worker-thread/dom/ParentNode.js","../../../output/utils.js","../../../output/worker-thread/dom/DOMTokenList.js","../../../output/third_party/html-parser/html-parser.js","../../../output/worker-thread/dom/Element.js","../../../output/worker-thread/serializeTransferrableObject.js","../../../output/worker-thread/canvas/canvas-utils.js","../../../output/worker-thread/Storage.js","../../../output/worker-thread/long-task.js","../../../output/worker-thread/phase.js","../../../output/worker-thread/amp/amp.js","../../../output/worker-thread/function.js","../../../output/worker-thread/dom/Node.js","../../../output/worker-thread/dom/CharacterData.js","../../../output/worker-thread/dom/Comment.js","../../../output/worker-thread/amp/delete-globals.js","../../../output/worker-thread/dom/matchElements.js","../../../output/worker-thread/dom/Attr.js","../../../output/worker-thread/css/CSSStyleDeclaration.js","../../../output/worker-thread/dom/enhanceElement.js","../../../output/worker-thread/Event.js","../../../output/transfer/TransferrableNodes.js","../../../output/worker-thread/dom/HTMLElement.js","../../../output/worker-thread/dom/HTMLAnchorElement.js","../../../output/worker-thread/dom/HTMLButtonElement.js","../../../output/worker-thread/canvas/CanvasGradient.js","../../../output/worker-thread/canvas/CanvasPattern.js","../../../output/worker-thread/canvas/OffscreenCanvasPolyfill.js","../../../output/worker-thread/canvas/FakeNativeCanvasPattern.js","../../../output/worker-thread/canvas/CanvasRenderingContext2D.js","../../../output/worker-thread/dom/HTMLCanvasElement.js","../../../output/worker-thread/dom/HTMLDataElement.js","../../../output/worker-thread/dom/HTMLDataListElement.js","../../../output/worker-thread/dom/HTMLEmbedElement.js","../../../output/worker-thread/dom/HTMLFormControlsMixin.js","../../../output/worker-thread/dom/HTMLFieldSetElement.js","../../../output/worker-thread/dom/HTMLFormElement.js","../../../output/worker-thread/dom/HTMLIFrameElement.js","../../../output/worker-thread/dom/HTMLImageElement.js","../../../output/worker-thread/dom/HTMLInputLabelsMixin.js","../../../output/worker-thread/dom/HTMLInputElement.js","../../../output/worker-thread/dom/HTMLLabelElement.js","../../../output/worker-thread/dom/HTMLLinkElement.js","../../../output/worker-thread/dom/HTMLMapElement.js","../../../output/worker-thread/dom/HTMLMeterElement.js","../../../output/worker-thread/dom/HTMLModElement.js","../../../output/worker-thread/dom/HTMLOListElement.js","../../../output/worker-thread/dom/HTMLOptionElement.js","../../../output/worker-thread/dom/HTMLProgressElement.js","../../../output/worker-thread/dom/HTMLQuoteElement.js","../../../output/worker-thread/dom/HTMLScriptElement.js","../../../output/worker-thread/dom/HTMLSelectElement.js","../../../output/worker-thread/dom/HTMLSourceElement.js","../../../output/worker-thread/dom/HTMLStyleElement.js","../../../output/worker-thread/dom/HTMLTableCellElement.js","../../../output/worker-thread/dom/HTMLTableColElement.js","../../../output/worker-thread/dom/HTMLTableElement.js","../../../output/worker-thread/dom/HTMLTableRowElement.js","../../../output/worker-thread/dom/HTMLTableSectionElement.js","../../../output/worker-thread/dom/HTMLTimeElement.js","../../../output/worker-thread/dom/Text.js","../../../output/worker-thread/dom/DocumentFragment.js","../../../output/worker-thread/dom/Document.js","../../../output/worker-thread/SyncValuePropagation.js","../../../output/worker-thread/ResizePropagation.js","../../../output/worker-thread/AnimationFrame.js","../../../output/worker-thread/dom/SVGElement.js","../../../output/worker-thread/index.amp.js","../../../output/worker-thread/initialize.js","../../../output/worker-thread/initialize-storage.js"],"sourcesContent":["let count = 0;\nlet transfer = [];\nconst mapping = new Map();\n/**\n * Stores a string in mapping and returns the index of the location.\n * @param value string to store\n * @return location in map\n */\nexport function store(value) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (mapping.has(value)) {\n        // Safe to cast since we verified the mapping contains the value\n        return mapping.get(value);\n    }\n    mapping.set(value, count);\n    transfer.push(value);\n    return count++;\n}\n/**\n * Retrieve the index for a string (mostly used for tests).\n * @param value string value we need to know the index of\n * @returns index in the map for the string\n */\nexport function getForTesting(value) {\n    return mapping.get(value);\n}\nexport function getForTestingPartial(value) {\n    const found = Array.from(mapping.keys()).find((str) => str.includes(value));\n    if (found) {\n        return mapping.get(found);\n    }\n}\n/**\n * Returns strings registered but not yet transferred.\n * Side effect: Resets the transfer array to default value, to prevent passing the same values multiple times.\n */\nexport function consume() {\n    const strings = transfer;\n    transfer = [];\n    return strings;\n}\n//# sourceMappingURL=strings.js.map","import { phase } from './phase';\nlet count = 0;\nlet transfer = [];\nconst mapping = new Map();\n/**\n * Override the store for a node during the initialization phase.\n * @param node Node to store and modify with index\n * @param override Override number to use as the identifier.\n *\n * NOTE: THIS IS ONLY TO BE USED DURING INITIALIZATION.\n */\nexport function storeOverride(node, override) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (phase === 0 /* Phase.Initializing */) {\n        mapping.set((node[7 /* TransferrableKeys.index */] = override), node);\n        count = Math.max(count, override);\n    }\n    return override;\n}\n/**\n * Stores a node in mapping, and makes the index available on the Node directly.\n * @param node Node to store and modify with index\n * @return index Node was stored with in mapping\n */\nexport function store(node) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (node[7 /* TransferrableKeys.index */] !== undefined) {\n        return node[7 /* TransferrableKeys.index */];\n    }\n    mapping.set((node[7 /* TransferrableKeys.index */] = ++count), node);\n    if (phase > 0 /* Phase.Initializing */) {\n        // After Initialization, include all future dom node creation into the list for next transfer.\n        transfer.push(node);\n    }\n    return count;\n}\n/**\n * Retrieves a node based on an index.\n * @param index location in map to retrieve a Node for\n * @return either the Node represented in index position, or null if not available.\n */\nexport function get(index) {\n    // mapping has a 1 based index, since on first store we ++count before storing.\n    return (!!index && mapping.get(index)) || null;\n}\n/**\n * Returns nodes registered but not yet transferred.\n * Side effect: Resets the transfer array to default value, to prevent passing the same values multiple times.\n */\nexport function consume() {\n    const copy = transfer;\n    transfer = [];\n    return copy;\n}\n//# sourceMappingURL=nodes.js.map","import { consume as consumeNodes } from './nodes';\nimport { consume as consumeStrings } from './strings';\nimport { phase, set as setPhase } from './phase';\nlet pending = false;\nlet pendingMutations = [];\n// TODO(choumx): Change `mutation` to Array<Uint16> to prevent casting errors e.g. integer underflow, precision loss.\nexport function transfer(document, mutation) {\n    if (process.env.SERVER) {\n        return;\n    }\n    if (phase > 0 /* Phase.Initializing */ && document[58 /* TransferrableKeys.allowTransfer */]) {\n        pending = true;\n        pendingMutations = pendingMutations.concat(mutation);\n        Promise.resolve().then((_) => {\n            if (pending) {\n                const nodes = new Uint16Array(consumeNodes().reduce((acc, node) => acc.concat(node[8 /* TransferrableKeys.creationFormat */]), [])).buffer;\n                const mutations = new Uint16Array(pendingMutations).buffer;\n                document.postMessage({\n                    [54 /* TransferrableKeys.phase */]: phase,\n                    [12 /* TransferrableKeys.type */]: phase === 2 /* Phase.Mutating */ ? 3 /* MessageType.MUTATE */ : 2 /* MessageType.HYDRATE */,\n                    [37 /* TransferrableKeys.nodes */]: nodes,\n                    [41 /* TransferrableKeys.strings */]: consumeStrings(),\n                    [36 /* TransferrableKeys.mutations */]: mutations,\n                }, [nodes, mutations]);\n                pendingMutations = [];\n                pending = false;\n                setPhase(2 /* Phase.Mutating */);\n            }\n        });\n    }\n}\n//# sourceMappingURL=MutationTransfer.js.map","import { transfer } from './MutationTransfer';\nconst observers = [];\nlet pendingMutations = false;\n/**\n * @param observerTarget\n * @param target\n */\nconst matchesIndex = (observerTarget, target) => {\n    return !!observerTarget && observerTarget[7 /* TransferrableKeys.index */] === target[7 /* TransferrableKeys.index */];\n};\n/**\n * @param observer\n * @param record\n */\nconst pushMutation = (observer, record) => {\n    observer.pushRecord(record);\n    if (!pendingMutations) {\n        pendingMutations = true;\n        Promise.resolve().then(() => {\n            pendingMutations = false;\n            observers.forEach((observer) => observer.callback(observer.takeRecords()));\n        });\n    }\n};\n/**\n * @param document\n * @param record\n * @param transferable\n */\nexport function mutate(document, record, transferable) {\n    // Post-message `transferable` to the main thread to apply mutations.\n    transfer(document, transferable);\n    // The MutationRecord is only used for external callers of MutationObserver.\n    observers.forEach((observer) => {\n        for (let t = record.target; t; t = t.parentNode) {\n            if (matchesIndex(observer.target, t)) {\n                pushMutation(observer, record);\n                break;\n            }\n        }\n    });\n}\nexport class MutationObserver {\n    callback;\n    [42 /* TransferrableKeys.records */] = [];\n    target;\n    options;\n    constructor(callback) {\n        this.callback = callback;\n    }\n    /**\n     * Register the MutationObserver instance to observe a Nodes mutations.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     * @param target Node to observe DOM mutations\n     */\n    observe(target, options) {\n        this.disconnect();\n        this.target = target;\n        this.options = options || {};\n        observers.push(this);\n    }\n    /**\n     * Stop the MutationObserver instance from observing a Nodes mutations.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     */\n    disconnect() {\n        this.target = null;\n        const index = observers.indexOf(this);\n        if (index >= 0) {\n            observers.splice(index, 1);\n        }\n    }\n    /**\n     * Empties the MutationObserver instance's record queue and returns what was in there.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     * @return Mutation Records stored on this MutationObserver instance.\n     */\n    takeRecords() {\n        const records = this[42 /* TransferrableKeys.records */];\n        return records.splice(0, records.length);\n    }\n    /**\n     * NOTE: This method doesn't exist on native MutationObserver.\n     * @param record MutationRecord to store for this instance.\n     */\n    pushRecord(record) {\n        this[42 /* TransferrableKeys.records */].push(record);\n    }\n}\n//# sourceMappingURL=MutationObserver.js.map","export function getPreviousElementSibling(node) {\n    let parentNodes = node.parentNode && node.parentNode.childNodes;\n    if (!parentNodes) {\n        return null;\n    }\n    for (let i = parentNodes.indexOf(node) - 1; i >= 0; i--) {\n        let node = parentNodes[i];\n        if (node.nodeType === 1 /* NodeType.ELEMENT_NODE */) {\n            return node;\n        }\n    }\n    return null;\n}\nexport function getNextElementSibling(node) {\n    let parentNodes = node.parentNode && node.parentNode.childNodes;\n    if (!parentNodes) {\n        return null;\n    }\n    for (let i = parentNodes.indexOf(node) + 1; i < parentNodes.length; i++) {\n        let node = parentNodes[i];\n        if (node.nodeType === 1 /* NodeType.ELEMENT_NODE */) {\n            return node;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=elementSibling.js.map","import { elementPredicate, matchAttrReference, matchChildrenElements } from './matchElements';\nimport { Node } from './Node';\nimport { containsIndexOf, toLower } from '../../utils';\n/*\nNormally ParentNode is implemented as a mixin, but since the Node class is an abstract\nthis makes it hard to build a mixin that recieves a base of the representations of Node needing\nthe mixed in functionality.\n\n// Partially implemented Mixin Methods\n// Both Element.querySelector() and Element.querySelector() are only implemented for the following simple selectors:\n// - Element selectors\n// - ID selectors\n// - Class selectors\n// - Attribute selectors\n// Element.querySelector() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n// Element.querySelectorAll() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n*/\nexport class ParentNode extends Node {\n    /**\n     * Getter returning children of an Element that are Elements themselves.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/children\n     * @return Element objects that are children of this ParentNode, omitting all of its non-element nodes.\n     */\n    get children() {\n        return this.childNodes.filter(elementPredicate);\n    }\n    /**\n     * Getter returning the number of child elements of a Element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/childElementCount\n     * @return number of child elements of the given Element.\n     */\n    get childElementCount() {\n        return this.children.length;\n    }\n    /**\n     * Getter returning the first Element in Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/firstElementChild\n     * @return first childNode that is also an element.\n     */\n    get firstElementChild() {\n        return this.childNodes.find(elementPredicate) || null;\n    }\n    /**\n     * Getter returning the last Element in Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/lastElementChild\n     * @return first childNode that is also an element.\n     */\n    get lastElementChild() {\n        const children = this.children;\n        return children[children.length - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n     * @param selector the selector we are trying to match for.\n     * @return Element with matching selector.\n     */\n    querySelector(selector) {\n        const matches = querySelectorAll(this, selector);\n        return matches ? matches[0] : null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n     * @param selector the selector we are trying to match for.\n     * @return Elements with matching selector.\n     */\n    querySelectorAll(selector) {\n        return querySelectorAll(this, selector);\n    }\n}\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n * @param node the node to filter results under.\n * @param selector the selector we are trying to match for.\n * @return Element with matching selector.\n */\nfunction querySelectorAll(node, selector) {\n    // As per spec: https://dom.spec.whatwg.org/#scope-match-a-selectors-string\n    // First, parse the selector\n    const selectorBracketIndexes = [selector.indexOf('['), selector.indexOf(']')];\n    const selectorHasAttr = containsIndexOf(selectorBracketIndexes[0]) && containsIndexOf(selectorBracketIndexes[1]);\n    const elementSelector = selectorHasAttr ? selector.substring(0, selectorBracketIndexes[0]) : selector;\n    const attrSelector = selectorHasAttr ? selector.substring(selectorBracketIndexes[0], selectorBracketIndexes[1] + 1) : null;\n    // TODO(nainar): Parsing selectors is needed when we add in more complex selectors.\n    // Second, find all the matching elements on the Document\n    let matcher;\n    if (selector[0] === '[') {\n        matcher = (element) => matchAttrReference(selector, element);\n    }\n    else if (elementSelector[0] === '#') {\n        matcher = selectorHasAttr\n            ? (element) => element.id === elementSelector.substr(1) && matchAttrReference(attrSelector, element)\n            : (element) => element.id === elementSelector.substr(1);\n    }\n    else if (elementSelector[0] === '.') {\n        matcher = selectorHasAttr\n            ? (element) => element.classList.contains(elementSelector.substr(1)) && matchAttrReference(attrSelector, element)\n            : (element) => element.classList.contains(elementSelector.substr(1));\n    }\n    else {\n        matcher = selectorHasAttr\n            ? (element) => element.localName === toLower(elementSelector) && matchAttrReference(attrSelector, element)\n            : (element) => element.localName === toLower(elementSelector);\n    }\n    // Third, filter to return elements that exist within the querying element's descendants.\n    return matcher\n        ? matchChildrenElements(node[45 /* TransferrableKeys.scopingRoot */], matcher).filter((element) => node !== element && node.contains(element))\n        : [];\n}\n//# sourceMappingURL=ParentNode.js.map","export const toLower = (value) => value.toLowerCase();\nexport const toUpper = (value) => value.toUpperCase();\nexport const containsIndexOf = (pos) => pos !== -1;\nexport const keyValueString = (key, value) => `${key}=\"${value}\"`;\n//# sourceMappingURL=utils.js.map","import { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\nconst WHITESPACE_REGEX = /\\s/;\n/**\n * Synchronizes the string getter/setter with the actual DOMTokenList instance.\n * @param defineOn Element or class extension to define getter/setter pair for token list access.\n * @param accessorKey Key used to access DOMTokenList directly from specific element.\n * @param propertyName Key used to access DOMTokenList as string getter/setter.\n */\nexport function synchronizedAccessor(defineOn, accessorKey, propertyName) {\n    Object.defineProperty(defineOn.prototype, propertyName, {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return this[accessorKey].value;\n        },\n        set(value) {\n            this[accessorKey].value = value;\n        },\n    });\n}\nexport class DOMTokenList {\n    [43 /* TransferrableKeys.tokens */] = [];\n    [13 /* TransferrableKeys.target */];\n    [18 /* TransferrableKeys.attributeName */];\n    [44 /* TransferrableKeys.storeAttribute */];\n    /**\n     * The DOMTokenList interface represents a set of space-separated tokens.\n     * It is indexed beginning with 0 as with JavaScript Array objects and is case-sensitive.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList\n     * @param target Specific Element instance to modify when value is changed.\n     * @param attributeName Name of the attribute used by Element to access DOMTokenList.\n     */\n    constructor(target, attributeName) {\n        this[13 /* TransferrableKeys.target */] = target;\n        this[18 /* TransferrableKeys.attributeName */] = attributeName;\n        this[44 /* TransferrableKeys.storeAttribute */] = target[44 /* TransferrableKeys.storeAttribute */].bind(target);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/value\n     * @return string representation of tokens (space delimitted).\n     */\n    get value() {\n        return this[43 /* TransferrableKeys.tokens */].join(' ');\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/length\n     * @return integer representing the number of objects stored in the object.\n     */\n    get length() {\n        return this[43 /* TransferrableKeys.tokens */].length;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/value\n     * @param collection String of values space delimited to replace the current DOMTokenList with.\n     */\n    set value(collection) {\n        const oldValue = this.value;\n        const newValue = collection.trim();\n        // Replace current tokens with new tokens.\n        this[43 /* TransferrableKeys.tokens */].splice(0, this[43 /* TransferrableKeys.tokens */].length, ...(newValue !== '' ? newValue.split(/\\s+/) : ''));\n        this[67 /* TransferrableKeys.mutated */](oldValue, newValue);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/item\n     * @param index number from DOMTokenList entities to retrieve value of\n     * @return value stored at the index requested, or undefined if beyond known range.\n     */\n    item(index) {\n        return this[43 /* TransferrableKeys.tokens */][index];\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/contains\n     * @param token value the DOMTokenList is tested for.\n     * @return boolean indicating if the token is contained by the DOMTokenList.\n     */\n    contains(token) {\n        return this[43 /* TransferrableKeys.tokens */].includes(token);\n    }\n    /**\n     * Add a token or tokens to the list.\n     * Note: All duplicates are removed, and the first token's position with the value is preserved.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/add\n     * @param tokens each token is a string to add to a TokenList.\n     */\n    add(...tokens) {\n        const oldValue = this.value;\n        this[43 /* TransferrableKeys.tokens */].splice(0, this[43 /* TransferrableKeys.tokens */].length, ...Array.from(new Set(this[43 /* TransferrableKeys.tokens */].concat(tokens))));\n        this[67 /* TransferrableKeys.mutated */](oldValue, this.value);\n    }\n    /**\n     * Remove a token or tokens from the list.\n     * Note: All duplicates are removed, and the first token's position with the value is preserved.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/remove\n     * @param tokens each token is a string to remove from a TokenList.\n     */\n    remove(...tokens) {\n        const oldValue = this.value;\n        this[43 /* TransferrableKeys.tokens */].splice(0, this[43 /* TransferrableKeys.tokens */].length, ...Array.from(new Set(this[43 /* TransferrableKeys.tokens */].filter((token) => !tokens.includes(token)))));\n        this[67 /* TransferrableKeys.mutated */](oldValue, this.value);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/replace\n     * @param token\n     * @param newToken\n     */\n    replace(token, newToken) {\n        if (!this[43 /* TransferrableKeys.tokens */].includes(token)) {\n            return;\n        }\n        const oldValue = this.value;\n        const set = new Set(this[43 /* TransferrableKeys.tokens */]);\n        if (token !== newToken) {\n            set.delete(token);\n            if (newToken !== '') {\n                set.add(newToken);\n            }\n        }\n        this[43 /* TransferrableKeys.tokens */].splice(0, this[43 /* TransferrableKeys.tokens */].length, ...Array.from(set));\n        this[67 /* TransferrableKeys.mutated */](oldValue, this.value);\n    }\n    /**\n     * Adds or removes a token based on its presence in the token list.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/toggle\n     * @param token string to add or remove from the token list\n     * @param force changes toggle into a one way-only operation. true => token added. false => token removed.\n     * @return true if the token is in the list following mutation, false if not.\n     */\n    toggle(token, force) {\n        if (WHITESPACE_REGEX.test(token)) {\n            throw new TypeError('Uncaught DOMException');\n        }\n        if (!this[43 /* TransferrableKeys.tokens */].includes(token)) {\n            if (force === undefined || !!force) {\n                // Note, this will add the token if force is undefined (not passed into the method), or truthy.\n                this.add(token);\n            }\n            return true;\n        }\n        else if (!force) {\n            // Note, this will remove the token if force is undefined (not passed into the method), or falsey.\n            this.remove(token);\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Report tokenList mutations to MutationObserver.\n     * @param oldValue value before mutation\n     * @param value value after mutation\n     * @private\n     */\n    [67 /* TransferrableKeys.mutated */](oldValue, value) {\n        this[44 /* TransferrableKeys.storeAttribute */](this[13 /* TransferrableKeys.target */].namespaceURI, this[18 /* TransferrableKeys.attributeName */], value);\n        mutate(this[13 /* TransferrableKeys.target */].ownerDocument, {\n            type: 0 /* MutationRecordType.ATTRIBUTES */,\n            target: this[13 /* TransferrableKeys.target */],\n            attributeName: this[18 /* TransferrableKeys.attributeName */],\n            value,\n            oldValue,\n        }, [\n            0 /* TransferrableMutationType.ATTRIBUTES */,\n            this[13 /* TransferrableKeys.target */][7 /* TransferrableKeys.index */],\n            storeString(this[18 /* TransferrableKeys.attributeName */]),\n            0,\n            value !== null ? storeString(value) + 1 : 0,\n        ]);\n    }\n}\n//# sourceMappingURL=DOMTokenList.js.map","import { SVG_NAMESPACE, HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { toLower, toUpper } from '../../utils';\nfunction arr_back(arr) {\n    return arr[arr.length - 1];\n}\n// https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\nconst kMarkupPattern = /<!--([^]*)-->|<(\\/?)([a-z][-.0-9_a-z]*)([^>]*?)(\\/?)>/gi;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\nconst kAttributePattern = /(^|\\s)([^\\s\"'>\\/=]+)\\s*=\\s*(\"([^\"]+)\"|'([^']+)'|(\\S+))/gi;\nconst kSelfClosingElements = {\n    AREA: true,\n    BASE: true,\n    BR: true,\n    COL: true,\n    HR: true,\n    IMG: true,\n    INPUT: true,\n    LINK: true,\n    META: true,\n    PARAM: true,\n    SOURCE: true,\n    TRACK: true,\n    WBR: true,\n};\nconst kElementsClosedByOpening = {\n    LI: { LI: true },\n    DT: { DT: true, DD: true },\n    DD: { DD: true, DT: true },\n    P: {\n        ADDRESS: true,\n        ARTICLE: true,\n        ASIDE: true,\n        BLOCKQUOTE: true,\n        DETAILS: true,\n        DIV: true,\n        DL: true,\n        FIELDSET: true,\n        FIGCAPTION: true,\n        FIGURE: true,\n        FOOTER: true,\n        FORM: true,\n        H1: true,\n        H2: true,\n        H3: true,\n        H4: true,\n        H5: true,\n        H6: true,\n        HEADER: true,\n        HR: true,\n        MAIN: true,\n        NAV: true,\n        OL: true,\n        P: true,\n        PRE: true,\n        SECTION: true,\n        TABLE: true,\n        UL: true,\n    },\n    RT: { RT: true, RP: true },\n    RP: { RT: true, RP: true },\n    OPTGROUP: { OPTGROUP: true },\n    OPTION: { OPTION: true, OPTGROUP: true },\n    THEAD: { TBODY: true, TFOOT: true },\n    TBODY: { TBODY: true, TFOOT: true },\n    TR: { TR: true },\n    TD: { TD: true, TH: true },\n    TH: { TD: true, TH: true },\n};\nconst kElementsClosedByClosing = {\n    LI: { UL: true, OL: true },\n    A: { DIV: true },\n    B: { DIV: true },\n    I: { DIV: true },\n    P: { DIV: true },\n    TD: { TR: true, TABLE: true },\n    TH: { TR: true, TABLE: true },\n};\nconst kBlockTextElements = {\n    SCRIPT: true,\n    NOSCRIPT: true,\n    STYLE: true,\n    PRE: true,\n};\n/**\n * Parses HTML and returns a root element\n * Parse a chuck of HTML source.\n * @param  {string} data HTML in string format.\n * @param {!Element} root The element to use as root.\n * @return {Element}      root element\n */\nexport function parse(data, rootElement) {\n    const ownerDocument = rootElement.ownerDocument;\n    const root = ownerDocument.createElementNS(rootElement.namespaceURI, rootElement.localName);\n    let currentParent = root;\n    let currentNamespace = root.namespaceURI;\n    const stack = [root];\n    let lastTextPos = 0;\n    let match;\n    data = '<q>' + data + '</q>';\n    const tagsClosed = [];\n    if (currentNamespace !== SVG_NAMESPACE && currentNamespace !== HTML_NAMESPACE) {\n        throw new Error('Namespace not supported: ' + currentNamespace);\n    }\n    while ((match = kMarkupPattern.exec(data))) {\n        const commentContents = match[1]; // <!--contents-->\n        const beginningSlash = match[2]; // ... </ ...\n        const tagName = match[3];\n        const matchAttributes = match[4];\n        const endSlash = match[5]; // ... /> ...\n        if (lastTextPos < match.index) {\n            // if has content\n            const text = data.slice(lastTextPos, match.index);\n            currentParent.appendChild(ownerDocument.createTextNode(decodeEntities(text)));\n        }\n        lastTextPos = kMarkupPattern.lastIndex;\n        if (commentContents !== undefined) {\n            // this is a comment\n            currentParent.appendChild(ownerDocument.createComment(commentContents));\n            continue;\n        }\n        const normalizedTagName = toUpper(tagName);\n        if (normalizedTagName === 'SVG') {\n            currentNamespace = beginningSlash ? HTML_NAMESPACE : SVG_NAMESPACE;\n        }\n        if (!beginningSlash) {\n            // not </ tags\n            if (!endSlash && kElementsClosedByOpening[currentParent.tagName]) {\n                if (kElementsClosedByOpening[currentParent.tagName][normalizedTagName]) {\n                    stack.pop();\n                    currentParent = arr_back(stack);\n                }\n            }\n            const childToAppend = ownerDocument.createElementNS(currentNamespace, currentNamespace === HTML_NAMESPACE ? toLower(tagName) : tagName);\n            for (let attMatch; (attMatch = kAttributePattern.exec(matchAttributes));) {\n                const attrName = attMatch[2];\n                const attrValue = attMatch[4] || attMatch[5] || attMatch[6];\n                childToAppend.setAttribute(attrName, attrValue);\n            }\n            currentParent = currentParent.appendChild(childToAppend);\n            stack.push(currentParent);\n            if (kBlockTextElements[normalizedTagName]) {\n                // a little test to find next </script> or </style> ...\n                const closeMarkup = '</' + toLower(normalizedTagName) + '>';\n                const index = data.indexOf(closeMarkup, kMarkupPattern.lastIndex);\n                if (index == -1) {\n                    throw new Error('Close markup not found.');\n                }\n                else {\n                    kMarkupPattern.lastIndex = index;\n                }\n            }\n        }\n        if (tagName === 'foreignObject') {\n            currentNamespace = beginningSlash ? SVG_NAMESPACE : HTML_NAMESPACE;\n        }\n        if (beginningSlash || endSlash || kSelfClosingElements[normalizedTagName]) {\n            // </ or /> or <br> etc.\n            while (true) {\n                if (stack.length <= 1) {\n                    break;\n                }\n                if (toUpper(currentParent.nodeName) == normalizedTagName) {\n                    stack.pop();\n                    currentParent = arr_back(stack);\n                    break;\n                }\n                else {\n                    // Trying to close current tag, and move on\n                    if (kElementsClosedByClosing[currentParent.tagName]) {\n                        if (kElementsClosedByClosing[currentParent.tagName][normalizedTagName]) {\n                            stack.pop();\n                            currentParent = arr_back(stack);\n                            continue;\n                        }\n                    }\n                    // Use aggressive strategy to handle unmatching markups.\n                    break;\n                }\n            }\n        }\n    }\n    for (const node of stack) {\n        if (tagsClosed[tagsClosed.length - 1] == node.nodeName) {\n            stack.pop();\n            tagsClosed.pop();\n            currentParent = arr_back(stack);\n        }\n        else\n            break;\n    }\n    const valid = stack.length === 1;\n    if (!valid) {\n        throw new Error('Attempting to parse invalid HTML content.');\n    }\n    const wrapper = root.firstChild;\n    if (wrapper) {\n        wrapper.parentNode = null;\n        wrapper.childNodes.forEach((node) => {\n            node.parentNode = null;\n        });\n        return wrapper;\n    }\n    throw new Error('Attempting to parse invalid HTML.');\n}\n/**\n * Decodes HTML Entities.\n * Currently only works for numeric entities, as well as the 4 named entities\n * required for encoding HTML: &, \", <, >.\n * See https://developer.mozilla.org/en-US/docs/Glossary/Entity.\n *\n * TODO: create solution for other named entities.\n */\nconst RESERVED_CHARACTERS = {\n    __proto__: null,\n    amp: '&',\n    lt: '<',\n    gt: '>',\n    quot: '\"',\n};\nfunction decodeEntities(html) {\n    return html.replace(/&(?:(#x?[\\da-f]+)|([\\w]+));?/gi, function (s, numericEntity, namedEntity) {\n        // Numeric entity\n        if (numericEntity) {\n            let code = numericEntity.charAt(1).toLowerCase() === 'x' ? parseInt(numericEntity.substr(2), 16) : parseInt(numericEntity.substr(1), 10);\n            // 1114111 is the largest valid unicode codepoint.\n            if (isNaN(code) || code > 1114111) {\n                return s;\n            }\n            return String.fromCodePoint(code) || s;\n        }\n        // Named entity. Only HTML reserved entities are currently supported.\n        if (namedEntity) {\n            return RESERVED_CHARACTERS[namedEntity.toLowerCase()] || s;\n        }\n        return s;\n    });\n}\n//# sourceMappingURL=html-parser.js.map","import { ParentNode } from './ParentNode';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nimport { toString as attrsToString, matchPredicate as matchAttrPredicate } from './Attr';\nimport { mutate } from '../MutationObserver';\nimport { toLower, toUpper } from '../../utils';\nimport { CSSStyleDeclaration } from '../css/CSSStyleDeclaration';\nimport { matchChildrenElements } from './matchElements';\nimport { reflectProperties } from './enhanceElement';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\nimport { HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { parse } from '../../third_party/html-parser/html-parser';\nimport { propagate } from './Node';\nimport { Event } from '../Event';\nimport { getNextElementSibling, getPreviousElementSibling } from './elementSibling';\nexport const NS_NAME_TO_CLASS = {};\nexport const registerSubclass = (localName, subclass, namespace = HTML_NAMESPACE) => (NS_NAME_TO_CLASS[`${namespace}:${localName}`] = subclass);\nexport function definePropertyBackedAttributes(defineOn, attributes) {\n    const sub = Object.create(defineOn[46 /* TransferrableKeys.propertyBackedAttributes */]);\n    defineOn[46 /* TransferrableKeys.propertyBackedAttributes */] = Object.assign(sub, attributes);\n}\n/**\n * There are six kinds of elements, each having different start/close tag semantics.\n * @see https://html.spec.whatwg.org/multipage/syntax.html#elements-2\n */\nvar ElementKind;\n(function (ElementKind) {\n    ElementKind[ElementKind[\"NORMAL\"] = 0] = \"NORMAL\";\n    ElementKind[ElementKind[\"VOID\"] = 1] = \"VOID\";\n    // The following element kinds have no special handling in worker-dom yet\n    // and are lumped into the NORMAL kind.\n    /*\n    FOREIGN,\n    TEMPLATE,\n    RAW_TEXT,\n    ESCAPABLE_RAW,\n    */\n})(ElementKind || (ElementKind = {}));\n/**\n * @see https://html.spec.whatwg.org/multipage/syntax.html#void-elements\n */\nconst VOID_ELEMENTS = ['AREA', 'BASE', 'BR', 'COL', 'EMBED', 'HR', 'IMG', 'INPUT', 'LINK', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR'];\nexport class Element extends ParentNode {\n    _classList;\n    static [46 /* TransferrableKeys.propertyBackedAttributes */] = {\n        class: [(el) => el.classList.value, (el, value) => (el.classList.value = value)],\n        style: [(el) => el.cssText, (el, value) => (el.cssText = value)],\n    };\n    localName;\n    attributes = [];\n    namespaceURI;\n    style_;\n    /**\n     * Element \"kind\" dictates certain behaviors e.g. start/end tag semantics.\n     * @see https://html.spec.whatwg.org/multipage/syntax.html#elements-2\n     */\n    kind;\n    constructor(nodeType, localName, namespaceURI, ownerDocument, overrideIndex) {\n        super(nodeType, toUpper(localName), ownerDocument, overrideIndex);\n        this.namespaceURI = namespaceURI || HTML_NAMESPACE;\n        this.localName = localName;\n        this.kind = VOID_ELEMENTS.includes(this.tagName) ? ElementKind.VOID : ElementKind.NORMAL;\n        this[8 /* TransferrableKeys.creationFormat */] = [\n            this[7 /* TransferrableKeys.index */],\n            this.nodeType,\n            storeString(this.localName),\n            0,\n            this.namespaceURI === null ? 0 : storeString(this.namespaceURI),\n        ];\n    }\n    // We lazily instantiate the CSSStyleDeclaration to keep element creation cheap\n    // See https://github.com/ampproject/worker-dom/pull/1096 for context.\n    get style() {\n        if (!this.style_) {\n            this.style_ = new CSSStyleDeclaration(this);\n        }\n        return this.style_;\n    }\n    // Unimplemented properties\n    // Element.clientHeight – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientHeight\n    // Element.clientLeft – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientLeft\n    // Element.clientTop – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientTop\n    // Element.clientWidth – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientWidth\n    // set Element.innerHTML – https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n    // Element.prefix – https://developer.mozilla.org/en-US/docs/Web/API/Element/prefix\n    // Element.scrollHeight – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight\n    // Element.scrollLeft – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeft\n    // Element.scrollLeftMax – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeftMax\n    // Element.scrollTop – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTop\n    // Element.scrollTopMax – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTopMax\n    // Element.scrollWidth – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollWidth\n    // Element.shadowRoot – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/shadowRoot\n    // Element.slot – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/slot\n    // Element.tabStop – https://developer.mozilla.org/en-US/docs/Web/API/Element/tabStop\n    // Element.undoManager – https://developer.mozilla.org/en-US/docs/Web/API/Element/undoManager\n    // Element.undoScope – https://developer.mozilla.org/en-US/docs/Web/API/Element/undoScope\n    // Unimplemented Methods\n    // Element.attachShadow() – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow\n    // Element.animate() – https://developer.mozilla.org/en-US/docs/Web/API/Element/animate\n    // Element.closest() – https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n    // Element.getAttributeNames() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNames\n    // Element.getBoundingClientRect() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    // Element.getClientRects() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getClientRects\n    // Element.getElementsByTagNameNS() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagNameNS\n    // Element.insertAdjacentElement() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentElement\n    // Element.insertAdjacentHTML() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentHTML\n    // Element.insertAdjacentText() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentText\n    // Element.matches() – https://developer.mozilla.org/en-US/docs/Web/API/Element/matches\n    // Element.releasePointerCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/releasePointerCapture\n    // Element.requestFullscreen() – https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n    // Element.requestPointerLock() – https://developer.mozilla.org/en-US/docs/Web/API/Element/requestPointerLock\n    // Element.scrollIntoView() – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n    // Element.setCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/setCapture\n    // Element.setPointerCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/setPointerCapture\n    // Partially implemented Mixin Methods\n    // Both Element.querySelector() and Element.querySelector() are only implemented for the following simple selectors:\n    // - Element selectors\n    // - ID selectors\n    // - Class selectors\n    // - Attribute selectors\n    // Element.querySelector() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n    // Element.querySelectorAll() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n    // Mixins not implemented\n    // Slotable.assignedSlot – https://developer.mozilla.org/en-US/docs/Web/API/Slotable/assignedSlot\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/previousElementSibling\n     * Returns the Element immediately prior to the specified one in its parent's children list,\n     * or null if the specified element is the first one in the list.\n     */\n    get previousElementSibling() {\n        return getPreviousElementSibling(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/nextElementSibling\n     * Returns the Element immediately following the specified one in its parent's children list,\n     * or null if the specified element is the last one in the list.\n     */\n    get nextElementSibling() {\n        return getNextElementSibling(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/outerHTML\n     * @return string representation of serialized HTML describing the Element and its descendants.\n     */\n    get outerHTML() {\n        const tag = this.localName || this.tagName;\n        const start = `<${[tag, attrsToString(this.attributes)].join(' ').trim()}>`;\n        const contents = this.innerHTML;\n        if (!contents) {\n            if (this.kind === ElementKind.VOID) {\n                // Void elements e.g. <input> only have a start tag (unless children are added programmatically).\n                // https://html.spec.whatwg.org/multipage/syntax.html#void-elements\n                return start;\n            }\n        }\n        return start + contents + `</${tag}>`;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n     * @return string representation of serialized HTML describing the Element's descendants.\n     */\n    get innerHTML() {\n        const childNodes = this.childNodes;\n        if (childNodes.length) {\n            return childNodes\n                .map((child) => {\n                switch (child.nodeType) {\n                    case 3 /* NodeType.TEXT_NODE */:\n                        return child.textContent;\n                    case 8 /* NodeType.COMMENT_NODE */:\n                        return `<!--${child.textContent}-->`;\n                    default:\n                        return child.outerHTML;\n                }\n            })\n                .join('');\n        }\n        return '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n     * @param html The raw html string to parse.\n     */\n    set innerHTML(html) {\n        const root = parse(html, this);\n        // remove previous children\n        this.childNodes.forEach((n) => {\n            propagate(n, 'isConnected', false);\n            propagate(n, 45 /* TransferrableKeys.scopingRoot */, n);\n        });\n        mutate(this.ownerDocument, {\n            removedNodes: this.childNodes,\n            type: 2 /* MutationRecordType.CHILD_LIST */,\n            target: this,\n        }, [\n            2 /* TransferrableMutationType.CHILD_LIST */,\n            this[7 /* TransferrableKeys.index */],\n            0,\n            0,\n            0,\n            this.childNodes.length,\n            ...this.childNodes.map((node) => node[7 /* TransferrableKeys.index */]),\n        ]);\n        this.childNodes = [];\n        // add new children\n        root.childNodes.forEach((child) => this.appendChild(child));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @param text new text replacing all childNodes content.\n     */\n    set textContent(text) {\n        // TODO(KB): Investigate removing all children in a single .splice to childNodes.\n        this.childNodes.slice().forEach((child) => child.remove());\n        this.appendChild(this.ownerDocument.createTextNode(text));\n    }\n    /**\n     * Getter returning the text representation of Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @return text from all childNodes.\n     */\n    get textContent() {\n        return this.getTextContent();\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/tagName\n     * @return string tag name (i.e 'div')\n     */\n    get tagName() {\n        return this.nodeName;\n    }\n    /**\n     * Sets the value of an attribute on this element using a null namespace.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute\n     * @param name attribute name\n     * @param value attribute value\n     */\n    setAttribute(name, value) {\n        this.setAttributeNS(HTML_NAMESPACE, name, value);\n    }\n    /**\n     * Get the value of an attribute on this Element with the null namespace.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute\n     * @param name attribute name\n     * @return value of a specified attribute on the element, or null if the attribute doesn't exist.\n     */\n    getAttribute(name) {\n        return this.getAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * Remove an attribute from this element in the null namespace.\n     *\n     * Method returns void, so it is not chainable.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute\n     * @param name attribute name\n     */\n    removeAttribute(name) {\n        this.removeAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttribute\n     * @param name attribute name\n     * @return Boolean indicating if the element has the specified attribute.\n     */\n    hasAttribute(name) {\n        return this.hasAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttributes\n     * @return Boolean indicating if the element has any attributes.\n     */\n    hasAttributes() {\n        return this.attributes.length > 0;\n    }\n    /**\n     * Sets the value of an attribute on this Element with the provided namespace.\n     *\n     * If the attribute already exists, the value is updated; otherwise a new attribute is added with the specified name and value.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttributeNS\n     * @param namespaceURI\n     * @param name attribute name\n     * @param value attribute value\n     */\n    setAttributeNS(namespaceURI, name, value) {\n        const valueAsString = String(value);\n        const propertyBacked = this.constructor[46 /* TransferrableKeys.propertyBackedAttributes */][name];\n        if (propertyBacked !== undefined) {\n            if (!this.attributes.find(matchAttrPredicate(namespaceURI, name))) {\n                this.attributes.push({\n                    namespaceURI,\n                    name,\n                    value: valueAsString,\n                });\n            }\n            propertyBacked[1](this, valueAsString);\n            return;\n        }\n        const oldValue = this[44 /* TransferrableKeys.storeAttribute */](namespaceURI, name, valueAsString);\n        mutate(this.ownerDocument, {\n            type: 0 /* MutationRecordType.ATTRIBUTES */,\n            target: this,\n            attributeName: name,\n            attributeNamespace: namespaceURI,\n            value: valueAsString,\n            oldValue,\n        }, [\n            0 /* TransferrableMutationType.ATTRIBUTES */,\n            this[7 /* TransferrableKeys.index */],\n            storeString(name),\n            storeString(namespaceURI),\n            value !== null ? storeString(valueAsString) + 1 : 0,\n        ]);\n    }\n    [44 /* TransferrableKeys.storeAttribute */](namespaceURI, name, value) {\n        const attr = this.attributes.find(matchAttrPredicate(namespaceURI, name));\n        const oldValue = (attr && attr.value) || '';\n        if (attr) {\n            attr.value = value;\n        }\n        else {\n            this.attributes.push({\n                namespaceURI,\n                name,\n                value,\n            });\n        }\n        return oldValue;\n    }\n    /**\n     * Get the value of an attribute on this Element with the specified namespace.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     * @return value of a specified attribute on the element, or null if the attribute doesn't exist.\n     */\n    getAttributeNS(namespaceURI, name) {\n        const attr = this.attributes.find(matchAttrPredicate(namespaceURI, name));\n        if (attr) {\n            const propertyBacked = this.constructor[46 /* TransferrableKeys.propertyBackedAttributes */][name];\n            return propertyBacked !== undefined ? propertyBacked[0](this) : attr.value;\n        }\n        return null;\n    }\n    /**\n     * Remove an attribute from this element in the specified namespace.\n     *\n     * Method returns void, so it is not chainable.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     */\n    removeAttributeNS(namespaceURI, name) {\n        const index = this.attributes.findIndex(matchAttrPredicate(namespaceURI, name));\n        if (index >= 0) {\n            const oldValue = this.attributes[index].value;\n            this.attributes.splice(index, 1);\n            mutate(this.ownerDocument, {\n                type: 0 /* MutationRecordType.ATTRIBUTES */,\n                target: this,\n                attributeName: name,\n                attributeNamespace: namespaceURI,\n                oldValue,\n            }, [\n                0 /* TransferrableMutationType.ATTRIBUTES */,\n                this[7 /* TransferrableKeys.index */],\n                storeString(name),\n                storeString(namespaceURI),\n                0, // 0 means no value\n            ]);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttributeNS\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     * @return Boolean indicating if the element has the specified attribute.\n     */\n    hasAttributeNS(namespaceURI, name) {\n        return this.attributes.some(matchAttrPredicate(namespaceURI, name));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByClassName\n     * @param names contains one more more classnames to match on. Multiples are space seperated, indicating an AND operation.\n     * @return Element array with matching classnames\n     */\n    getElementsByClassName(names) {\n        const inputClassList = names.split(' ');\n        // TODO(KB) – Compare performance of [].some(value => DOMTokenList.contains(value)) and regex.\n        // const classRegex = new RegExp(classNames.split(' ').map(name => `(?=.*${name})`).join(''));\n        return matchChildrenElements(this, (element) => inputClassList.some((inputClassName) => element.classList.contains(inputClassName)));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagName\n     * @param tagName the qualified name to look for. The special string \"*\" represents all elements.\n     * @return Element array with matching tagnames\n     */\n    getElementsByTagName(tagName) {\n        const lowerTagName = toLower(tagName);\n        return matchChildrenElements(this, tagName === '*'\n            ? (_) => true\n            : (element) => (element.namespaceURI === HTML_NAMESPACE ? element.localName === lowerTagName : element.tagName === tagName));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByName\n     * @param name value of name attribute elements must have to be returned\n     * @return Element array with matching name attributes\n     */\n    getElementsByName(name) {\n        const stringName = '' + name;\n        return matchChildrenElements(this, (element) => element.getAttribute('name') === stringName);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @param deep boolean determines if the clone should include a recursive copy of all childNodes.\n     * @return Element containing all current attributes and potentially childNode clones of the Element requested to be cloned.\n     */\n    cloneNode(deep = false) {\n        const clone = this.ownerDocument.createElementNS(this.namespaceURI, this.namespaceURI === HTML_NAMESPACE ? toLower(this.tagName) : this.tagName);\n        this.attributes.forEach((attr) => clone.setAttribute(attr.name, attr.value));\n        if (deep) {\n            this.childNodes.forEach((child) => clone.appendChild(child.cloneNode(deep)));\n        }\n        return clone;\n    }\n    /**\n     * Return the ClientRect for an Element once determined by the main thread.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n     * @return Promise<ClientRect>\n     *\n     * Note: Edge and IE11 do not return the x/y value, but top/left are equivalent. Normalize the values here.\n     */\n    getBoundingClientRectAsync() {\n        const defaultValue = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0,\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n        return new Promise((resolve) => {\n            const messageHandler = ({ data }) => {\n                if (data[12 /* TransferrableKeys.type */] === 6 /* MessageType.GET_BOUNDING_CLIENT_RECT */ &&\n                    data[13 /* TransferrableKeys.target */][0] === this[7 /* TransferrableKeys.index */]) {\n                    this.ownerDocument.removeGlobalEventListener('message', messageHandler);\n                    const transferredBoundingClientRect = data[38 /* TransferrableKeys.data */];\n                    resolve({\n                        top: transferredBoundingClientRect[0],\n                        right: transferredBoundingClientRect[1],\n                        bottom: transferredBoundingClientRect[2],\n                        left: transferredBoundingClientRect[3],\n                        width: transferredBoundingClientRect[4],\n                        height: transferredBoundingClientRect[5],\n                        x: transferredBoundingClientRect[0],\n                        y: transferredBoundingClientRect[3],\n                    });\n                }\n            };\n            if (!this.ownerDocument.addGlobalEventListener || !this.isConnected) {\n                // Elements run within Node runtimes are missing addEventListener as a global.\n                // In this case, treat the return value the same as a disconnected node.\n                resolve(defaultValue);\n            }\n            else {\n                this.ownerDocument.addGlobalEventListener('message', messageHandler);\n                transfer(this.ownerDocument, [5 /* TransferrableMutationType.GET_BOUNDING_CLIENT_RECT */, this[7 /* TransferrableKeys.index */]]);\n                setTimeout(resolve, 500, defaultValue); // TODO: Why a magical constant, define and explain.\n            }\n        });\n    }\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/click\n    click() {\n        const event = new Event('click', {});\n        event.target = this;\n        this.dispatchEvent(event);\n    }\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n    scrollIntoView() {\n        if (this.isConnected) {\n            transfer(this.ownerDocument, [14 /* TransferrableMutationType.SCROLL_INTO_VIEW */, this[7 /* TransferrableKeys.index */]]);\n        }\n    }\n    get classList() {\n        return this._classList || (this._classList = new DOMTokenList(this, 'class'));\n    }\n}\nsynchronizedAccessor(Element, 'classList', 'className');\nreflectProperties([{ id: [''] }], Element);\n//# sourceMappingURL=Element.js.map","import { store } from './strings';\nconst f32 = new Float32Array(1);\nconst u16 = new Uint16Array(f32.buffer);\nfunction isSmallInt(num) {\n    u16[0] = num;\n    // If the Uint16Array doesn't coerce it to another value, that means it fits\n    // into a Uint16Array.\n    return u16[0] === num;\n}\n/**\n * Serializes arguments into a Uint16 compatible format.\n *\n * The serialization format uses a variable length tuple, with the first item\n * being the encoded representation's type and any number of values afterwards.\n *\n * @param args The arguments to serialize\n */\nexport function serializeTransferrableObject(args) {\n    const serialized = [];\n    for (let i = 0; i < args.length; i++) {\n        const arg = args[i];\n        if (typeof arg === 'number') {\n            if (isSmallInt(arg)) {\n                serialized.push(1 /* TransferrableObjectType.SmallInt */, arg);\n            }\n            else {\n                f32[0] = arg;\n                serialized.push(2 /* TransferrableObjectType.Float */, u16[0], u16[1]);\n            }\n            continue;\n        }\n        if (typeof arg === 'string') {\n            serialized.push(3 /* TransferrableObjectType.String */, store(arg));\n            continue;\n        }\n        if (Array.isArray(arg)) {\n            serialized.push(4 /* TransferrableObjectType.Array */, arg.length);\n            const serializedArray = serializeTransferrableObject(arg);\n            for (let i = 0; i < serializedArray.length; i++) {\n                serialized.push(serializedArray[i]);\n            }\n            continue;\n        }\n        if (typeof arg === 'object') {\n            const serializedObject = arg[68 /* TransferrableKeys.serializeAsTransferrableObject */]();\n            for (let i = 0; i < serializedObject.length; i++) {\n                serialized.push(serializedObject[i]);\n            }\n            continue;\n        }\n        throw new Error('Cannot serialize argument.');\n    }\n    return serialized;\n}\n//# sourceMappingURL=serializeTransferrableObject.js.map","import { transfer } from '../MutationTransfer';\nlet indexTracker = 0;\nexport function retrieveImageBitmap(image, canvas) {\n    const callIndex = indexTracker++;\n    const document = canvas.ownerDocument;\n    return new Promise((resolve) => {\n        const messageHandler = ({ data }) => {\n            if (data[12 /* TransferrableKeys.type */] === 10 /* MessageType.IMAGE_BITMAP_INSTANCE */ && data[73 /* TransferrableKeys.callIndex */] === callIndex) {\n                document.removeGlobalEventListener('message', messageHandler);\n                const transferredImageBitmap = data[38 /* TransferrableKeys.data */];\n                resolve(transferredImageBitmap);\n            }\n        };\n        if (!document.addGlobalEventListener) {\n            throw new Error('addGlobalEventListener is not defined.');\n        }\n        else {\n            document.addGlobalEventListener('message', messageHandler);\n            transfer(canvas.ownerDocument, [11 /* TransferrableMutationType.IMAGE_BITMAP_INSTANCE */, image[7 /* TransferrableKeys.index */], callIndex]);\n        }\n    });\n}\n//# sourceMappingURL=canvas-utils.js.map","import { store } from './strings';\nimport { transfer } from './MutationTransfer';\n/**\n * @param document\n * @param location\n * @param data\n */\nexport function createStorage(document, location, data) {\n    const storage = Object.assign(Object.create(null), data);\n    // Define properties on a prototype-less object instead of a class so that\n    // it behaves more like normal objects, e.g. bracket notation and JSON.stringify.\n    const define = Object.defineProperty;\n    define(storage, 'length', {\n        get() {\n            return Object.keys(this).length;\n        },\n    });\n    define(storage, 'key', {\n        value(n) {\n            const keys = Object.keys(this);\n            return n >= 0 && n < keys.length ? keys[n] : null;\n        },\n    });\n    define(storage, 'getItem', {\n        value(key) {\n            const value = this[key];\n            return value ? value : null;\n        },\n    });\n    define(storage, 'setItem', {\n        value(key, value) {\n            const stringValue = String(value);\n            this[key] = stringValue;\n            transfer(document, [12 /* TransferrableMutationType.STORAGE */, 2 /* GetOrSet.SET */, location, store(key) + 1, store(stringValue) + 1]);\n        },\n    });\n    define(storage, 'removeItem', {\n        value(key) {\n            delete this[key];\n            transfer(document, [\n                12 /* TransferrableMutationType.STORAGE */,\n                2 /* GetOrSet.SET */,\n                location,\n                store(key) + 1,\n                0, // value == 0 represents deletion.\n            ]);\n        },\n    });\n    define(storage, 'clear', {\n        value() {\n            Object.keys(this).forEach((key) => {\n                delete this[key];\n            });\n            transfer(document, [\n                12 /* TransferrableMutationType.STORAGE */,\n                2 /* GetOrSet.SET */,\n                location,\n                0,\n                0, // value == 0 represents deletion.\n            ]);\n        },\n    });\n    return storage;\n}\n//# sourceMappingURL=Storage.js.map","import { transfer } from './MutationTransfer';\nexport function wrap(target, func) {\n    return function () {\n        return execute(target, Promise.resolve(func.apply(null, arguments)));\n    };\n}\nfunction execute(target, promise) {\n    // Start the task.\n    transfer(target.ownerDocument, [6 /* TransferrableMutationType.LONG_TASK_START */, target[7 /* TransferrableKeys.index */]]);\n    return promise.then((result) => {\n        // Complete the task.\n        transfer(target.ownerDocument, [7 /* TransferrableMutationType.LONG_TASK_END */, target[7 /* TransferrableKeys.index */]]);\n        return result;\n    }, (reason) => {\n        // Complete the task.\n        transfer(target.ownerDocument, [7 /* TransferrableMutationType.LONG_TASK_END */, target[7 /* TransferrableKeys.index */]]);\n        throw reason;\n    });\n}\n//# sourceMappingURL=long-task.js.map","export let phase = 0 /* Phase.Initializing */;\nexport const set = (newPhase) => (phase = newPhase);\n//# sourceMappingURL=phase.js.map","import { store } from '../strings';\nimport { transfer } from '../MutationTransfer';\nexport class AMP {\n    document;\n    constructor(document) {\n        this.document = document;\n    }\n    /**\n     * Returns a promise that resolves with the value of `key`.\n     * @param key\n     */\n    getState(key = '') {\n        return new Promise((resolve) => {\n            const messageHandler = (event) => {\n                const message = event.data;\n                if (message[12 /* TransferrableKeys.type */] !== 11 /* MessageType.GET_STORAGE */) {\n                    return;\n                }\n                // TODO: There is a race condition here if there are multiple concurrent\n                // getState(k) messages in flight, where k is the same value.\n                const storageMessage = message;\n                if (storageMessage[74 /* TransferrableKeys.storageKey */] !== key) {\n                    return;\n                }\n                this.document.removeGlobalEventListener('message', messageHandler);\n                const value = storageMessage[21 /* TransferrableKeys.value */];\n                resolve(value);\n            };\n            this.document.addGlobalEventListener('message', messageHandler);\n            transfer(this.document, [12 /* TransferrableMutationType.STORAGE */, 1 /* GetOrSet.GET */, 2 /* StorageLocation.AmpState */, /* key */ store(key) + 1, /* value */ 0]);\n            setTimeout(resolve, 500, null); // TODO: Why a magical constant, define and explain.\n        });\n    }\n    /**\n     * Deep-merges `state` into the existing state.\n     * @param state\n     */\n    setState(state) {\n        // Stringify `state` so it can be post-messaged as a transferrable.\n        let stringified;\n        try {\n            stringified = JSON.stringify(state);\n        }\n        catch (e) {\n            throw new Error(`AMP.setState only accepts valid JSON as input.`);\n        }\n        transfer(this.document, [12 /* TransferrableMutationType.STORAGE */, 2 /* GetOrSet.SET */, 2 /* StorageLocation.AmpState */, /* key */ 0, /* value */ store(stringified) + 1]);\n    }\n}\n//# sourceMappingURL=amp.js.map","import { transfer } from './MutationTransfer';\nimport { store } from './strings';\nconst exportedFunctions = {};\nexport function callFunctionMessageHandler(event, document) {\n    const msg = event.data;\n    if (msg[12 /* TransferrableKeys.type */] !== 12 /* MessageType.FUNCTION */) {\n        return;\n    }\n    const functionMessage = msg;\n    const fnIdentifier = functionMessage[77 /* TransferrableKeys.functionIdentifier */];\n    const fnArguments = JSON.parse(functionMessage[78 /* TransferrableKeys.functionArguments */]);\n    const index = functionMessage[7 /* TransferrableKeys.index */];\n    const fn = exportedFunctions[fnIdentifier];\n    if (!fn) {\n        transfer(document, [\n            13 /* TransferrableMutationType.FUNCTION_CALL */,\n            2 /* ResolveOrReject.REJECT */,\n            index,\n            store(JSON.stringify(`[worker-dom]: Exported function \"${fnIdentifier}\" could not be found.`)),\n        ]);\n        return;\n    }\n    Promise.resolve(fn) // Forcing promise flows allows us to skip a try/catch block.\n        .then((f) => f.apply(null, fnArguments))\n        .then((value) => {\n        transfer(document, [13 /* TransferrableMutationType.FUNCTION_CALL */, 1 /* ResolveOrReject.RESOLVE */, index, store(JSON.stringify(value))]);\n    }, (err) => {\n        const errorMessage = JSON.stringify(err.message || err);\n        transfer(document, [\n            13 /* TransferrableMutationType.FUNCTION_CALL */,\n            2 /* ResolveOrReject.REJECT */,\n            index,\n            store(JSON.stringify(`[worker-dom]: Function \"${fnIdentifier}\" threw: \"${errorMessage}\"`)),\n        ]);\n    });\n}\nexport function exportFunction(name, fn) {\n    if (!name || name === '') {\n        throw new Error(`[worker-dom]: Attempt to export function was missing an identifier.`);\n    }\n    if (typeof fn !== 'function') {\n        throw new Error(`[worker-dom]: Attempt to export non-function failed: (\"${name}\", ${typeof fn}).`);\n    }\n    if (name in exportedFunctions) {\n        throw new Error(`[worker-dom]: Attempt to re-export function failed: \"${name}\".`);\n    }\n    exportedFunctions[name] = fn;\n}\nexport function resetForTesting() {\n    for (const key of Object.keys(exportedFunctions)) {\n        delete exportedFunctions[key];\n    }\n}\n//# sourceMappingURL=function.js.map","import { store as storeNodeMapping, storeOverride as storeOverrideNodeMapping } from '../nodes';\nimport { toLower } from '../../utils';\nimport { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\n/**\n * Propagates a property change for a Node to itself and all childNodes.\n * @param node Node to start applying change to\n * @param property Property to modify\n * @param value New value to apply\n */\nexport const propagate = (node, property, value) => {\n    node[property] = value;\n    node.childNodes.forEach((child) => propagate(child, property, value));\n};\n// https://developer.mozilla.org/en-US/docs/Web/API/Node\n// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\n//\n// Please note, in this implmentation Node doesn't extend EventTarget.\n// This is intentional to reduce the number of classes.\nexport class Node {\n    ownerDocument; // TODO(choumx): Should be a Document.\n    // https://drafts.csswg.org/selectors-4/#scoping-root\n    [45 /* TransferrableKeys.scopingRoot */];\n    nodeType;\n    nodeName;\n    childNodes = [];\n    parentNode = null;\n    isConnected = false;\n    [7 /* TransferrableKeys.index */];\n    [9 /* TransferrableKeys.transferredFormat */];\n    [8 /* TransferrableKeys.creationFormat */];\n    [10 /* TransferrableKeys.handlers */] = {};\n    constructor(nodeType, nodeName, ownerDocument, overrideIndex) {\n        this.nodeType = nodeType;\n        this.nodeName = nodeName;\n        this.ownerDocument = ownerDocument || this;\n        this[45 /* TransferrableKeys.scopingRoot */] = this;\n        if (process.env.SERVER) {\n            return;\n        }\n        this[7 /* TransferrableKeys.index */] = overrideIndex ? storeOverrideNodeMapping(this, overrideIndex) : storeNodeMapping(this);\n        this[9 /* TransferrableKeys.transferredFormat */] = [this[7 /* TransferrableKeys.index */]];\n    }\n    // Unimplemented Properties\n    // Node.baseURI – https://developer.mozilla.org/en-US/docs/Web/API/Node/baseURI\n    // Unimplemented Methods\n    // Node.compareDocumentPosition() – https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n    // Node.getRootNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/getRootNode\n    // Node.isDefaultNamespace() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isDefaultNamespace\n    // Node.isEqualNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isEqualNode\n    // Node.isSameNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isSameNode\n    // Node.lookupPrefix() – https://developer.mozilla.org/en-US/docs/Web/API/Node/lookupPrefix\n    // Node.lookupNamespaceURI() – https://developer.mozilla.org/en-US/docs/Web/API/Node/lookupNamespaceURI\n    // Node.normalize() – https://developer.mozilla.org/en-US/docs/Web/API/Node/normalize\n    // Implemented at Element/Text layer\n    // Node.nodeValue – https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeValue\n    // Node.cloneNode – https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n    /**\n     * Getter returning the text representation of Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @return text from all childNodes.\n     */\n    get textContent() {\n        return this.getTextContent();\n    }\n    /**\n     * Use `this.getTextContent()` instead of `super.textContent` to avoid incorrect or expensive ES5 transpilation.\n     */\n    getTextContent() {\n        let textContent = '';\n        const childNodes = this.childNodes;\n        if (childNodes.length) {\n            childNodes.forEach((childNode) => (textContent += childNode.textContent));\n            return textContent;\n        }\n        return '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/firstChild\n     * @return Node's first child in the tree, or null if the node has no children.\n     */\n    get firstChild() {\n        return this.childNodes[0] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/lastChild\n     * @return The last child of a node, or null if there are no child elements.\n     */\n    get lastChild() {\n        return this.childNodes[this.childNodes.length - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/nextSibling\n     * @return node immediately following the specified one in it's parent's childNodes, or null if one doesn't exist.\n     */\n    get nextSibling() {\n        if (this.parentNode === null) {\n            return null;\n        }\n        const parentChildNodes = this.parentNode.childNodes;\n        return parentChildNodes[parentChildNodes.indexOf(this) + 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/previousSibling\n     * @return node immediately preceding the specified one in its parent's childNodes, or null if the specified node is the first in that list.\n     */\n    get previousSibling() {\n        if (this.parentNode === null) {\n            return null;\n        }\n        const parentChildNodes = this.parentNode.childNodes;\n        return parentChildNodes[parentChildNodes.indexOf(this) - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/hasChildNodes\n     * @return boolean if the Node has childNodes.\n     */\n    hasChildNodes() {\n        return this.childNodes.length > 0;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/contains\n     * @param otherNode\n     * @return whether a Node is a descendant of a given Node\n     */\n    contains(otherNode) {\n        if (otherNode === this) {\n            return true;\n        }\n        if (this.childNodes.length > 0) {\n            if (this.childNodes.includes(this)) {\n                return true;\n            }\n            return this.childNodes.some((child) => child.contains(otherNode));\n        }\n        return false;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/insertBefore\n     * @param child\n     * @param referenceNode\n     * @return child after it has been inserted.\n     */\n    insertBefore(child, referenceNode) {\n        if (child === null || child === this) {\n            // The new child cannot contain the parent.\n            return child;\n        }\n        if (child.nodeType === 11 /* NodeType.DOCUMENT_FRAGMENT_NODE */) {\n            child.childNodes.slice().forEach((node) => this.insertBefore(node, referenceNode));\n        }\n        else if (referenceNode == null) {\n            // When a referenceNode is not valid, appendChild(child).\n            return this.appendChild(child);\n        }\n        else if (this.childNodes.indexOf(referenceNode) >= 0) {\n            // Should only insertBefore direct children of this Node.\n            child.remove();\n            // Removing a child can cause this.childNodes to change, meaning we need to splice from its updated location.\n            this.childNodes.splice(this.childNodes.indexOf(referenceNode), 0, child);\n            this[56 /* TransferrableKeys.insertedNode */](child);\n            mutate(this.ownerDocument, {\n                addedNodes: [child],\n                nextSibling: referenceNode,\n                type: 2 /* MutationRecordType.CHILD_LIST */,\n                target: this,\n            }, [\n                2 /* TransferrableMutationType.CHILD_LIST */,\n                this[7 /* TransferrableKeys.index */],\n                referenceNode[7 /* TransferrableKeys.index */],\n                0,\n                1,\n                0,\n                child[7 /* TransferrableKeys.index */],\n            ]);\n            return child;\n        }\n        return null;\n    }\n    /**\n     * When a Node is inserted, this method is called (and can be extended by other classes)\n     * @param child\n     */\n    [56 /* TransferrableKeys.insertedNode */](child) {\n        child.parentNode = this;\n        propagate(child, 'isConnected', this.isConnected);\n        propagate(child, 45 /* TransferrableKeys.scopingRoot */, this[45 /* TransferrableKeys.scopingRoot */]);\n    }\n    /**\n     * When a node is removed, this method is called (and can be extended by other classes)\n     * @param child\n     */\n    [57 /* TransferrableKeys.removedNode */](child) {\n        child.parentNode = null;\n        propagate(child, 'isConnected', false);\n        propagate(child, 45 /* TransferrableKeys.scopingRoot */, child);\n    }\n    /**\n     * Adds the specified childNode argument as the last child to the current node.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/appendChild\n     * @param child Child Node to append to this Node.\n     * @return Node the appended node.\n     */\n    appendChild(child) {\n        if (child.nodeType === 11 /* NodeType.DOCUMENT_FRAGMENT_NODE */) {\n            child.childNodes.slice().forEach(this.appendChild, this);\n        }\n        else {\n            child.remove();\n            this.childNodes.push(child);\n            this[56 /* TransferrableKeys.insertedNode */](child);\n            const previousSibling = this.childNodes[this.childNodes.length - 2];\n            mutate(this.ownerDocument, {\n                addedNodes: [child],\n                previousSibling,\n                type: 2 /* MutationRecordType.CHILD_LIST */,\n                target: this,\n            }, [\n                2 /* TransferrableMutationType.CHILD_LIST */,\n                this[7 /* TransferrableKeys.index */],\n                0,\n                previousSibling ? previousSibling[7 /* TransferrableKeys.index */] : 0,\n                1,\n                0,\n                child[7 /* TransferrableKeys.index */],\n            ]);\n        }\n        return child;\n    }\n    /**\n     * Removes a child node from the current element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/removeChild\n     * @param child Child Node to remove from this Node.\n     * @return Node removed from the tree or null if the node wasn't attached to this tree.\n     */\n    removeChild(child) {\n        const index = this.childNodes.indexOf(child);\n        const exists = index >= 0;\n        if (exists) {\n            this.childNodes.splice(index, 1);\n            this[57 /* TransferrableKeys.removedNode */](child);\n            mutate(this.ownerDocument, {\n                removedNodes: [child],\n                type: 2 /* MutationRecordType.CHILD_LIST */,\n                target: this,\n            }, [2 /* TransferrableMutationType.CHILD_LIST */, this[7 /* TransferrableKeys.index */], 0, 0, 0, 1, child[7 /* TransferrableKeys.index */]]);\n            return child;\n        }\n        return null;\n    }\n    /**\n     * @param newChild\n     * @param oldChild\n     * @return child that was replaced.\n     * @note `HierarchyRequestError` not handled e.g. newChild is an ancestor of current node.\n     * @see https://dom.spec.whatwg.org/#concept-node-replace\n     */\n    replaceChild(newChild, oldChild) {\n        if (newChild === oldChild ||\n            // In DOM, this throws DOMException: \"The node to be replaced is not a child of this node.\"\n            oldChild.parentNode !== this ||\n            // In DOM, this throws DOMException: \"The new child element contains the parent.\"\n            newChild.contains(this)) {\n            return oldChild;\n        }\n        // If newChild already exists in the DOM, it is first removed.\n        // TODO: Consider using a mutation-free API here to avoid two mutations\n        // per replaceChild() call.\n        newChild.remove();\n        const index = this.childNodes.indexOf(oldChild);\n        this.childNodes.splice(index, 1, newChild);\n        this[57 /* TransferrableKeys.removedNode */](oldChild);\n        this[56 /* TransferrableKeys.insertedNode */](newChild);\n        mutate(this.ownerDocument, {\n            addedNodes: [newChild],\n            removedNodes: [oldChild],\n            type: 2 /* MutationRecordType.CHILD_LIST */,\n            nextSibling: this.childNodes[index + 1],\n            target: this,\n        }, [\n            2 /* TransferrableMutationType.CHILD_LIST */,\n            this[7 /* TransferrableKeys.index */],\n            this.childNodes[index + 1] ? this.childNodes[index + 1][7 /* TransferrableKeys.index */] : 0,\n            0,\n            1,\n            1,\n            newChild[7 /* TransferrableKeys.index */],\n            oldChild[7 /* TransferrableKeys.index */],\n        ]);\n        return oldChild;\n    }\n    /**\n     * Replaces the current node with the provided Array<node|string>.\n     * @param nodes\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/replaceWith\n     */\n    replaceWith(...nodes) {\n        const parent = this.parentNode;\n        let nodeIterator = nodes.length;\n        let currentNode;\n        if (!parent) {\n            return;\n        }\n        if (!nodeIterator) {\n            parent.removeChild(this);\n        }\n        while (nodeIterator--) {\n            currentNode = nodes[nodeIterator];\n            if (typeof currentNode !== 'object') {\n                currentNode = this.ownerDocument.createTextNode(currentNode);\n            }\n            // TODO: Investigate inserting all new nodes in a single operation.\n            if (!nodeIterator) {\n                // currentNode is the first argument (currentNode === arguments[0])\n                parent.replaceChild(currentNode, this);\n            }\n            else {\n                parent.insertBefore(currentNode, this.nextSibling);\n            }\n        }\n    }\n    /**\n     * Removes this Node from the tree it belogs too.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/remove\n     */\n    remove() {\n        if (this.parentNode) {\n            this.parentNode.removeChild(this);\n        }\n    }\n    /**\n     * Add an event listener to callback when a specific event type is dispatched.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n     * @param type Event Type (i.e 'click')\n     * @param handler Function called when event is dispatched.\n     */\n    addEventListener(type, handler, options = {}) {\n        const lowerType = toLower(type);\n        const storedType = storeString(lowerType);\n        const handlers = this[10 /* TransferrableKeys.handlers */][lowerType];\n        let index = 0;\n        if (handlers) {\n            index = handlers.push(handler);\n        }\n        else {\n            this[10 /* TransferrableKeys.handlers */][lowerType] = [handler];\n        }\n        transfer(this.ownerDocument, [\n            4 /* TransferrableMutationType.EVENT_SUBSCRIPTION */,\n            this[7 /* TransferrableKeys.index */],\n            0,\n            1,\n            storedType,\n            index,\n            Number(Boolean(options.capture)),\n            Number(Boolean(options.once)),\n            Number(Boolean(options.passive)),\n            Number(Boolean(options.workerDOMPreventDefault)),\n        ]);\n    }\n    /**\n     * Remove a registered event listener for a specific event type.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n     * @param type Event Type (i.e 'click')\n     * @param handler Function to stop calling when event is dispatched.\n     */\n    removeEventListener(type, handler) {\n        const lowerType = toLower(type);\n        const handlers = this[10 /* TransferrableKeys.handlers */][lowerType];\n        const index = !!handlers ? handlers.indexOf(handler) : -1;\n        if (index >= 0) {\n            handlers.splice(index, 1);\n            transfer(this.ownerDocument, [\n                4 /* TransferrableMutationType.EVENT_SUBSCRIPTION */,\n                this[7 /* TransferrableKeys.index */],\n                1,\n                0,\n                storeString(lowerType),\n                index,\n            ]);\n        }\n    }\n    /**\n     * Dispatch an event for this Node.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent\n     * @param event Event to dispatch to this node and potentially cascade to parents.\n     */\n    dispatchEvent(event) {\n        let target = (event.currentTarget = this);\n        let handlers;\n        let iterator;\n        do {\n            handlers = target && target[10 /* TransferrableKeys.handlers */] && target[10 /* TransferrableKeys.handlers */][toLower(event.type)];\n            if (handlers) {\n                for (iterator = handlers.length; iterator--;) {\n                    if ((handlers[iterator].call(target, event) === false || event[51 /* TransferrableKeys.end */]) && event.cancelable) {\n                        break;\n                    }\n                }\n            }\n        } while (event.bubbles && !(event.cancelable && event[50 /* TransferrableKeys.stop */]) && (target = target && target.parentNode));\n        return !event.defaultPrevented;\n    }\n}\n//# sourceMappingURL=Node.js.map","import { Node } from './Node';\nimport { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\nimport { getNextElementSibling, getPreviousElementSibling } from './elementSibling';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/CharacterData\nexport class CharacterData extends Node {\n    [38 /* TransferrableKeys.data */];\n    constructor(data, nodeType, nodeName, ownerDocument, overrideIndex) {\n        super(nodeType, nodeName, ownerDocument, overrideIndex);\n        this[38 /* TransferrableKeys.data */] = data;\n        this[8 /* TransferrableKeys.creationFormat */] = [this[7 /* TransferrableKeys.index */], nodeType, storeString(nodeName), storeString(data), 0];\n    }\n    // Unimplemented Methods\n    // NonDocumentTypeChildNode.nextElementSibling – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/nextElementSibling\n    // NonDocumentTypeChildNode.previousElementSibling – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/previousElementSibling\n    // CharacterData.appendData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/appendData\n    // CharacterData.deleteData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/deleteData\n    // CharacterData.insertData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/insertData\n    // CharacterData.replaceData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/replaceData\n    // CharacterData.substringData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/substringData\n    /**\n     * @return Returns the string contained in private CharacterData.data\n     */\n    get data() {\n        return this[38 /* TransferrableKeys.data */];\n    }\n    /**\n     * @param value string value to store as CharacterData.data.\n     */\n    set data(value) {\n        const oldValue = this.data;\n        this[38 /* TransferrableKeys.data */] = value;\n        mutate(this.ownerDocument, {\n            target: this,\n            type: 1 /* MutationRecordType.CHARACTER_DATA */,\n            value,\n            oldValue,\n        }, [1 /* TransferrableMutationType.CHARACTER_DATA */, this[7 /* TransferrableKeys.index */], storeString(value)]);\n    }\n    /**\n     * @return Returns the size of the string contained in CharacterData.data\n     */\n    get length() {\n        return this[38 /* TransferrableKeys.data */].length;\n    }\n    /**\n     * @return Returns the string contained in CharacterData.data\n     */\n    get nodeValue() {\n        return this[38 /* TransferrableKeys.data */];\n    }\n    /**\n     * @param value string value to store as CharacterData.data.\n     */\n    set nodeValue(value) {\n        this.data = value;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/previousElementSibling\n     * Returns the Element immediately prior to the specified one in its parent's children list,\n     * or null if the specified element is the first one in the list.\n     */\n    get previousElementSibling() {\n        return getPreviousElementSibling(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/nextElementSibling\n     * Returns the Element immediately following the specified one in its parent's children list,\n     * or null if the specified element is the last one in the list.\n     */\n    get nextElementSibling() {\n        return getNextElementSibling(this);\n    }\n}\n//# sourceMappingURL=CharacterData.js.map","import { CharacterData } from './CharacterData';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/Comment\nexport class Comment extends CharacterData {\n    constructor(data, ownerDocument, overrideIndex) {\n        super(data, 8 /* NodeType.COMMENT_NODE */, '#comment', ownerDocument, overrideIndex);\n    }\n    /**\n     * textContent getter, retrieves underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     */\n    get textContent() {\n        return this.data;\n    }\n    /**\n     * textContent setter, mutates underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     * @param value new value\n     */\n    set textContent(value) {\n        // Mutation Observation is performed by CharacterData.\n        this.nodeValue = value;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @return new Comment Node with the same data as the Comment to clone.\n     */\n    cloneNode() {\n        return this.ownerDocument.createComment(this.data);\n    }\n}\n//# sourceMappingURL=Comment.js.map","const ALLOWLISTED_GLOBALS = {\n    Array: true,\n    ArrayBuffer: true,\n    BigInt: true,\n    BigInt64Array: true,\n    BigUint64Array: true,\n    Boolean: true,\n    Cache: true,\n    CustomEvent: true,\n    DataView: true,\n    Date: true,\n    Error: true,\n    EvalError: true,\n    Event: true,\n    EventTarget: true,\n    Float32Array: true,\n    Float64Array: true,\n    Function: true,\n    Infinity: true,\n    Int16Array: true,\n    Int32Array: true,\n    Int8Array: true,\n    Intl: true,\n    JSON: true,\n    Map: true,\n    Math: true,\n    NaN: true,\n    Number: true,\n    Object: true,\n    Promise: true,\n    Proxy: true,\n    RangeError: true,\n    ReferenceError: true,\n    Reflect: true,\n    RegExp: true,\n    Set: true,\n    String: true,\n    Symbol: true,\n    SyntaxError: true,\n    TextDecoder: true,\n    TextEncoder: true,\n    TypeError: true,\n    URIError: true,\n    URL: true,\n    Uint16Array: true,\n    Uint32Array: true,\n    Uint8Array: true,\n    Uint8ClampedArray: true,\n    WeakMap: true,\n    WeakSet: true,\n    WebAssembly: true,\n    WebSocket: true,\n    XMLHttpRequest: true,\n    atob: true,\n    addEventListener: true,\n    removeEventListener: true,\n    btoa: true,\n    caches: true,\n    clearInterval: true,\n    clearTimeout: true,\n    console: true,\n    decodeURI: true,\n    decodeURIComponent: true,\n    document: true,\n    encodeURI: true,\n    encodeURIComponent: true,\n    escape: true,\n    fetch: true,\n    indexedDB: true,\n    isFinite: true,\n    isNaN: true,\n    location: true,\n    navigator: true,\n    onerror: true,\n    onrejectionhandled: true,\n    onunhandledrejection: true,\n    parseFloat: true,\n    parseInt: true,\n    performance: true,\n    requestAnimationFrame: true,\n    cancelAnimationFrame: true,\n    self: true,\n    setTimeout: true,\n    setInterval: true,\n    unescape: true,\n};\n// Modify global scope by removing disallowed properties.\nexport function deleteGlobals(global) {\n    /**\n     * @param object\n     * @param property\n     * @return True if property was deleted from object. Otherwise, false.\n     */\n    const deleteUnsafe = (object, property) => {\n        if (!ALLOWLISTED_GLOBALS.hasOwnProperty(property)) {\n            try {\n                delete object[property];\n                return true;\n            }\n            catch (e) { }\n        }\n        return false;\n    };\n    // Walk up global's prototype chain and dereference non-allowlisted properties\n    // until EventTarget is reached.\n    let current = global;\n    while (current && current.constructor !== EventTarget) {\n        const deleted = [];\n        const failedToDelete = [];\n        Object.getOwnPropertyNames(current).forEach((prop) => {\n            if (deleteUnsafe(current, prop)) {\n                deleted.push(prop);\n            }\n            else {\n                failedToDelete.push(prop);\n            }\n        });\n        console.info(`Removed ${deleted.length} references from`, current, ':', deleted);\n        if (failedToDelete.length) {\n            console.info(`Failed to remove ${failedToDelete.length} references from`, current, ':', failedToDelete);\n        }\n        current = Object.getPrototypeOf(current);\n    }\n}\n//# sourceMappingURL=delete-globals.js.map","import { toLower, toUpper } from '../../utils';\n// To future authors: It would be great if we could enforce that elements are not modified by a ConditionPredicate.\nexport const tagNameConditionPredicate = (tagNames) => (element) => {\n    console.assert(tagNames.every((t) => t === toUpper(t)), 'tagNames must be all uppercase.');\n    return tagNames.includes(element.tagName);\n};\nexport const elementPredicate = (node) => node.nodeType === 1 /* NodeType.ELEMENT_NODE */;\nexport const matchChildrenElements = (node, conditionPredicate) => {\n    const matchingElements = [];\n    node.childNodes.forEach((child) => {\n        if (elementPredicate(child)) {\n            if (conditionPredicate(child)) {\n                matchingElements.push(child);\n            }\n            matchingElements.push(...matchChildrenElements(child, conditionPredicate));\n        }\n    });\n    return matchingElements;\n};\nexport const matchChildElement = (element, conditionPredicate) => {\n    let returnValue = null;\n    element.children.some((child) => {\n        if (conditionPredicate(child)) {\n            returnValue = child;\n            return true;\n        }\n        const grandChildMatch = matchChildElement(child, conditionPredicate);\n        if (grandChildMatch !== null) {\n            returnValue = grandChildMatch;\n            return true;\n        }\n        return false;\n    });\n    return returnValue;\n};\nexport const matchNearestParent = (element, conditionPredicate) => {\n    while ((element = element.parentNode)) {\n        if (conditionPredicate(element)) {\n            return element;\n        }\n    }\n    return null;\n};\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors\n * @param attrSelector the selector we are trying to match for.\n * @param element the element being tested.\n * @return boolean for whether we match the condition\n */\nexport const matchAttrReference = (attrSelector, element) => {\n    if (!attrSelector) {\n        return false;\n    }\n    const equalPos = attrSelector.indexOf('=');\n    const selectorLength = attrSelector.length;\n    const caseInsensitive = attrSelector.charAt(selectorLength - 2) === 'i';\n    const endPos = caseInsensitive ? selectorLength - 3 : selectorLength - 1;\n    if (equalPos !== -1) {\n        const equalSuffix = attrSelector.charAt(equalPos - 1);\n        const possibleSuffixes = ['~', '|', '$', '^', '*'];\n        const attrString = possibleSuffixes.includes(equalSuffix) ? attrSelector.substring(1, equalPos - 1) : attrSelector.substring(1, equalPos);\n        const rawValue = attrSelector.substring(equalPos + 1, endPos);\n        const rawAttrValue = element.getAttribute(attrString);\n        if (rawAttrValue) {\n            const casedValue = caseInsensitive ? toLower(rawValue) : rawValue;\n            const casedAttrValue = caseInsensitive ? toLower(rawAttrValue) : rawAttrValue;\n            switch (equalSuffix) {\n                case '~':\n                    return casedAttrValue.split(' ').indexOf(casedValue) !== -1;\n                case '|':\n                    return casedAttrValue === casedValue || casedAttrValue === `${casedValue}-`;\n                case '^':\n                    return casedAttrValue.startsWith(casedValue);\n                case '$':\n                    return casedAttrValue.endsWith(casedValue);\n                case '*':\n                    return casedAttrValue.indexOf(casedValue) !== -1;\n                default:\n                    return casedAttrValue === casedValue;\n            }\n        }\n        return false;\n    }\n    else {\n        return element.hasAttribute(attrSelector.substring(1, endPos));\n    }\n};\n//# sourceMappingURL=matchElements.js.map","import { keyValueString } from '../../utils';\nexport const toString = (attributes) => attributes.map((attr) => keyValueString(attr.name, attr.value)).join(' ');\nexport const matchPredicate = (namespaceURI, name) => (attr) => attr.namespaceURI === namespaceURI && attr.name === name;\n//# sourceMappingURL=Attr.js.map","import { mutate } from '../MutationObserver';\nimport { toLower } from '../../utils';\nimport { store as storeString } from '../strings';\nconst hyphenateKey = (key) => toLower(key.replace(/(webkit|ms|moz|khtml)/g, '-$1').replace(/([a-zA-Z])(?=[A-Z])/g, '$1-'));\nexport const appendKeys = (keys) => {\n    const keysToAppend = keys.filter((key) => isNaN(key) && !CSSStyleDeclaration.prototype.hasOwnProperty(key));\n    if (keysToAppend.length <= 0) {\n        return;\n    }\n    const previousPrototypeLength = (CSSStyleDeclaration.prototype.length || 0);\n    if (previousPrototypeLength !== 0) {\n        CSSStyleDeclaration.prototype.length = previousPrototypeLength + keysToAppend.length;\n    }\n    else {\n        Object.defineProperty(CSSStyleDeclaration.prototype, 'length', {\n            configurable: true,\n            writable: true,\n            value: keysToAppend.length,\n        });\n    }\n    keysToAppend.forEach((key, index) => {\n        const hyphenatedKey = hyphenateKey(key);\n        CSSStyleDeclaration.prototype[index + previousPrototypeLength] = hyphenatedKey;\n        Object.defineProperties(CSSStyleDeclaration.prototype, {\n            [key]: {\n                get() {\n                    return this.getPropertyValue(hyphenatedKey);\n                },\n                set(value) {\n                    this.setProperty(hyphenatedKey, value);\n                },\n            },\n        });\n    });\n};\nexport class CSSStyleDeclaration {\n    [3 /* TransferrableKeys.properties */] = {};\n    [44 /* TransferrableKeys.storeAttribute */];\n    [13 /* TransferrableKeys.target */];\n    constructor(target) {\n        this[44 /* TransferrableKeys.storeAttribute */] = target[44 /* TransferrableKeys.storeAttribute */].bind(target);\n        this[13 /* TransferrableKeys.target */] = target;\n    }\n    /**\n     * Retrieve the value for a given property key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/getPropertyValue\n     * @param key the name of the property to retrieve the value for.\n     * @return value stored for the provided key.\n     */\n    getPropertyValue(key) {\n        return this[3 /* TransferrableKeys.properties */][key] || '';\n    }\n    /**\n     * Remove a value for a given property key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/removeProperty\n     * @param key the name of the property to retrieve the value for.\n     * @return previously stored value for the provided key.\n     */\n    removeProperty(key) {\n        const oldValue = this.getPropertyValue(key);\n        this[3 /* TransferrableKeys.properties */][key] = null;\n        this.mutated(this.cssText);\n        return oldValue;\n    }\n    /**\n     * Stores a given value for the provided key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/setProperty\n     * @param key modify this key\n     * @param value store this value\n     */\n    setProperty(key, value) {\n        this[3 /* TransferrableKeys.properties */][key] = value;\n        this.mutated(this.cssText);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/cssText\n     * @return css text string representing known and valid style declarations.\n     */\n    get cssText() {\n        let value;\n        let returnValue = '';\n        for (const key in this[3 /* TransferrableKeys.properties */]) {\n            if ((value = this.getPropertyValue(key)) !== '') {\n                returnValue += `${key}: ${value}; `;\n            }\n        }\n        return returnValue.trim();\n    }\n    /**\n     * Replace all style declarations with new values parsed from a cssText string.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/cssText\n     * @param value css text string to parse and store\n     */\n    set cssText(value) {\n        // value should have an \"unknown\" type but get/set can't have different types.\n        // https://github.com/Microsoft/TypeScript/issues/2521\n        const stringValue = typeof value === 'string' ? value : '';\n        this[3 /* TransferrableKeys.properties */] = {};\n        const values = stringValue.split(/[:;]/);\n        const length = values.length;\n        for (let index = 0; index + 1 < length; index += 2) {\n            this[3 /* TransferrableKeys.properties */][toLower(values[index].trim())] = values[index + 1].trim();\n        }\n        this.mutated(this.cssText);\n    }\n    /**\n     * Report CSSStyleDeclaration mutations to MutationObserver.\n     * @param value value after mutation\n     * @private\n     * // TODO(KB): Write a test to ensure mutations are fired for CSSStyleDeclaration changes.\n     */\n    mutated(value) {\n        const oldValue = this[44 /* TransferrableKeys.storeAttribute */](this[13 /* TransferrableKeys.target */].namespaceURI, 'style', value);\n        mutate(this[13 /* TransferrableKeys.target */].ownerDocument, {\n            type: 0 /* MutationRecordType.ATTRIBUTES */,\n            target: this[13 /* TransferrableKeys.target */],\n            attributeName: 'style',\n            value,\n            oldValue,\n        }, [\n            0 /* TransferrableMutationType.ATTRIBUTES */,\n            this[13 /* TransferrableKeys.target */][7 /* TransferrableKeys.index */],\n            storeString('style'),\n            0,\n            value !== null ? storeString(value) + 1 : 0,\n        ]);\n    }\n}\n//# sourceMappingURL=CSSStyleDeclaration.js.map","import { toLower } from '../../utils';\n// TODO: Do all boolean attributes have boolean properties?\n// TODO: Do enumerated attributes with non-boolean properties exist?\nexport const reflectProperties = (properties, defineOn) => {\n    properties.forEach((pair) => {\n        for (const property in pair) {\n            const { 0: defaultValue, 1: attributeName = toLower(property), 2: keywords } = pair[property];\n            // Boolean attributes only care about presence, not attribute value.\n            // https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes\n            const isBooleanAttribute = typeof defaultValue === 'boolean';\n            Object.defineProperty(defineOn.prototype, property, {\n                enumerable: true,\n                get() {\n                    const element = this;\n                    const attributeValue = element.getAttribute(attributeName);\n                    if (keywords) {\n                        return element.hasAttribute(attributeName) ? attributeValue === keywords[0] : defaultValue;\n                    }\n                    if (isBooleanAttribute) {\n                        return element.hasAttribute(attributeName);\n                    }\n                    const castableValue = attributeValue || defaultValue;\n                    return typeof defaultValue === 'number' ? Number(castableValue) : String(castableValue);\n                },\n                set(value) {\n                    const element = this;\n                    if (keywords) {\n                        element.setAttribute(attributeName, value ? keywords[0] : keywords[1]);\n                    }\n                    else if (isBooleanAttribute) {\n                        value ? element.setAttribute(attributeName, '') : element.removeAttribute(attributeName);\n                    }\n                    else {\n                        element.setAttribute(attributeName, String(value));\n                    }\n                },\n            });\n        }\n    });\n};\n//# sourceMappingURL=enhanceElement.js.map","/**\n * @fileoverview\n * WorkerDOM's `Event` class. `CustomEvent` is available natively in web worker.\n */\nimport { get } from './nodes';\nexport class Event {\n    bubbles;\n    cancelable;\n    cancelBubble;\n    currentTarget;\n    defaultPrevented;\n    eventPhase;\n    isTrusted;\n    returnValue;\n    // public srcElement: Element | null;\n    // TODO(KB): Restore srcElement.\n    target;\n    timeStamp;\n    type;\n    scoped;\n    [50 /* TransferrableKeys.stop */] = false;\n    [51 /* TransferrableKeys.end */] = false;\n    pageX;\n    pageY;\n    offsetX;\n    offsetY;\n    touches;\n    changedTouches;\n    constructor(type, opts) {\n        this.type = type;\n        this.bubbles = !!opts.bubbles;\n        this.cancelable = !!opts.cancelable;\n    }\n    stopPropagation() {\n        this[50 /* TransferrableKeys.stop */] = true;\n    }\n    stopImmediatePropagation() {\n        this[51 /* TransferrableKeys.end */] = this[50 /* TransferrableKeys.stop */] = true;\n    }\n    preventDefault() {\n        this.defaultPrevented = true;\n    }\n    /** Event.initEvent() is deprecated but supported here for legacy usage.  */\n    initEvent(type, bubbles, cancelable) {\n        this.type = type;\n        this.bubbles = bubbles;\n        this.cancelable = cancelable;\n    }\n}\n/**\n * Determine the target for a TransferrableEvent.\n * @param document Event intended within the scope of this document.\n * @param event\n */\nconst targetFromTransfer = (document, event) => {\n    if (event[13 /* TransferrableKeys.target */] !== null) {\n        const index = event[13 /* TransferrableKeys.target */][0];\n        // If the target was sent as index 0, use the current document.\n        return get(index !== 0 ? index : document[7 /* TransferrableKeys.index */]);\n    }\n    return null;\n};\n/**\n *\n * @param document\n * @param event\n */\nconst touchListFromTransfer = (document, event, key) => {\n    if (event[key] !== undefined) {\n        const touchListKeys = Object.keys(event[key]);\n        const list = {\n            length: touchListKeys.length,\n            item(index) {\n                return this[index] || null;\n            },\n        };\n        touchListKeys.forEach((touchListKey) => {\n            const numericKey = Number(touchListKey);\n            const transferredTouch = event[key][numericKey];\n            list[numericKey] = {\n                identifier: transferredTouch[0],\n                screenX: transferredTouch[1],\n                screenY: transferredTouch[2],\n                clientX: transferredTouch[3],\n                clientY: transferredTouch[4],\n                pageX: transferredTouch[5],\n                pageY: transferredTouch[6],\n                target: get(transferredTouch[7] !== 0 ? transferredTouch[7] : document[7 /* TransferrableKeys.index */]),\n            };\n        });\n        return list;\n    }\n    return undefined;\n};\n/**\n * When an event is dispatched from the main thread, it needs to be propagated in the worker thread.\n * Propagate adds an event listener to the worker global scope and uses the WorkerDOM Node.dispatchEvent\n * method to dispatch the transfered event in the worker thread.\n */\nexport function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* TransferrableKeys.type */] !== 1 /* MessageType.EVENT */) {\n            return;\n        }\n        const event = data[39 /* TransferrableKeys.event */];\n        const node = get(event[7 /* TransferrableKeys.index */]);\n        if (node !== null) {\n            node.dispatchEvent(Object.assign(new Event(event[12 /* TransferrableKeys.type */], {\n                bubbles: event[25 /* TransferrableKeys.bubbles */],\n                cancelable: event[26 /* TransferrableKeys.cancelable */],\n            }), {\n                cancelBubble: event[27 /* TransferrableKeys.cancelBubble */],\n                defaultPrevented: event[29 /* TransferrableKeys.defaultPrevented */],\n                eventPhase: event[30 /* TransferrableKeys.eventPhase */],\n                isTrusted: event[31 /* TransferrableKeys.isTrusted */],\n                returnValue: event[32 /* TransferrableKeys.returnValue */],\n                target: targetFromTransfer(global.document, event),\n                timeStamp: event[33 /* TransferrableKeys.timeStamp */],\n                scoped: event[34 /* TransferrableKeys.scoped */],\n                keyCode: event[35 /* TransferrableKeys.keyCode */],\n                pageX: event[60 /* TransferrableKeys.pageX */],\n                pageY: event[61 /* TransferrableKeys.pageY */],\n                offsetX: event[65 /* TransferrableKeys.offsetX */],\n                offsetY: event[66 /* TransferrableKeys.offsetY */],\n                touches: touchListFromTransfer(global.document, event, 62 /* TransferrableKeys.touches */),\n                changedTouches: touchListFromTransfer(global.document, event, 63 /* TransferrableKeys.changedTouches */),\n            }));\n        }\n    });\n}\n//# sourceMappingURL=Event.js.map","export const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n//# sourceMappingURL=TransferrableNodes.js.map","import { Element } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { matchNearestParent, tagNameConditionPredicate } from './matchElements';\nexport const appendGlobalEventProperties = (keys) => {\n    const keysToAppend = keys.filter((key) => !HTMLElement.prototype.hasOwnProperty(key));\n    if (keysToAppend.length <= 0) {\n        return;\n    }\n    keysToAppend.forEach((key) => {\n        const normalizedKey = key.replace(/on/, '');\n        Object.defineProperty(HTMLElement.prototype, key, {\n            enumerable: true,\n            get() {\n                return this[76 /* TransferrableKeys.propertyEventHandlers */][normalizedKey] || null;\n            },\n            set(value) {\n                const stored = this[76 /* TransferrableKeys.propertyEventHandlers */][normalizedKey];\n                if (stored) {\n                    this.removeEventListener(normalizedKey, stored);\n                }\n                if (value instanceof Function) {\n                    this.addEventListener(normalizedKey, value);\n                }\n                this[76 /* TransferrableKeys.propertyEventHandlers */][normalizedKey] = value;\n            },\n        });\n    });\n};\nexport class HTMLElement extends Element {\n    [76 /* TransferrableKeys.propertyEventHandlers */] = {};\n    /**\n     * Find the nearest parent form element.\n     * Implemented in HTMLElement since so many extensions of HTMLElement repeat this functionality. This is not to spec.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFieldSetElement\n     * @return nearest parent form element.\n     */\n    get form() {\n        return matchNearestParent(this, tagNameConditionPredicate(['FORM']));\n    }\n    [68 /* TransferrableKeys.serializeAsTransferrableObject */]() {\n        return [7 /* TransferrableObjectType.HTMLElement */, this[7 /* TransferrableKeys.index */]];\n    }\n}\n// Reflected properties\n// HTMLElement.accessKey => string, reflected attribute\n// HTMLElement.contentEditable => string, reflected attribute\n// HTMLElement.dir => string, reflected attribute\n// HTMLElement.lang => string, reflected attribute\n// HTMLElement.title => string, reflected attribute\n// HTMLElement.draggable => boolean, reflected attribute\n// HTMLElement.hidden => boolean, reflected attribute\n// HTMLElement.noModule => boolean, reflected attribute\n// HTMLElement.spellcheck => boolean, reflected attribute\n// HTMLElement.translate => boolean, reflected attribute\nreflectProperties([\n    { accessKey: [''] },\n    { contentEditable: ['inherit'] },\n    { dir: [''] },\n    { lang: [''] },\n    { title: [''] },\n    {\n        draggable: [false, /* attr */ undefined, /* keywords */ ['true', 'false']],\n    },\n    { hidden: [false, /* attr */ undefined] },\n    { noModule: [false] },\n    {\n        spellcheck: [true, /* attr */ undefined, /* keywords */ ['true', 'false']],\n    },\n    { translate: [true, /* attr */ undefined, /* keywords */ ['yes', 'no']] },\n], HTMLElement);\n// Properties\n// HTMLElement.accessKeyLabel => string, readonly value of \"accessKey\"\n// HTMLElement.isContentEditable => boolean, readonly value of contentEditable\n// HTMLElement.nonce => string, NOT REFLECTED\n// HTMLElement.tabIndex => number, reflected attribute\n// Layout Properties (TBD)\n// HTMLElement.offsetHeight => double, readonly\n// HTMLElement.offsetLeft => double, readonly\n// HTMLElement.offsetParent => Element\n// HTMLElement.offsetTop => double, readonly\n// HTMLElement.offsetWidth => double, readonly\n// Unimplemented Properties\n// HTMLElement.contextMenu => HTMLElement\n// HTMLElement.dataset => Map<string (get/set), string>\n// HTMLElement.dropzone => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.inert => boolean, reflected\n// HTMLElement.itemScope => boolean\n// HTMLElement.itemType => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemId => string\n// HTMLElement.itemRef => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemProp => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemValue => object\n// HTMLElement.properties => HTMLPropertiesCollection, readonly\n//# sourceMappingURL=HTMLElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLAnchorElement extends HTMLElement {\n    _relList;\n    get relList() {\n        return this._relList || (this._relList = new DOMTokenList(this, 'rel'));\n    }\n    /**\n     * Returns the href property/attribute value\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/toString\n     * @return string href attached to HTMLAnchorElement\n     */\n    toString() {\n        return this.href;\n    }\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * A Synonym for the Node.textContent property setter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement\n     * @param text replacement for all current childNodes.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n}\nregisterSubclass('a', HTMLAnchorElement);\ndefinePropertyBackedAttributes(HTMLAnchorElement, {\n    rel: [(el) => el.relList.value, (el, value) => (el.relList.value = value)],\n});\nsynchronizedAccessor(HTMLAnchorElement, 'relList', 'rel');\n// Reflected properties, strings.\n// HTMLAnchorElement.href => string, reflected attribute\n// HTMLAnchorElement.hreflang => string, reflected attribute\n// HTMLAnchorElement.media => string, reflected attribute\n// HTMLAnchorElement.target => string, reflected attribute\n// HTMLAnchorElement.type => string, reflected attribute\nreflectProperties([{ href: [''] }, { hreflang: [''] }, { media: [''] }, { target: [''] }, { type: [''] }], HTMLAnchorElement);\n// Unimplemented\n// HTMLAnchorElement.download => string, reflected attribute\n// HTMLAnchorElement.type => Is a DOMString that reflects the type HTML attribute, indicating the MIME type of the linked resource.\n// Unimplemented URL parse of href attribute due to IE11 compatibility and low usage.\n// Note: Implementation doable using a private url property\n/*\n  class {\n    private url: URL | null = null;\n\n    constructor(...) {\n      // Element.getAttribute('href') => Element.href.\n      Object.assign(this[TransferrableKeys.propertyBackedAttributes], {\n        href: this.href,\n      });\n    }\n\n    get href(): string {\n      return this.url ? this.url.href : '';\n    }\n    set href(url: string) {\n      this.url = new URL(url);\n      this.setAttribute('href', this.url.href);\n    }\n  }\n*/\n// HTMLAnchorElement.host => string\n// HTMLAnchorElement.hostname => string\n// HTMLAnchorElement.protocol => string\n// HTMLAnchorElement.pathname => string\n// HTMLAnchorElement.search => string\n// HTMLAnchorElement.hash => string\n// HTMLAnchorElement.username => string\n// HTMLAnchorElement.password => string\n// HTMLAnchorElement.origin => string, readonly (getter no setter)\n//# sourceMappingURL=HTMLAnchorElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLButtonElement extends HTMLElement {\n}\nregisterSubclass('button', HTMLButtonElement);\n// Reflected properties, strings.\n// HTMLButtonElement.formAction => string, reflected attribute\n// HTMLButtonElement.formEnctype => string, reflected attribute\n// HTMLButtonElement.formMethod => string, reflected attribute\n// HTMLButtonElement.formTarget => string, reflected attribute\n// HTMLButtonElement.name => string, reflected attribute\n// HTMLButtonElement.type => string, reflected attribute (default submit)\n// HTMLButtonElement.value => string, reflected attribute\n// HTMLButtonElement.autofocus => boolean, reflected attribute\n// HTMLButtonElement.disabled => boolean, reflected attribute\nreflectProperties([\n    { formAction: [''] },\n    { formEnctype: [''] },\n    { formMethod: [''] },\n    { formTarget: [''] },\n    { name: [''] },\n    { type: ['submit'] },\n    { value: [''] },\n    { autofocus: [false] },\n    { disabled: [false] },\n], HTMLButtonElement);\n// Not reflected\n// HTMLButtonElement.formNoValidate => boolean\n// HTMLButtonElement.validity => ValidityState, readonly\n// Unimplemented\n// HTMLButtonElement.form => HTMLFormElement | null, readonly\n// HTMLButtonElement.labels => Array<HTMLLabelElement>, readonly\n// HTMLButtonElement.menu => HTMLMenuElement\n// HTMLButtonElement.willValidate => boolean, readonly\n// HTMLButtonElement.validationMessage => string, readonly\n//# sourceMappingURL=HTMLButtonElement.js.map","import { transfer } from '../MutationTransfer';\nimport { serializeTransferrableObject } from '../serializeTransferrableObject';\nimport { store } from '../strings';\n/**\n * Wrapper class for CanvasGradient. The user will be able to manipulate as a regular CanvasGradient object.\n */\nexport class CanvasGradient {\n    id;\n    document;\n    constructor(id, document) {\n        this.document = document;\n        this.id = id;\n    }\n    addColorStop(offset, color) {\n        transfer(this.document, [\n            9 /* TransferrableMutationType.OBJECT_MUTATION */,\n            store('addColorStop'),\n            2,\n            ...this[68 /* TransferrableKeys.serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject([...arguments]),\n        ]);\n    }\n    [68 /* TransferrableKeys.serializeAsTransferrableObject */]() {\n        return [5 /* TransferrableObjectType.TransferObject */, this.id];\n    }\n}\n//# sourceMappingURL=CanvasGradient.js.map","/**\n * Wrapper class for CanvasPattern. The user will be able to manipulate as a regular CanvasPattern object.\n * This class will be used when the CanvasRenderingContext is using an OffscreenCanvas polyfill.\n */\nexport class CanvasPattern {\n    id;\n    constructor(id) {\n        this.id = id;\n    }\n    /**\n     * This is an experimental method.\n     */\n    setTransform() { }\n    [68 /* TransferrableKeys.serializeAsTransferrableObject */]() {\n        return [5 /* TransferrableObjectType.TransferObject */, this.id];\n    }\n}\n//# sourceMappingURL=CanvasPattern.js.map","import { transfer } from '../MutationTransfer';\nimport { toLower } from '../../utils';\nimport { store } from '../strings';\nimport { serializeTransferrableObject } from '../serializeTransferrableObject';\nimport { CanvasGradient } from './CanvasGradient';\nimport { CanvasPattern } from './CanvasPattern';\n/**\n * Handles calls to a CanvasRenderingContext2D object in cases where the user's environment does not\n * support native OffscreenCanvas.\n */\nexport class OffscreenCanvasPolyfill {\n    canvas;\n    context;\n    constructor(canvas) {\n        this.canvas = canvas;\n    }\n    getContext(contextType) {\n        if (!this.context) {\n            if (toLower(contextType) === '2d') {\n                this.context = new OffscreenCanvasRenderingContext2DPolyfill(this.canvas);\n            }\n            else {\n                throw new Error('Context type not supported.');\n            }\n        }\n        return this.context;\n    }\n}\nclass OffscreenCanvasRenderingContext2DPolyfill {\n    canvasElement;\n    lineDash;\n    objectIndex = 0;\n    constructor(canvas) {\n        this.canvasElement = canvas;\n        this.lineDash = [];\n    }\n    [67 /* TransferrableKeys.mutated */](fnName, args) {\n        transfer(this.canvasElement.ownerDocument, [\n            9 /* TransferrableMutationType.OBJECT_MUTATION */,\n            store(fnName),\n            args.length,\n            ...this[68 /* TransferrableKeys.serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject(args),\n        ]);\n    }\n    [68 /* TransferrableKeys.serializeAsTransferrableObject */]() {\n        return [6 /* TransferrableObjectType.CanvasRenderingContext2D */, this.canvasElement[7 /* TransferrableKeys.index */]];\n    }\n    /**\n     * Creates object in the main thread, and associates it with the id provided.\n     * @param objectId ID to associate the created object with.\n     * @param creationMethod Method to use for object creation.\n     * @param creationArgs Arguments to pass into the creation method.\n     */\n    createObjectReference(objectId, creationMethod, creationArgs) {\n        transfer(this.canvasElement.ownerDocument, [\n            10 /* TransferrableMutationType.OBJECT_CREATION */,\n            store(creationMethod),\n            objectId,\n            creationArgs.length,\n            ...this[68 /* TransferrableKeys.serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject(creationArgs),\n        ]);\n    }\n    get canvas() {\n        return this.canvasElement;\n    }\n    clearRect(x, y, w, h) {\n        this[67 /* TransferrableKeys.mutated */]('clearRect', [...arguments]);\n    }\n    fillRect(x, y, w, h) {\n        this[67 /* TransferrableKeys.mutated */]('fillRect', [...arguments]);\n    }\n    strokeRect(x, y, w, h) {\n        this[67 /* TransferrableKeys.mutated */]('strokeRect', [...arguments]);\n    }\n    roundRect(x, y, w, h, radii) {\n        this[67 /* TransferrableKeys.mutated */]('roundRect', [...arguments]);\n    }\n    set lineWidth(value) {\n        this[67 /* TransferrableKeys.mutated */]('lineWidth', [...arguments]);\n    }\n    fillText(text, x, y, maxWidth) {\n        this[67 /* TransferrableKeys.mutated */]('fillText', [...arguments]);\n    }\n    moveTo(x, y) {\n        this[67 /* TransferrableKeys.mutated */]('moveTo', [...arguments]);\n    }\n    lineTo(x, y) {\n        this[67 /* TransferrableKeys.mutated */]('lineTo', [...arguments]);\n    }\n    closePath() {\n        this[67 /* TransferrableKeys.mutated */]('closePath', []);\n    }\n    stroke() {\n        this[67 /* TransferrableKeys.mutated */]('stroke', []);\n    }\n    restore() {\n        this[67 /* TransferrableKeys.mutated */]('restore', []);\n    }\n    save() {\n        this[67 /* TransferrableKeys.mutated */]('save', []);\n    }\n    resetTransform() {\n        this[67 /* TransferrableKeys.mutated */]('resetTransform', []);\n    }\n    rotate(angle) {\n        this[67 /* TransferrableKeys.mutated */]('rotate', [...arguments]);\n    }\n    transform(a, b, c, d, e, f) {\n        this[67 /* TransferrableKeys.mutated */]('transform', [...arguments]);\n    }\n    translate(x, y) {\n        this[67 /* TransferrableKeys.mutated */]('translate', [...arguments]);\n    }\n    scale(x, y) {\n        this[67 /* TransferrableKeys.mutated */]('scale', [...arguments]);\n    }\n    set globalAlpha(value) {\n        this[67 /* TransferrableKeys.mutated */]('globalAlpha', [...arguments]);\n    }\n    set globalCompositeOperation(value) {\n        this[67 /* TransferrableKeys.mutated */]('globalCompositeOperation', [...arguments]);\n    }\n    set imageSmoothingQuality(value) {\n        this[67 /* TransferrableKeys.mutated */]('imageSmoothingQuality', [...arguments]);\n    }\n    set fillStyle(value) {\n        this[67 /* TransferrableKeys.mutated */]('fillStyle', [...arguments]);\n    }\n    set strokeStyle(value) {\n        this[67 /* TransferrableKeys.mutated */]('strokeStyle', [...arguments]);\n    }\n    set shadowBlur(value) {\n        this[67 /* TransferrableKeys.mutated */]('shadowBlur', [...arguments]);\n    }\n    set shadowColor(value) {\n        this[67 /* TransferrableKeys.mutated */]('shadowColor', [...arguments]);\n    }\n    set shadowOffsetX(value) {\n        this[67 /* TransferrableKeys.mutated */]('shadowOffsetX', [...arguments]);\n    }\n    set shadowOffsetY(value) {\n        this[67 /* TransferrableKeys.mutated */]('shadowOffsetY', [...arguments]);\n    }\n    set filter(value) {\n        this[67 /* TransferrableKeys.mutated */]('filter', [...arguments]);\n    }\n    beginPath() {\n        this[67 /* TransferrableKeys.mutated */]('beginPath', []);\n    }\n    strokeText(text, x, y, maxWidth) {\n        this[67 /* TransferrableKeys.mutated */]('strokeText', [...arguments]);\n    }\n    set textAlign(value) {\n        this[67 /* TransferrableKeys.mutated */]('textAlign', [...arguments]);\n    }\n    set textBaseline(value) {\n        this[67 /* TransferrableKeys.mutated */]('textBaseline', [...arguments]);\n    }\n    set lineCap(value) {\n        this[67 /* TransferrableKeys.mutated */]('lineCap', [...arguments]);\n    }\n    set lineDashOffset(value) {\n        this[67 /* TransferrableKeys.mutated */]('lineDashOffset', [...arguments]);\n    }\n    set lineJoin(value) {\n        this[67 /* TransferrableKeys.mutated */]('lineJoin', [...arguments]);\n    }\n    set miterLimit(value) {\n        this[67 /* TransferrableKeys.mutated */]('miterLimit', [...arguments]);\n    }\n    arc(x, y, radius, startAngle, endAngle, anticlockwise) {\n        this[67 /* TransferrableKeys.mutated */]('arc', [...arguments]);\n    }\n    arcTo(x1, y1, x2, y2, radius) {\n        this[67 /* TransferrableKeys.mutated */]('arcTo', [...arguments]);\n    }\n    set direction(value) {\n        this[67 /* TransferrableKeys.mutated */]('direction', [...arguments]);\n    }\n    set font(value) {\n        this[67 /* TransferrableKeys.mutated */]('font', [...arguments]);\n    }\n    ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, anticlockwise) {\n        this[67 /* TransferrableKeys.mutated */]('ellipse', [...arguments]);\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this[67 /* TransferrableKeys.mutated */]('bezierCurveTo', [...arguments]);\n    }\n    rect(x, y, width, height) {\n        this[67 /* TransferrableKeys.mutated */]('rect', [...arguments]);\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this[67 /* TransferrableKeys.mutated */]('quadraticCurveTo', [...arguments]);\n    }\n    set imageSmoothingEnabled(value) {\n        this[67 /* TransferrableKeys.mutated */]('imageSmoothingEnabled', [...arguments]);\n    }\n    setLineDash(lineDash) {\n        lineDash = [...lineDash];\n        if (lineDash.length % 2 !== 0) {\n            lineDash = lineDash.concat(lineDash);\n        }\n        this.lineDash = lineDash;\n        this[67 /* TransferrableKeys.mutated */]('setLineDash', [...arguments]);\n    }\n    getLineDash() {\n        return [...this.lineDash];\n    }\n    clip(pathOrFillRule, fillRule) {\n        if (typeof pathOrFillRule === 'object') {\n            throw new Error('clip(Path2D) is currently not supported!');\n        }\n        this[67 /* TransferrableKeys.mutated */]('clip', [...arguments]);\n    }\n    fill(pathOrFillRule, fillRule) {\n        if (typeof pathOrFillRule === 'object') {\n            throw new Error('fill(Path2D) is currently not supported!');\n        }\n        this[67 /* TransferrableKeys.mutated */]('fill', [...arguments]);\n    }\n    // Method has a different signature in MDN than it does in HTML spec\n    setTransform(transformOrA, bOrC, cOrD, dOrE, eOrF, f) {\n        if (typeof transformOrA === 'object') {\n            throw new Error('setTransform(DOMMatrix2DInit) is currently not supported!');\n        }\n        this[67 /* TransferrableKeys.mutated */]('setTransform', [...arguments]);\n    }\n    createLinearGradient(x0, y0, x1, y1) {\n        const gradientId = this.objectIndex++;\n        this.createObjectReference(gradientId, 'createLinearGradient', [...arguments]);\n        return new CanvasGradient(gradientId, this.canvasElement.ownerDocument);\n    }\n    createRadialGradient(x0, y0, r0, x1, y1, r1) {\n        const gradientId = this.objectIndex++;\n        this.createObjectReference(gradientId, 'createRadialGradient', [...arguments]);\n        return new CanvasGradient(gradientId, this.canvasElement.ownerDocument);\n    }\n    createPattern(image, repetition) {\n        const patternId = this.objectIndex++;\n        this.createObjectReference(patternId, 'createPattern', [...arguments]);\n        return new CanvasPattern(patternId);\n    }\n    drawImage(image, dx, dy) {\n        this[67 /* TransferrableKeys.mutated */]('drawImage', [...arguments]);\n    }\n    createImageData() {\n        return {};\n    }\n    getImageData() {\n        return {};\n    }\n    putImageData() { }\n    isPointInPath() {\n        throw new Error('isPointInPath is not implemented.');\n    }\n    isPointInStroke() {\n        throw new Error('isPointInStroke is not implemented.');\n    }\n    measureText() {\n        throw new Error('measureText is not implemented.');\n    }\n}\n//# sourceMappingURL=OffscreenCanvasPolyfill.js.map","import { retrieveImageBitmap } from './canvas-utils';\n/**\n * Wraps CanvasPattern for usage in a native OffscreenCanvas case.\n */\nexport class FakeNativeCanvasPattern {\n    [70 /* TransferrableKeys.patternImplementation */] = {};\n    [71 /* TransferrableKeys.patternUpgraded */] = false;\n    [72 /* TransferrableKeys.patternUpgradePromise */];\n    /**\n     * Retrieves ImageBitmap object from main-thread, which replicates the input image. Upon\n     * retrieval, uses it to create a real CanvasPattern and upgrade the implementation property.\n     * @param canvas Canvas element used to create the pattern.\n     * @param image Image to be used as the pattern's image\n     * @param repetition DOMStrings indicating how to repeat the pattern's image.\n     */\n    [69 /* TransferrableKeys.retrieveCanvasPattern */](canvas, image, repetition) {\n        this[72 /* TransferrableKeys.patternUpgradePromise */] = retrieveImageBitmap(image, canvas)\n            // Create new pattern with retrieved ImageBitmap\n            .then((instance) => {\n            const pattern = canvas.getContext('2d').createPattern(instance, repetition);\n            if (!pattern) {\n                throw new Error('Pattern is null!');\n            }\n            this[70 /* TransferrableKeys.patternImplementation */] = pattern;\n            this[71 /* TransferrableKeys.patternUpgraded */] = true;\n        });\n        return this[72 /* TransferrableKeys.patternUpgradePromise */];\n    }\n    // This method is experimental.\n    // Takes an SVGMatrix as an argument, which is a deprecated API.\n    setTransform() { }\n}\n//# sourceMappingURL=FakeNativeCanvasPattern.js.map","import { transfer } from '../MutationTransfer';\nimport { OffscreenCanvasPolyfill } from './OffscreenCanvasPolyfill';\nimport { FakeNativeCanvasPattern } from './FakeNativeCanvasPattern';\nimport { retrieveImageBitmap } from './canvas-utils';\nexport const deferredUpgrades = new WeakMap();\n/**\n * Delegates all CanvasRenderingContext2D calls, either to an OffscreenCanvas or a polyfill\n * (depending on whether it is supported).\n */\nexport class CanvasRenderingContext2DShim {\n    queue = [];\n    implementation;\n    upgraded = false;\n    canvasElement;\n    polyfillUsed;\n    // createPattern calls need to retrieve an ImageBitmap from the main-thread. Since those can\n    // happen subsequently, we must keep track of these to avoid reentrancy problems.\n    unresolvedCalls = 0;\n    goodImplementation;\n    constructor(canvas) {\n        this.canvasElement = canvas;\n        const OffscreenCanvas = canvas.ownerDocument.defaultView.OffscreenCanvas;\n        // If the browser does not support OffscreenCanvas, use polyfill\n        if (typeof OffscreenCanvas === 'undefined') {\n            this.implementation = new OffscreenCanvasPolyfill(canvas).getContext('2d');\n            this.upgraded = true;\n            this.polyfillUsed = true;\n        }\n        // If the browser supports OffscreenCanvas:\n        // 1. Use un-upgraded (not auto-synchronized) version for all calls performed immediately after\n        // creation. All calls will be queued to call on upgraded version after.\n        // 2. Retrieve an auto-synchronized OffscreenCanvas from the main-thread and call all methods\n        // in the queue.\n        else {\n            this.implementation = new OffscreenCanvas(0, 0).getContext('2d');\n            this.getOffscreenCanvasAsync(this.canvasElement);\n            this.polyfillUsed = false;\n        }\n    }\n    /**\n     * Retrieves auto-synchronized version of an OffscreenCanvas from the main-thread.\n     * @param canvas HTMLCanvasElement associated with this context.\n     */\n    getOffscreenCanvasAsync(canvas) {\n        this.unresolvedCalls++;\n        const deferred = {};\n        const document = this.canvasElement.ownerDocument;\n        const isTestMode = !document.addGlobalEventListener;\n        const upgradePromise = new Promise((resolve) => {\n            const messageHandler = ({ data }) => {\n                if (data[12 /* TransferrableKeys.type */] === 9 /* MessageType.OFFSCREEN_CANVAS_INSTANCE */ &&\n                    data[13 /* TransferrableKeys.target */][0] === canvas[7 /* TransferrableKeys.index */]) {\n                    document.removeGlobalEventListener('message', messageHandler);\n                    const transferredOffscreenCanvas = data[38 /* TransferrableKeys.data */];\n                    resolve(transferredOffscreenCanvas);\n                }\n            };\n            if (!document.addGlobalEventListener) {\n                if (isTestMode) {\n                    deferred.resolve = resolve;\n                }\n                else {\n                    throw new Error('addGlobalEventListener is not defined.');\n                }\n            }\n            else {\n                document.addGlobalEventListener('message', messageHandler);\n                transfer(canvas.ownerDocument, [8 /* TransferrableMutationType.OFFSCREEN_CANVAS_INSTANCE */, canvas[7 /* TransferrableKeys.index */]]);\n            }\n        }).then((instance) => {\n            this.goodImplementation = instance.getContext('2d');\n            this.maybeUpgradeImplementation();\n        });\n        if (isTestMode) {\n            deferred.upgradePromise = upgradePromise;\n            deferredUpgrades.set(canvas, deferred);\n        }\n        return upgradePromise;\n    }\n    /**\n     * Degrades the underlying context implementation and adds to the unresolved call count.\n     */\n    degradeImplementation() {\n        this.upgraded = false;\n        const OffscreenCanvas = this.canvasElement.ownerDocument.defaultView.OffscreenCanvas;\n        this.implementation = new OffscreenCanvas(0, 0).getContext('2d');\n        this.unresolvedCalls++;\n    }\n    /**\n     * Will upgrade the underlying context implementation if no more unresolved calls remain.\n     */\n    maybeUpgradeImplementation() {\n        this.unresolvedCalls--;\n        if (this.unresolvedCalls === 0) {\n            this.implementation = this.goodImplementation;\n            this.upgraded = true;\n            this.flushQueue();\n        }\n    }\n    flushQueue() {\n        for (const call of this.queue) {\n            if (call.isSetter) {\n                this[call.fnName] = call.args[0];\n            }\n            else {\n                this[call.fnName](...call.args);\n            }\n        }\n        this.queue.length = 0;\n    }\n    delegateFunc(name, args) {\n        const returnValue = this.implementation[name](...args);\n        if (!this.upgraded) {\n            this.queue.push({ fnName: name, args, isSetter: false });\n        }\n        return returnValue;\n    }\n    delegateSetter(name, args) {\n        this.implementation[name] = args[0];\n        if (!this.upgraded) {\n            this.queue.push({ fnName: name, args, isSetter: true });\n        }\n    }\n    delegateGetter(name) {\n        return this.implementation[name];\n    }\n    /* DRAWING RECTANGLES */\n    clearRect(x, y, width, height) {\n        this.delegateFunc('clearRect', [...arguments]);\n    }\n    fillRect(x, y, width, height) {\n        this.delegateFunc('fillRect', [...arguments]);\n    }\n    strokeRect(x, y, width, height) {\n        this.delegateFunc('strokeRect', [...arguments]);\n    }\n    roundRect(x, y, w, h, radii) {\n        this.delegateFunc('roundRect', [...arguments]);\n    }\n    /* DRAWING TEXT */\n    fillText(text, x, y, maxWidth) {\n        this.delegateFunc('fillText', [...arguments]);\n    }\n    strokeText(text, x, y, maxWidth) {\n        this.delegateFunc('strokeText', [...arguments]);\n    }\n    measureText(text) {\n        return this.delegateFunc('measureText', [...arguments]);\n    }\n    /* LINE STYLES */\n    set lineWidth(value) {\n        this.delegateSetter('lineWidth', [...arguments]);\n    }\n    get lineWidth() {\n        return this.delegateGetter('lineWidth');\n    }\n    set lineCap(value) {\n        this.delegateSetter('lineCap', [...arguments]);\n    }\n    get lineCap() {\n        return this.delegateGetter('lineCap');\n    }\n    set lineJoin(value) {\n        this.delegateSetter('lineJoin', [...arguments]);\n    }\n    get lineJoin() {\n        return this.delegateGetter('lineJoin');\n    }\n    set miterLimit(value) {\n        this.delegateSetter('miterLimit', [...arguments]);\n    }\n    get miterLimit() {\n        return this.delegateGetter('miterLimit');\n    }\n    getLineDash() {\n        return this.delegateFunc('getLineDash', [...arguments]);\n    }\n    setLineDash(segments) {\n        this.delegateFunc('setLineDash', [...arguments]);\n    }\n    set lineDashOffset(value) {\n        this.delegateSetter('lineDashOffset', [...arguments]);\n    }\n    get lineDashOffset() {\n        return this.delegateGetter('lineDashOffset');\n    }\n    /* TEXT STYLES */\n    set font(value) {\n        this.delegateSetter('font', [...arguments]);\n    }\n    get font() {\n        return this.delegateGetter('font');\n    }\n    set textAlign(value) {\n        this.delegateSetter('textAlign', [...arguments]);\n    }\n    get textAlign() {\n        return this.delegateGetter('textAlign');\n    }\n    set textBaseline(value) {\n        this.delegateSetter('textBaseline', [...arguments]);\n    }\n    get textBaseline() {\n        return this.delegateGetter('textBaseline');\n    }\n    set direction(value) {\n        this.delegateSetter('direction', [...arguments]);\n    }\n    get direction() {\n        return this.delegateGetter('direction');\n    }\n    /* FILL AND STROKE STYLES */\n    set fillStyle(value) {\n        // 1. Native pattern instances given to the user hold the 'real' pattern as their implementation prop.\n        // 2. Pattern must be upgraded, otherwise an undefined 'implementation' will be queued instead of the wrapper object.\n        if (value instanceof FakeNativeCanvasPattern && this.upgraded) {\n            // This case occurs only when an un-upgraded pattern is passed into a different (already\n            // upgraded) canvas context.\n            if (!value[71 /* TransferrableKeys.patternUpgraded */]) {\n                this.queue.push({ fnName: 'fillStyle', args: [value], isSetter: true });\n                this.degradeImplementation();\n                value[72 /* TransferrableKeys.patternUpgradePromise */].then(() => {\n                    this.maybeUpgradeImplementation();\n                });\n            }\n            else {\n                this.delegateSetter('fillStyle', [value[70 /* TransferrableKeys.patternImplementation */]]);\n            }\n            // Any other case does not require special handling.\n        }\n        else {\n            this.delegateSetter('fillStyle', [...arguments]);\n        }\n    }\n    get fillStyle() {\n        return this.delegateGetter('fillStyle');\n    }\n    set strokeStyle(value) {\n        // 1. Native pattern instances given to the user hold the 'real' pattern as their implementation prop.\n        // 2. Pattern must be upgraded, otherwise an undefined 'implementation' could be queued instead of the wrapper object.\n        if (value instanceof FakeNativeCanvasPattern && this.upgraded) {\n            // This case occurs only when an un-upgraded pattern is passed into a different (already\n            // upgraded) canvas context.\n            if (!value[71 /* TransferrableKeys.patternUpgraded */]) {\n                this.queue.push({\n                    fnName: 'strokeStyle',\n                    args: [value],\n                    isSetter: true,\n                });\n                this.degradeImplementation();\n                value[72 /* TransferrableKeys.patternUpgradePromise */].then(() => {\n                    this.maybeUpgradeImplementation();\n                });\n            }\n            else {\n                this.delegateSetter('strokeStyle', [value[70 /* TransferrableKeys.patternImplementation */]]);\n            }\n            // Any other case does not require special handling.\n        }\n        else {\n            this.delegateSetter('strokeStyle', [...arguments]);\n        }\n    }\n    get strokeStyle() {\n        return this.delegateGetter('strokeStyle');\n    }\n    /* GRADIENTS AND PATTERNS */\n    createLinearGradient(x0, y0, x1, y1) {\n        return this.delegateFunc('createLinearGradient', [...arguments]);\n    }\n    createRadialGradient(x0, y0, r0, x1, y1, r1) {\n        return this.delegateFunc('createRadialGradient', [...arguments]);\n    }\n    createPattern(image, repetition) {\n        const ImageBitmap = this.canvasElement.ownerDocument.defaultView.ImageBitmap;\n        // Only HTMLElement image sources require special handling. ImageBitmap is OK to use.\n        if (this.polyfillUsed || image instanceof ImageBitmap) {\n            return this.delegateFunc('createPattern', [...arguments]);\n        }\n        else {\n            // Degrade the underlying implementation because we don't want calls on the real one until\n            // after pattern is retrieved\n            this.degradeImplementation();\n            const fakePattern = new FakeNativeCanvasPattern();\n            fakePattern[69 /* TransferrableKeys.retrieveCanvasPattern */](this.canvas, image, repetition).then(() => {\n                this.maybeUpgradeImplementation();\n            });\n            return fakePattern;\n        }\n    }\n    /* DRAWING IMAGES */\n    drawImage(image, dx, dy) {\n        const ImageBitmap = this.canvasElement.ownerDocument.defaultView.ImageBitmap;\n        // Only HTMLElement image sources require special handling. ImageBitmap is OK to use.\n        if (this.polyfillUsed || image instanceof ImageBitmap) {\n            this.delegateFunc('drawImage', [...arguments]);\n        }\n        else {\n            // Queue the drawImage call to make sure it gets called in correct order\n            const args = [];\n            this.queue.push({ fnName: 'drawImage', args, isSetter: false });\n            // Degrade the underlying implementation because we don't want calls on the real one\n            // until after the ImageBitmap is received.\n            this.degradeImplementation();\n            // Retrieve an ImageBitmap from the main-thread with the same image as the input image\n            retrieveImageBitmap(image, this.canvas)\n                // Then call the actual method with the retrieved ImageBitmap\n                .then((instance) => {\n                args.push(instance, dx, dy);\n                this.maybeUpgradeImplementation();\n            });\n        }\n    }\n    /* SHADOWS */\n    set shadowBlur(value) {\n        this.delegateSetter('shadowBlur', [...arguments]);\n    }\n    get shadowBlur() {\n        return this.delegateGetter('shadowBlur');\n    }\n    set shadowColor(value) {\n        this.delegateSetter('shadowColor', [...arguments]);\n    }\n    get shadowColor() {\n        return this.delegateGetter('shadowColor');\n    }\n    set shadowOffsetX(value) {\n        this.delegateSetter('shadowOffsetX', [...arguments]);\n    }\n    get shadowOffsetX() {\n        return this.delegateGetter('shadowOffsetX');\n    }\n    set shadowOffsetY(value) {\n        this.delegateSetter('shadowOffsetY', [...arguments]);\n    }\n    get shadowOffsetY() {\n        return this.delegateGetter('shadowOffsetY');\n    }\n    /* PATHS */\n    beginPath() {\n        this.delegateFunc('beginPath', [...arguments]);\n    }\n    closePath() {\n        this.delegateFunc('closePath', [...arguments]);\n    }\n    moveTo(x, y) {\n        this.delegateFunc('moveTo', [...arguments]);\n    }\n    lineTo(x, y) {\n        this.delegateFunc('lineTo', [...arguments]);\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this.delegateFunc('bezierCurveTo', [...arguments]);\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this.delegateFunc('quadraticCurveTo', [...arguments]);\n    }\n    arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n        this.delegateFunc('arc', [...arguments]);\n    }\n    arcTo(x1, y1, x2, y2, radius) {\n        this.delegateFunc('arcTo', [...arguments]);\n    }\n    ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise) {\n        this.delegateFunc('ellipse', [...arguments]);\n    }\n    rect(x, y, width, height) {\n        this.delegateFunc('rect', [...arguments]);\n    }\n    /* DRAWING PATHS */\n    fill(pathOrFillRule, fillRule) {\n        const args = [...arguments];\n        this.delegateFunc('fill', args);\n    }\n    stroke(path) {\n        const args = [...arguments];\n        this.delegateFunc('stroke', args);\n    }\n    clip(pathOrFillRule, fillRule) {\n        const args = [...arguments];\n        this.delegateFunc('clip', args);\n    }\n    isPointInPath(pathOrX, xOrY, yOrFillRule, fillRule) {\n        const args = [...arguments];\n        return this.delegateFunc('isPointInPath', args);\n    }\n    isPointInStroke(pathOrX, xOrY, y) {\n        const args = [...arguments];\n        return this.delegateFunc('isPointInStroke', args);\n    }\n    /* TRANSFORMATIONS */\n    rotate(angle) {\n        this.delegateFunc('rotate', [...arguments]);\n    }\n    scale(x, y) {\n        this.delegateFunc('scale', [...arguments]);\n    }\n    translate(x, y) {\n        this.delegateFunc('translate', [...arguments]);\n    }\n    transform(a, b, c, d, e, f) {\n        this.delegateFunc('transform', [...arguments]);\n    }\n    setTransform(transformOrA, bOrC, cOrD, dOrE, eOrF, f) {\n        const args = [...arguments];\n        this.delegateFunc('setTransform', args);\n    }\n    /* experimental */ resetTransform() {\n        this.delegateFunc('resetTransform', [...arguments]);\n    }\n    /* COMPOSITING */\n    set globalAlpha(value) {\n        this.delegateSetter('globalAlpha', [...arguments]);\n    }\n    get globalAlpha() {\n        return this.delegateGetter('globalAlpha');\n    }\n    set globalCompositeOperation(value) {\n        this.delegateSetter('globalCompositeOperation', [...arguments]);\n    }\n    get globalCompositeOperation() {\n        return this.delegateGetter('globalCompositeOperation');\n    }\n    /* PIXEL MANIPULATION */\n    createImageData(imagedataOrWidth, height) {\n        const args = [...arguments];\n        return this.delegateFunc('createImageData', args);\n    }\n    getImageData(sx, sy, sw, sh) {\n        return this.delegateFunc('getImageData', [...arguments]);\n    }\n    putImageData(imageData, dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight) {\n        this.delegateFunc('putImageData', [...arguments]);\n    }\n    /* IMAGE SMOOTHING */\n    /* experimental */ set imageSmoothingEnabled(value) {\n        this.delegateSetter('imageSmoothingEnabled', [...arguments]);\n    }\n    /* experimental */ get imageSmoothingEnabled() {\n        return this.delegateGetter('imageSmoothingEnabled');\n    }\n    /* experimental */ set imageSmoothingQuality(value) {\n        this.delegateSetter('imageSmoothingQuality', [...arguments]);\n    }\n    /* experimental */ get imageSmoothingQuality() {\n        return this.delegateGetter('imageSmoothingQuality');\n    }\n    /* THE CANVAS STATE */\n    save() {\n        this.delegateFunc('save', [...arguments]);\n    }\n    restore() {\n        this.delegateFunc('restore', [...arguments]);\n    }\n    // canvas property is readonly. We don't want to implement getters, but this must be here\n    // in order for TypeScript to not complain (for now)\n    get canvas() {\n        return this.canvasElement;\n    }\n    /* FILTERS */\n    /* experimental */ set filter(value) {\n        this.delegateSetter('filter', [...arguments]);\n    }\n    /* experimental */ get filter() {\n        return this.delegateGetter('filter');\n    }\n}\n//# sourceMappingURL=CanvasRenderingContext2D.js.map","import { HTMLElement } from './HTMLElement';\nimport { registerSubclass } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { CanvasRenderingContext2DShim } from '../canvas/CanvasRenderingContext2D';\nexport class HTMLCanvasElement extends HTMLElement {\n    context;\n    getContext(contextType) {\n        if (!this.context) {\n            if (contextType === '2D' || contextType === '2d') {\n                this.context = new CanvasRenderingContext2DShim(this);\n            }\n            else {\n                throw new Error('Context type not supported.');\n            }\n        }\n        return this.context;\n    }\n}\nregisterSubclass('canvas', HTMLCanvasElement);\n// Reflected Properties\n// HTMLCanvasElement.height => number, reflected attribute\n// HTMLCanvasElement.width => number, reflected attribute\nreflectProperties([{ height: [0] }, { width: [0] }], HTMLCanvasElement);\n// Unimplemented Properties\n// HTMLCanvasElement.mozOpaque => boolean\n// HTMLCanvasElement.mozPrintCallback => function\n// Unimplemented Methods\n// HTMLCanvasElement.captureStream()\n// HTMLCanvasElement.toDataURL()\n// HTMLCanvasElement.toBlob()\n// HTMLCanvasElement.transferControlToOffscreen()\n// HTMLCanvasElement.mozGetAsFile()\n//# sourceMappingURL=HTMLCanvasElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLDataElement extends HTMLElement {\n}\nregisterSubclass('data', HTMLDataElement);\n// Reflected properties, strings.\n// HTMLEmbedElement.value => string, reflected attribute\nreflectProperties([{ value: [''] }], HTMLDataElement);\n//# sourceMappingURL=HTMLDataElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nexport class HTMLDataListElement extends HTMLElement {\n    /**\n     * Getter returning option elements that are direct children of a HTMLDataListElement\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLDataListElement\n     * @return Element \"options\" objects that are direct children.\n     */\n    get options() {\n        return this.childNodes.filter((node) => node.nodeName === 'OPTION');\n    }\n}\nregisterSubclass('datalist', HTMLDataListElement);\n/**\n * HTMLDataListElement.options Read only\n * Is a HTMLCollection representing a collection of the contained option elements.\n */\n/**\n * <label for=\"myBrowser\">Choose a browser from this list:</label>\n * <input list=\"browsers\" id=\"myBrowser\" name=\"myBrowser\" />\n * <datalist id=\"browsers\">\n *   <option value=\"Chrome\">\n *   <option value=\"Firefox\">\n *   <option value=\"Internet Explorer\">\n *   <option value=\"Opera\">\n *   <option value=\"Safari\">\n *   <option value=\"Microsoft Edge\">\n * </datalist>\n */\n//# sourceMappingURL=HTMLDataListElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLEmbedElement extends HTMLElement {\n}\nregisterSubclass('embed', HTMLEmbedElement);\n// Reflected properties, strings.\n// HTMLEmbedElement.height => string, reflected attribute\n// HTMLEmbedElement.src => string, reflected attribute\n// HTMLEmbedElement.type => string, reflected attribute\n// HTMLEmbedElement.width => string, reflected attribute\nreflectProperties([{ height: [''] }, { src: [''] }, { type: [''] }, { width: [''] }], HTMLEmbedElement);\n// Unimplemented\n// HTMLEmbedElement.align => string, not reflected\n// HTMLEmbedElement.name => string, not reflected\n//# sourceMappingURL=HTMLEmbedElement.js.map","import { matchChildrenElements, tagNameConditionPredicate } from './matchElements';\nconst MATCHING_CHILD_ELEMENT_TAGNAMES = 'BUTTON FIELDSET INPUT OBJECT OUTPUT SELECT TEXTAREA'.split(' ');\n/**\n * The HTMLFormControlsCollection interface represents a collection of HTML form control elements.\n * It is mixedin to both HTMLFormElement and HTMLFieldSetElement.\n */\nexport const HTMLFormControlsCollectionMixin = (defineOn) => {\n    Object.defineProperty(defineOn.prototype, 'elements', {\n        /**\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormControlsCollection\n         * @return Element array matching children of specific tagnames.\n         */\n        get() {\n            return matchChildrenElements(this, tagNameConditionPredicate(MATCHING_CHILD_ELEMENT_TAGNAMES));\n        },\n    });\n};\n//# sourceMappingURL=HTMLFormControlsMixin.js.map","import { registerSubclass } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLFormControlsCollectionMixin } from './HTMLFormControlsMixin';\nimport { HTMLElement } from './HTMLElement';\nimport { toLower } from '../../utils';\nexport class HTMLFieldSetElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFieldSetElement\n     * @return hardcoded string 'fieldset'\n     */\n    get type() {\n        return toLower(this.tagName);\n    }\n}\nregisterSubclass('fieldset', HTMLFieldSetElement);\nHTMLFormControlsCollectionMixin(HTMLFieldSetElement);\n// Reflected properties\n// HTMLFieldSetElement.name => string, reflected attribute\n// HTMLFieldSetElement.disabled => boolean, reflected attribute\nreflectProperties([{ name: [''] }, { disabled: [false] }], HTMLFieldSetElement);\n// Unimplemented properties\n// HTMLFieldSetElement.validity\n// HTMLFieldSetElement.willValidate\n// HTMLFieldSetElement.validationMessage\n//# sourceMappingURL=HTMLFieldSetElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { HTMLFormControlsCollectionMixin } from './HTMLFormControlsMixin';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLFormElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/length\n     * @return number of controls in the form\n     */\n    get length() {\n        return this.elements.length;\n    }\n}\nregisterSubclass('form', HTMLFormElement);\nHTMLFormControlsCollectionMixin(HTMLFormElement);\n// Reflected properties\n// HTMLFormElement.name => string, reflected attribute\n// HTMLFormElement.method => string, reflected attribute\n// HTMLFormElement.target => string, reflected attribute\n// HTMLFormElement.action => string, reflected attribute\n// HTMLFormElement.enctype => string, reflected attribute\n// HTMLFormElement.acceptCharset => string, reflected attribute\n// HTMLFormElement.autocomplete => string, reflected attribute\n// HTMLFormElement.autocapitalize => string, reflected attribute\nreflectProperties([\n    { name: [''] },\n    { method: ['get'] },\n    { target: [''] },\n    { action: [''] },\n    { enctype: ['application/x-www-form-urlencoded'] },\n    { acceptCharset: ['', /* attr */ 'accept-charset'] },\n    { autocomplete: ['on'] },\n    { autocapitalize: ['sentences'] },\n], HTMLFormElement);\n// Unimplemented properties\n// HTMLFormElement.encoding => string, reflected attribute\n// HTMLFormElement.noValidate => boolean, reflected attribute\n/*\nUnimplemented, TBD:\n\nNamed inputs are added to their owner form instance as properties, and can overwrite native properties\nif they share the same name (eg a form with an input named action will have its action property return\nthat input instead of the form's action HTML attribute).\n*/\n//# sourceMappingURL=HTMLFormElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList } from './DOMTokenList';\nexport class HTMLIFrameElement extends HTMLElement {\n    _sandbox;\n    // HTMLIFrameElement.sandbox, DOMTokenList, reflected attribute\n    get sandbox() {\n        return this._sandbox || (this._sandbox = new DOMTokenList(this, 'sandbox'));\n    }\n}\nregisterSubclass('iframe', HTMLIFrameElement);\ndefinePropertyBackedAttributes(HTMLIFrameElement, {\n    sandbox: [(el) => el.sandbox.value, (el, value) => (el.sandbox.value = value)],\n});\n// Reflected properties\n// HTMLIFrameElement.allow => string, reflected attribute\n// HTMLIFrameElement.allowFullscreen => boolean, reflected attribute\n// HTMLIFrameElement.csp => string, reflected attribute\n// HTMLIFrameElement.height => string, reflected attribute\n// HTMLIFrameElement.name => string, reflected attribute\n// HTMLIFrameElement.referrerPolicy => string, reflected attribute\n// HTMLIFrameElement.src => string, reflected attribute\n// HTMLIFrameElement.srcdoc => string, reflected attribute\n// HTMLIFrameElement.width => string, reflected attribute\nreflectProperties([\n    { allow: [''] },\n    { allowFullscreen: [false] },\n    { csp: [''] },\n    { height: [''] },\n    { name: [''] },\n    { referrerPolicy: [''] },\n    { src: [''] },\n    { srcdoc: [''] },\n    { width: [''] },\n], HTMLIFrameElement);\n// Unimplemented Properties\n// HTMLIFrameElement.allowPaymentRequest => boolean, reflected attribute\n// HTMLIFrameElement.contentDocument => Document, read only (active document in the inline frame's nested browsing context)\n// HTMLIFrameElement.contentWindow => WindowProxy, read only (window proxy for the nested browsing context)\n//# sourceMappingURL=HTMLIFrameElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLImageElement extends HTMLElement {\n}\nregisterSubclass('img', HTMLImageElement);\n// Reflected Properties\n// HTMLImageElement.alt => string, reflected attribute\n// HTMLImageElement.crossOrigin => string, reflected attribute\n// HTMLImageElement.height => number, reflected attribute\n// HTMLImageElement.isMap => boolean, reflected attribute\n// HTMLImageElement.referrerPolicy => string, reflected attribute\n// HTMLImageElement.src => string, reflected attribute\n// HTMLImageElement.sizes => string, reflected attribute\n// HTMLImageElement.srcset => string, reflected attribute\n// HTMLImageElement.useMap => string, reflected attribute\n// HTMLImageElement.width => number, reflected attribute\nreflectProperties([\n    { alt: [''] },\n    { crossOrigin: [''] },\n    { height: [0] },\n    { isMap: [false] },\n    { referrerPolicy: [''] },\n    { src: [''] },\n    { sizes: [''] },\n    { srcset: [''] },\n    { useMap: [''] },\n    { width: [0] },\n], HTMLImageElement);\n// Unimplmented Properties\n// HTMLImageElement.complete Read only\n// Returns a Boolean that is true if the browser has finished fetching the image, whether successful or not. It also shows true, if the image has no src value.\n// HTMLImageElement.currentSrc Read only\n// Returns a DOMString representing the URL to the currently displayed image (which may change, for example in response to media queries).\n// HTMLImageElement.naturalHeight Read only\n// Returns a unsigned long representing the intrinsic height of the image in CSS pixels, if it is available; else, it shows 0.\n// HTMLImageElement.naturalWidth Read only\n// Returns a unsigned long representing the intrinsic width of the image in CSS pixels, if it is available; otherwise, it will show 0.\n//# sourceMappingURL=HTMLImageElement.js.map","import { matchChildrenElements } from './matchElements';\n/**\n * The HTMLInputLabels interface represents a collection of input getters for their related label Elements.\n * It is mixedin to both HTMLInputElement, HTMLMeterElement, and HTMLProgressElement.\n */\nexport const HTMLInputLabelsMixin = (defineOn) => {\n    Object.defineProperty(defineOn.prototype, 'labels', {\n        /**\n         * Getter returning label elements associated to this meter.\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLProgressElement/labels\n         * @return label elements associated to this meter.\n         */\n        get() {\n            return matchChildrenElements(this.ownerDocument || this, (element) => element.tagName === 'LABEL' && element.for && element.for === this.id);\n        },\n    });\n};\n//# sourceMappingURL=HTMLInputLabelsMixin.js.map","import { HTMLElement } from './HTMLElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nimport { reflectProperties } from './enhanceElement';\nimport { registerSubclass } from './Element';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\nexport class HTMLInputElement extends HTMLElement {\n    // Per spec, some attributes like 'value' and 'checked' change behavior based on dirty flags.\n    // Since these flags can only be changed on interaction (outside of worker), we can ignore them here.\n    // Tradeoffs: Consequent attribute changes are missing, HTMLFormElement.reset() doesn't work, etc.\n    // Alternative: Implement dirty flag checking in worker-dom, which would require listening for\n    //     and forwarding interaction events to flag \"dirtiness\".\n    // https://html.spec.whatwg.org/multipage/input.html#common-input-element-apis\n    [21 /* TransferrableKeys.value */] = '';\n    dirtyValue = false;\n    [47 /* TransferrableKeys.checked */] = false;\n    // TODO(willchou): There are a few interrelated issues with `value` property.\n    //   1. \"Dirtiness\" caveat above.\n    //   2. Duplicate SYNC events. Sent by every event fired from elements with a `value`, plus the default 'change' listener.\n    //   3. Duplicate MUTATE events. Caused by stale `value` in worker due to no default 'input' listener (see below).\n    get value() {\n        return !this.dirtyValue ? this.getAttribute('value') || '' : this[21 /* TransferrableKeys.value */];\n    }\n    set value(value) {\n        // Don't early-out if value doesn't appear to have changed.\n        // The worker may have a stale value since 'input' events aren't being forwarded.\n        this[21 /* TransferrableKeys.value */] = String(value);\n        this.dirtyValue = true;\n        transfer(this.ownerDocument, [\n            3 /* TransferrableMutationType.PROPERTIES */,\n            this[7 /* TransferrableKeys.index */],\n            storeString('value'),\n            0 /* NumericBoolean.FALSE */,\n            storeString(value),\n        ]);\n    }\n    get valueAsDate() {\n        // Don't use Date constructor or Date.parse() since ISO 8601 (yyyy-mm-dd) parsing is inconsistent.\n        const date = this.stringToDate(this.value);\n        const invalid = !date || isNaN(date.getTime());\n        return invalid ? null : date;\n    }\n    /** Unlike browsers, does not throw if this input[type] doesn't support dates. */\n    set valueAsDate(value) {\n        if (!(value instanceof Date)) {\n            throw new TypeError('The provided value is not a Date.');\n        }\n        this.value = this.dateToString(value);\n    }\n    get valueAsNumber() {\n        if (this.value.length === 0) {\n            return NaN;\n        }\n        return Number(this.value);\n    }\n    /** Unlike browsers, does not throw if this input[type] doesn't support numbers. */\n    set valueAsNumber(value) {\n        if (typeof value === 'number') {\n            this.value = String(value);\n        }\n        else {\n            this.value = '';\n        }\n    }\n    get checked() {\n        return this[47 /* TransferrableKeys.checked */];\n    }\n    set checked(value) {\n        if (this[47 /* TransferrableKeys.checked */] === value) {\n            return;\n        }\n        this[47 /* TransferrableKeys.checked */] = !!value;\n        transfer(this.ownerDocument, [\n            3 /* TransferrableMutationType.PROPERTIES */,\n            this[7 /* TransferrableKeys.index */],\n            storeString('checked'),\n            1 /* NumericBoolean.TRUE */,\n            value === true ? 1 /* NumericBoolean.TRUE */ : 0 /* NumericBoolean.FALSE */,\n        ]);\n    }\n    /**\n     * Returns a date in 'yyyy-mm-dd' format.\n     * @param date\n     */\n    dateToString(date) {\n        const y = date.getFullYear();\n        const m = date.getMonth() + 1; // getMonth() is 0-index.\n        const d = date.getDate();\n        return `${y}-${m > 9 ? '' : '0'}${m}-${d > 9 ? '' : '0'}${d}`;\n    }\n    /**\n     * Returns a Date from a 'yyyy-mm-dd' format.\n     * @param s\n     */\n    stringToDate(str) {\n        const components = str.split('-');\n        if (components.length !== 3) {\n            return null;\n        }\n        const [y, m, d] = components;\n        // Month is 0-index.\n        return new Date(parseInt(y, 10), parseInt(m, 10) - 1, parseInt(d, 10));\n    }\n}\nregisterSubclass('input', HTMLInputElement);\nHTMLInputLabelsMixin(HTMLInputElement);\n// Reflected Properties\n// HTMLInputElement.formAction => string, reflected attribute\n// HTMLInputElement.formEncType\t=> string, reflected attribute\n// HTMLInputElement.formMethod => string, reflected attribute\n// HTMLInputElement.formTarget => string, reflected attribute\n// HTMLInputElement.name => string, reflected attribute\n// HTMLInputElement.type => string, reflected attribute\n// HTMLInputElement.disabled => boolean, reflected attribute\n// HTMLInputElement.autofocus => boolean, reflected attribute\n// HTMLInputElement.required => boolean, reflected attribute\n// HTMLInputElement.defaultChecked => boolean, reflected attribute (\"checked\")\n// HTMLInputElement.alt => string, reflected attribute\n// HTMLInputElement.height => number, reflected attribute\n// HTMLInputElement.src => string, reflected attribute\n// HTMLInputElement.width => number, reflected attribute\n// HTMLInputElement.accept => string, reflected attribute\n// HTMLInputElement.autocomplete => string, reflected attribute\n// HTMLInputElement.maxLength => number, reflected attribute\n// HTMLInputElement.size => number, reflected attribute\n// HTMLInputElement.pattern => string, reflected attribute\n// HTMLInputElement.placeholder => string, reflected attribute\n// HTMLInputElement.readOnly => boolean, reflected attribute\n// HTMLInputElement.min => string, reflected attribute\n// HTMLInputElement.max => string, reflected attribute\n// HTMLInputElement.defaultValue => string, reflected attribute\n// HTMLInputElement.dirname => string, reflected attribute\n// HTMLInputElement.multiple => boolean, reflected attribute\n// HTMLInputElement.step => string, reflected attribute\n// HTMLInputElement.autocapitalize => string, reflected attribute\nreflectProperties([\n    { accept: [''] },\n    { alt: [''] },\n    { autocapitalize: [''] },\n    { autocomplete: [''] },\n    { autofocus: [false] },\n    { defaultChecked: [false, /* attr */ 'checked'] },\n    { defaultValue: ['', /* attr */ 'value'] },\n    { dirName: [''] },\n    { disabled: [false] },\n    { formAction: [''] },\n    { formEncType: [''] },\n    { formMethod: [''] },\n    { formTarget: [''] },\n    { height: [0] },\n    { max: [''] },\n    { maxLength: [0] },\n    { min: [''] },\n    { multiple: [false] },\n    { name: [''] },\n    { pattern: [''] },\n    { placeholder: [''] },\n    { readOnly: [false] },\n    { required: [false] },\n    { size: [0] },\n    { src: [''] },\n    { step: [''] },\n    { type: ['text'] },\n    { width: [0] },\n], HTMLInputElement);\n// TODO(KB) Not Reflected Properties\n// HTMLInputElement.indeterminate => boolean\n// Unimplemented Properties\n// HTMLInputElement.formNoValidate => string, reflected attribute\n// HTMLInputElement.validity => ValidityState, readonly\n// HTMLInputElement.validationMessage => string, readonly\n// HTMLInputElement.willValidate => boolean, readonly\n// HTMLInputElement.allowdirs => boolean\n// HTMLInputElement.files\t=> Array<File>\n// HTMLInputElement.webkitdirectory\t=> boolean, reflected attribute\n// HTMLInputElement.webkitEntries => Array<FileSystemEntry>\n// HTMLInputElement.selectionStart => number\n// HTMLInputElement.selectionEnd => number\n// HTMLInputElement.selectionDirection => string\n// HTMLInputElement.list => Element, read only (element pointed by list attribute)\n// Unimplemented Methods\n// HTMLInputElement.setSelectionRange()\n// HTMLInputElement.setRangeText()\n// HTMLInputElement.setCustomValidity()\n// HTMLInputElement.checkValidity()\n// HTMLInputElement.stepDown()\n// HTMLInputElement.stepUp()\n//# sourceMappingURL=HTMLInputElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { matchChildElement, tagNameConditionPredicate } from './matchElements';\nexport class HTMLLabelElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control\n     * @return input element\n     */\n    get control() {\n        const htmlFor = this.getAttribute('for');\n        if (htmlFor !== null) {\n            return this.ownerDocument && this.ownerDocument.getElementById(htmlFor);\n        }\n        return matchChildElement(this, tagNameConditionPredicate(['INPUT']));\n    }\n}\nregisterSubclass('label', HTMLLabelElement);\n// Reflected Properties\n// HTMLLabelElement.htmlFor => string, reflected attribute 'for'\nreflectProperties([{ htmlFor: ['', 'for'] }], HTMLLabelElement);\n//# sourceMappingURL=HTMLLabelElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nexport class HTMLLinkElement extends HTMLElement {\n    _relList;\n    get relList() {\n        return this._relList || (this._relList = new DOMTokenList(this, 'rel'));\n    }\n}\nregisterSubclass('link', HTMLLinkElement);\ndefinePropertyBackedAttributes(HTMLLinkElement, {\n    rel: [(el) => el.relList.value, (el, value) => (el.relList.value = value)],\n});\nsynchronizedAccessor(HTMLLinkElement, 'relList', 'rel');\n// Reflected Properties\n// HTMLLinkElement.as => string, reflected attribute\n// HTMLLinkElement.crossOrigin => string, reflected attribute\n// HTMLLinkElement.disabled => boolean, reflected attribute\n// HTMLLinkElement.href => string, reflected attribute\n// HTMLLinkElement.hreflang => string, reflected attribute\n// HTMLLinkElement.media => string, reflected attribute\n// HTMLLinkElement.referrerPolicy => string, reflected attribute\n// HTMLLinkElement.sizes => string, reflected attribute\n// HTMLLinkElement.type => string, reflected attribute\nreflectProperties([\n    { as: [''] },\n    { crossOrigin: [''] },\n    { disabled: [false] },\n    { href: [''] },\n    { hreflang: [''] },\n    { media: [''] },\n    { referrerPolicy: [''] },\n    { sizes: [''] },\n    { type: [''] },\n], HTMLLinkElement);\n// Unimplemented Properties\n// LinkStyle.sheet Read only\n// Returns the StyleSheet object associated with the given element, or null if there is none.\n//# sourceMappingURL=HTMLLinkElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { matchChildrenElements } from './matchElements';\nexport class HTMLMapElement extends HTMLElement {\n    /**\n     * Getter returning area elements associated to this map.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLMapElement\n     * @return area elements associated to this map.\n     */\n    get areas() {\n        return matchChildrenElements(this, (element) => element.tagName === 'AREA');\n    }\n}\nregisterSubclass('map', HTMLMapElement);\n// Reflected Properties\n// HTMLMapElement.name => string, reflected attribute\nreflectProperties([{ name: [''] }], HTMLMapElement);\n//# sourceMappingURL=HTMLMapElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nexport class HTMLMeterElement extends HTMLElement {\n}\nregisterSubclass('meter', HTMLMeterElement);\nHTMLInputLabelsMixin(HTMLMeterElement);\n// Reflected Properties\n// HTMLMeterElement.high => number, reflected attribute\n// HTMLMeterElement.low => number, reflected attribute\n// HTMLMeterElement.max => number, reflected attribute\n// HTMLMeterElement.min => number, reflected attribute\n// HTMLMeterElement.optimum => number, reflected attribute\n// HTMLMeterElement.value => number, reflected attribute\nreflectProperties([{ high: [0] }, { low: [0] }, { max: [1] }, { min: [0] }, { optimum: [0] }, { value: [0] }], HTMLMeterElement);\n//# sourceMappingURL=HTMLMeterElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLModElement extends HTMLElement {\n}\nregisterSubclass('del', HTMLModElement);\nregisterSubclass('ins', HTMLModElement);\n// Reflected Properties\n// HTMLModElement.cite => string, reflected attribute\n// HTMLModElement.datetime => string, reflected attribute\nreflectProperties([{ cite: [''] }, { datetime: [''] }], HTMLModElement);\n//# sourceMappingURL=HTMLModElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLOListElement extends HTMLElement {\n}\nregisterSubclass('ol', HTMLOListElement);\n// Reflected Properties\n// HTMLModElement.reversed => boolean, reflected attribute\n// HTMLModElement.start => number, reflected attribute\n// HTMLOListElement.type => string, reflected attribute\nreflectProperties([{ reversed: [false] }, { start: [1] }, { type: [''] }], HTMLOListElement);\n//# sourceMappingURL=HTMLOListElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { transfer } from '../MutationTransfer';\nimport { store as storeString } from '../strings';\nexport class HTMLOptionElement extends HTMLElement {\n    [52 /* TransferrableKeys.selected */] = false;\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return position of the option within the list of options it's within, or zero if there is no valid parent.\n     */\n    get index() {\n        return (this.parentNode && this.parentNode.children.indexOf(this)) || 0;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return label attribute value or text content if there is no attribute.\n     */\n    get label() {\n        return this.getAttribute('label') || this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param label new label value to store as an attribute.\n     */\n    set label(label) {\n        this.setAttribute('label', label);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return boolean based on if the option element is selected.\n     */\n    get selected() {\n        return this[52 /* TransferrableKeys.selected */];\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param value new selected boolean value.\n     */\n    set selected(value) {\n        this[52 /* TransferrableKeys.selected */] = !!value;\n        transfer(this.ownerDocument, [\n            3 /* TransferrableMutationType.PROPERTIES */,\n            this[7 /* TransferrableKeys.index */],\n            storeString('selected'),\n            1 /* NumericBoolean.TRUE */,\n            this[52 /* TransferrableKeys.selected */] ? 1 /* NumericBoolean.TRUE */ : 0 /* NumericBoolean.FALSE */,\n        ]);\n    }\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param text new text content to store for this Element.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return value attribute value or text content if there is no attribute.\n     */\n    get value() {\n        return this.getAttribute('value') || this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param value new value for an option element.\n     */\n    set value(value) {\n        this.setAttribute('value', value);\n    }\n}\nregisterSubclass('option', HTMLOptionElement);\ndefinePropertyBackedAttributes(HTMLOptionElement, {\n    selected: [(el) => String(el[52 /* TransferrableKeys.selected */]), (el, value) => (el.selected = value === 'true')],\n});\n// Reflected Properties\n// HTMLOptionElement.defaultSelected => boolean, reflected attribute\n// HTMLOptionElement.disabled => boolean, reflected attribute\n// HTMLOptionElement.type => string, reflected attribute\nreflectProperties([{ defaultSelected: [false, /* attr */ 'selected'] }, { disabled: [false] }, { type: [''] }], HTMLOptionElement);\n// Implemented at HTMLElement\n// HTMLOptionElement.form, Read only\t=> HTMLFormElement\n//# sourceMappingURL=HTMLOptionElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nexport class HTMLProgressElement extends HTMLElement {\n    [48 /* TransferrableKeys.indeterminate */] = true;\n    [21 /* TransferrableKeys.value */] = 0;\n    dirtyValue = false;\n    get position() {\n        return this[48 /* TransferrableKeys.indeterminate */] ? -1 : this.value / this.max;\n    }\n    get value() {\n        return !this.dirtyValue ? Number(this.getAttribute('value')) || 0 : this[21 /* TransferrableKeys.value */];\n    }\n    set value(value) {\n        this[48 /* TransferrableKeys.indeterminate */] = false;\n        this[21 /* TransferrableKeys.value */] = value;\n        this.dirtyValue = true;\n        // TODO(KB) This is a property mutation needing tracked.\n    }\n}\nregisterSubclass('progress', HTMLProgressElement);\nHTMLInputLabelsMixin(HTMLProgressElement);\n// Reflected Properties\n// HTMLModElement.max => number, reflected attribute\nreflectProperties([{ max: [1] }], HTMLProgressElement);\n//# sourceMappingURL=HTMLProgressElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLQuoteElement extends HTMLElement {\n}\nregisterSubclass('blockquote', HTMLQuoteElement);\nregisterSubclass('q', HTMLQuoteElement);\n// Reflected Properties\n// HTMLModElement.cite => string, reflected attribute\nreflectProperties([{ cite: [''] }], HTMLQuoteElement);\n//# sourceMappingURL=HTMLQuoteElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLScriptElement extends HTMLElement {\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement\n     * @param text new text content to store for this Element.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n}\nregisterSubclass('script', HTMLScriptElement);\n// Reflected Properties\n// HTMLScriptElement.type => string, reflected attribute\n// HTMLScriptElement.src => string, reflected attribute\n// HTMLScriptElement.charset => string, reflected attribute\n// HTMLScriptElement.async => boolean, reflected attribute\n// HTMLScriptElement.defer => boolean, reflected attribute\n// HTMLScriptElement.crossOrigin => string, reflected attribute\n// HTMLScriptElement.noModule => boolean, reflected attribute\nreflectProperties([{ type: [''] }, { src: [''] }, { charset: [''] }, { async: [false] }, { defer: [false] }, { crossOrigin: [''] }, { noModule: [false] }], HTMLScriptElement);\n//# sourceMappingURL=HTMLScriptElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nimport { matchChildrenElements, matchChildElement, tagNameConditionPredicate } from './matchElements';\nconst isOptionPredicate = tagNameConditionPredicate(['OPTION']);\nconst isSelectedOptionPredicate = (element) => isOptionPredicate(element) && element.selected === true;\nexport class HTMLSelectElement extends HTMLElement {\n    [49 /* TransferrableKeys.size */] = -1 /* SizeDefaults.UNMODIFIED */;\n    /**\n     * Extend functionality after child insertion to make sure the correct option is selected.\n     * @param child\n     */\n    [56 /* TransferrableKeys.insertedNode */](child) {\n        super[56 /* TransferrableKeys.insertedNode */](child);\n        // When this singular value select is appending a child, set the value property for two cases.\n        // 1. The inserted child is already selected.\n        // 2. The current value of the select is the default ('').\n        if ((!this.multiple && isOptionPredicate(child) && child.selected) || this.value === '') {\n            this.value = child.value;\n        }\n    }\n    /**\n     * Extend functionality after child insertion to make sure the correct option is selected.\n     * @param child\n     */\n    [57 /* TransferrableKeys.removedNode */](child) {\n        super[57 /* TransferrableKeys.removedNode */](child);\n        // When this singular value select is removing a selected child\n        // ... set the value property to the first valid option.\n        if (!this.multiple && child.selected) {\n            const options = this.options;\n            if (options.length > 0) {\n                this.value = options[0].value;\n            }\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/length\n     * @return number of controls in the form\n     */\n    get length() {\n        return this.options.length;\n    }\n    /**\n     * Getter returning option elements that are direct children of a HTMLSelectElement\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return Element \"options\" objects that are direct children.\n     */\n    get options() {\n        return this.children.filter(isOptionPredicate);\n    }\n    /**\n     * Getter returning the index of the first selected <option> element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedIndex\n     * @return the index of the first selected option element, or -1 if no element is selected.\n     */\n    get selectedIndex() {\n        const firstSelectedChild = matchChildElement(this, isSelectedOptionPredicate);\n        return firstSelectedChild ? this.children.indexOf(firstSelectedChild) : -1;\n    }\n    /**\n     * Setter making the <option> element at the passed index selected.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedIndex\n     * @param selectedIndex index number to make selected.\n     */\n    set selectedIndex(selectedIndex) {\n        this.children.forEach((element, index) => (element.selected = index === selectedIndex));\n    }\n    /**\n     * Getter returning the <option> elements selected.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedOptions\n     * @return array of Elements currently selected.\n     */\n    get selectedOptions() {\n        return matchChildrenElements(this, isSelectedOptionPredicate);\n    }\n    /**\n     * Getter returning the size of the select element (by default 1 for single and 4 for multiple)\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return size of the select element.\n     */\n    get size() {\n        return this[49 /* TransferrableKeys.size */] === -1 /* SizeDefaults.UNMODIFIED */\n            ? this.multiple\n                ? 4 /* SizeDefaults.MULTIPLE */\n                : 1 /* SizeDefaults.SINGLE */\n            : this[49 /* TransferrableKeys.size */];\n    }\n    /**\n     * Override the size of this element (each positive unit is the height of a single option)\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @param size number to set the size to.\n     */\n    set size(size) {\n        this[49 /* TransferrableKeys.size */] = size > 0 ? size : this.multiple ? 4 /* SizeDefaults.MULTIPLE */ : 1 /* SizeDefaults.SINGLE */;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return string representing the select element type.\n     */\n    get type() {\n        return this.multiple ? \"select-one\" /* TypeDefaults.MULTIPLE */ : \"select-multiple\" /* TypeDefaults.SINGLE */;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return the value of the first selected option\n     */\n    get value() {\n        const firstSelectedChild = matchChildElement(this, isSelectedOptionPredicate);\n        return firstSelectedChild ? firstSelectedChild.value : '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @set value\n     */\n    set value(value) {\n        const stringValue = String(value);\n        this.children.forEach((element) => isOptionPredicate(element) && (element.selected = element.value === stringValue));\n    }\n}\nregisterSubclass('select', HTMLSelectElement);\nHTMLInputLabelsMixin(HTMLSelectElement);\n// Reflected Properties\n// HTMLSelectElement.multiple => boolean, reflected attribute\n// HTMLSelectElement.name => string, reflected attribute\n// HTMLSelectElement.required => boolean, reflected attribute\nreflectProperties([{ multiple: [false] }, { name: [''] }, { required: [false] }], HTMLSelectElement);\n// Implemented on HTMLElement\n// HTMLSelectElement.form => HTMLFormElement, readonly\n// Unimplemented Properties\n// HTMLSelectElement.validation => string\n// HTMLSelectElement.validity => ValidityState\n// HTMLSelectElement.willValidate => boolean\n//# sourceMappingURL=HTMLSelectElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLSourceElement extends HTMLElement {\n}\nregisterSubclass('source', HTMLSourceElement);\n// Reflected Properties\n// HTMLSourceElement.media => string, reflected attribute\n// HTMLSourceElement.sizes => string, reflected attribute\n// HTMLSourceElement.src => string, reflected attribute\n// HTMLSourceElement.srcset => string, reflected attribute\n// HTMLSourceElement.type => string, reflected attribute\nreflectProperties([{ media: [''] }, { sizes: [''] }, { src: [''] }, { srcset: [''] }, { type: [''] }], HTMLSourceElement);\n// Unimplemented Properties\n// HTMLSourceElement.keySystem => string\n//# sourceMappingURL=HTMLSourceElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLStyleElement extends HTMLElement {\n}\nregisterSubclass('style', HTMLStyleElement);\n// Reflected Properties\n// HTMLStyleElement.media => string, reflected attribute\n// HTMLStyleElement.type => string, reflected attribute\nreflectProperties([{ media: [''] }, { type: [''] }], HTMLStyleElement);\n// Unimplemented Properties\n// HTMLStyleElement.disabled => boolean\n// HTMLStyleElement.scoped => boolean, reflected attribute\n// HTMLStyleElement.sheet => StyleSheet, read only\n//# sourceMappingURL=HTMLStyleElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList } from './DOMTokenList';\nimport { matchNearestParent, tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nexport class HTMLTableCellElement extends HTMLElement {\n    _headers;\n    get headers() {\n        return this._headers || (this._headers = new DOMTokenList(this, 'headers'));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCellElement\n     * @return position of the cell within the parent tr, if not nested in a tr the value is -1.\n     */\n    get cellIndex() {\n        const parent = matchNearestParent(this, tagNameConditionPredicate(['TR']));\n        return parent !== null ? matchChildrenElements(parent, tagNameConditionPredicate(['TH', 'TD'])).indexOf(this) : -1;\n    }\n}\nregisterSubclass('th', HTMLTableCellElement);\nregisterSubclass('td', HTMLTableCellElement);\ndefinePropertyBackedAttributes(HTMLTableCellElement, {\n    headers: [(el) => el.headers.value, (el, value) => (el.headers.value = value)],\n});\n// Reflected Properties\n// HTMLTableCellElement.abbr => string, reflected attribute\n// HTMLTableCellElement.colSpan => number, reflected attribute\n// HTMLTableCellElement.rowSpan => number, reflected attribute\n// HTMLTableCellElement.scope => string, reflected attribute\nreflectProperties([{ abbr: [''] }, { colSpan: [1] }, { rowSpan: [1] }, { scope: [''] }], HTMLTableCellElement);\n//# sourceMappingURL=HTMLTableCellElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLTableColElement extends HTMLElement {\n}\nregisterSubclass('col', HTMLTableColElement);\n// Reflected Properties\n// HTMLTableColElement.span => number, reflected attribute\nreflectProperties([{ span: [1] }], HTMLTableColElement);\n//# sourceMappingURL=HTMLTableColElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { matchChildElement, matchChildrenElements, tagNameConditionPredicate } from './matchElements';\nimport { toUpper } from '../../utils';\nconst removeElement = (element) => element && element.remove();\nconst insertBeforeElementsWithTagName = (parent, element, tagNames) => {\n    console.assert(tagNames.every((t) => t === toUpper(t)), 'tagNames must be all uppercase.');\n    const insertBeforeElement = matchChildElement(parent, (element) => !tagNames.includes(element.tagName));\n    if (insertBeforeElement) {\n        parent.insertBefore(element, insertBeforeElement);\n    }\n    else {\n        parent.appendChild(element);\n    }\n};\nexport class HTMLTableElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/caption\n     * @return first matching caption Element or null if none exists.\n     */\n    get caption() {\n        return matchChildElement(this, tagNameConditionPredicate(['CAPTION']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/caption\n     * @param element new caption element to replace the existing, or become the first element child.\n     */\n    set caption(newElement) {\n        if (newElement && newElement.tagName === 'CAPTION') {\n            // If a correct object is given,\n            // it is inserted in the tree as the first child of this element and the first <caption>\n            // that is a child of this element is removed from the tree, if any.\n            removeElement(this.caption);\n            this.insertBefore(newElement, this.firstElementChild);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @return first matching thead Element or null if none exists.\n     */\n    get tHead() {\n        return matchChildElement(this, tagNameConditionPredicate(['THEAD']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @param newElement new thead element to insert in this table.\n     */\n    set tHead(newElement) {\n        if (newElement && newElement.tagName === 'THEAD') {\n            // If a correct object is given,\n            // it is inserted in the tree immediately before the first element that is\n            // neither a <caption>, nor a <colgroup>, or as the last child if there is no such element.\n            // Additionally, the first <thead> that is a child of this element is removed from the tree, if any.\n            removeElement(this.tHead);\n            insertBeforeElementsWithTagName(this, newElement, ['CAPTION', 'COLGROUP']);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @return first matching thead Element or null if none exists.\n     */\n    get tFoot() {\n        return matchChildElement(this, tagNameConditionPredicate(['TFOOT']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @param newElement new tfoot element to insert in this table.\n     */\n    set tFoot(newElement) {\n        if (newElement && newElement.tagName === 'TFOOT') {\n            // If a correct object is given,\n            // it is inserted in the tree immediately before the first element that is neither a <caption>,\n            // a <colgroup>, nor a <thead>, or as the last child if there is no such element, and the first <tfoot> that is a child of\n            // this element is removed from the tree, if any.\n            removeElement(this.tFoot);\n            insertBeforeElementsWithTagName(this, newElement, ['CAPTION', 'COLGROUP', 'THEAD']);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement\n     * @return array of 'tr' tagname elements\n     */\n    get rows() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TR']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement\n     * @return array of 'tbody' tagname elements\n     */\n    get tBodies() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TBODY']));\n    }\n}\nregisterSubclass('table', HTMLTableElement);\n// Unimplemented Properties\n// HTMLTableElement.sortable => boolean\n// Unimplemented Methods\n// HTMLTableElement.createTHead()\n// HTMLTableElement.deleteTHead()\n// HTMLTableElement.createTFoot()\n// HTMLTableElement.deleteTFoot()\n// HTMLTableElement.createCaption()\n// HTMLTableElement.deleteCaption()\n// HTMLTableElement.insertRow()\n// HTMLTableElement.deleteRow()\n//# sourceMappingURL=HTMLTableElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { matchNearestParent, tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nconst TABLE_SECTION_TAGNAMES = 'TABLE TBODY THEAD TFOOT'.split(' ');\nconst indexInAncestor = (element, isValidAncestor) => {\n    const parent = matchNearestParent(element, isValidAncestor);\n    // TODO(KB): This is either a HTMLTableElement or HTMLTableSectionElement.\n    return parent === null ? -1 : parent.rows.indexOf(element);\n};\nexport class HTMLTableRowElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return td and th elements that are children of this row.\n     */\n    get cells() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TD', 'TH']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return position of the row within a table, if not nested within in a table the value is -1.\n     */\n    get rowIndex() {\n        return indexInAncestor(this, tagNameConditionPredicate(['TABLE']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return position of the row within a parent section, if not nested directly in a section the value is -1.\n     */\n    get sectionRowIndex() {\n        return indexInAncestor(this, tagNameConditionPredicate(TABLE_SECTION_TAGNAMES));\n    }\n    /**\n     * Removes the cell in provided position of this row.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @param index position of the cell in the row to remove.\n     */\n    deleteCell(index) {\n        const cell = this.cells[index];\n        if (cell) {\n            cell.remove();\n        }\n    }\n    /**\n     * Insert a new cell ('td') in the row at a specified position.\n     * @param index position in the children to insert before.\n     * @return newly inserted td element.\n     */\n    insertCell(index) {\n        const cells = this.cells;\n        const td = this.ownerDocument.createElement('td');\n        if (index < 0 || index >= cells.length) {\n            this.appendChild(td);\n        }\n        else {\n            this.insertBefore(td, this.children[index]);\n        }\n        return td;\n    }\n}\nregisterSubclass('tr', HTMLTableRowElement);\n//# sourceMappingURL=HTMLTableRowElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nexport class HTMLTableSectionElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @return All rows (tr elements) within the table section.\n     */\n    get rows() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TR']));\n    }\n    /**\n     * Remove a node in a specified position from the section.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @param index position in the section to remove the node of.\n     */\n    deleteRow(index) {\n        const rows = this.rows;\n        if (index >= 0 || index <= rows.length) {\n            rows[index].remove();\n        }\n    }\n    /**\n     * Insert a new row ('tr') in the row at a specified position.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @param index position in the children to insert before.\n     * @return newly inserted tr element.\n     */\n    insertRow(index) {\n        const rows = this.rows;\n        const tr = this.ownerDocument.createElement('tr');\n        if (index < 0 || index >= rows.length) {\n            this.appendChild(tr);\n        }\n        else {\n            this.insertBefore(tr, this.children[index]);\n        }\n        return tr;\n    }\n}\nregisterSubclass('thead', HTMLTableSectionElement);\nregisterSubclass('tfoot', HTMLTableSectionElement);\nregisterSubclass('tbody', HTMLTableSectionElement);\n//# sourceMappingURL=HTMLTableSectionElement.js.map","// <blockquote> and <q>\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLTimeElement extends HTMLElement {\n}\nregisterSubclass('time', HTMLTimeElement);\n// Reflected Properties\n// HTMLTimeElement.dateTime => string, reflected attribute\nreflectProperties([{ dateTime: [''] }], HTMLTimeElement);\n//# sourceMappingURL=HTMLTimeElement.js.map","import { CharacterData } from './CharacterData';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/Text\nexport class Text extends CharacterData {\n    constructor(data, ownerDocument, overrideIndex) {\n        super(data, 3 /* NodeType.TEXT_NODE */, '#text', ownerDocument, overrideIndex);\n    }\n    // Unimplemented Properties\n    // Text.isElementContentWhitespace – https://developer.mozilla.org/en-US/docs/Web/API/Text/isElementContentWhitespace\n    // Text.wholeText – https://developer.mozilla.org/en-US/docs/Web/API/Text/wholeText\n    // Text.assignedSlot – https://developer.mozilla.org/en-US/docs/Web/API/Text/assignedSlot\n    /**\n     * textContent getter, retrieves underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     */\n    get textContent() {\n        return this.data;\n    }\n    /**\n     * textContent setter, mutates underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     * @param value new value\n     */\n    set textContent(value) {\n        // Mutation Observation is performed by CharacterData.\n        this.nodeValue = value;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @return new Text Node with the same data as the Text to clone.\n     */\n    cloneNode() {\n        return this.ownerDocument.createTextNode(this.data);\n    }\n    /**\n     * Breaks Text node into two nodes at the specified offset, keeping both nodes in the tree as siblings.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Text/splitText\n     * @param offset number position to split text at.\n     * @return Text Node after the offset.\n     */\n    splitText(offset) {\n        const remainderTextNode = new Text(this.data.slice(offset, this.data.length), this.ownerDocument);\n        const parentNode = this.parentNode;\n        this.nodeValue = this.data.slice(0, offset);\n        if (parentNode !== null) {\n            // When this node is attached to the DOM, the remainder text needs to be inserted directly after.\n            const parentChildNodes = parentNode.childNodes;\n            const insertBeforePosition = parentChildNodes.indexOf(this) + 1;\n            const insertBeforeNode = parentChildNodes.length >= insertBeforePosition ? parentChildNodes[insertBeforePosition] : null;\n            return parentNode.insertBefore(remainderTextNode, insertBeforeNode);\n        }\n        return remainderTextNode;\n    }\n}\n//# sourceMappingURL=Text.js.map","import { ParentNode } from './ParentNode';\nimport { store as storeString } from '../strings';\nexport class DocumentFragment extends ParentNode {\n    constructor(ownerDocument, overrideIndex) {\n        super(11 /* NodeType.DOCUMENT_FRAGMENT_NODE */, '#document-fragment', ownerDocument, overrideIndex);\n        this[8 /* TransferrableKeys.creationFormat */] = [this[7 /* TransferrableKeys.index */], 11 /* NodeType.DOCUMENT_FRAGMENT_NODE */, storeString(this.nodeName), 0, 0];\n    }\n    /**\n     * @param deep boolean determines if the clone should include a recursive copy of all childNodes.\n     * @return DocumentFragment containing childNode clones of the DocumentFragment requested to be cloned.\n     */\n    cloneNode(deep = false) {\n        const clone = this.ownerDocument.createDocumentFragment();\n        if (deep) {\n            this.childNodes.forEach((child) => clone.appendChild(child.cloneNode(deep)));\n        }\n        return clone;\n    }\n}\n//# sourceMappingURL=DocumentFragment.js.map","import { Element, NS_NAME_TO_CLASS } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport './HTMLAnchorElement';\nimport './HTMLButtonElement';\nimport './HTMLCanvasElement';\nimport './HTMLDataElement';\nimport './HTMLDataListElement';\nimport './HTMLEmbedElement';\nimport './HTMLFieldSetElement';\nimport './HTMLFormElement';\nimport './HTMLIFrameElement';\nimport './HTMLImageElement';\nimport './HTMLInputElement';\nimport './HTMLLabelElement';\nimport './HTMLLinkElement';\nimport './HTMLMapElement';\nimport './HTMLMeterElement';\nimport './HTMLModElement';\nimport './HTMLOListElement';\nimport './HTMLOptionElement';\nimport './HTMLProgressElement';\nimport './HTMLQuoteElement';\nimport './HTMLScriptElement';\nimport './HTMLSelectElement';\nimport './HTMLSourceElement';\nimport './HTMLStyleElement';\nimport './HTMLTableCellElement';\nimport './HTMLTableColElement';\nimport './HTMLTableElement';\nimport './HTMLTableRowElement';\nimport './HTMLTableSectionElement';\nimport './HTMLTimeElement';\nimport { matchChildElement } from './matchElements';\nimport { Text } from './Text';\nimport { Comment } from './Comment';\nimport { toLower } from '../../utils';\nimport { DocumentFragment } from './DocumentFragment';\nimport { HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { propagate as propagateEvents } from '../Event';\nimport { propagate as propagateSyncValues } from '../SyncValuePropagation';\nimport { propagate as propagateResize } from '../ResizePropagation';\nimport { set as setPhase } from '../phase';\nconst DOCUMENT_NAME = '#document';\nexport class Document extends Element {\n    defaultView;\n    documentElement;\n    body;\n    // Internal variables.\n    postMessage;\n    addGlobalEventListener;\n    removeGlobalEventListener;\n    [58 /* TransferrableKeys.allowTransfer */] = true;\n    constructor(global) {\n        super(9 /* NodeType.DOCUMENT_NODE */, DOCUMENT_NAME, HTML_NAMESPACE, null);\n        // Element uppercases its nodeName, but Document doesn't.\n        this.nodeName = DOCUMENT_NAME;\n        this.documentElement = this; // TODO(choumx): Should be the <html> element.\n        this.defaultView = Object.assign(global, {\n            document: this,\n            addEventListener: this.addEventListener.bind(this),\n            removeEventListener: this.removeEventListener.bind(this),\n        });\n    }\n    /**\n     * Observing the Document indicates it's attached to a main thread\n     * version of the document.\n     *\n     * Each mutation needs to be transferred, synced values need to propagate.\n     */\n    [59 /* TransferrableKeys.observe */]() {\n        setPhase(1 /* Phase.Hydrating */);\n        propagateEvents(this.defaultView);\n        propagateSyncValues(this.defaultView);\n        propagateResize(this.defaultView);\n    }\n    /**\n     * Hydrate\n     * @param strings\n     * @param skeleton\n     */\n    [64 /* TransferrableKeys.hydrateNode */](strings, skeleton) {\n        switch (skeleton[0 /* TransferrableKeys.nodeType */]) {\n            case 3 /* NodeType.TEXT_NODE */:\n                return new Text(strings[skeleton[5 /* TransferrableKeys.textContent */]], this, skeleton[7 /* TransferrableKeys.index */]);\n            case 8 /* NodeType.COMMENT_NODE */:\n                return new Comment(strings[skeleton[5 /* TransferrableKeys.textContent */]], this, skeleton[7 /* TransferrableKeys.index */]);\n            default:\n                const namespaceURI = strings[skeleton[6 /* TransferrableKeys.namespaceURI */]] || HTML_NAMESPACE;\n                const localName = strings[skeleton[1 /* TransferrableKeys.localOrNodeName */]];\n                const constructor = NS_NAME_TO_CLASS[`${namespaceURI}:${localName}`] || HTMLElement;\n                const node = new constructor(1 /* NodeType.ELEMENT_NODE */, localName, namespaceURI, this, skeleton[7 /* TransferrableKeys.index */]);\n                (skeleton[2 /* TransferrableKeys.attributes */] || []).forEach((attribute) => \n                // AttributeNamespaceURI = strings[attribute[0]] !== 'null' ? strings[attribute[0]] : HTML_NAMESPACE\n                node.setAttributeNS(strings[attribute[0]] !== 'null' ? strings[attribute[0]] : HTML_NAMESPACE, strings[attribute[1]], strings[attribute[2]]));\n                (skeleton[4 /* TransferrableKeys.childNodes */] || []).forEach((child) => node.appendChild(this[64 /* TransferrableKeys.hydrateNode */](strings, child)));\n                return node;\n        }\n    }\n    createElement(name) {\n        return this.createElementNS(HTML_NAMESPACE, toLower(name));\n    }\n    createElementNS(namespaceURI, localName) {\n        const constructor = NS_NAME_TO_CLASS[`${namespaceURI}:${localName}`] || HTMLElement;\n        return new constructor(1 /* NodeType.ELEMENT_NODE */, localName, namespaceURI, this);\n    }\n    /**\n     * Note: Unlike DOM, Event subclasses (e.g. MouseEvent) are not instantiated based on `type`.\n     * @param type\n     */\n    createEvent(type) {\n        return new Event(type, { bubbles: false, cancelable: false });\n    }\n    createTextNode(text) {\n        return new Text(text, this);\n    }\n    createComment(text) {\n        return new Comment(text, this);\n    }\n    createDocumentFragment() {\n        return new DocumentFragment(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementById\n     * @return Element with matching id attribute.\n     */\n    getElementById(id) {\n        return matchChildElement(this.body, (element) => element.id === id);\n    }\n}\n//# sourceMappingURL=Document.js.map","import { get } from './nodes';\n/**\n * When an event is dispatched from the main thread, it needs to be propagated in the worker thread.\n * Propagate adds an event listener to the worker global scope and uses the WorkerDOM Node.dispatchEvent\n * method to dispatch the transfered event in the worker thread.\n */\nexport function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* TransferrableKeys.type */] !== 4 /* MessageType.SYNC */) {\n            return;\n        }\n        const sync = data[40 /* TransferrableKeys.sync */];\n        const node = get(sync[7 /* TransferrableKeys.index */]);\n        if (node) {\n            node.ownerDocument[58 /* TransferrableKeys.allowTransfer */] = false;\n            // Modify the private backing ivar of `value` property to avoid mutation/sync cycle.\n            node.value = sync[21 /* TransferrableKeys.value */];\n            node.ownerDocument[58 /* TransferrableKeys.allowTransfer */] = true;\n        }\n    });\n}\n//# sourceMappingURL=SyncValuePropagation.js.map","export function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* TransferrableKeys.type */] !== 5 /* MessageType.RESIZE */) {\n            return;\n        }\n        const sync = data[40 /* TransferrableKeys.sync */];\n        if (sync) {\n            global.innerWidth = sync[0];\n            global.innerHeight = sync[1];\n        }\n    });\n}\n//# sourceMappingURL=ResizePropagation.js.map","const frameDuration = 1000 / 60;\nlet last = 0;\nlet id = 0;\nlet queue = [];\n/**\n * Schedules the accumulated callbacks to be fired 16ms after the last round.\n */\nfunction scheduleNext() {\n    const now = Date.now();\n    const next = Math.round(Math.max(0, frameDuration - (Date.now() - last)));\n    last = now + next;\n    setTimeout(function () {\n        var cp = queue.slice(0);\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0;\n        for (var i = 0; i < cp.length; i++) {\n            if (cp[i].cancelled) {\n                continue;\n            }\n            try {\n                cp[i].callback(last);\n            }\n            catch (e) {\n                setTimeout(function () {\n                    throw e;\n                }, 0);\n            }\n        }\n    }, next);\n}\nexport function rafPolyfill(callback) {\n    if (queue.length === 0) {\n        scheduleNext();\n    }\n    if (id === Number.MAX_SAFE_INTEGER) {\n        id = 0;\n    }\n    queue.push({\n        handle: ++id,\n        callback,\n        cancelled: false,\n    });\n    return id;\n}\nexport function cafPolyfill(handle) {\n    for (let i = 0; i < queue.length; i++) {\n        if (queue[i].handle === handle) {\n            queue[i].cancelled = true;\n            return;\n        }\n    }\n}\n//# sourceMappingURL=AnimationFrame.js.map","import { Element, registerSubclass } from './Element';\nimport { SVG_NAMESPACE } from '../../transfer/TransferrableNodes';\nexport class SVGElement extends Element {\n    constructor(nodeType, localName, namespaceURI, ownerDocument) {\n        super(nodeType, localName, SVG_NAMESPACE, ownerDocument);\n        // Element uppercases its nodeName, but SVG elements don't.\n        this.nodeName = localName;\n    }\n}\nregisterSubclass('svg', SVGElement, SVG_NAMESPACE);\n//# sourceMappingURL=SVGElement.js.map","import { AMP } from './amp/amp';\nimport { callFunctionMessageHandler, exportFunction } from './function';\nimport { CharacterData } from './dom/CharacterData';\nimport { Comment } from './dom/Comment';\nimport { deleteGlobals } from './amp/delete-globals';\nimport { Document } from './dom/Document';\nimport { DocumentFragment } from './dom/DocumentFragment';\nimport { DOMTokenList } from './dom/DOMTokenList';\nimport { Element } from './dom/Element';\nimport { Event as WorkerDOMEvent } from './Event';\nimport { HTMLAnchorElement } from './dom/HTMLAnchorElement';\nimport { HTMLButtonElement } from './dom/HTMLButtonElement';\nimport { HTMLCanvasElement } from './dom/HTMLCanvasElement';\nimport { HTMLDataElement } from './dom/HTMLDataElement';\nimport { HTMLDataListElement } from './dom/HTMLDataListElement';\nimport { HTMLElement } from './dom/HTMLElement';\nimport { HTMLEmbedElement } from './dom/HTMLEmbedElement';\nimport { HTMLFieldSetElement } from './dom/HTMLFieldSetElement';\nimport { HTMLFormElement } from './dom/HTMLFormElement';\nimport { HTMLIFrameElement } from './dom/HTMLIFrameElement';\nimport { HTMLImageElement } from './dom/HTMLImageElement';\nimport { HTMLInputElement } from './dom/HTMLInputElement';\nimport { HTMLLabelElement } from './dom/HTMLLabelElement';\nimport { HTMLLinkElement } from './dom/HTMLLinkElement';\nimport { HTMLMapElement } from './dom/HTMLMapElement';\nimport { HTMLMeterElement } from './dom/HTMLMeterElement';\nimport { HTMLModElement } from './dom/HTMLModElement';\nimport { HTMLOListElement } from './dom/HTMLOListElement';\nimport { HTMLOptionElement } from './dom/HTMLOptionElement';\nimport { HTMLProgressElement } from './dom/HTMLProgressElement';\nimport { HTMLQuoteElement } from './dom/HTMLQuoteElement';\nimport { HTMLScriptElement } from './dom/HTMLScriptElement';\nimport { HTMLSelectElement } from './dom/HTMLSelectElement';\nimport { HTMLSourceElement } from './dom/HTMLSourceElement';\nimport { HTMLStyleElement } from './dom/HTMLStyleElement';\nimport { HTMLTableCellElement } from './dom/HTMLTableCellElement';\nimport { HTMLTableColElement } from './dom/HTMLTableColElement';\nimport { HTMLTableElement } from './dom/HTMLTableElement';\nimport { HTMLTableRowElement } from './dom/HTMLTableRowElement';\nimport { HTMLTableSectionElement } from './dom/HTMLTableSectionElement';\nimport { HTMLTimeElement } from './dom/HTMLTimeElement';\nimport { initialize } from './initialize';\nimport { MutationObserver } from './MutationObserver';\nimport { rafPolyfill, cafPolyfill } from './AnimationFrame';\nimport { SVGElement } from './dom/SVGElement';\nimport { Text } from './dom/Text';\nimport { wrap as longTaskWrap } from './long-task';\nconst globalScope = {\n    innerWidth: 0,\n    innerHeight: 0,\n    CharacterData,\n    Comment,\n    Document,\n    DocumentFragment,\n    DOMTokenList,\n    Element,\n    HTMLAnchorElement,\n    HTMLButtonElement,\n    HTMLCanvasElement,\n    HTMLDataElement,\n    HTMLDataListElement,\n    HTMLElement,\n    HTMLEmbedElement,\n    HTMLFieldSetElement,\n    HTMLFormElement,\n    HTMLIFrameElement,\n    HTMLImageElement,\n    HTMLInputElement,\n    HTMLLabelElement,\n    HTMLLinkElement,\n    HTMLMapElement,\n    HTMLMeterElement,\n    HTMLModElement,\n    HTMLOListElement,\n    HTMLOptionElement,\n    HTMLProgressElement,\n    HTMLQuoteElement,\n    HTMLScriptElement,\n    HTMLSelectElement,\n    HTMLSourceElement,\n    HTMLStyleElement,\n    HTMLTableCellElement,\n    HTMLTableColElement,\n    HTMLTableElement,\n    HTMLTableRowElement,\n    HTMLTableSectionElement,\n    HTMLTimeElement,\n    SVGElement,\n    Text,\n    Event: WorkerDOMEvent,\n    MutationObserver,\n    requestAnimationFrame: self.requestAnimationFrame || rafPolyfill,\n    cancelAnimationFrame: self.cancelAnimationFrame || cafPolyfill,\n};\nconst noop = () => void 0;\n// WorkerDOM.Document.defaultView ends up being the window object.\n// React requires the classes to exist off the window object for instanceof checks.\nexport const workerDOM = (function (postMessage, addEventListener, removeEventListener) {\n    const document = new Document(globalScope);\n    // TODO(choumx): Avoid polluting Document's public API.\n    document.postMessage = postMessage;\n    document.addGlobalEventListener = addEventListener;\n    document.removeGlobalEventListener = removeEventListener;\n    document.isConnected = true;\n    document.appendChild((document.body = document.createElement('body')));\n    // TODO(choumx): Remove once defaultView contains all native worker globals.\n    // Canvas's use of native OffscreenCanvas checks the existence of the property\n    // on the WorkerDOMGlobalScope.\n    globalScope.OffscreenCanvas = self['OffscreenCanvas'];\n    globalScope.ImageBitmap = self['ImageBitmap'];\n    return document.defaultView;\n})(postMessage.bind(self) || noop, addEventListener.bind(self) || noop, removeEventListener.bind(self) || noop);\n// Modify global scope by removing disallowed properties and wrapping `fetch()`.\n(function (global) {\n    deleteGlobals(global);\n    // Wrap global.fetch() with our longTask API.\n    const originalFetch = global['fetch'];\n    if (originalFetch) {\n        try {\n            Object.defineProperty(global, 'fetch', {\n                enumerable: true,\n                writable: true,\n                configurable: true,\n                value: longTaskWrap(workerDOM.document, originalFetch.bind(global)),\n            });\n        }\n        catch (e) {\n            console.warn(e);\n        }\n    }\n})(self);\n// Offer APIs like AMP.setState() on the global scope.\nself.AMP = new AMP(workerDOM.document);\n// Allows for function invocation\nself.exportFunction = exportFunction;\naddEventListener('message', (evt) => callFunctionMessageHandler(evt, workerDOM.document));\nexport const hydrate = initialize;\n//# sourceMappingURL=index.amp.js.map","import { store as storeString } from './strings';\nimport { appendKeys as addCssKeys } from './css/CSSStyleDeclaration';\nimport { appendGlobalEventProperties } from './dom/HTMLElement';\nimport { initializeStorage } from './initialize-storage';\nexport function initialize(document, strings, hydrateableNode, cssKeys, globalEventHandlerKeys, [innerWidth, innerHeight], localStorageInit, sessionStorageInit) {\n    addCssKeys(cssKeys);\n    appendGlobalEventProperties(globalEventHandlerKeys);\n    strings.forEach(storeString);\n    (hydrateableNode[4 /* TransferrableKeys.childNodes */] || []).forEach((child) => document.body.appendChild(document[64 /* TransferrableKeys.hydrateNode */](strings, child)));\n    const window = document.defaultView;\n    window.innerWidth = innerWidth;\n    window.innerHeight = innerHeight;\n    initializeStorage(document, localStorageInit, sessionStorageInit);\n}\n//# sourceMappingURL=initialize.js.map","import { createStorage } from './Storage';\nexport function initializeStorage(document, localStorageInit, sessionStorageInit) {\n    const window = document.defaultView;\n    if (localStorageInit.storage) {\n        window.localStorage = createStorage(document, 0 /* StorageLocation.Local */, localStorageInit.storage);\n    }\n    else {\n        console.warn(localStorageInit.errorMsg);\n    }\n    if (sessionStorageInit.storage) {\n        window.sessionStorage = createStorage(document, 1 /* StorageLocation.Session */, sessionStorageInit.storage);\n    }\n    else {\n        console.warn(sessionStorageInit.errorMsg);\n    }\n}\n//# sourceMappingURL=initialize-storage.js.map"],"names":["store$1","store","value","mapping","has","get","set","count","transfer","push","index","document","mutation","phase","pending","pendingMutations","concat","Promise","resolve","then","_","nodes","buffer","Uint16Array","consumeNodes","reduce","acc","node","mutations","postMessage","_defineProperty","mutate","record","transferable","observers","forEach","observer","t","target","parentNode","observerTarget","pushMutation","getPreviousElementSibling","parentNodes","childNodes","i","indexOf","nodeType","getNextElementSibling","length","f","_querySelectorAll","querySelectorAll","selector","selectorBracketIndexes","selectorHasAttr","elementSelector","substring","attrSelector","matcher","element","matchAttrReference","id","substr","classList","contains","localName","toLowerCase","matchChildrenElements","filter","g","synchronizedAccessor","defineOn","accessorKey","propertyName","Object","defineProperty","prototype","enumerable","configurable","this","decodeEntities","html","replace","s","numericEntity","namedEntity","code","charAt","parseInt","isNaN","String","fromCodePoint","RESERVED_CHARACTERS","definePropertyBackedAttributes","attributes","sub","create","assign","serializeTransferrableObject","args","serialized","arg","u16","num","f32","Array","isArray","serializedArray","_typeof","Error","serializedObject","k","retrieveImageBitmap","image","canvas","callIndex","indexTracker","ownerDocument","addGlobalEventListener","messageHandler","_ref","data","removeGlobalEventListener","createStorage","location","storage","define","keys","n","key","stringValue","_this","wrap","func","execute","promise","result","reason","apply","arguments","ElementKind","Map","AMP","_classCallCheck","_createClass","getState","undefined","event","message","setTimeout","setState","state","stringified","JSON","stringify","e","exportedFunctions","pushRecord","callback","takeRecords","MutationObserver","options","observe","disconnect","splice","records","propagate","propagate$3","property","child","Node","nodeName","overrideIndex","isConnected","storeOverrideNodeMapping","Math","max","storeNodeMapping","getTextContent","textContent","childNode","parentChildNodes","hasChildNodes","otherNode","includes","some","insertBefore","referenceNode","slice","appendChild","remove","addedNodes","nextSibling","type","previousSibling","removeChild","removedNodes","replaceChild","newChild","oldChild","replaceWith","parent","_len","_key","nodeIterator","currentNode","createTextNode","CharacterData","_Node","_super","call","storeString","_inherits","_createSuper","oldValue","Comment","_CharacterData","nodeValue","cloneNode","createComment","ALLOWLISTED_GLOBALS","ArrayBuffer","BigInt","BigInt64Array","BigUint64Array","Boolean","Cache","CustomEvent","DataView","Date","EvalError","Event","EventTarget","Float32Array","Float64Array","Function","Infinity","Int16Array","Int32Array","Int8Array","Intl","NaN","Number","Proxy","RangeError","ReferenceError","Reflect","RegExp","Set","Symbol","SyntaxError","TextDecoder","TextEncoder","TypeError","URIError","URL","Uint32Array","Uint8Array","Uint8ClampedArray","WeakMap","WeakSet","WebAssembly","WebSocket","XMLHttpRequest","atob","addEventListener","removeEventListener","btoa","caches","clearInterval","clearTimeout","console","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","escape","fetch","indexedDB","isFinite","navigator","onerror","onrejectionhandled","onunhandledrejection","parseFloat","performance","requestAnimationFrame","cancelAnimationFrame","self","setInterval","unescape","tagNameConditionPredicate","tagNames","tagName","elementPredicate","conditionPredicate","matchingElements","_toConsumableArray","d","matchChildElement","returnValue","children","grandChildMatch","matchNearestParent","equalPos","selectorLength","caseInsensitive","endPos","equalSuffix","attrString","possibleSuffixes","rawAttrValue","getAttribute","casedValue","rawValue","casedAttrValue","split","startsWith","endsWith","hasAttribute","ParentNode","find","querySelector","matches","a","WHITESPACE_REGEX","DOMTokenList","attributeName","bind","join","collection","_this$","newValue","trim","item","token","add","_this$2","tokens","from","_this$3","_len2","_key2","newToken","_this$4","delete","toggle","force","test","namespaceURI","toString","map","attr","name","matchPredicate","CSSStyleDeclaration","getPropertyValue","removeProperty","mutated","cssText","setProperty","values","c","reflectProperties","properties","pair","_loop","_pair$property","defaultValue","_pair$property$","toLower","keywords","isBooleanAttribute","attributeValue","castableValue","setAttribute","removeAttribute","kMarkupPattern","kAttributePattern","kSelfClosingElements","AREA","BASE","BR","COL","HR","IMG","INPUT","LINK","META","PARAM","SOURCE","TRACK","WBR","kElementsClosedByOpening","LI","DT","DD","P","ADDRESS","ARTICLE","ASIDE","BLOCKQUOTE","DETAILS","DIV","DL","FIELDSET","FIGCAPTION","FIGURE","FOOTER","FORM","H1","H2","H3","H4","H5","H6","HEADER","MAIN","NAV","OL","PRE","SECTION","TABLE","UL","RT","RP","OPTGROUP","OPTION","THEAD","TBODY","TFOOT","TR","TD","TH","kElementsClosedByClosing","A","B","I","kBlockTextElements","SCRIPT","NOSCRIPT","STYLE","__proto__","amp","lt","gt","quot","opts","scoped","timeStamp","isTrusted","eventPhase","defaultPrevented","currentTarget","cancelBubble","cancelable","bubbles","changedTouches","touches","offsetY","offsetX","pageY","pageX","stopPropagation","stopImmediatePropagation","preventDefault","initEvent","touchListFromTransfer","touchListKeys","list","touchListKey","numericKey","transferredTouch","identifier","screenX","screenY","clientX","clientY","NS_NAME_TO_CLASS","registerSubclass","subclass","HTML_NAMESPACE","VOID_ELEMENTS","Element","_ParentNode","toUpperCase","_classList","style_","kind","VOID","NORMAL","tag","start","attrsToString","contents","innerHTML","h","outerHTML","_this2","parse","rootElement","match","currentParent","root","createElementNS","currentNamespace","stack","lastTextPos","tagsClosed","SVG_NAMESPACE","exec","commentContents","beginningSlash","matchAttributes","endSlash","b","text","lastIndex","normalizedTagName","pop","childToAppend","attMatch","closeMarkup","_i","wrapper","firstChild","setAttributeNS","getAttributeNS","removeAttributeNS","hasAttributeNS","hasAttributes","valueAsString","propertyBacked","constructor","matchAttrPredicate","attributeNamespace","q","findIndex","getElementsByClassName","names","inputClassList","inputClassName","getElementsByTagName","lowerTagName","getElementsByName","stringName","deep","clone","getBoundingClientRectAsync","_this3","left","top","right","bottom","x","y","width","height","transferredBoundingClientRect","click","dispatchEvent","scrollIntoView","class","el","style","HTMLElement","_Element","accessKey","contentEditable","dir","lang","title","draggable","hidden","noModule","spellcheck","translate","HTMLAnchorElement","_HTMLElement","_relList","href","rel","relList","hreflang","media","HTMLButtonElement","formAction","formEnctype","formMethod","formTarget","autofocus","disabled","CanvasGradient","addColorStop","offset","color","CanvasPattern","setTransform","OffscreenCanvasPolyfill","context","getContext","contextType","OffscreenCanvasRenderingContext2DPolyfill","objectIndex","canvasElement","lineDash","fnName","createObjectReference","objectId","creationMethod","creationArgs","clearRect","w","fillRect","strokeRect","roundRect","radii","fillText","maxWidth","moveTo","lineTo","closePath","stroke","restore","save","resetTransform","rotate","angle","transform","scale","beginPath","strokeText","arc","radius","startAngle","endAngle","anticlockwise","arcTo","x1","y1","x2","y2","ellipse","radiusX","radiusY","rotation","bezierCurveTo","cp1x","cp1y","cp2x","cp2y","rect","quadraticCurveTo","cpx","cpy","setLineDash","getLineDash","clip","pathOrFillRule","fillRule","fill","transformOrA","bOrC","cOrD","dOrE","eOrF","createLinearGradient","x0","y0","gradientId","createRadialGradient","r0","r1","createPattern","repetition","patternId","drawImage","dx","dy","createImageData","getImageData","putImageData","isPointInPath","isPointInStroke","measureText","FakeNativeCanvasPattern","instance","pattern","deferredUpgrades","CanvasRenderingContext2DShim","queue","implementation","upgraded","polyfillUsed","unresolvedCalls","goodImplementation","OffscreenCanvas","defaultView","getOffscreenCanvasAsync","deferred","isTestMode","upgradePromise","maybeUpgradeImplementation","l","degradeImplementation","flushQueue","_step","_iterator","_createForOfIteratorHelper","done","isSetter","err","delegateFunc","_this$implementation","delegateSetter","delegateGetter","segments","Qa","_this4","ImageBitmap","fakePattern","_this5","antiClockwise","path","pathOrX","xOrY","yOrFillRule","imagedataOrWidth","sx","sy","sw","sh","imageData","dirtyX","dirtyY","dirtyWidth","dirtyHeight","HTMLCanvasElement","HTMLDataElement","HTMLDataListElement","HTMLEmbedElement","src","MATCHING_CHILD_ELEMENT_TAGNAMES","HTMLFormControlsCollectionMixin","HTMLFieldSetElement","HTMLFormElement","elements","method","action","enctype","acceptCharset","autocomplete","autocapitalize","HTMLIFrameElement","_sandbox","sandbox","allow","allowFullscreen","csp","referrerPolicy","srcdoc","HTMLImageElement","alt","crossOrigin","isMap","sizes","srcset","useMap","HTMLInputLabelsMixin","for","HTMLInputElement","dirtyValue","date","stringToDate","getTime","dateToString","getFullYear","m","getMonth","getDate","str","components","_components","_slicedToArray","accept","defaultChecked","dirName","formEncType","maxLength","min","multiple","placeholder","readOnly","required","size","step","HTMLLabelElement","htmlFor","getElementById","HTMLLinkElement","as","HTMLMapElement","HTMLMeterElement","high","low","optimum","HTMLModElement","cite","datetime","HTMLOListElement","reversed","HTMLOptionElement","label","selected","defaultSelected","HTMLProgressElement","HTMLQuoteElement","HTMLScriptElement","charset","async","defer","isOptionPredicate","isSelectedOptionPredicate","HTMLSelectElement","_get","_getPrototypeOf","firstSelectedChild","selectedIndex","HTMLSourceElement","HTMLStyleElement","HTMLTableCellElement","_headers","headers","abbr","colSpan","rowSpan","scope","HTMLTableColElement","span","removeElement","insertBeforeElementsWithTagName","insertBeforeElement","HTMLTableElement","newElement","caption","firstElementChild","tHead","tFoot","TABLE_SECTION_TAGNAMES","indexInAncestor","isValidAncestor","rows","HTMLTableRowElement","deleteCell","cell","cells","insertCell","td","createElement","HTMLTableSectionElement","deleteRow","insertRow","tr","HTMLTimeElement","dateTime","Text","splitText","remainderTextNode","insertBeforePosition","DocumentFragment","createDocumentFragment","Document","global","DOCUMENT_NAME","documentElement","body","_assertThisInitialized","propagate$2","newPhase","targetFromTransfer","keyCode","propagate$1","sync","innerWidth","innerHeight","propagateResize","strings","skeleton","attribute","createEvent","frameDuration","last","SVGElement","globalScope","WorkerDOMEvent","rafPolyfill","scheduleNext","now","next","round","cp","cancelled","fa","MAX_SAFE_INTEGER","handle","cafPolyfill","noop","workerDOM","deleteGlobals","current","getOwnPropertyNames","prop","hasOwnProperty","object","getPrototypeOf","originalFetch","writable","longTaskWrap","exportFunction","fn","Fa","evt","callFunctionMessageHandler","msg","fnIdentifier","fnArguments","errorMessage","initialize","hydrateableNode","cssKeys","globalEventHandlerKeys","localStorageInit","sessionStorageInit","_ref2","appendKeys","keysToAppend","previousPrototypeLength","hyphenatedKey","defineProperties","addCssKeys","appendGlobalEventProperties","normalizedKey","stored","window","initializeStorage","localStorage","sessionStorage"],"mappings":"o1HASMA,SAAeC,EAACC,GAMpB,OAAIC,EAAQC,IAAIF,KAECG,IAAIH,MAGtBI,IAAAJ,EAAAK,GACCC,EAACC,KAAAP,GACMK,IAb0B,CCgD7BF,SAAYA,EAAAK,GAEjB,QAAAA,GAAAP,EAAAE,IAAAK,IAAA,IAFiB,CC3CZF,SAAkBA,EAACG,EAACC,GAKf,EAALC,GAA8BF,EAAQ,MACxCG,GAAU,EACVC,EAAmBA,EAAiBC,OAAOJ,GAE3CK,QAAQC,UAAUC,MAAK,SAACC,GACtB,GAAIN,EAAS,CACLO,EAEJC,IAFgBC,6CAChBC,GAAeC,QAAO,SAACC,EAAgBC,GAAA,OAAAD,EAAAV,OAAAW,KAAA,GAAA,KACvCL,OACF,IAAGM,EAAAN,IAAAC,YAAAR,GAAAO,OAEVO,EAAAA,YAAAC,EAAAA,EAAAA,EAAAA,EAAAA,EAAA,CAAAA,8FANkB,CADc,IATP,CCyBpBC,SAAgBA,EAACpB,EAAoBqB,EAAwBC,GAEjEzB,EAASG,EAAUsB,GAGnBC,EAAUC,SAAQ,SAACC,GACjB,IAAK,IAAIC,EAAiBL,EAAOM,OAAQD,EAAGA,EAAIA,EAAEE,WAAY,CAClCD,IAAAA,EAATF,EAASE,UA/BrBE,GAAkBA,EAAuC,KA+B5BH,EA/BgE,GA+B5D,CACpCI,EAAaL,EAAUJ,GADa,KAAA,CADsB,CADjC,GAL6D,CCnCxFU,SAAmCA,EAACf,GACxC,IAAIgB,EAAchB,EAAKY,YAAcZ,EAAKY,WAAWK,WACjD,IAACD,EACH,OAGF,KAAA,IAASE,EAAIF,EAAYG,QAAQnB,GAAQ,EAAQ,GAALkB,EAAQA,IAAK,CACvD,IAAIlB,EAAOgB,EAAYE,GACvB,GAA6C,IAAzClB,EAAKoB,SACP,OAAOpB,CAH8C,CAMzD,OAAO,IAZ2C,CAe9CqB,SAA+BA,EAACrB,GACpC,IAAIgB,EAAchB,EAAKY,YAAcZ,EAAKY,WAAWK,WACjD,IAACD,EACH,YAGOE,IAAAA,EAAIF,EAAYG,QAAQnB,GAAQ,EAAGkB,EAAIF,EAAYM,OAAQJ,IAAK,CACvE,IAAIlB,EAAOgB,EAAYE,GACsB,GAAA,IAAzClB,EAAKoB,SACP,OAHqEG,CAAA,CAMzE,OAZ8C,IAAA,CCiEhDC,SAAyBC,EAACzB,EAAY0B,GAGpC,IAAMC,EAAyB,CAACD,EAASP,QAAQ,KAAMO,EAASP,QAAQ,MAClES,GCpF0D,IDoFxBD,EAAuB,KCpFC,IDoFsBA,EAAuB,GACvGE,EAAkBD,EAAkBF,EAASI,UAAU,EAAGH,EAAuB,IAAMD,EACvFK,EAAeH,EAAkBF,EAASI,UAAUH,EAAuB,GAAIA,EAAuB,GAAK,GAAK,KAsBtH,OAAOK,EAjBa,MAAhBN,EAAS,GACDM,SAACC,GAAO,OAAKC,GAAmBR,EAAUO,EAAlC,EACc,MAAvBJ,EAAgB,GACfD,EACN,SAACK,GAAO,OAAKA,EAAQE,KAAON,EAAgBO,OAAO,IAAMF,GAAmBH,EAAcE,EAAlF,EACR,SAACA,GAAO,OAAKA,EAAQE,KAAON,EAAgBO,OAAO,EAA3C,EACoB,MAAvBP,EAAgB,GACfD,EACN,SAACK,GAAO,OAAKA,EAAQI,UAAUC,SAAST,EAAgBO,OAAO,KAAOF,GAAmBH,EAAcE,EAA/F,EACR,SAACA,GAAO,OAAKA,EAAQI,UAAUC,SAAST,EAAgBO,OAAO,GAAvD,EAEFR,EACN,SAACK,GAAO,OAAaM,EAAAA,YAAsBV,EC3GKW,eD2GeN,GAAmBH,EAAcE,EAAxF,EACR,SAACA,GAAO,OAAaM,EAAAA,YAAsBV,EC5GKW,aD4GxC,EAKVC,GAAsBzC,EAAI,IAAiCgC,GAASU,QAAO,SAACT,GAAO,OAAAU,IAAcV,GAAWjC,EAAKsC,SAASL,EAAvC,GA7BnC,CEnEhDW,WAA+BC,EAA0BC,EAAqBC,GAClFC,OAAOC,eAAeJ,EAASK,UAAWH,EAAc,CACtDI,YAAY,EACZC,cAAc,EACd1E,eACE,OAAQ2E,KAAiBP,GAAavE,KADrC,EAGHI,IAAGA,SAACJ,GACD8E,KAAiBP,GAAavE,MAAQA,CADxB,GAPmF,CCyOxG+E,SAASA,EAAeC,GACtB,SAAYC,QAAQ,kCAAkC,SAAUC,EAAGC,EAAeC,GAEhF,UACMC,EAAiD,MAA1CF,EAAcG,OAAO,GAAGrB,cAAwBsB,SAASJ,EAActB,OAAO,GAAI,IAAM0B,SAASJ,EAActB,OAAO,GAAI,IAGjI2B,MAAMH,IAAgB,QAAPA,EACVH,EAGFO,OAAOC,cAAcL,IAASH,GAInCE,GACKO,GAAoBP,EAAYnB,gBAGlCiB,CAlBoF,GAD3D,CC3N9BU,SAAUA,EAA+BtB,EAA0BuB,GACvE,IAAMC,EAAMrB,OAAOsB,OAAOzB,OAC1BA,EAAQ,IAA+CG,OAAOuB,OAAOF,EAAKD,EAFiC,CCRvGI,SAAsCA,EAACC,GAE3C,IADA,IAAMC,EAAuB,GACpBxD,EAAI,EAAGA,EAAIuD,EAAKnD,OAAQJ,IAAK,CACpC,IAAMyD,EAAMF,EAAKvD,GAEjB,GAAmB,iBAARyD,EAAkB,CACZA,IAAAA,EAAAA,EApBnBC,GAAI,GAAKC,EAGFD,GAAI,KAAOC,EAkBZH,EAAW5F,KAAuC6F,EAAAA,IAElDG,GAAI,GAAKH,EACTD,EAAW5F,KAAoC8F,EAAAA,GAAI,GAAIA,GAAI,IALlC,MAU7B,GAAmB,iBAARD,EACTD,EAAW5F,KAAI,EAAiCR,EAAMqG,SAIxD,GAAII,MAAMC,QAAQL,GAIhB,IAHAD,EAAW5F,KAAI,EAAgC6F,EAAIrD,QAC7C2D,EAAkBT,EAA6BG,GAE5CzD,EAAI,EAAGA,EAAI+D,EAAgB3D,OAAQJ,IAC1CwD,EAAW5F,KAAKmG,EAAgB/D,QAMpC,IAAmB,WAAfgE,EAAOP,GAUDQ,MAAAA,MAAM,8BAPd,IAFMC,EAAoBT,EAA2B,MAE5CzD,EAAI,EAAGA,EAAIkE,EAAiB9D,OAAQJ,IAC3CwD,EAAW5F,KAAKsG,EAAiBlE,GAMrC,CAvCoC,CA0CtC,OA5C+DmE,CAAA,CCb3DC,SAA6BA,EAACC,EAA6CC,GAC/E,IAAMC,EAAYC,KACZ1G,EAAWwG,EAAOG,cAExB,WAAWrG,SAAQ,SAACC,GASlB,IAAKP,EAAS4G,uBACFT,MAAAA,MAAM,0CAEhBnG,EAAS4G,uBAAuB,WAXXC,WAAHC,GACc,MADRC,EAAID,EAAJC,MACQ,KAA0CA,EAAiC,MAAKN,IAC9GzG,EAASgH,0BAA0B,UAAWH,GAE9CtG,EADgCwG,EAAoD,KAHrB,IAYjElH,EAAS2G,EAAOG,cAA2B,CAAkDJ,GAAAA,EAA8B,GAAEE,GAblG,GAJyE,CCepGQ,WAAwBjH,EAAmCkH,EAA2BH,GACpFI,EAAenD,OAAOuB,OAAOvB,OAAOsB,OAAO,MAAOyB,OAIlDK,EAASpD,OAAOC,eAsDtB,OArDAmD,EAAOD,EAAS,SAAU,CACxBzH,eACE,OAAc2H,OAAAA,KAAKhD,MAAM/B,MADxB,IAIL8E,EAAOD,EAAS,MAAO,CACrB5H,MAAKA,SAAC+H,GACJ,IAAMD,EAAOrD,OAAOqD,KAAKhD,aAClBiD,GAAAA,GAAUA,EAAID,EAAK/E,OAAS+E,EAAKC,GAAK,IAFhC,IAKjBF,EAAOD,EAAS,UAAW,CACzB5H,MAAKA,SAACgI,GAEJ,OADMhI,EAAQ8E,KAAKkD,IACJhI,EAAQ,IAFR,IAKnB6H,EAAOD,EAAS,UAAW,CACzB5H,MAAKA,SAACgI,EAAahI,GACXiI,EAAcxC,OAAOzF,GAC3B8E,KAAKkD,GAAOC,EAEZ3H,EAASG,EAAU,CAAA,GAAA,EAAkDkH,EAAU5H,EAAMiI,GAAO,EAAGjI,EAAMkI,GAAe,GAJtF,IAOlCJ,EAAOD,EAAS,aAAc,CAC5B5H,MAAKA,SAACgI,UACGlD,KAAKkD,GAEZ1H,EAASG,EAAU,MAGjBkH,EACA5H,EAAMiI,GAAO,EACb,GARa,IAYnBH,EAAOD,EAAS,QAAS,CACvB5H,iBAAK,IAAAkI,EAAApD,KACIgD,OAAAA,KAAKhD,MAAM7C,SAAQ,SAAC+F,UAClBE,EAAKF,EADoB,IAIlC1H,EAASG,EAAU,MAGjBkH,EACA,EACA,GAVC,IA7CkH3E,CAAA,CCnBrHmF,SAAUA,EAAK/F,EAAcgG,GACjC,OAAO,WACL,OAIJC,SAAiBjG,EAAckG,GAG7B,OADAhI,EAAS8B,EAAOgF,cAA2B,CAA4ChF,EAAAA,EAA+B,OACvGnB,MACb,SAACsH,UAECjI,EAAS8B,EAAOgF,cAA2B,CAA0ChF,EAAAA,EAA+B,KAF3GY,CAAA,IAKX,SAACwF,GAGOA,MADNlI,EAAS8B,EAAOgF,cAA2B,CAA0ChF,EAAAA,EAA+B,KAC9GoG,CAHG,GATqC,CAJzCH,CAAQjG,EAAQrB,QAAQC,QAAQoH,EAAKK,MAAM,KAAMC,YADnD,CADwC,CbNjD,ISmDKC,EAAAA,ETnDDtI,EAAU,EACVC,EAAc,GACZL,EAAoB,IAAA2I,IcAfjI,EAAK,EbGZN,EAAgB,EAChBC,EAAwB,GACtBL,EAA6B,IAAI2I,ICGnChI,GAAU,EACVC,EAAmB,GaFVgI,EAAG,WAGdA,SAAAA,EAAYpI,GAAiCqI,OAAAD,GACtCpI,KAAAA,SAAWA,CAD2B,QAI7CsI,EAAAF,EAAA,CAAA,CAAAb,IAAA,WAAAhI,MAIAgJ,WAAyB,IAAAd,EAAApD,KAAhBkD,EAAA,EAAAU,UAAA3F,aAAAkG,IAAAP,UAAA,GAAAA,UAAA,GAAc,GACrB,OAAW3H,IAAAA,SAAQ,SAACC,GAiBlBkH,EAAKzH,SAAS4G,uBAAuB,WAhBdC,SAAjBA,EAAkB4B,GAE2C,MAD3DC,EAA2BD,EAAM1B,WAMhB2B,EACL,MAAmCnB,IAGrDE,EAAKzH,SAASgH,0BAA0B,UAAWH,GAEnDtG,EANuBmI,EAK8B,KAZR,MAiBtCjB,EAAKzH,SAAU,QAAsFV,EAAMiI,GAAO,EAAe,IAC1IoB,WAAWpI,EAAS,IAAK,KAnBI,GADR,GAwBzB,CAAAgH,IAAA,WAAAhI,MAIAqJ,SAASC,GAGP,IACEC,IAAAA,EAAcC,KAAKC,UAAUH,EAD3B,CAEF,MAAOI,GACP,YAAe,iDADL,CAGZpJ,EAASwE,KAAKrE,SAAU,QAAsF,EAAeV,EAAMwJ,GAAe,GARlI,KAvCJnF,CAAA,CAAA,GCDVuF,EAAqD,CAAA,EbFrD3H,EAAgC,GAElCnB,GAAmB,EAcjB0B,EAAeA,SAACL,EAA4BJ,GAChDI,EAAS0H,WAAW9H,GAEfjB,IACHA,GAAmB,EACnBE,QAAQC,UAAUC,MAAK,WACrBJ,GAAmB,EACnBmB,EAAUC,SAAQ,SAACC,GAAQ,OAAc2H,EAAAA,SAAS3H,EAAS4H,cAAhC,GAFK,IAL4C,EA2CrEC,EAAgB,WAM3BA,WAAYF,GAA8Cf,OAAAiB,GALnDF,KAAAA,cAAQ,EAAA/E,KACP,IAAgD,QAEjDkF,QAFmDlF,KACnD1C,YAAM,OAINyH,SAAWA,CADwC,CA8CzD,OA1CDd,EAAAgB,EAAA,CAAA,CAAA/B,IAAA,UAAAhI,MAKOiK,SAAQ7H,EAAc4H,GAC3BlF,KAAKoF,kBACA9H,OAASA,EACd0C,KAAKkF,QAAUA,GAAW,CAE1BhI,EAAAA,EAAUzB,KAAKuE,KAL0C,GAQ3D,CAAAkD,IAAA,aAAAhI,MAIOkK,WACLpF,KAAK1C,OAAS,KAER5B,IAAAA,EAAQwB,EAAUY,QAAQkC,MACnB,GAATtE,GACFwB,EAAUmI,OAAO3J,EAAO,EALX,GASjB,CAAAwH,IAAA,cAAAhI,MAKO8J,WACL,IAAMM,EAAUtF,KAA+B,IAC/C,SAAeqF,OAAO,EAAGC,EAAQrH,OAFjB,GAKlB,CAAAiF,IAAA,aAAAhI,MAIO4J,SAAW9H,GAChBgD,KAA+B,IAACvE,KAAKuB,EADC,MAlDb,CAAA,Gc5ChBuI,EAAYC,SAAHD,EAAI5I,EAAY8I,EAAmBvK,GACvDyB,EAAK8I,GAAYvK,EACZ0C,EAAAA,WAAWT,SAAQ,SAACuI,GAAK,OAAKH,EAAQG,EAAAD,EAAAvK,EAAb,GAFyB,EAWnCyK,EAAI,WAkBxBA,WAAY5H,EAAoB6H,EAAoBtD,EAA4BuD,GAAW7B,OAAA2B,GAhBpFrD,KAAAA,mBAAa,EAGLtC,KACR4F,SAFA5F,KACAjC,SAFPiC,KACO,SAAA,EAGApC,KAAAA,WAAU,GACVL,KAAAA,WAAA,KAAAyC,KACA8F,aAAuB,EAAK9F,KAC5B,QAAA,EAAAA,KACJ,QAAA,EAAAA,KACI,QAAA,EAAAA,KAEC,IAEJ,CAGF,EAAAA,KAAKjC,SAAWA,EAChBiC,KAAK4F,SAAWA,OACXtD,cAAgBA,GAAiBtC,UAClC,IAAkCA,KAKN6F,GhBrCjC,IAAAhK,IACCV,EAAQG,IgBoCwCyK,QAAAA,EAAAA,MhBnChDxK,EAAQyK,KAAKC,IAAI1K,EgBmC+BwK,IhBjClD7H,EgBiCkD6H,QhBnBnC5B,IgBmBqD+B,KhBnB5D,GACThI,EgBkBqEgI,KhBlBrE,IAGC/K,EAAQG,IgBe4D4K,KhBfnD,KAA8B3K,EgBeqB2K,MhBdpC,EAA5BrK,GAEFL,EAASC,KgBYyDyK,MhBVpEhI,EAAO3C,GgBULyE,KAA6B,GAAG6F,EAChC7F,KAAyC,GAAG,CAACA,QAV4C,QA8B3FiE,EAAA0B,EAAA,CAAA,CAAAzC,IAAA,cAAA7H,IAKAA,WACE,YAAY8K,gBADT,GAIL,CAAAjD,IAAA,iBAAAhI,MAGKiL,WACH,IAAIC,EAAc,GACZxI,EAAaoC,KAAKpC,kBAETK,EAAAA,QACbL,EAAWT,SAAQ,SAACkJ,GAAS,OAAAnI,GAAImI,EAAAD,WAAJ,IACtBA,GAEF,EARJ,GAWL,CAAAlD,IAAA,aAAA7H,IAIAA,WACE,OAAYuC,KAAAA,WAAW,IAAM,IADjB,GAId,CAAAsF,IAAA,YAAA7H,IAIAA,WACE,OAAYuC,KAAAA,WAAWoC,KAAKpC,WAAWK,OAAO,IAAA,IADnC,GAIb,CAAAiF,IAAA,cAAA7H,IAIAA,WACE,GAAwB,OAApB2E,KAAKzC,WACP,OAGF,KAAA,IAAM+I,EAActG,KAAAzC,WAAAK,WACf0I,OAAAA,EAAAA,EAAAxI,QAAAkC,MAAA,IAAA,IANQ,GASf,CAAAkD,IAAA,kBAAA7H,IAIAA,WACE,GAAC,OAAA2E,KAAAzC,WACC,OAGF,KAAA,IAAM+I,EAAiBtG,KAAAzC,WAAAK,WAChB0I,OAAAA,EAAiBA,EAAiBxI,QAAGkC,MAAA,IAAA,IAN3B,GASnB,CAAAkD,IAAA,gBAAAhI,MAIOqL,WACL,OAAgC,EAAzBvG,KAAKpC,WAAWK,MADL,GAIpB,CAAAiF,IAAA,WAAAhI,MAKO+D,SAASuH,GACd,OAAAtI,IAAkB8B,MAIW,EAAzBA,KAAKpC,WAAWK,WACd+B,KAAKpC,WAAW6I,SAASzG,OAGtBA,KAAGpC,WAAA8I,MAAA,SAAAhB,GAAA,OAAAzG,EAAAA,SAAAuH,EAAA,IATW,GAczB,CAAAtD,IAAA,eAAAhI,MAMOyL,SAAWjB,EAAAkB,GAAA,IAAAxD,EAAApD,QACf,OAAA0F,GAAAA,IAAA1F,KAEC,OAAO0F,KAGyC,KAA9CA,EAAM3H,SACR2H,EAAM9H,WAAWiJ,QAAQ1J,SAAC,SAAAR,GAAA,SAAAgK,aAAAhK,EAAAiK,EAAA,QACrB,CAAA,GAAqB,MAAjBA,EAEV,OAAAE,KAAAA,YAAApB,GACE,GAAA,GAAA1F,KAAApC,WAAAE,QAAA8I,GA2BD,OAzBMG,EAAAA,SAGN/G,KAAKpC,WAAWyH,OAAOrF,KAAGpC,WAAAE,QAAA8I,GAAA,EAAAlB,GAC1B1F,KAAI,IAAiC0F,GAEtC3I,EACEiD,KAAAsC,cACC,CACE0E,WAAY,CAACtB,GACbuB,YAAaL,EACbM,KAAI,EACP5J,OAAA0C,MAEC,GAECA,KAAA,GACC4G,EAAI,GACJ,EACA,EACA,EACAlB,EAAK,KAIFA,CA9BF,CAiCP,WAzCgB,GA4ClB,CAAAxC,IAAA,KAAAhI,MAIUkB,SAAGsJ,GACXA,EAAKnI,WAAAyC,OACK0F,EAAO,cAAA1F,KAAA8F,eAChBJ,EAAA,GAAA1F,SAHU,GAMb,CAAAkD,IAAA,KAAAhI,MAIUkB,SAAYsJ,GACpBA,EAAMnI,WAAa,OACTmI,EAAO,eAAa,GAC9BH,EAAUG,EAAOA,GAAAA,EAHG,GAMtB,CAAAxC,IAAA,cAAAhI,MAMO4L,SAAApB,GACL,GAAgB,KAAZA,EAAM3H,SACT2H,EAAA9H,WAAAiJ,QAAA1J,QAAA6C,KAAA8G,YAAA9G,UACE,CACD0F,EAAMqB,cACDnJ,WAAWnC,KAAAiK,GAChB1F,KAAI,IAA6B0F,GAEjC,IAAMyB,EAAkBnH,KAAKpC,WAAWoC,KAAKpC,WAAUK,OAAA,KAErD+B,KAAKsC,cACL,CACE0E,WAAY,CAACtB,GACbyB,gBAAAA,EACAD,KAAI,EACJ5J,OAAQ0C,MAEV,GAEEA,KAAI,GACJ,EACAmH,EAAgBA,KAAA,EAChB,EACA,EACAzB,EAA8B,IArBjC,CAyBH,OA5BKxH,CAAA,GA+BP,CAAAgF,IAAA,cAAAhI,MAMOkM,SAAK1B,GACV,IAAMhK,EAAIsE,KAAApC,WAAAE,QAAA4H,GAGV,UAFehK,GAGbsE,KAAKpC,WAAWyH,OAAE3J,EAAA,GACnBsE,KAAA,IAAA0F,GAEC3I,EACEiD,KAAKsC,cACL,CACD+E,aAAA,CAAA3B,GACGwB,KAAI,EACJ5J,OAAQ0C,MAEV,CAAgB,EAAAA,KAAA,GAAA,EAAA,EAAA,EAAA,EAAA0F,EAAA,KAGfA,GAGA,IArBK,GAwBZ,CAAAxC,IAAA,eAAAhI,MAOOoM,SAAIC,EAAAC,GACT,GACED,IAAaC,GAEbA,EAAGjK,aAAAyC,MAEHuH,EAACtI,SAAAe,MAED,SAKG+G,EAAAA,SAEL,IAAGrL,EAAAsE,KAAApC,WAAAE,QAAA0J,GA0BIA,OAzBPxH,KAAKpC,WAAWyH,OAAO3J,EAAO,EAAG6L,GACjCvH,KAAI,IAAgCwH,GACpCxH,KAAI,IAAiCuH,GAErCxK,EACEiD,KAAKsC,cACL,CACE0E,WAAY,CAACO,GACbF,aAAc,CAACG,GACfN,KAAI,EACJD,YAAajH,KAAEpC,WAAAlC,EAAA,GACf4B,OAAQ0C,MAEV,GAEEA,KAAC,GACDA,KAAKpC,WAAWlC,EAAQ,GAAKsE,KAACpC,WAAAlC,EAAA,GAAA,GAAA,EAC9B,EACA,EACA,EACA6L,EAAM,GACNC,EAAQ,KAILA,CAzCE,GA4CX,CAAAtE,IAAA,cAAAhI,MAKOuM,WACF,IAAH,IAAGC,EAAA1H,KAAAzC,WAAAoK,EAAA/D,UAAA3F,OADiB5B,EAA2BqF,MAAAiG,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAA3BvL,EAA2BuL,GAAAhE,UAAAgE,MAE3CC,EAAuBxL,EAAM4B,OAE5ByJ,EAML,IAHKG,GACHH,EAAON,YAAYpH,MAEd6H,KAGsB,WAAvBhG,EAFJiG,EAAYzL,EAAAwL,MAGVC,EAAc9H,KAAAsC,cAAAyF,eAAAD,IAIfD,EAIAH,EAAAf,aAAAmB,EAAA9H,KAAAiH,aAFCS,EAAOJ,aAAaQ,EAAqB9H,KApBE,GA2BjD,CAAAkD,IAAA,SAAAhI,MAIO6L,WACD/G,KAAKzC,YACPyC,KAAKzC,WAAU6J,YAAApH,KAFN,GAMb,CAAAkD,IAAA,mBAAAhI,wFXlZsDiE,iQAAAA,8NAAAA,gLWgC9B6C,CAAA,CAAA,GCrBJgG,WAAcC,GAGlCD,SAAAA,EAAYtF,EAAc3E,EAAoB6H,EAAoBtD,EAAqBuD,GAI2C,OAJrB7B,OAAAgE,IAC3G5E,EAAA8E,EAAAC,KAAAnI,KAAMjC,EAAU6H,EAAUtD,EAAeuD,IAHnC,SAAA,EAINzC,EAAI,IAA2BV,EAE/BU,EAAI,GAAqC,CAACA,EAAI,GAA2BrF,EAAUqK,EAAYxC,GAAWwC,EAAY1F,GAAO,GAJlBkC,CAAA,CAH3EyD,EAAAL,EAAAC,GAAA,IAAAC,EAAAI,EAAAN,GAkFjCA,OA/DD/D,EAAA+D,EAAA,CAAA,CAAA9E,IAAA,OAAA7H,IAGAA,WACE,OAAO2E,KAA4B,GAD7B,EAIR1E,IAGAA,SAASJ,GACP,IAAMqN,EAAWvI,KAAK0C,KACtB1C,KAAI,IAA2B9E,EAE/B6B,EACEiD,KAAKsC,cACL,CACEhF,OAAQ0C,KACRkH,KAAI,EACJhM,MAAAA,EACAqN,SAAAA,GAEF,CAAA,EAA2CvI,KAA6B,GAAEoI,EAAYlN,IAZpE,GAgBtB,CAAAgI,IAAA,SAAA7H,IAGAA,WACE,OAAO2E,KAA4B,IAAC/B,MAD5B,GAIV,CAAAiF,IAAA,YAAA7H,IAGAA,WACE,OAAO2E,KAA4B,GADxB,EAIb1E,IAGAA,SAAcJ,GACZ8E,KAAK0C,KAAOxH,CADa,GAI3B,CAAAgI,IAAA,yBAAA7H,IAKAA,WACE,OAAOqC,EAA0BsC,KADT,GAI1B,CAAAkD,IAAA,qBAAA7H,IAKAA,WACE,OAAO2C,EAAsBgC,KADT,KAErBgI,CAlFiC,EAAQrC,GCN/B6C,WAAQC,GACnBD,SAAY9F,EAAAA,EAAcJ,EAAqBuD,GAAsB,OAAA7B,OAAAwE,KAAAL,KAC7DzF,KAAAA,IAA6B,WAAYJ,EAAeuD,EADK,CADlDwC,EAAAG,EAAAC,GAAA,IAAAP,EAAAI,EAAAE,UAKnBvE,EAAAuE,EAAA,CAAA,CAAAtF,IAAA,cAAA7H,IAIAA,WACE,OAAYqH,KAAAA,IADC,EAIfpH,IAKAA,SAAgBJ,GAEd8E,KAAK0I,UAAYxN,CAFU,GAK7B,CAAAgI,IAAA,YAAAhI,MAIOyN,WACL,OAAYrG,KAAAA,cAAcsG,cAAc5I,KAAK0C,KAD/B,KA3BGxE,CAAA,EAAQ8J,GCLvBa,EAAkD,CACtDnH,OAAO,EACPoH,aAAa,EACbC,QAAQ,EACRC,eAAe,EACfC,gBAAgB,EAChBC,SAAS,EACTC,OAAO,EACPC,aAAa,EACbC,UAAU,EACVC,MAAM,EACNxH,OAAO,EACPyH,WAAW,EACXC,OAAO,EACPC,aAAa,EACbC,cAAc,EACdC,cAAc,EACdC,UAAU,EACVC,UAAU,EACVC,YAAY,EACZC,YAAY,EACZC,WAAW,EACXC,MAAM,EACNvF,MAAM,EACNZ,KAAK,EACLkC,MAAM,EACNkE,KAAK,EACLC,QAAQ,EACRxK,QAAQ,EACR1D,SAAS,EACTmO,OAAO,EACPC,YAAY,EACZC,gBAAgB,EAChBC,SAAS,EACTC,QAAQ,EACRC,KAAK,EACL9J,QAAQ,EACR+J,QAAQ,EACRC,aAAa,EACbC,aAAa,EACbC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLzO,aAAa,EACb0O,aAAa,EACbC,YAAY,EACZC,mBAAmB,EACnBC,SAAS,EACTC,SAAS,EACTC,aAAa,EACbC,WAAW,EACXC,gBAAgB,EAChBC,MAAM,EACNC,kBAAkB,EAClBC,qBAAqB,EACrBC,MAAM,EACNC,QAAQ,EACRC,eAAe,EACfC,cAAc,EACdC,SAAS,EACTC,WAAW,EACXC,oBAAoB,EACpBvQ,UAAU,EACVwQ,WAAW,EACXC,oBAAoB,EACpBC,QAAQ,EACRC,OAAO,EACPC,WAAW,EACXC,UAAU,EACV9L,OAAO,EACPmC,UAAU,EACV4J,WAAW,EACXC,SAAS,EACTC,oBAAoB,EACpBC,sBAAsB,EACtBC,YAAY,EACZpM,UAAU,EACVqM,aAAa,EACbC,uBAAuB,EACvBC,sBAAsB,EACtBC,MAAM,EACN3I,YAAY,EACZ4I,aAAa,EACbC,UAAU,GC5ECC,EACXA,SAACC,GAAuB,OACvBzO,SAAAA,GAKC,OAAOyO,EAAS5G,SAAS7H,EAAQ0O,QALL,CADN,EASbC,GAAmBA,SAAC5Q,GAAU,OAA2B,IAAbA,EAAKoB,QAAnB,EAE9BqB,GAAwBA,SAAHA,EAAIzC,EAAY6Q,GAChD,IAAMC,EAA8B,GASpC,OARK7P,EAAAA,WAAWT,SAAQ,SAACuI,GACnB6H,GAAiB7H,KACf8H,EAAmB9H,IACrB+H,EAAiBhS,KAAKiK,GAExB+H,EAAiBhS,KAAIkI,MAArB8J,EAAgBC,EAAStO,EAAsBsG,EAAkB8H,KALnC,IAFmEG,CAAA,EAa1FC,GAAoBA,SAApBA,EAAqBhP,EAAkB4O,GAClD,IAAIK,EAA8B,KAc3BA,OAbPjP,EAAQkP,SAASpH,MAAK,SAAChB,GACrB,OAAI8H,EAAmB9H,YAIjBqI,EAAkBH,EAAkBlI,EAAO8H,OAH/CK,EAAcnI,GACP,EAHqB,IAazBmI,CAfqG,EAkBjGG,GAAqBA,SAACpP,EAAkB4O,GACnD,KAAQ5O,EAAUA,EAAQrB,YACxB,GAAIiQ,EAAmB5O,GACrB,OAAOA,EAGJ,OAAA,IANsG,EAelGC,GAAqBA,SAACH,EAA6BE,GAC9D,IAAKF,EACH,OAAO,EAEHuP,IAAAA,EAAmBvP,EAAaZ,QAAQ,KACxCoQ,EAAyBxP,EAAaT,OACtCkQ,EAA8D,MAA5CzP,EAAa8B,OAAO0N,EAAiB,GACvDE,EAASD,EAAkBD,EAAiB,EAAIA,EAAiB,EACtD,IAAC,IAAdD,EAAiB,CACbI,EAAsB3P,EAAa8B,OAAOyN,EAAW,GAE3D,IAAMK,EAD6BC,CAAC,IAAK,IAAK,IAAK,IAAK,KACZ9H,SAAS4H,GAAe3P,EAAaD,UAAU,EAAGwP,EAAW,GAAKvP,EAAaD,UAAU,EAAGwP,GAGxI,KAFyBvP,EAAaD,UAAUwP,EAAW,EAAGG,GACxDI,EAA8B5P,EAAQ6P,aAAaH,GAIvD,OAFMI,EAAqBP,EAA0BQ,EfjFHxP,ceiFewP,EAC3DC,EAAyBT,EAA0BK,EflFPrP,cekFuBqP,EACjEH,GACN,IAAK,IACH,OAA0D,IAAnDO,EAAeC,MAAM,KAAK/Q,QAAQ4Q,OACtC,IACH,OAAOE,IAAmBF,GAAcE,IAAc5S,GAAAA,OAAQ0S,EAAa,KACxE,IAAA,IACH,OAAOE,EAAeE,WAAWJ,GAC9B,IAAA,IACH,OAAsBK,EAAAA,SAASL,GACjC,IAAK,IACH,OAA+C,IAAxCE,EAAe9Q,QAAQ4Q,GAE9B,QAAA,OAAA9J,IAA0B8J,EAGhC,OAAO,CAxBY,CA0BnB,SAAeM,aAAatQ,EAAaD,UAAU,EAAG2P,GAlCmC,EhB9CvEa,YAAWhH,GAAAgH,SAAAA,IAAA,OAAAjL,OAAAiL,GAAAtL,EAAAA,MAAA3D,KAAA4D,UAAA,CAAAyE,EAAA4G,EAAAhH,GAAA,IAAAC,EAAAI,EAAA2G,UAAAhL,EAAAgL,EAAA,CAAA,CAAA/L,IAAA,WAAA7H,IAM/BA,WACE,OAAO2E,KAAKpC,WAAWyB,OAAOkO,GADpB,GAIZ,CAAArK,IAAA,oBAAA7H,IAKAA,WACE,YAAYyS,SAAS7P,MADF,GAIrB,CAAAiF,IAAA,oBAAA7H,IAKAA,WACE,OAAauC,KAAAA,WAAWsR,KAAK3B,KAAiC,IAD3C,GAIrB,CAAArK,IAAA,mBAAA7H,IAKAA,WACE,IAAMyS,EAAW9N,KAAK8N,gBACfA,EAASA,EAAS7P,OAAS,IAAM,IAFtB,GAKpB,CAAAiF,IAAA,gBAAAhI,MAKAiU,SAAc9Q,GAEZ,OADM+Q,EAA4BhR,EAAiB4B,KAAM3B,IACxC+Q,EAAQ,GAAK,IAFF,GAK9B,CAAAlM,IAAA,mBAAAhI,MAKAkD,SAAiBC,GACf,OAAOD,EAAiB4B,KAAM3B,EADC,KArDFgR,CAAA,EAAQ1J,GEXnC2J,GAAmB,KAqBZC,GAAY,WAavBA,SAAAA,EAAYjS,EAAiBkS,GAAqBxL,OAAAuL,GAAAvP,KAZ1C,IAA4C,GAAEA,KAC9C,SAAA,OACA,SAAA,EAAAA,KACA,SAAA,EAUNA,KAAI,IAA6B1C,EACjC0C,KAAI,IAAoCwP,EACxCxP,KAAI,IAAqC1C,EAAM,IAAmCmS,KAAKnS,EAHvC,CAkKjDiS,OA5JDtL,EAAAsL,EAAA,CAAA,CAAArM,IAAA,QAAA7H,IAIAA,WACE,OAAO2E,KAA8B,IAAC0P,KAAK,IADpC,EAITpU,IAYAA,SAAUqU,GAAkB,IAAAC,EACpBrH,EAAWvI,KAAK9E,MAChB2U,EAAWF,EAAWG,QAG5BF,EAAA5P,KAA8B,KAACqF,OAAM1B,MAAAiM,GAAC,EAAG5P,KAAI,IAA2B/B,QAAMjC,OAAA0R,EAAmB,KAAbmC,EAAkBA,EAAShB,MAAM,OAAS,WAC/F,IAACtG,EAAUsH,EANhB,GAS5B,CAAA3M,IAAA,SAAA7H,IAjBAA,WACE,YAAqC,IAAC4C,MAD9B,GAET,CAAAiF,IAAA,OAAAhI,MAoBM6U,SAAKrU,GACV,OAAOsE,KAAI,IAA2BtE,EADf,GAIzB,CAAAwH,IAAA,WAAAhI,MAKO+D,SAAS+Q,GACd,OAAOhQ,KAA8B,IAACyG,SAASuJ,EADpB,GAI7B,CAAA9M,IAAA,MAAAhI,MAOO+U,WACuB,IADA,IAAAC,EACtB3H,EAAWvI,KAAK9E,MAAMyM,EAAA/D,UAAA3F,OADhBkS,EAAgBzO,MAAAiG,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAhBuI,EAAgBvI,GAAAhE,UAAAgE,IAE5BsI,EAAIlQ,KAAA,KAA2BqF,OAAM1B,MAAAuM,EAAA,CACnC,EACAlQ,KAA8B,IAAC/B,QAAMjC,OAAA0R,EAClChM,MAAM0O,KAAK,IAAI3F,IAAIzK,KAAI,IAA2BhE,OAAOmU,QAE9DnQ,SAAgCuI,EAAUvI,KAAK9E,MAPnB,GAU9B,CAAAgI,IAAA,SAAAhI,MAOO6L,WAA0B,IAAA,IAAAsJ,EAAAC,EAAA1M,UAAA3F,OAAhBkS,EAAgBzO,MAAA4O,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAhBJ,EAAgBI,GAAA3M,UAAA2M,GACzBhI,EAAWvI,KAAK9E,OACtBmV,EAAArQ,KAA8B,KAACqF,OAAM1B,MAAA0M,GACnC,EACArQ,KAAI,IAA2B/B,QAAMjC,OAAA0R,EAClChM,MAAM0O,KAAK,IAAI3F,IAAIzK,KAA8B,IAACX,QAAO,SAAC2Q,GAAK,OAAMG,EAAO1J,SAASuJ,EAAtB,SAEpEhQ,SAAgCuI,EAAUvI,KAAK9E,MAPhB,GAUjC,CAAAgI,IAAA,UAAAhI,MAKOiF,SAAQ6P,EAAeQ,GAAgB,IAAAC,EACvC,GAAAzQ,KAA8B,IAACyG,SAASuJ,GAA7C,CAIA,IAAMzH,EAAWvI,KAAK9E,MAChBI,EAAM,IAAImP,IAAIzK,UACpBqP,IAAcmB,IACZlV,EAAIoV,OAAOV,GACM,KAAbQ,GACFlV,EAAI2U,IAAIO,KAGZC,EAAIzQ,KAAA,KAA2BqF,OAAM1B,MAAA8M,EAAC,CAAA,EAAGzQ,KAA8B,IAAC/B,QAAMjC,OAAA0R,EAAKhM,MAAM0O,KAAK9U,eAC9DiN,EAAUvI,KAAK9E,MAb/C,CAD4C,GAiB9C,CAAAgI,IAAA,SAAAhI,MAQOyV,SAAOX,EAAeY,GAC3B,GAAItB,GAAiBuB,KAAKb,GACxB,MAAUlF,IAAAA,UAAU,yBAGtB,GAAK9K,KAA8B,IAACyG,SAASuJ,QAMjCY,EAGV,OADK7J,KAAAA,OAAOiJ,IACL,YARO7L,IAAVyM,GAAyBA,IAE3B5Q,KAAKiQ,IAAID,UASN,CAjB+B,GAoBxC,CAAA9M,IAAA,KAAAhI,MAMQkB,SAA4BmM,EAAkBrN,GACpD8E,KAAI,IAAmCA,KAA8B,IAAC8Q,aAAc9Q,KAAI,IAAmC9E,GAC3H6B,EACEiD,KAA8B,IAACsC,cAC/B,CACE4E,KAAI,EACJ5J,OAAQ0C,KAA8B,IACtCwP,cAAexP,KAAqC,IACpD9E,MAAAA,EACAqN,SAAAA,GAEF,GAEEvI,KAA8B,IAAA,GAC9BoI,EAAYpI,KAAqC,KACjD,EACU,OAAV9E,EAAiBkN,EAAYlN,GAAS,EAAI,GAhBmB,KAmBlEqU,CA/KsB,CAAA,GepBZwB,GAAWA,SAAChQ,GAAkB,SAAwBiQ,KAAI,SAACC,GAA8C/V,IAAAA,EAAL+V,EAAK/V,MhBJ7D,MAAA,GAAAc,OgBI6CiV,EAAKC,KhBJ/BlV,MAAAA,OAAKd,EAAK,IgBIJ,IAA4CwU,KAAK,IAAxF,EAC9ByB,GACXA,SAACL,EAA4BI,GAAY,gBACxCD,GAAI,OACEH,EAAAA,eAAiBA,GAAgBG,EAAKC,OAASA,CADjD,CADoC,ECoD9BE,GAAmB,WAa9BA,WAAY9T,GAAe0G,OAAAoN,GAAApR,KAJnB,GAAkD,CAAE,EAAAA,KACpD,SAAA,OACA,SAAA,EAGNA,KAAI,IAAqC1C,EAAM,IAAmCmS,KAAKnS,QACnF,IAA6BA,CAFR,QAK3B2G,EAAAmN,EAAA,CAAA,CAAAlO,IAAA,mBAAAhI,MAMOmW,SAAiBnO,GACtB,OAAOlD,KAAkC,GAACkD,IAAQ,EADjB,GAInC,CAAAA,IAAA,iBAAAhI,MAMOoW,SAAepO,GACpB,IAAMqF,EAAWvI,KAAKqR,iBAAiBnO,UAEvClD,KAAkC,GAACkD,GAAO,KACrCqO,KAAAA,QAAQvR,KAAKwR,SAJa7D,CAAA,GAQjC,CAAAzK,IAAA,cAAAhI,MAMOuW,SAAYvO,EAAahI,GAC9B8E,KAAkC,GAACkD,GAAOhI,EAC1C8E,KAAKuR,QAAQvR,KAAKwR,QAFyB,GAK7C,CAAAtO,IAAA,UAAA7H,IAIAA,WACE,IAAIH,EAEOgI,EADP2K,EAAsB,GAC1B,IAAW3K,KAAOlD,QAC6B,MAAxC9E,EAAQ8E,KAAKqR,iBAAiBnO,MACjC2K,GAAW,GAAA7R,OAAOkH,QAAGlH,OAAKd,EAAS,OAGvC,SAAmB4U,MARV,EAWXxU,IAKAA,SAAYJ,GAKV8E,KAAI,GAAiC,CAE/B0R,EAEN,IADA,IAAMzT,GADAyT,GAJ+B,iBAAjBvO,EAA4BjI,EAAQ,IAI7B2T,MAAM,SACX5Q,OACbvC,EAAQ,EAAGA,EAAQ,EAAIuC,EAAQvC,GAAS,EAC/CsE,KAAI,GAAuC0R,EAAOhW,GAAOoU,OjBnJP3Q,eiBmJkBuS,EAAOhW,EAAQ,GAAGoU,OAEnFyB,KAAAA,QAAQvR,KAAKwR,QAZK,GAezB,CAAAtO,IAAA,UAAAhI,MAMQqW,SAAQrW,GACd,IAAMqN,EAAWvI,KAAI,IAAmCA,KAA8B,IAAC8Q,aAAc,QAAS5V,GAC9G6B,EACEiD,KAA8B,IAACsC,cAC/B,CACE4E,KAAI,EACJ5J,OAAQ0C,KAA8B,IACtCwP,cAAe,QACftU,MAAAA,EACAqN,SAAAA,GAEF,GAEEvI,KAA8B,IAAA,GAC9BoI,EAAY,SACZ,EACU,OAAVlN,EAAiBkN,EAAYlN,GAAS,EAAI,GAhBnB,KA9FCyW,CAAA,CAAA,GC1CnBC,GAAoBA,SAACC,EAAiCrS,GACjEqS,EAAW1U,SAAQ,SAAC2U,GAAQ,IACfrM,EADesM,EAAAA,WACG,IAC3BC,EAA+EF,EAAKrM,GAAzEwM,EAAYD,EAAf,GAACE,EAAAF,EAAgB,GAAGxC,OAAgB2C,IAAHD,EAAWzM,ElBzBFtG,ckByBW+S,EAAKE,EAAQJ,EAAX,GAGzDK,EAA6C,oBAE5CzS,OAAAA,eAAeJ,EAASK,UAAW4F,EAAU,CAClD3F,YAAY,EACZzE,eAEE,IAAMiX,EADU1T,KACe6P,aAAae,GAC5C,OAAI4C,OACapD,aAAaQ,GAAiB8C,IAAmBF,EAAS,GAAKH,EAE5EI,EALYzT,KAMCoQ,aAAaQ,IAExB+C,EAAgBD,GAAkBL,EACT,mBAAW9H,OAAOoI,GAAiB5R,OAAO4R,GAVxE,EAYHjX,IAAGA,SAACJ,GAEEkX,EADYxT,KAEN4T,aAAahD,EAAetU,EAAQkX,EAAS,GAAKA,EAAS,IAC1DC,EACTnX,EAJc0D,KAIE4T,aAAahD,EAAe,IAJ9B5Q,KAI4C6T,gBAAgBjD,GAJ5D5Q,KAMN4T,aAAahD,EAAe7O,OAAOzF,GAPvB,GApBC,EAAlBuK,IAAAA,KAAXkI,EAA2BoE,GADD,GADuE,EhBJ/FW,GAAiB,gEAEjBC,GAAoB,2DAEpBC,GAAiC,CACrCC,MAAM,EACNC,MAAM,EACNC,IAAI,EACJC,KAAK,EACLC,IAAI,EACJC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,MAAM,EACNC,OAAO,EACPC,QAAQ,EACRC,OAAO,EACPC,KAAK,GAEDC,GAA2C,CAC/CC,GAAI,CAAEA,IAAI,GACVC,GAAI,CAAEA,IAAI,EAAMC,IAAI,GACpBA,GAAI,CAAEA,IAAI,EAAMD,IAAI,GACpBE,EAAG,CACDC,SAAS,EACTC,SAAS,EACTC,OAAO,EACPC,YAAY,EACZC,SAAS,EACTC,KAAK,EACLC,IAAI,EACJC,UAAU,EACVC,YAAY,EACZC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,QAAQ,EACRhC,IAAI,EACJiC,MAAM,EACNC,KAAK,EACLC,IAAI,EACJtB,GAAG,EACHuB,KAAK,EACLC,SAAS,EACTC,OAAO,EACPC,IAAI,GAENC,GAAI,CAAEA,IAAI,EAAMC,IAAI,GACpBA,GAAI,CAAED,IAAI,EAAMC,IAAI,GACpBC,SAAU,CAAEA,UAAU,GACtBC,OAAQ,CAAEA,QAAQ,EAAMD,UAAU,GAClCE,MAAO,CAAEC,OAAO,EAAMC,OAAO,GAC7BD,MAAO,CAAEA,OAAO,EAAMC,OAAO,GAC7BC,GAAI,CAAEA,IAAI,GACVC,GAAI,CAAEA,IAAI,EAAMC,IAAI,GACpBA,GAAI,CAAED,IAAI,EAAMC,IAAI,IAEhBC,GAA2C,CAC/CxC,GAAI,CAAE6B,IAAI,EAAMJ,IAAI,GACpBgB,EAAG,CAAEhC,KAAK,GACViC,EAAG,CAAEjC,KAAK,GACVkC,EAAG,CAAElC,KAAK,GACVN,EAAG,CAAEM,KAAK,GACV6B,GAAI,CAAED,IAAI,EAAMT,OAAO,GACvBW,GAAI,CAAEF,IAAI,EAAMT,OAAO,IAEnBgB,GAA+B,CACnCC,QAAQ,EACRC,UAAU,EACVC,OAAO,EACPrB,KAAK,GAqJDxU,GAAwD,CAC5D8V,UAAW,KACXC,IAAK,IACLC,GAAI,IACJC,GAAI,IACJC,KAAM,KiB5MKvN,GAAK,WAwBhBA,WAAYtC,EAAc8P,GAAkBhT,OAAAwF,GAXjCxJ,KACJiX,OAFSjX,KACTkH,KAFMlH,KACNkX,UAFPlX,KACO1C,OAJS0C,KACT6N,YAFU7N,KACVmX,UAFgBnX,KAChBoX,WAFapX,KACbqX,iBAFYrX,KACZsX,cAFUtX,KACVuX,aAFOvX,KACPwX,WAsBqCxX,KAvBrCyX,aAAO,OAcP,KAAoC,EAAKzX,KACzC,KAAmC,EAK5BA,KACP0X,eAFO1X,KACP2X,QAFO3X,KACP4X,QAFK5X,KACL6X,QAFK7X,KACL8X,MAFwC9X,KACxC+X,WAAK,EAQL7Q,KAAAA,KAAOA,OACPuQ,UAAYT,EAAKS,aACjBD,aAAeR,EAAKQ,UAHiB,CAmB3C,OAfAvT,EAAAuF,EAAA,CAAA,CAAAtG,IAAA,kBAAAhI,MACM8c,WACLhY,KAAI,KAA2B,CADX,GAErB,CAAAkD,IAAA,2BAAAhI,MACM+c,WACLjY,KAA2B,IAAGA,KAAI,KAA2B,CADhC,GAE9B,CAAAkD,IAAA,iBAAAhI,MACMgd,WACLlY,KAAKqX,kBAAmB,CADL,GAGrB,CAAAnU,IAAA,YAAAhI,MACOid,SAAUjR,EAAcuQ,EAAkBD,GAC/CxX,KAAKkH,KAAOA,OACPuQ,QAAUA,EACfzX,KAAKwX,WAAaA,CAHgD,MAvCpD,CAAA,GAiEZY,GAAwBA,SAC5Bzc,EACAyI,EACAlB,GAEA,QAAmBiB,IAAfC,EAAMlB,GAAoB,CAC5B,IAAMmV,EAAgB1Y,OAAOqD,KAAKoB,EAAMlB,IAClCoV,EAAkB,CACtBra,OAAQoa,EAAcpa,OACtB8R,KAAIA,SAACrU,GACH,OAAOsE,KAAKtE,IAAU,IADN,GAoBpB,OAfcyB,EAAAA,SAAQ,SAACob,GACfC,EAAarO,OAAOoO,GAC1B,IAAME,EAAoBrU,EAAMlB,GAAgCsV,GAChEF,EAAKE,GAAc,CACjBE,WAAYD,EAAiB,GAC7BE,QAASF,EAAiB,GAC1BG,QAASH,EAAiB,GAC1BI,QAASJ,EAAiB,GAC1BK,QAASL,EAAiB,GAC1BV,MAAOU,EAAiB,GACxBX,MAAOW,EAAiB,GACxBnb,OAAQjC,EAA4B,IAAxBod,EAAiB,GAAWA,EAAiB,GAAK9c,EAAiC,IAX5D,IATXiJ,CAAA,CADL,EhB1FdmU,GAAsD,GACtDC,GAAmBA,SAAC9Z,EAAmB+Z,GAA4D,OAC7GF,GAAgB/c,GAAAA,OAD2D,EAAA4H,UAAA3F,aAAAkG,IAAAP,UAAA,GAAAA,UAAA,GiBrBhDsV,+BjBsBEld,KAAAA,OAAIkD,IAAe+Z,CADyB,GA2BvEpV,EAAAA,IAAAA,EAAW,CAAhB,IACEA,EAAAA,OAAM,GAAA,WACNA,EAAAA,KAAI,GAAA,WAcAsV,GAA0B,uEAAAtK,MAAA,KAEnBuK,YAAQC,GAmBnBD,WAAYrb,EAAoBmB,EAAqB4R,EAA4BxO,EAA4BuD,GAYzGzC,OAZ+HY,OAAAoV,IACjIhW,EAAA8E,EAAAC,UAAMpK,EAAkBmB,EHvF4Boa,cGuFhBhX,EAAeuD,IAnB7C0T,gBAAU,EAOXra,EAAAA,eAAS,EACT6B,EAAAA,WAAqB,GACrB+P,EAAAA,kBAAY,EAAA1N,EACXoW,YAAM,EAEdpW,EAIQqW,UAAI,EAIVrW,EAAK0N,aAAeA,GiBvFMoI,+BjBwFrBha,EAAAA,UAAYA,EACZua,EAAAA,KAAON,GAAc1S,SAASrD,EAAKkK,SAAWzJ,EAAY6V,KAAO7V,EAAY8V,OAElFvW,EAAI,GAAqC,CACvCA,EAAI,GACJA,EAAKrF,SACLqK,EAAYhF,EAAKlE,WACjB,EACsB,OAAtBkE,EAAK0N,aAAwB,EAAI1I,EAAYhF,EAAK0N,eAClD1N,CAZ+H,CAnBhHiF,EAAA+Q,EAAAC,GAAAnR,IAAAA,EAAAI,EAAA8Q,YAmCnBA,EAAA,CAAA,CAAAlW,IAAA,QAAA7H,IACAA,WAIE,OAHK2E,KAAKwZ,SACRxZ,KAAKwZ,OAAS,IAAIpI,GAAoBpR,YAE5BwZ,MAJL,GAyDT,CAAAtW,IAAA,yBAAA7H,IAKAA,WACE,SAAiC2E,KADT,GAI1B,CAAAkD,IAAA,qBAAA7H,IAKAA,WACE,OAAO2C,EAAsBgC,KADT,GAItB,CAAAkD,IAAA,YAAA7H,IAIAA,WACE,IAAMue,EAAM5Z,KAAKd,WAAac,KAAKsN,QAE7BuM,MAAK7d,OAAO,CAAC4d,EAAKE,GAAc9Z,KAAKe,aAAa2O,KAAK,KAAKI,OAAS,KACrEiK,EAAW/Z,KAAKga,iBAEtBC,GACMja,KAAKyZ,OAAS5V,EAAY6V,KAMzBG,EAAQE,OAAQ/d,OAAQ4d,EAAM,KAH1BC,CAVA,GAgBb,CAAA3W,IAAA,YAAA7H,IAIAA,WACE,IAAMuC,EAAaoC,KAAKpC,WAEpBA,OAAAA,EAAWK,OACNL,EACJoT,KAAI,SAACtL,GACJ,OAAQA,EAAM3H,UACZ,KAAA,EACE,OAAO2H,EAAMU,YACf,KAAA,EACE,MAAA,UAAApK,OAAc0J,EAAMU,YAAW,kBAE/B,OAAOV,EAAMwU,UAPJ,IAUdxK,KAAK,IAEH,EAjBI,EAoBbpU,IAIAA,SAAc4E,GAAY,IAAAia,EAAAna,OD5HtBoa,SAAgB1X,EAAc2X,GAClC,IAOIC,EAPEhY,EAAgB+X,EAAY/X,cAG9BiY,EAFEC,EAAOlY,EAAcmY,gBAAgBJ,EAAYvJ,aAAcuJ,EAAYnb,WAG7Ewb,EAAmBF,EAAK1J,aACtB6J,EAAQ,CAACH,GACXI,EAAc,EAElBlY,EAAO,MAAQA,EAAO,OACtB,IAAMmY,EAAa,GAEnB,GkBhH2BC,+BlBgHvBJ,GkBjHwBxB,iClBiHcwB,EACxC,MAAM5Y,MAAU,4BAA8B4Y,GAGhD,KAAQJ,EAAQ5H,GAAeqI,KAAKrY,IAAQ,CAC1C,IAAMsY,EAAkBV,EAAM,GACxBW,EAAiBX,EAAM,GACvBhN,EAAUgN,EAAM,GAChBY,EAAkBZ,EAAM,GACxBa,EAAWb,EAAM,GAQCnW,GANxBiX,EAAkBd,EAAM5e,QAEhB2f,EAAO3Y,EAAKmE,MAAM+T,EAAaN,EAAM5e,OAC3C6e,EAAczT,YAAYxE,EAAcyF,eAAe9H,EAAeob,MAExET,EAAclI,GAAe4I,eACLnX,IAApB6W,EAEFT,EAAczT,YAAYxE,EAAcsG,cAAcoS,QAFxD,CAYI,GAJsB,SAFpBO,EAA4BjO,EFzIkBgM,iBE4IlDoB,EAAmBO,EkB3IK/B,+BACD4B,+BlB6IpBG,EAAgB,EAEdE,GAAYzH,GAAyB6G,EAAcjN,UAClDoG,GAAyB6G,EAAcjN,SAASiO,KAClDZ,EAAMa,MACNjB,EAAyBI,EAAAA,EAxIlB1c,OAAS,IA4Idwd,EAAgBnZ,EAAcmY,gBAAgBC,EkBvJ5BxB,iClBuJ8CwB,EAA8CpN,EF1JlEnO,cE0J6EmO,GAE1H,IAAA,IAAIoO,EAAWA,EAAW/I,GAAkBoI,KAAKG,IAGpDO,EAAcjJ,aAFGkJ,EAAS,GACRA,EAAS,IAAMA,EAAS,IAAMA,EAAS,OAI3DnB,EAAgBA,EAAczT,YAAY2U,GAE1Cd,EAAMlf,KAAK8e,GACPhE,GAAmBgF,GAAoB,CAIzC,GAFMI,EAAc,KAAeJ,EFvKapc,cEuKQ,KAE1C,MADAuD,EAAK5E,QAAQ6d,EAAajJ,GAAe4I,YAErD,MAAUxZ,MAAM,2BAEhB4Q,GAAe4I,UAAY5f,CAPY,CApBxB,CAoCrB,GAJgB,kBAAZ4R,IACFoN,EAAmBO,EkB9KIH,6BADC5B,gClBkLtB+B,GAAkBE,GAAYvI,GAAqB2I,GAErD,OACsB,GAAhBZ,EAAM1c,SADC,CAKX,GAAYsc,EAAc3U,SF1LsB0T,eE0LTiC,EACrCZ,EAAMa,MACNjB,EAAyBI,EAAAA,EAhLlB1c,OAAS,QAoLhB,GAAIkY,GAAyBoE,EAAcjN,UACrC6I,GAAyBoE,EAAcjN,SAASiO,GAAoB,CACtEZ,EAAMa,MACNjB,EAAyBI,EAAAA,EAvLtB1c,OAAS,GAwLZ,QAHsE,CAJ1E,KARS,CAlDf,CAb0C,CAwF5C,IAAA2d,EAAA,EAAwBA,EAALjB,EAAK1c,QAClB4c,EAAWA,EAAW5c,OAAS,IADlB0c,EAAJiB,GACiChW,SADxBgW,IAEpBjB,EAAMa,MACNX,EAAWW,MACXjB,EAAyBI,EAAAA,EAtMd1c,OAAS,GA0MO,GAAA,IAAjB0c,EAAM1c,OAGlB,MAAU6D,MAAM,6CAKlB,GAFM+Z,EAAUrB,EAAKsB,WAOnB,OAJAD,EAAQte,WAAa,KACrBse,EAAQje,WAAWT,SAAQ,SAACR,GAC1BA,EAAKY,WAAa,IADsB,IAGnCse,EAGC/Z,MAAAA,MAAM,oCAhIsC,CC6HvCsY,CAAMla,EAAMF,MAGzBA,KAAKpC,WAAWT,SAAQ,SAAC8F,GACvBsC,EAAUtC,EAAG,eAAe,GAC5BsC,EAAUtC,EAAkCA,GAAAA,EAFhB,IAK9BlG,EACEiD,KAAKsC,cACL,CACE+E,aAAcrH,KAAKpC,WACnBsJ,KAAI,EACJ5J,OAAQ0C,SAIRA,KAAI,GACJ,EACA,EACA,EACAA,KAAKpC,WAAWK,QAAMjC,OAAA0R,EACnB1N,KAAKpC,WAAWoT,KAAI,SAACrU,GAAI,OAAKA,EAA6B,EAAlC,OAI3BiB,KAAAA,WAAa,KAGbA,WAAWT,SAAQ,SAACuI,GAAW,SAAUoB,YAAYpB,EAAtB,GA9BZ,GAiC1B,CAAAxC,IAAA,cAAA7H,IAeAA,WACE,OAAO2E,KAAKmG,gBADC,EAIf7K,IAfAA,SAAgB+f,GAEdrb,KAAKpC,WAAWiJ,QAAQ1J,SAAQ,SAACuI,GAAW,OAAKA,EAAMqB,QAAX,IAC5C/G,KAAK8G,YAAY9G,KAAKsC,cAAcyF,eAAesT,GAHzB,GAI3B,CAAAnY,IAAA,UAAA7H,IAeDA,WACE,OAAO2E,KAAK4F,QADH,GAIX,CAAA1C,IAAA,eAAAhI,MAMOsX,SAAatB,EAAchW,GAChC8E,KAAK+b,eiBpSqB7C,+BjBoSUhI,EAAMhW,EADI,GAIhD,CAAAgI,IAAA,eAAAhI,MAOOuT,SAAayC,GAClB,OAAY8K,KAAAA,eiB/Sc9C,+BjB+SiBhI,EADb,GAIhC,CAAAhO,IAAA,kBAAAhI,MAOOuX,SAAgBvB,GACrBlR,KAAKic,kBiB1TqB/C,+BjB0TahI,EADN,GAInC,CAAAhO,IAAA,eAAAhI,MAKO8T,SAAakC,GAClB,OAAYgL,KAAAA,eiBnUchD,+BjBmUiBhI,EADb,GAIhC,CAAAhO,IAAA,gBAAAhI,MAIOihB,WACL,OAAA,EAAOnc,KAAKe,WAAW9C,MADL,GAIpB,CAAAiF,IAAA,iBAAAhI,MASO6gB,SAAejL,EAA4BI,EAAchW,GAC9D,IAAMkhB,EAAgBzb,OAAOzF,GACvBmhB,EAAkBrc,KAAKsc,YAA0E,IAACpL,QACjF/M,IAAnBkY,GACGrc,KAAKe,WAAWmO,KAAKqN,GAAmBzL,EAAcI,KACzDlR,KAAKe,WAAWtF,KAAK,CACnBqV,aAAAA,EACAI,KAAAA,EACAhW,MAAOkhB,IAGXC,EAAe,GAAGrc,KAAMoc,KAIpB7T,EAAWvI,KAAsC,IAAC8Q,EAAcI,EAAMkL,GAC5Erf,EACEiD,KAAKsC,cACL,CACE4E,KAAI,EACJ5J,OAAQ0C,KACRwP,cAAe0B,EACfsL,mBAAoB1L,EACpB5V,MAAOkhB,EACP7T,SAAAA,GAEF,GAEEvI,KAAI,GACJoI,EAAY8I,GACZ9I,EAAY0I,GACF,OAAV5V,EAAiBkN,EAAYgU,GAAiB,EAAI,IA/BsB,GAkC7E,CAAAlZ,IAAA,KAAAhI,MAEMkB,SAAmC0U,EAA4BI,EAAchW,GAClF,IAAM+V,EAAOjR,KAAKe,WAAWmO,KAAKqN,GAAmBzL,EAAcI,IAC7D3I,EAAY0I,GAAQA,EAAK/V,OAAU,UAErC+V,EACFA,EAAK/V,MAAQA,EAEb8E,KAAKe,WAAWtF,KAAK,CACnBqV,aAAAA,EACAI,KAAAA,EACAhW,MAAAA,IAV2FuhB,CAAA,GAgBjG,CAAAvZ,IAAA,iBAAAhI,MAQO8gB,SAAelL,EAA4BI,GAEhD,OADMD,EAAOjR,KAAKe,WAAWmO,KAAKqN,GAAmBzL,EAAcI,UAGvC/M,KADpBkY,EAAkBrc,KAAKsc,YAA0E,IAACpL,IAClEmL,EAAe,GAAGrc,MAAQiR,EAAK/V,MAEhE,IANqD,GAS9D,CAAAgI,IAAA,oBAAAhI,MAQO+gB,SAAkBnL,EAA4BI,GACnD,IAAMxV,EAAQsE,KAAKe,WAAW2b,UAAUH,GAAmBzL,EAAcI,IAEzE,GAAa,GAATxV,EAAY,CACd,IAAM6M,EAAWvI,KAAKe,WAAWrF,GAAOR,WACnC6F,WAAWsE,OAAO3J,EAAO,GAE9BqB,EACEiD,KAAKsC,cACL,CACE4E,KAAI,EACJ5J,OAAQ0C,KACRwP,cAAe0B,EACfsL,mBAAoB1L,EACpBvI,SAAAA,GAEF,GAEEvI,KAA6B,GAC7BoI,EAAY8I,GACZ9I,EAAY0I,GACZ,GAlBU,CAH+C,GA2BjE,CAAA5N,IAAA,iBAAAhI,MAMOghB,SAAepL,EAA4BI,GAChD,OAAOlR,KAAKe,WAAW2F,KAAK6V,GAAmBzL,EAAcI,GADD,GAI9D,CAAAhO,IAAA,yBAAAhI,MAKOyhB,SAAuBC,GAC5B,IAAMC,EAAiBD,EAAM/N,MAAM,KAI5BzP,OAAAA,GAAsBY,MAAM,SAACpB,GAAO,OAAoB8H,EAAAA,MAAK,SAACoW,GAAc,OAAa9d,EAAAA,UAAUC,SAAS6d,EAAhC,GAAxC,GALF,GAQ3C,CAAA5Z,IAAA,uBAAAhI,MAKO6hB,SAAqBzP,GAC1B,IAAM0P,EAAuB1P,EH/duBnO,qBGge7CC,GACLY,KACY,MAAZsN,EACI,SAAClR,GAAC,OAAK,CAAL,EACF,SAACwC,GAAO,MiBjeYsa,iCjBieNta,EAAQkS,aAAkClS,EAAQM,YAAc8d,EAAepe,EAAQ0O,UAAYA,CAAzG,EAN2B,GAU3C,CAAApK,IAAA,oBAAAhI,MAKO+hB,SAAkB/L,GACvB,IAAMgM,EAAa,GAAKhM,EACxB,UAA6BlR,MAAM,SAACpB,GAAO,OAAKA,EAAQ6P,aAAa,UAAYyO,CAAtC,GAFX,GAKlC,CAAAha,IAAA,YAAAhI,MAKOyN,WAA+B,IAArBwU,EAAA,EAAAvZ,UAAA3F,aAAAkG,IAAAP,UAAA,IAAAA,UAAA,GACTwZ,EAAiBpd,KAAKsC,cAAcmY,gBACxCza,KAAK8Q,aiBtfmBoI,iCjBufxBlZ,KAAK8Q,aAA0C9Q,KAAKsN,QH1fFnO,cG0faa,KAAKsN,SAM/D8P,OAJPpd,KAAKe,WAAW5D,SAAQ,SAAC8T,GAAI,OAAKmM,EAAM5K,aAAavB,EAAKC,KAAMD,EAAK/V,MAAxC,IACzBiiB,GACFnd,KAAKpC,WAAWT,SAAQ,SAACuI,GAAW,OAAWoB,EAAAA,YAAYpB,EAAMiD,UAAUwU,GAAvC,IAE/BC,CAT6B,GAYtC,CAAAla,IAAA,6BAAAhI,MAOOmiB,WAA0B,IAAAC,EAAAtd,KACzBiS,EAAe,CACnBsL,KAAM,EACNC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,EAAG,EACHC,EAAG,EACHC,MAAO,EACPC,OAAQ,GAGH,OAAA,IAAI7hB,SAAQ,SAACC,GAqBRoG,EAAAA,cAAcC,wBAA2B+a,EAAKxX,aAKtDwX,EAAKhb,cAAcC,uBAAuB,WAzBrBC,SAAHA,EAAAC,GAClB,KADwBC,EAAID,EAAJC,MAEM,KAC3BA,EAAmC,IAA2B,KAAO4a,EAAI,KAE1EA,EAAKhb,cAAcK,0BAA0B,UAAWH,GAClDub,EAAkErb,EAA2D,IACnIxG,EAAQ,CACNshB,IAAKO,EAA8B,GACnCN,MAAOM,EAA8B,GACrCL,OAAQK,EAA8B,GACtCR,KAAMQ,EAA8B,GACpCF,MAAOE,EAA8B,GACrCD,OAAQC,EAA8B,GACtCJ,EAAGI,EAA8B,GACjCH,EAAGG,EAA8B,KAfwB,IA0B7DviB,EAAS8hB,EAAKhb,cAA2B,CAAqDgb,EAAAA,EAA6B,KAC3HhZ,WAAWpI,EAAS,IAAK+V,IAJzB/V,EAAQ+V,EAxBmB,GAZA,GA6CjC,CAAA/O,IAAA,QAAAhI,MACA8iB,WACE,IAAM5Z,EAAQ,IAAIoF,GAAM,QAAS,CAAA,GACjCpF,EAAM9G,OAAS0C,KACVie,KAAAA,cAAc7Z,EAHhB,GAML,CAAAlB,IAAA,iBAAAhI,MACAgjB,WACMle,KAAK8F,aACPtK,EAASwE,KAAKsC,cAA2B,CAA6C,GAAAtC,KAA6B,IAFzG,GAIb,CAAAkD,IAAA,YAAA7H,IAEDA,WACE,YAAYke,aAAevZ,KAAKuZ,WAAa,IAAIhK,GAAavP,KAAM,SADlD,KAhgBDqP,CAAA,EAAQJ,OAGb,IAAyE,CACrFkP,MAAO,CAAC,SAACC,GAAE,OAAoBA,EAAGpf,UAAU9D,KAAjC,EAAwC,SAACkjB,EAAIljB,GAAa,SAAS8D,UAAU9D,MAAQA,CAA3B,GACrEmjB,MAAO,CAAC,SAACD,GAAE,SAAuB5M,OAAvB,EAAgC,SAAC4M,EAAIljB,GAAa,OAAMkjB,EAAG5M,QAAUtW,CAAnB,IA+fjEqE,EAAqB6Z,GAAS,YAAa,aAC3CxH,GAAkB,CAAC,CAAE9S,GAAI,CAAC,MAAQsa,IkBpkB3B,IA2BMkF,YAAYC,GAAAD,SAAAjP,IAAArL,OAAAsa,GAAA,IAAA3W,IAAAA,EAAA/D,UAAA3F,OAAAmD,EAAAM,MAAAiG,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAAxG,EAAAwG,GAAAhE,UAAAgE,GAGjBxE,OAHiBA,EAAA8E,EAAAC,KAAAxE,MAAAuE,EAAA,CAAAlI,MAAAhE,OAAAoF,KAChB,IAEH,GAAEgC,CAHiB,CAAAiF,EAAAiW,EAAAC,OAAArW,EAAAI,EAAAgW,GAgBtB,OAbKra,EAAAqa,EAAA,CAAA,CAAApb,IAAA,OAAA7H,IAONA,WACE,OAAO2S,GAAmBhO,KAAMoN,EAA0B,CAAC,SADrD,GAEP,CAAAlK,IAAA,KAAAhI,MAEDkB,WACE,MAAO,CAAA,EAAsC4D,KAAI,GADD,KAd3BqP,CAAA,EAAQ+J,IA8BjCxH,GACE,CACE,CAAE4M,UAAW,CAAC,KACd,CAAEC,gBAAiB,CAAC,YACpB,CAAEC,IAAK,CAAC,KACR,CAAEC,KAAM,CAAC,KACT,CAAEC,MAAO,CAAC,KACV,CACEC,UAAW,EAAC,OAAkB1a,EAA0B,CAAC,OAAQ,WAEnE,CAAE2a,OAAQ,EAAC,OAAkB3a,IAC7B,CAAE4a,SAAU,EAAC,IACb,CACEC,WAAY,EAAC,OAAiB7a,EAA0B,CAAC,OAAQ,WAEnE,CAAE8a,UAAW,EAAC,OAAiB9a,EAA0B,CAAC,MAAO,SAEnEma,IC3EWY,IAAAA,YAAkBC,GAAAD,aAAAlb,OAAAkb,GAAA,IAAAvX,IAAAA,EAAA/D,UAAA3F,OAAAmD,EAAAM,MAAAiG,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAAxG,EAAAwG,GAAAhE,UAAAgE,GACb,OADaxE,EAAA8E,EAAAC,KAAAxE,MAAAuE,EAAA,CAAAlI,MAAAhE,OAAAoF,KACrBge,cAAQ,EADahE,CAAA,CAAA/S,EAAA6W,EAAAC,OAAAjX,EAAAI,EAAA4W,GAgC5B,OA/Bejb,EAAAib,EAAA,CAAA,CAAAhc,IAAA,UAAA7H,IAEhBA,WACE,OAAO2E,KAAKof,WAAapf,KAAKof,SAAW,IAAI7P,GAAavP,KAAM,OADhD,GAIlB,CAAAkD,IAAA,WAAAhI,MAKO6V,WACL,OAAO/Q,KAAKqf,IADC,GAIf,CAAAnc,IAAA,OAAA7H,IAKAA,WACE,OAAY+K,KAAAA,WADN,EAIR9K,IAKAA,SAAS+f,GACPrb,KAAKoG,YAAciV,CADA,KA9BQhM,CAAA,EAAQiP,IAkCvCtF,GAAiB,IAAKkG,MACSA,GAAmB,CAChDI,IAAK,CAAC,SAAClB,GAAE,SAAuBmB,QAAQrkB,KAA/B,EAAsC,SAACkjB,EAAIljB,GAAa,OAAMkjB,EAAGmB,QAAQrkB,MAAQA,CAAzB,OAE9CgkB,GAAmB,UAAW,OAQnDtN,GAAkB,CAAC,CAAEyN,KAAM,CAAC,KAAO,CAAEG,SAAU,CAAC,KAAO,CAAEC,MAAO,CAAC,KAAO,CAAEniB,OAAQ,CAAC,KAAO,CAAE4J,KAAM,CAAC,MAAQgY,QC/C9FQ,YAAkBP,GAAAO,SAAArQ,WAAArL,OAAA0b,GAAA/b,EAAAA,MAAA3D,KAAA4D,UAAA,CAAAyE,EAAAqX,EAAAP,GAAA,IAAAjX,EAAAI,EAAAoX,GAAAzb,OAAAA,EAAAyb,EAAA,EAAQpB,IACvCtF,GAAiB,SAAU0G,IAY3B9N,GACE,CACE,CAAE+N,WAAY,CAAC,KACf,CAAEC,YAAa,CAAC,KAChB,CAAEC,WAAY,CAAC,KACf,CAAEC,WAAY,CAAC,KACf,CAAE5O,KAAM,CAAC,KACT,CAAEhK,KAAM,CAAC,WACT,CAAEhM,MAAO,CAAC,KACV,CAAE6kB,UAAW,EAAC,IACd,CAAEC,SAAU,EAAC,KAEfN,QnBxBIje,GAAM,IAAIiI,aAAa,GACvBnI,GAAM,IAAIhF,YAAYkF,GAAInF,QoBMnB2jB,GAAc,WAIzBA,SAAAA,EAAYnhB,EAAYnD,GAAkBqI,OAAAic,GACnCtkB,KAAAA,SAAWA,OACXmD,GAAKA,CAF8B,QAGzCmF,EAAAgc,EAAA,CAAA,CAAA/c,IAAA,eAAAhI,MAEDglB,SAAaC,EAAgBC,GAC3B5kB,EAASwE,KAAKrE,SAAQ,GAEpBV,EAAM,gBACN,GAACe,OAAA0R,EACE1N,KAAsD,OAAE0N,EACxDvM,EAA4BO,MAAA7B,UAAAgH,MAAAsB,KAAKvE,cANE,GAQzC,CAAAV,IAAA,KAAAhI,MAEDkB,WACE,MAAO,CAAyC,EAAA4D,KAAKlB,GADL,KAnBzB6S,CAAA,CAAA,GCJd0O,GAAa,WAGxBA,WAAYvhB,GAAUkF,OAAAqc,QACfvhB,GAAKA,CADU,CAWrB,OAPDmF,EAAAoc,EAAA,CAAA,CAAAnd,IAAA,eAAAhI,MAGAolB,cAAiB,CAAApd,IAAA,KAAAhI,MAEjBkB,WACE,MAAO,CAAyC,EAAA4D,KAAKlB,GADL,MAZ1B,CAAA,GCsBbyhB,GAAuB,WAIlCA,WAAYpe,GAAmB6B,OAAAuc,QAF/BC,QAE+BxgB,KAH/BmC,YAAM,EAICA,KAAAA,OAASA,CADe,CAa9B,OAXA8B,EAAAsc,EAAA,CAAA,CAAArd,IAAA,aAAAhI,MAEDulB,SAAWC,GACT,IAAK1gB,KAAKwgB,QACR,IAA6B,OAAjBE,E1BxCsCvhB,oB0B2C1C2C,MAAU,+BAFhB9B,KAAKwgB,QAAU,IAAIG,GAAuD3gB,KAAKmC,OAE/E,CAGJ,OAAYqe,KAAAA,OARgB,MARI,CAAA,GAoB9BG,GAAyC,WAK7CA,WAAYxe,GAAmB6B,OAAA2c,QAFvBC,YAAc,EAGpB5gB,KAAK6gB,cAAgB1e,EAChB2e,KAAAA,SAAW,EAFa,CAqS9BH,OAlSA1c,EAAA0c,EAAA,CAAA,CAAAzd,IAAA,KAAAhI,MAEOkB,SAA4B2kB,EAAgB3f,GAClD5F,EAASwE,KAAK6gB,cAAcve,cAAyB,GAEnDrH,EAAM8lB,GACN3f,EAAKnD,QAAMjC,OAAA0R,EACR1N,YAAwD0N,EACxDvM,EAA6BC,KAN2B,GAQ9D,CAAA8B,IAAA,KAAAhI,MAEDkB,WACE,MAAO,CAAmD,EAAA4D,KAAK6gB,iBADf,GAIlD,CAAA3d,IAAA,wBAAAhI,MAMQ8lB,SAAsBC,EAAkBC,EAAwBC,GACtE3lB,EAASwE,KAAK6gB,cAAcve,cAAyB,IAEnDrH,EAAMimB,GACND,EACAE,EAAaljB,QAAMjC,OAAA0R,EAChB1N,KAAsD,OAAE0N,EACxDvM,EAA6BggB,KAPuD,GAS1F,CAAAje,IAAA,SAAA7H,IAEDA,WACE,OAAYwlB,KAAAA,aADJ,GAET,CAAA3d,IAAA,YAAAhI,MAEDkmB,SAAUzD,EAAWC,EAAWyD,EAAWpH,GACzCja,KAA+B,IAAC,YAAW0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADC,GAEnD,CAAAV,IAAA,WAAAhI,MAEDomB,SAAS3D,EAAWC,EAAWyD,EAAWpH,GACxCja,KAA+B,IAAC,WAAU0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADC,GAElD,CAAAV,IAAA,aAAAhI,MAEDqmB,SAAW5D,EAAWC,EAAWyD,EAAWpH,GAC1Cja,KAA+B,IAAC,aAAY0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADC,GAEpD,CAAAV,IAAA,YAAAhI,MAEDsmB,SAAU7D,EAAWC,EAAWyD,EAAWpH,EAAWwH,GACpDzhB,KAA+B,IAAC,YAAW0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WAD4D,GAE9G,CAAAV,IAAA,YAAA5H,IAEDA,SAAcJ,GACZ8E,KAA+B,IAAC,YAAW0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADxB,GAE1B,CAAAV,IAAA,WAAAhI,MAEDwmB,SAASrG,EAAcsC,EAAWC,EAAW+D,GAC3C3hB,KAA+B,IAAC,WAAU0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADY,GAE7D,CAAAV,IAAA,SAAAhI,MAED0mB,SAAOjE,EAAWC,GAChB5d,KAA+B,IAAC,SAAQ0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADrB,GAE1B,CAAAV,IAAA,SAAAhI,MAED2mB,SAAOlE,EAAWC,GAChB5d,KAA+B,IAAC,SAAQ0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADrB,GAE1B,CAAAV,IAAA,YAAAhI,MAED4mB,WACE9hB,KAA+B,IAAC,YAAa,GADtC,GAER,CAAAkD,IAAA,SAAAhI,MAED6mB,WACE/hB,KAA+B,IAAC,SAAU,GADtC,GAEL,CAAAkD,IAAA,UAAAhI,MAED8mB,WACEhiB,KAA+B,IAAC,UAAW,GADtC,GAEN,CAAAkD,IAAA,OAAAhI,MAED+mB,WACEjiB,KAA+B,IAAC,OAAQ,GADtC,GAEH,CAAAkD,IAAA,iBAAAhI,MAEDgnB,WACEliB,KAA+B,IAAC,iBAAkB,GADtC,GAEb,CAAAkD,IAAA,SAAAhI,MAEDinB,SAAOC,GACLpiB,KAA+B,IAAC,SAAQ0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WAD5B,GAEnB,CAAAV,IAAA,YAAAhI,MAEDmnB,SAAUhT,EAAW+L,EAAWzJ,EAAWhE,EAAW/I,EAAW1G,GAC/D8B,KAA+B,IAAC,YAAW0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADuB,GAEzE,CAAAV,IAAA,YAAAhI,MAED+jB,SAAUtB,EAAWC,GACnB5d,KAA+B,IAAC,YAAW0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADrB,GAE7B,CAAAV,IAAA,QAAAhI,MAEDonB,SAAM3E,EAAWC,GACf5d,KAA+B,IAAC,QAAO0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADrB,GAEzB,CAAAV,IAAA,cAAA5H,IAEDA,SAAgBJ,GACd8E,KAA+B,IAAC,cAAa0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADxB,GAE5B,CAAAV,IAAA,2BAAA5H,IAEDA,SAA6BJ,GAC3B8E,KAA+B,IAAC,2BAA0B0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADxB,GAEzC,CAAAV,IAAA,wBAAA5H,IAEDA,SAA0BJ,GACxB8E,KAA+B,IAAC,wBAAuB0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADT,GAErD,CAAAV,IAAA,YAAA5H,IAEDA,SAAcJ,GACZ8E,KAA+B,IAAC,YAAW0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADS,GAE3D,CAAAV,IAAA,cAAA5H,IAEDA,SAAgBJ,GACd8E,KAA+B,IAAC,cAAa0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADS,GAE7D,CAAAV,IAAA,aAAA5H,IAEDA,SAAeJ,GACb8E,KAA+B,IAAC,aAAY0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADxB,GAE3B,CAAAV,IAAA,cAAA5H,IAEDA,SAAgBJ,GACd8E,KAA+B,IAAC,cAAa0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADxB,GAE5B,CAAAV,IAAA,gBAAA5H,IAEDA,SAAkBJ,GAChB8E,KAA+B,IAAC,gBAAe0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADxB,GAE9B,CAAAV,IAAA,gBAAA5H,IAEDA,SAAkBJ,GAChB8E,KAA+B,IAAC,gBAAe0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADxB,GAE9B,CAAAV,IAAA,SAAA5H,IAEDA,SAAWJ,GACT8E,KAA+B,IAAC,SAAQ0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADxB,GAEvB,CAAAV,IAAA,YAAAhI,MAEDqnB,WACEviB,KAA+B,IAAC,YAAa,GADtC,GAER,CAAAkD,IAAA,aAAAhI,MAEDsnB,SAAWnH,EAAcsC,EAAWC,EAAW+D,GAC7C3hB,KAA+B,IAAC,aAAY0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADY,GAE/D,CAAAV,IAAA,YAAA5H,IAEDA,SAAcJ,GACZ8E,KAA+B,IAAC,YAAW0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADf,GAEnC,CAAAV,IAAA,eAAA5H,IAEDA,SAAiBJ,GACf8E,KAA+B,IAAC,eAAc0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADZ,GAEzC,CAAAV,IAAA,UAAA5H,IAEDA,SAAYJ,GACV8E,KAA+B,IAAC,UAAS0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADjB,GAE/B,CAAAV,IAAA,iBAAA5H,IAEDA,SAAmBJ,GACjB8E,KAA+B,IAAC,iBAAgB0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADxB,GAE/B,CAAAV,IAAA,WAAA5H,IAEDA,SAAaJ,GACX8E,KAA+B,IAAC,WAAU0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADhB,GAEjC,CAAAV,IAAA,aAAA5H,IAEDA,SAAeJ,GACb8E,KAA+B,IAAC,aAAY0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADxB,GAE3B,CAAAV,IAAA,MAAAhI,MAEDunB,SAAI9E,EAAWC,EAAW8E,EAAgBC,EAAoBC,EAAkBC,GAC9E7iB,KAA+B,IAAC,MAAK0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WAD0D,GAEtG,CAAAV,IAAA,QAAAhI,MAED4nB,SAAMC,EAAYC,EAAYC,EAAYC,EAAYR,GACpD1iB,KAA+B,IAAC,QAAO0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADqB,GAEnE,CAAAV,IAAA,YAAA5H,IAEDA,SAAcJ,GACZ8E,KAA+B,IAAC,YAAW0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADf,GAEnC,CAAAV,IAAA,OAAA5H,IAEDA,SAASJ,GACP8E,KAA+B,IAAC,OAAM0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADxB,GAErB,CAAAV,IAAA,UAAAhI,MAEDioB,SAAQxF,EAAWC,EAAWwF,EAAiBC,EAAiBC,EAAkBX,EAAoBC,EAAkBC,GACtH7iB,KAA+B,IAAC,UAAS0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WAD8F,GAE9I,CAAAV,IAAA,gBAAAhI,MAEDqoB,SAAcC,EAAcC,EAAcC,EAAcC,EAAchG,EAAWC,GAC/E5d,KAA+B,IAAC,gBAAe0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADmC,GAEzF,CAAAV,IAAA,OAAAhI,MAED0oB,SAAKjG,EAAWC,EAAWC,EAAeC,GACxC9d,KAA+B,IAAC,OAAM0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADU,GAEvD,CAAAV,IAAA,mBAAAhI,MAED2oB,SAAiBC,EAAaC,EAAapG,EAAWC,GACpD5d,KAA+B,IAAC,mBAAkB0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADK,GAE9D,CAAAV,IAAA,wBAAA5H,IAEDA,SAA0BJ,GACxB8E,KAA+B,IAAC,wBAAuB0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADvB,GAEvC,CAAAV,IAAA,cAAAhI,MAED8oB,SAAYlD,GAEV,IADAA,EAAQpT,EAAOoT,IACF7iB,OAAS,IACpB6iB,EAAWA,EAAS9kB,OAAO8kB,IAExBA,KAAAA,SAAWA,EAChB9gB,KAA+B,IAAC,cAAa0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WANvB,GAO7B,CAAAV,IAAA,cAAAhI,MAED+oB,WACE,OAAAvW,EAAW1N,KAAK8gB,SADP,GAEV,CAAA5d,IAAA,OAAAhI,MAEDgpB,SAAKC,EAA0CC,GAC7C,GAA8B,WAA1BviB,EAAOsiB,GACT,MAAUriB,MAAM,4CAElB9B,KAA+B,IAAC,OAAM0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WAJ0B,GAKvE,CAAAV,IAAA,OAAAhI,MAEDmpB,SAAKF,EAA0CC,GAC7C,GAA8B,WAA1BviB,EAAOsiB,GACT,MAAMriB,MAAU,4CAElB9B,KAA+B,IAAC,OAAM0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WAJ0B,GAOxE,CAAAV,IAAA,eAAAhI,MACAolB,SAAagE,EAAyCC,EAAeC,EAAeC,EAAeC,EAAexmB,GAChH,GAA4B,WAAxB2D,EAAOyiB,GACT,MAAUxiB,MAAM,6DAElB9B,KAA+B,IAAC,eAAc0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WAJsE,GAK3H,CAAAV,IAAA,uBAAAhI,MAEDypB,SAAqBC,EAAYC,EAAY9B,EAAYC,GACvD,IAAM8B,EAAa9kB,KAAK4gB,cAEjB,OADFI,KAAAA,sBAAsB8D,EAAY,uBAAsBpjB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,YAC5D,IAAIqc,GAAe6E,EAAY9kB,KAAK6gB,cAAcve,cAHQ,GAIlE,CAAAY,IAAA,uBAAAhI,MAED6pB,SAAqBH,EAAYC,EAAYG,EAAYjC,EAAYC,EAAYiC,GAC/E,IAAMH,EAAa9kB,KAAK4gB,cAEjB,OADFI,KAAAA,sBAAsB8D,EAAY,uBAAsBpjB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,YAC5D,IAAIqc,GAAe6E,EAAY9kB,KAAK6gB,cAAcve,cAHgC,GAI1F,CAAAY,IAAA,gBAAAhI,MAEDgqB,SAAchjB,EAA6CijB,GACzD,IAAMC,EAAYplB,KAAK4gB,cAEvB,OADKI,KAAAA,sBAAsBoE,EAAW,gBAAe1jB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,gBAChDyc,GAAc+E,EAHkD,GAI5E,CAAAliB,IAAA,YAAAhI,MAEDmqB,SAAUnjB,EAA0BojB,EAAYC,GAC9CvlB,KAA+B,IAAC,YAAW0B,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADO,GAEzD,CAAAV,IAAA,kBAAAhI,MAEDsqB,WACE,MAAO,EADM,GAEd,CAAAtiB,IAAA,eAAAhI,MAEDuqB,WACE,MAAO,EADG,GAEX,CAAAviB,IAAA,eAAAhI,MAEDwqB,WAFC,GAEgB,CAAAxiB,IAAA,gBAAAhI,MAEjByqB,WACE,MAAM7jB,MAAU,oCADL,GAEZ,CAAAoB,IAAA,kBAAAhI,MAED0qB,WACE,YAAgB,sCADH,GAEd,CAAA1iB,IAAA,cAAAhI,MAED2qB,WACE,MAAU/jB,MAAM,kCADP,KAEV6e,CA1S4C,CAAA,GrB1C3Cte,GAAe,EsBCNyjB,GAAuB,WAAAA,aAAA9hB,OAAA8hB,GAAA9lB,KAC3B,IAA4C,CAAA,OAC5C,KAAsC,EAAKA,KAC3C,SAAA,CAH2B,CA+BjB,OA5BViE,EAAA6hB,EAAA,CAAA,CAAA5iB,IAAA,KAAAhI,MASPkB,SAA0C+F,EAAqBD,EAA0BijB,GAAkB,IAAA/hB,EAAApD,KAczG,OAbAA,SAAgDiC,EAAoBC,EAAcC,GAE/EhG,MAAK,SAAC4pB,GAGD,KAFEC,EAAU7jB,EAAOse,WAAW,MAAMyE,cAAca,EAAUZ,IAG9D,MAAMrjB,MAAU,oBAGlBsB,EAAI,IAA4C4iB,IAC5C,KAAsC,CARZ,IAW3BhmB,KAA6C,GAdqD,GAkB3G,CAAAkD,IAAA,eAAAhI,MACAolB,gBA/BkC3O,CAAA,CAAA,GCevBsU,GAAmB,IAAI7a,QAMvB8a,GAA4B,WAYvCA,SAAAA,EAAY/jB,GAAmB6B,OAAAkiB,GAXvBC,KAAAA,MAAQ,GACRC,KAAAA,oBAAc,EAAApmB,KACdqmB,UAAW,EACErmB,KACbsmB,kBAAY,OAIZC,gBAAkB,OAClBC,wBAAkB,EAGxBxmB,KAAK6gB,cAAgB1e,EACrB,IAAMskB,EAAkBtkB,EAAOG,cAAcokB,YAAYD,qBAGzD,IAAWA,GACTzmB,KAAKomB,eAAkE3F,IAA7CF,GAAqCpe,GAAQse,WAAW,MAElFzgB,KAAKsmB,aADLtmB,KAAKqmB,UAAW,IAUhBrmB,KAAKomB,eAA2C3F,IAAtBgG,EAAgB,EAAG,GAAGhG,WAAW,MAC3DzgB,KAAK2mB,wBAAwB3mB,KAAK6gB,eAClC7gB,KAAKsmB,cAAe,EAnBO,CA2iB9B,OAphBDriB,EAAAiiB,EAAA,CAAA,CAAAhjB,IAAA,0BAAAhI,MAIQyrB,SAAwBxkB,GAAmB,IAAAiB,EAAApD,KACjDA,KAAKumB,kBAECK,IAAAA,EAGF,GACEjrB,EAAWqE,KAAK6gB,cAAcve,cAC9BukB,GAAclrB,EAAS4G,uBAEvBukB,EA0BH3qB,IA1BwBF,SAAQ,SAACC,GAgBlC,GAAKP,EAAS4G,uBAOZ5G,EAAS4G,uBAAuB,WAtBXC,SAAjBA,EAAcC,GAEY,KAFNC,EAAID,EAAJC,MAEM,KAC5BA,EAAI,IAA2B,KAAOP,EAAM,KAE5CxG,EAASgH,0BAA0B,UAAWH,GAE9CtG,EADoCwG,EAAwD,KANzB,IAuBrElH,EAAS2G,EAAOG,cAA2B,CAAsDH,EAAAA,EAA+B,SAPhI,KAAI0kB,EAGF,MAAM/kB,MAAU,0CAFhB8kB,EAAS1qB,QAAUA,CAEnB,CApByC,IA0B5CC,MAAK,SAAC4pB,GACP3iB,EAAKojB,mBAAqBT,EAAStF,WAAW,MACzCsG,EAAAA,4BAFiE,IAUxE,OALIF,IACFD,EAASE,eAAiBA,EAC1Bb,GAAiB3qB,IAAI6G,EAAQykB,IA3CkBI,CAAA,GAiDnD,CAAA9jB,IAAA,wBAAAhI,MAGQ+rB,WACNjnB,KAAKqmB,UAAW,EAEXD,KAAAA,eAA2C3F,IADxBzgB,KAAK6gB,cAAcve,cAAcokB,YAAYD,gBAC3B,EAAG,GAAGhG,WAAW,MACtD8F,KAAAA,iBAJsB,GAO7B,CAAArjB,IAAA,6BAAAhI,MAGQ6rB,WACN/mB,KAAKumB,sBACDvmB,KAAKumB,kBACPvmB,KAAKomB,eAAiBpmB,KAAKwmB,mBAC3BxmB,KAAKqmB,UAAW,EAChBrmB,KAAKknB,aALyB,GAOjC,CAAAhkB,IAAA,aAAAhI,MAEOgsB,WAAU,IACaC,EADbC,goBAAAC,CACGrnB,KAAKmmB,OAAK,IAA7B,IAAAiB,EAAAhnB,MAAA+mB,EAAAC,EAAAnkB,KAAAqkB,MAA+B,CAAA,IAApBnf,EAAIgf,EAAAjsB,MACJqsB,EAAAA,SACNvnB,KAAamI,EAAK4Y,QAAU5Y,EAAK/G,KAAK,GAEtCpB,KAAamI,EAAK4Y,QAAOpd,MAAzB3D,KAAY0N,EAAiBvF,EAAK/G,MAJR,CAAF,CAM5B,MAAAomB,GAAAJ,EAAAxiB,EAAA4iB,EAAA,CAN4B,QAM5BJ,EAAAlpB,GAAA,CACD8B,KAAKmmB,MAAMloB,OAAS,CARJ,GASjB,CAAAiF,IAAA,eAAAhI,MAEOusB,SAAavW,EAAc9P,GAAW,IAAAsmB,EACtC7Z,GAAe6Z,EAAI1nB,KAAComB,gBAAuBlV,GAAKvN,MAAA+jB,EAAAha,EAAItM,IAI1D,OAHKpB,KAAKqmB,UACRrmB,KAAKmmB,MAAM1qB,KAAK,CAAEslB,OAAQ7P,EAAM9P,KAAAA,EAAMmmB,UAAU,IAHN3iB,CAAA,GAM7C,CAAA1B,IAAA,iBAAAhI,MAEOysB,SAAezW,EAAc9P,GAClCpB,KAAKomB,eAAuBlV,GAAQ9P,EAAK,GACrCpB,KAAKqmB,UACRrmB,KAAKmmB,MAAM1qB,KAAK,CAAEslB,OAAQ7P,EAAM9P,KAAAA,EAAMmmB,UAAU,GAHJ,GAK/C,CAAArkB,IAAA,iBAAAhI,MAEO0sB,SAAe1W,GACrB,OAAakV,KAAAA,eAAuBlV,EADH,GAInC,CAAAhO,IAAA,YAAAhI,MACAkmB,SAAUzD,EAAWC,EAAWC,EAAeC,GAC7C9d,KAAKynB,aAAa,YAAW/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADwB,GAE5D,CAAAV,IAAA,WAAAhI,MAEDomB,SAAS3D,EAAWC,EAAWC,EAAeC,GAC5C9d,KAAKynB,aAAa,WAAU/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADwB,GAE3D,CAAAV,IAAA,aAAAhI,MAEDqmB,SAAW5D,EAAWC,EAAWC,EAAeC,GAC9C9d,KAAKynB,aAAa,aAAY/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADwB,GAE7D,CAAAV,IAAA,YAAAhI,MAEDsmB,SAAU7D,EAAWC,EAAWyD,EAAWpH,EAAWwH,GACpDzhB,KAAKynB,aAAa,YAAW/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WAD0E,GAI/G,CAAAV,IAAA,WAAAhI,MACAwmB,SAASrG,EAAcsC,EAAWC,EAAW+D,GAC3C3hB,KAAKynB,aAAa,WAAU/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WAD0B,GAE7D,CAAAV,IAAA,aAAAhI,MAEDsnB,SAAWnH,EAAcsC,EAAWC,EAAW+D,GAC7C3hB,KAAKynB,aAAa,aAAY/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WAD0B,GAE/D,CAAAV,IAAA,cAAAhI,MAED2qB,SAAYxK,GACV,OAAOrb,KAAKynB,aAAa,cAAa/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADtB,GAIxB,CAAAV,IAAA,YAAA7H,IAKAA,WACE,OAAYusB,KAAAA,eAAe,YADhB,EAEZtsB,IANDA,SAAcJ,GACZ8E,KAAK2nB,eAAe,YAAWjmB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADZ,GAE1B,CAAAV,IAAA,UAAA7H,IAUDA,WACE,OAAO2E,KAAK4nB,eAAe,UADlB,EAEVtsB,IANDA,SAAYJ,GACV8E,KAAK2nB,eAAe,UAASjmB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADL,GAE/B,CAAAV,IAAA,WAAA7H,IAUDA,WACE,OAAO2E,KAAK4nB,eAAe,WADjB,EAEXtsB,IANDA,SAAaJ,GACX8E,KAAK2nB,eAAe,WAAUjmB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADJ,GAEjC,CAAAV,IAAA,aAAA7H,IAUDA,WACE,OAAO2E,KAAK4nB,eAAe,aADf,EAEbtsB,IANDA,SAAeJ,GACb8E,KAAK2nB,eAAe,aAAYjmB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADZ,GAE3B,CAAAV,IAAA,cAAAhI,MAMD+oB,WACE,OAAOjkB,KAAKynB,aAAa,cAAa/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADnC,GAEV,CAAAV,IAAA,cAAAhI,MAED8oB,SAAY6D,GACV7nB,KAAKynB,aAAa,cAAa/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADT,GAE7B,CAAAV,IAAA,iBAAA7H,IAMDA,WACE,OAAO2E,KAAK4nB,eAAe,iBADX,EAIlBtsB,IARAA,SAAmBJ,GACjB8E,KAAK2nB,eAAe,iBAAgBjmB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADZ,GAE/B,CAAAV,IAAA,OAAA7H,IAWDA,WACE,OAAYusB,KAAAA,eAAe,OADrB,EAEPtsB,IANDA,SAASJ,GACP8E,KAAK2nB,eAAe,OAAMjmB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADZ,GAErB,CAAAV,IAAA,YAAA7H,IAUDA,WACE,OAAO2E,KAAK4nB,eAAe,YADhB,EAEZtsB,IANDA,SAAcJ,GACZ8E,KAAK2nB,eAAe,YAAWjmB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADH,GAEnC,CAAAV,IAAA,eAAA7H,IAUDA,WACE,OAAO2E,KAAK4nB,eAAe,eADb,EAEftsB,IANDA,SAAiBJ,GACf8E,KAAK2nB,eAAe,eAAcjmB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADA,GAEzC,CAAAV,IAAA,YAAA7H,IAUDA,WACE,OAAO2E,KAAK4nB,eAAe,YADhB,EAIbtsB,IARAA,SAAcJ,GACZ8E,KAAK2nB,eAAe,YAAWjmB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADH,GAEnC,CAAAV,IAAA,YAAA7H,IA6BDA,WACE,OAAO2E,KAAK4nB,eAAe,YADhB,EAEZtsB,IAxBDA,SAAcJ,GAA8C,IAAAif,EAAAna,KAG1DqP,aAAAyY,IAAgD9nB,KAAKqmB,SAG9CnrB,EAAK,IAQR8E,KAAK2nB,eAAe,YAAa,CAACzsB,EAA8C,OAPhF8E,KAAKmmB,MAAM1qB,KAAK,CAAEslB,OAAQ,YAAa3f,KAAM,CAAClG,GAAQqsB,UAAU,IAEhEvnB,KAAKinB,wBACL/rB,EAA8C,IAACiB,MAAK,WAClDge,EAAK4M,4BADkD,KAQ3D/mB,KAAK2nB,eAAe,YAAWjmB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WAlBmB,GAoB3D,CAAAV,IAAA,cAAA7H,IAiCDA,WACE,YAAYusB,eAAe,cADd,EAIftsB,IA/BAA,SAAgBJ,GAA8C,IAAAoiB,EAAAtd,KAGxD9E,aAAJ4sB,IAAgD9nB,KAAKqmB,SAG9CnrB,EAAK,IAYR8E,KAAK2nB,eAAe,cAAe,CAACzsB,EAA8C,OAXlF8E,KAAKmmB,MAAM1qB,KAAK,CACdslB,OAAQ,cACR3f,KAAM,CAAClG,GACPqsB,UAAU,IAGZvnB,KAAKinB,wBACL/rB,EAA8C,IAACiB,MAAK,WAClDmhB,EAAKyJ,4BADkD,KAS3D/mB,KAAK2nB,eAAe,cAAajmB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WAvBmB,GAyB7D,CAAAV,IAAA,uBAAAhI,MAODypB,SAAqBC,EAAYC,EAAY9B,EAAYC,GACvD,OAAOhjB,KAAKynB,aAAa,uBAAsB/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADY,GAElE,CAAAV,IAAA,uBAAAhI,MAED6pB,SAAqBH,EAAYC,EAAYG,EAAYjC,EAAYC,EAAYiC,GAC/E,OAAOjlB,KAAKynB,aAAa,uBAAsB/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADoC,GAE1F,CAAAV,IAAA,gBAAAhI,MAEDgqB,SAAchjB,EAA0BijB,GAAkB,IAAA4C,EAAA/nB,KAClDgoB,EAAchoB,KAAK6gB,cAAcve,cAAcokB,YAAYsB,YAG7D,OAAAhoB,KAAKsmB,cAAgBpkB,aAAiB8lB,EAC5BP,KAAAA,aAAa,gBAAe/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,aAIzCqjB,KAAAA,2BAEe,IAAInB,IAC4B,IAAC9lB,KAAKmC,OAAQD,EAAOijB,GAAYhpB,MAAK,WACxF4rB,EAAKhB,4BADwF,IAIxFkB,EAhB+C,GAoB1D,CAAA/kB,IAAA,YAAAhI,MACAmqB,SAAUnjB,EAA0BojB,EAAYC,GAAU,IAAA2C,EAAAloB,KAClDgoB,EAAchoB,KAAK6gB,cAAcve,cAAcokB,YAAYsB,YAGjE,GAAIhoB,KAAKsmB,cAAgBpkB,eACvBlC,KAAKynB,aAAa,YAAW/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,gBAC9B,CAEL,IAAMxC,EAAO,GACbpB,KAAKmmB,MAAM1qB,KAAK,CAAEslB,OAAQ,YAAa3f,KAAAA,EAAMmmB,UAAU,IAIvDvnB,KAAKinB,wBAGLhlB,EAAoBC,EAAclC,KAAKmC,QAEpChG,MAAK,SAAC4pB,GACL3kB,EAAK3F,KAAKsqB,EAAUT,EAAIC,KACnBwB,4BAFyB,GAZ7B,CANiD,GAyB1D,CAAA7jB,IAAA,aAAA7H,IAKAA,WACE,OAAYusB,KAAAA,eAAe,aADf,EAEbtsB,IANDA,SAAeJ,GACb8E,KAAK2nB,eAAe,aAAYjmB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADZ,GAE3B,CAAAV,IAAA,cAAA7H,IAUDA,WACE,OAAYusB,KAAAA,eAAe,cADd,EAEdtsB,IANDA,SAAgBJ,GACd8E,KAAK2nB,eAAe,cAAajmB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADZ,GAE5B,CAAAV,IAAA,gBAAA7H,IAUDA,WACE,OAAYusB,KAAAA,eAAe,gBADZ,EAEhBtsB,IANDA,SAAkBJ,GAChB8E,KAAK2nB,eAAe,gBAAejmB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADZ,GAE9B,CAAAV,IAAA,gBAAA7H,IAUDA,WACE,OAAO2E,KAAK4nB,eAAe,gBADZ,EAIjBtsB,IARAA,SAAkBJ,GAChB8E,KAAK2nB,eAAe,gBAAejmB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADZ,GAE9B,CAAAV,IAAA,YAAAhI,MAODqnB,WACEviB,KAAKynB,aAAa,YAAW/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WAD5B,GAER,CAAAV,IAAA,YAAAhI,MAED4mB,WACE9hB,KAAKynB,aAAa,YAAW/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WAD5B,GAER,CAAAV,IAAA,SAAAhI,MAED0mB,SAAOjE,EAAWC,GAChB5d,KAAKynB,aAAa,SAAQ/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADP,GAE1B,CAAAV,IAAA,SAAAhI,MAED2mB,SAAOlE,EAAWC,GAChB5d,KAAKynB,aAAa,SAAQ/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADP,GAE1B,CAAAV,IAAA,gBAAAhI,MAEDqoB,SAAcC,EAAcC,EAAcC,EAAcC,EAAchG,EAAWC,GAC/E5d,KAAKynB,aAAa,gBAAe/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADiD,GAEzF,CAAAV,IAAA,mBAAAhI,MAED2oB,SAAiBC,EAAaC,EAAapG,EAAWC,GACpD5d,KAAKynB,aAAa,mBAAkB/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADmB,GAE9D,CAAAV,IAAA,MAAAhI,MAEDunB,SAAI9E,EAAWC,EAAW8E,EAAgBC,EAAoBC,EAAkBuF,GAC9EnoB,KAAKynB,aAAa,MAAK/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADwE,GAEtG,CAAAV,IAAA,QAAAhI,MAED4nB,SAAMC,EAAYC,EAAYC,EAAYC,EAAYR,GACpD1iB,KAAKynB,aAAa,QAAO/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADmC,GAEnE,CAAAV,IAAA,UAAAhI,MAEDioB,SACExF,EACAC,EACAwF,EACAC,EACAC,EACAX,EACAC,EACAuF,GAEAnoB,KAAKynB,aAAa,UAAS/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WAFV,GAGxB,CAAAV,IAAA,OAAAhI,MAED0oB,SAAKjG,EAAWC,EAAWC,EAAeC,GACxC9d,KAAKynB,aAAa,OAAM/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADwB,GAIxD,CAAAV,IAAA,OAAAhI,MACAmpB,SAAKF,EAA0CC,GAC7C,IAAMhjB,EAAIM,MAAA7B,UAAAgH,MAAAsB,KAAOvE,WACZ6jB,KAAAA,aAAa,OAAQrmB,EAF4C,GAGvE,CAAA8B,IAAA,SAAAhI,MAED6mB,SAAOqG,GACL,IAAMhnB,EAAIM,MAAA7B,UAAAgH,MAAAsB,KAAOvE,WACZ6jB,KAAAA,aAAa,SAAUrmB,EAFV,GAGnB,CAAA8B,IAAA,OAAAhI,MAEDgpB,SAAKC,EAA0CC,GAC7C,IAAMhjB,EAAIM,MAAA7B,UAAAgH,MAAAsB,KAAOvE,WACZ6jB,KAAAA,aAAa,OAAQrmB,EAF4C,GAGvE,CAAA8B,IAAA,gBAAAhI,MAEDyqB,SAAc0C,EAA0BC,EAAcC,EAAuCnE,GAC3F,IAAMhjB,EAAIM,MAAA7B,UAAAgH,MAAAsB,KAAOvE,WAEV,OAAA5D,KAAKynB,aAAa,gBAAiBrmB,EAH0E,GAIrH,CAAA8B,IAAA,kBAAAhI,MAED0qB,SAAgByC,EAA0BC,EAAc1K,GACtD,IAAMxc,EAAIM,MAAA7B,UAAAgH,MAAAsB,KAAOvE,WACjB,OAAY6jB,KAAAA,aAAa,kBAAmBrmB,EAFoB,GAKlE,CAAA8B,IAAA,SAAAhI,MACAinB,SAAOC,GACLpiB,KAAKynB,aAAa,SAAQ/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADd,GAEnB,CAAAV,IAAA,QAAAhI,MAEDonB,SAAM3E,EAAWC,GACf5d,KAAKynB,aAAa,QAAO/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADP,GAEzB,CAAAV,IAAA,YAAAhI,MAED+jB,SAAUtB,EAAWC,GACnB5d,KAAKynB,aAAa,YAAW/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADP,GAE7B,CAAAV,IAAA,YAAAhI,MAEDmnB,SAAUhT,EAAW+L,EAAWzJ,EAAWhE,EAAW/I,EAAW1G,GAC/D8B,KAAKynB,aAAa,YAAW/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADqC,GAEzE,CAAAV,IAAA,eAAAhI,MAEDolB,SAAagE,EAAyCC,EAAeC,EAAeC,EAAeC,EAAexmB,GAChH,IAAMkD,EAAIM,MAAA7B,UAAAgH,MAAAsB,KAAOvE,WACjB5D,KAAKynB,aAAa,eAAgBrmB,EAFwF,GAK5H,CAAA8B,IAAA,iBAAAhI,MAAmBgnB,WACjBliB,KAAKynB,aAAa,iBAAgB/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADT,GAIjC,CAAAV,IAAA,cAAA7H,IAKAA,WACE,OAAYusB,KAAAA,eAAe,cADd,EAEdtsB,IANDA,SAAgBJ,GACd8E,KAAK2nB,eAAe,cAAajmB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADZ,GAE5B,CAAAV,IAAA,2BAAA7H,IAUDA,WACE,OAAO2E,KAAK4nB,eAAe,2BADD,EAI5BtsB,IARAA,SAA6BJ,GAC3B8E,KAAK2nB,eAAe,2BAA0BjmB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADZ,GAEzC,CAAAV,IAAA,kBAAAhI,MAODsqB,SAAgBgD,EAAsC1K,GACpD,IAAM1c,EAAIM,MAAA7B,UAAAgH,MAAAsB,KAAOvE,WACV,OAAA5D,KAAKynB,aAAa,kBAAmBrmB,EAFuB,GAGpE,CAAA8B,IAAA,eAAAhI,MAEDuqB,SAAagD,EAAYC,EAAYC,EAAYC,GAC/C,OAAO5oB,KAAKynB,aAAa,eAAc/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADY,GAE1D,CAAAV,IAAA,eAAAhI,MAEDwqB,SAAamD,EAAsBvD,EAAYC,EAAYuD,EAAiBC,EAAiBC,EAAqBC,GAChHjpB,KAAKynB,aAAa,eAAc/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WAD8F,GAKtI,CAAAV,IAAA,wBAAA7H,IAImBA,WACjB,OAAYusB,KAAAA,eAAe,wBADe,EAI5CtsB,IARmBA,SAA0BJ,GAC3C8E,KAAK2nB,eAAe,wBAAuBjmB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADQ,GAE1D,CAAAV,IAAA,wBAAA7H,IAUkBA,WACjB,OAAO2E,KAAK4nB,eAAe,wBADe,EAI5CtsB,IARmBA,SAA0BJ,GAC3C8E,KAAK2nB,eAAe,wBAAuBjmB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADsB,GAExE,CAAAV,IAAA,OAAAhI,MAOD+mB,WACEjiB,KAAKynB,aAAa,OAAM/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WAD5B,GAEH,CAAAV,IAAA,UAAAhI,MAED8mB,WACEhiB,KAAKynB,aAAa,UAAS/lB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WAD5B,GAKP,CAAAV,IAAA,SAAA7H,IACAA,WACE,OAAYwlB,KAAAA,aADJ,GAKV,CAAA3d,IAAA,SAAA7H,IAImBA,WACjB,YAAYusB,eAAe,SADA,EAE5BtsB,IANkBA,SAAWJ,GAC5B8E,KAAK2nB,eAAe,SAAQjmB,MAAA7B,UAAAgH,MAAAsB,KAAMvE,WADO,MArjBJ,CAAA,GCzB5BslB,YAAkB/J,GAAA+J,aAAAllB,OAAAklB,OAAAvhB,IAAAA,EAAA/D,UAAA3F,OAAAmD,EAAAM,MAAAiG,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAAxG,EAAAwG,GAAAhE,UAAAgE,YAAAM,EAAAC,KAAAxE,MAAAuE,EAAA,CAAAlI,MAAAhE,OAAAoF,KACrBof,aAAO,EADcpF,CAAA,CAAA/S,EAAA6gB,EAAA/J,OAAAjX,EAAAI,EAAA4gB,GAY5B,OAXcjlB,EAAAilB,EAAA,CAAA,CAAAhmB,IAAA,aAAAhI,MAEfulB,SAAWC,GACT,IAAK1gB,KAAKwgB,QACR,IAAoB,OAAhBE,GAAwC,OAAhBA,EAGhB5e,MAAAA,MAAM,+BAFhB9B,KAAKwgB,QAAU,IAAI0F,GAAgDlmB,KAEnE,CAGJ,OAAOA,KAAKwgB,OARgB,MAHD,EAAQlC,IAcvCtF,GAAiB,SAAUkQ,IAK3BtX,GAAkB,CAAC,CAAEkM,OAAQ,CAAC,IAAM,CAAED,MAAO,CAAC,KAAOqL,ICpBxCC,IAAAA,YAAgBhK,GAAAgK,SAAA9Z,IAAA,OAAArL,OAAAmlB,GAAAxlB,EAAAA,MAAA3D,KAAA4D,UAAA,CAAAyE,EAAA8gB,EAAAhK,OAAAjX,EAAAI,EAAA6gB,UAAAllB,EAAAklB,EAAA,EAAQ7K,IACrCtF,GAAiB,OAAQmQ,IAIzBvX,GAAkB,CAAC,CAAE1W,MAAO,CAAC,MAAQiuB,ICLxBC,IAAAA,YAAoBjK,GAAAiK,aAAA,OAAAplB,OAAAolB,KAAAzlB,MAAA3D,KAAA4D,UAAA,CAAAyE,EAAA+gB,EAAAjK,GAAAjX,IAAAA,EAAAI,EAAA8gB,GAQ9B,OAR8BnlB,EAAAmlB,EAAA,CAAA,CAAAlmB,IAAA,UAAA7H,IAM/BA,WACE,YAAYuC,WAAWyB,QAAO,SAAC1C,GAAU,MAAgC,WAAlBA,EAAKiJ,QAAnB,GADhC,MANoB,EAAQ0Y,IAUzCtF,GAAiB,WAAYoQ,ICVhBC,IAAAA,YAAiBlK,GAAAkK,SAAAha,IAAAnH,OAAAlE,OAAAqlB,GAAAnhB,EAAAvE,MAAA3D,KAAA4D,UAAA,CAAAyE,EAAAghB,EAAAlK,GAAA,IAAAjX,EAAAI,EAAA+gB,GAAA,SAAAA,EAAA,EAAQ/K,IACtCtF,GAAiB,QAASqQ,IAO1BzX,GAAkB,CAAC,CAAEkM,OAAQ,CAAC,KAAO,CAAEwL,IAAK,CAAC,KAAO,CAAEpiB,KAAM,CAAC,KAAO,CAAE2W,MAAO,CAAC,MAAQwL,QCThFE,GAAkC,sDAAA1a,MAAA,KAM3B2a,GAAkCA,SAAChqB,GAC9CG,OAAOC,eAAeJ,EAASK,UAAW,WAAY,CAKpDxE,eACE,OAAO+D,GAAsBY,KAAiBoN,EAA0Bmc,IADvE,GAN2E,ECHrEE,YAAoBtK,GAAAsK,SAAAA,IAAA,OAAAzlB,OAAAylB,GAAA9lB,EAAAA,MAAA3D,KAAA4D,UAAA,CAAAyE,EAAAohB,EAAAtK,OAAAjX,EAAAI,EAAAmhB,GAO9BA,OAP8BxlB,EAAAwlB,EAAA,CAAA,CAAAvmB,IAAA,OAAA7H,IAK/BA,WACE,OAAe2E,KAAKsN,QlCZgCnO,akCW9C,KAEPsqB,CAP8B,EAAQnL,IASzCtF,GAAiB,WAAYyQ,IAC7BD,GAAgCC,IAKhC7X,GAAkB,CAAC,CAAEV,KAAM,CAAC,KAAO,CAAE8O,SAAU,EAAC,KAAWyJ,IChB9CC,IAAAA,YAAgBvK,GAAAuK,aAAAxhB,OAAAlE,OAAA0lB,GAAAxhB,EAAAvE,MAAA3D,KAAA4D,UAAA,CAAAyE,EAAAqhB,EAAAvK,GAAAjX,IAAAA,EAAAI,EAAAohB,UAAAzlB,EAAAylB,EAAA,CAAA,CAAAxmB,IAAA,SAAA7H,IAK3BA,WACE,OAAasuB,KAAAA,SAA4B1rB,MADjC,KALiBoR,CAAA,EAAQiP,OASpB,OAAQoL,IACzBF,GAAgCE,IAWhC9X,GACE,CACE,CAAEV,KAAM,CAAC,KACT,CAAE0Y,OAAQ,CAAC,QACX,CAAEtsB,OAAQ,CAAC,KACX,CAAEusB,OAAQ,CAAC,KACX,CAAEC,QAAS,CAAC,sCACZ,CAAEC,cAAe,CAAC,GAAe,mBACjC,CAAEC,aAAc,CAAC,OACjB,CAAEC,eAAgB,CAAC,eAErBP,QChCWQ,YAAkB/K,GAAA+K,SAAAA,IAAAlmB,OAAAkmB,OAAAviB,IAAAA,EAAA/D,UAAA3F,OAAAmD,EAAAM,MAAAiG,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAAxG,EAAAwG,GAAAhE,UAAAgE,YAAAM,EAAAC,KAAAxE,MAAAuE,EAAA,CAAAlI,MAAAhE,OAAAoF,KACrB+oB,cAAQ,EADa/O,CAAA,CAAA/S,EAAA6hB,EAAA/K,OAAAjX,EAAAI,EAAA4hB,YACbA,EAAA,CAAA,CAAAhnB,IAAA,UAAA7H,IAGhBA,WACE,OAAO2E,KAAKmqB,WAAanqB,KAAKmqB,SAAW,IAAI5a,GAAavP,KAAM,WADhD,KAJWqP,CAAA,EAAQiP,OAQtB,SAAU4L,MACIA,GAAmB,CAChDE,QAAS,CAAC,SAAChM,GAAE,OAAuBgM,EAAAA,QAAQlvB,KAA/B,EAAsC,SAACkjB,EAAIljB,GAAa,OAASkvB,EAAAA,QAAQlvB,MAAQA,CAAzB,KAYvE0W,GACE,CACE,CAAEyY,MAAO,CAAC,KACV,CAAEC,gBAAiB,EAAC,IACpB,CAAEC,IAAK,CAAC,KACR,CAAEzM,OAAQ,CAAC,KACX,CAAE5M,KAAM,CAAC,KACT,CAAEsZ,eAAgB,CAAC,KACnB,CAAElB,IAAK,CAAC,KACR,CAAEmB,OAAQ,CAAC,KACX,CAAE5M,MAAO,CAAC,MAEZqM,ICnCWQ,IAAAA,YAAiBvL,GAAAuL,SAAAA,IAAA,OAAA1mB,OAAA0mB,KAAA/mB,MAAA3D,KAAA4D,UAAA,CAAAyE,EAAAqiB,EAAAvL,GAAA,IAAAjX,EAAAI,EAAAoiB,GAAA,SAAAA,EAAA,EAAQpM,IACtCtF,GAAiB,MAAO0R,OActB,CACE,CAAEC,IAAK,CAAC,KACR,CAAEC,YAAa,CAAC,KAChB,CAAE9M,OAAQ,CAAC,IACX,CAAE+M,MAAO,EAAC,IACV,CAAEL,eAAgB,CAAC,KACnB,CAAElB,IAAK,CAAC,KACR,CAAEwB,MAAO,CAAC,KACV,CAAEC,OAAQ,CAAC,KACX,CAAEC,OAAQ,CAAC,KACX,CAAEnN,MAAO,CAAC,KAEZ6M,ICxBK,IAAMO,GAAuBA,SAACzrB,GACnCG,OAAOC,eAAeJ,EAASK,UAAW,SAAU,CAMlDxE,eAAG,IAAA+H,EAAApD,YACMZ,GACHY,KAAiBsC,eAA6BtC,MAChD,SAACpB,GAAO,MAAyB,UAApBA,EAAQ0O,SAAuB1O,EAAQssB,KAAOtsB,EAAQssB,MAAS9nB,EAAiBtE,EAArF,GAHT,GAPgE,ECI1DqsB,YAAiBhM,GAAAgM,aAAAnnB,OAAAmnB,GAAA,IAAAxjB,IAAAA,EAAA/D,UAAA3F,OAAAmD,EAAAM,MAAAiG,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAAxG,EAAAwG,GAAAhE,UAAAgE,GASwBxE,OATxBA,EAAA8E,EAAAC,KAAAxE,MAAAuE,EAAA,CAAAlI,MAAAhE,OAAAoF,KAOpB,IAAoC,GAAEgC,EACtCgoB,YAAsB,EAAKhoB,EAC3B,KAAuC,EAAKA,CATxB,CAAAiF,EAAA8iB,EAAAhM,OAAAjX,EAAAI,EAAA6iB,GA0G3BA,SAjGmDA,EAAA,CAAA,CAAAjoB,IAAA,QAAA7H,IAOpDA,WACE,YAAa+vB,WAAgDprB,KAA6B,IAAhEA,KAAKyO,aAAa,UAAY,EADjD,EAERnT,IAEDA,SAAUJ,GAGR8E,KAA6B,IAAGW,OAAOzF,QAClCkwB,YAAa,IACTprB,KAAKsC,cAA2B,GAEvCtC,KAA6B,GAC7BoI,EAAY,WAEZA,EAAYlN,IAVO,GAYtB,CAAAgI,IAAA,cAAA7H,IAEDA,WAEE,IAAMgwB,EAAOrrB,KAAKsrB,aAAatrB,KAAK9E,OAEpC,OADiBmwB,GAAQ3qB,MAAM2qB,EAAKE,WACnB,KAAOF,CAJX,EAOf/vB,IACAA,SAAgBJ,GACd,KAAMA,mBACJ,MAAU4P,IAAAA,UAAU,qCAEtB9K,KAAK9E,MAAQ8E,KAAKwrB,aAAatwB,EAJC,GAKjC,CAAAgI,IAAA,gBAAA7H,IAEDA,WACE,OAA0B,IAAtB2E,KAAK9E,MAAM+C,OACNiM,IAEFC,OAAOnK,KAAK9E,MAJJ,EAOjBI,IACAA,SAAkBJ,GAEd8E,KAAK9E,MADc,iBAArBkgB,EACeza,OAAOzF,GAEP,EAJc,GAM9B,CAAAgI,IAAA,UAAA7H,IAEDA,WACE,OAAO2E,KAA+B,GAD7B,EAEV1E,IAEDA,SAAYJ,GACN8E,KAAI,MAAgC9E,IAGxC8E,KAA+B,MAAK9E,EACpCM,EAASwE,KAAKsC,cAA2B,GAEvCtC,KAAI,GACJoI,EAAY,cAEF,IAAVlN,EAAgB,EAAsB,IAVhB,GAc1B,CAAAgI,IAAA,eAAAhI,MAIQswB,SAAaH,GACnB,IAAMzN,EAAIyN,EAAKI,cACTC,EAAIL,EAAKM,WAAa,EAE5B,OADMhe,EAAI0d,EAAKO,UACf,GAAA5vB,OAAU4hB,EAAC,KAAA5hB,OAAQ,EAAJ0vB,EAAQ,GAAK,KAAG1vB,OAAG0vB,EAAC1vB,KAAAA,OAAQ,EAAJ2R,EAAQ,GAAK,KAAG3R,OAAG2R,EAJ7B,GAO/B,CAAAzK,IAAA,eAAAhI,MAIQowB,SAAaO,MAEO,KADpBC,EAAaD,EAAIhd,MAAM,MACd5Q,OACb,OAEF8tB,KAL8B,IAKpBL,GAAVK,EAAAC,EAAkBF,EAAU,IAAjB,GAAEne,EAACoe,EAAA,UAEHziB,IAAAA,KAAK7I,SAFRsrB,EAAA,GAEoB,IAAKtrB,SAASirB,EAAG,IAAM,EAAGjrB,SAASkN,EAAG,IAPpC,KAQ/Bwd,CA1G2B,EAAQ7M,IA4GtCtF,GAAiB,QAASmS,IAC1BF,GAAqBE,IA+BrBvZ,GACE,CACE,CAAEqa,OAAQ,CAAC,KACX,CAAEtB,IAAK,CAAC,KACR,CAAEV,eAAgB,CAAC,KACnB,CAAED,aAAc,CAAC,KACjB,CAAEjK,UAAW,EAAC,IACd,CAAEmM,eAAgB,EAAC,EAAkB,YACrC,CAAEja,aAAc,CAAC,GAAe,UAChC,CAAEka,QAAS,CAAC,KACZ,CAAEnM,SAAU,EAAC,IACb,CAAEL,WAAY,CAAC,KACf,CAAEyM,YAAa,CAAC,KAChB,CAAEvM,WAAY,CAAC,KACf,CAAEC,WAAY,CAAC,KACf,CAAEhC,OAAQ,CAAC,IACX,CAAE7X,IAAK,CAAC,KACR,CAAEomB,UAAW,CAAC,IACd,CAAEC,IAAK,CAAC,KACR,CAAEC,SAAU,EAAC,IACb,CAAErb,KAAM,CAAC,KACT,CAAE8U,QAAS,CAAC,KACZ,CAAEwG,YAAa,CAAC,KAChB,CAAEC,SAAU,EAAC,IACb,CAAEC,SAAU,EAAC,IACb,CAAEC,KAAM,CAAC,IACT,CAAErD,IAAK,CAAC,KACR,CAAEsD,KAAM,CAAC,KACT,CAAE1lB,KAAM,CAAC,SACT,CAAE2W,MAAO,CAAC,KAEZsN,IChLW0B,IAAAA,YAAiB1N,GAAA0N,SAAAA,IAAA3kB,OAAAlE,OAAA6oB,GAAA3kB,EAAAvE,MAAA3D,KAAA4D,UAAA,CAAAyE,EAAAwkB,EAAA1N,OAAAjX,EAAAI,EAAAukB,GAW3BA,OAX2B5oB,EAAA4oB,EAAA,CAAA,CAAA3pB,IAAA,UAAA7H,IAK5BA,WACE,IAAMyxB,EAAU9sB,KAAKyO,aAAa,OAClB,OAAA,OAAZqe,EACK9sB,KAAKsC,eAAkBtC,KAAKsC,cAA2ByqB,eAAeD,GAExElf,GAAkB5N,KAAiBoN,EAA0B,CAAC,UAL5D,KAMVyf,CAX2B,EAAQvO,IAatCtF,GAAiB,QAAS6T,IAI1Bjb,GAAkB,CAAC,CAAEkb,QAAS,CAAC,GAAI,SAAWD,IClBjCG,IAAAA,YAAgB7N,GAAA6N,aAAAhpB,OAAAgpB,GAAA,IAAArlB,IAAAA,EAAA/D,UAAA3F,OAAAmD,EAAAM,MAAAiG,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAAxG,EAAAwG,GAAAhE,UAAAgE,GACX,OADWxE,EAAA8E,EAAAC,KAAAxE,MAAAuE,EAAA,CAAAlI,MAAAhE,OAAAoF,KACnBge,cAAQ,EADWhE,CAAA,CAAA/S,EAAA2kB,EAAA7N,GAAAjX,IAAAA,EAAAI,EAAA0kB,UACX/oB,EAAA+oB,EAAA,CAAA,CAAA9pB,IAAA,UAAA7H,IAEhBA,WACE,OAAO2E,KAAKof,WAAapf,KAAKof,SAAW,IAAI7P,GAAavP,KAAM,OADhD,KAHSqP,CAAA,EAAQiP,OAOpB,OAAQ0O,IACzBlsB,EAA+BksB,GAAiB,CAC9C1N,IAAK,CAAC,SAAClB,GAAE,OAAuBmB,EAAAA,QAAQrkB,KAA/B,EAAsC,SAACkjB,EAAIljB,GAAa,OAASqkB,EAAAA,QAAQrkB,MAAQA,CAAzB,KAEnEqE,EAAqBytB,GAAiB,UAAW,OAYjDpb,GACE,CACE,CAAEqb,GAAI,CAAC,KACP,CAAErC,YAAa,CAAC,KAChB,CAAE5K,SAAU,EAAC,IACb,CAAEX,KAAM,CAAC,KACT,CAAEG,SAAU,CAAC,KACb,CAAEC,MAAO,CAAC,KACV,CAAE+K,eAAgB,CAAC,KACnB,CAAEM,MAAO,CAAC,KACV,CAAE5jB,KAAM,CAAC,MAEX8lB,ICnCWE,IAAAA,YAAe/N,GAAA+N,SAAAA,IAAA,OAAAlpB,OAAAkpB,GAAAvpB,EAAAA,MAAA3D,KAAA4D,UAAA,CAAAyE,EAAA6kB,EAAA/N,GAAAjX,IAAAA,EAAAI,EAAA4kB,GAQzBA,SARyBA,EAAA,CAAA,CAAAhqB,IAAA,QAAA7H,IAM1BA,WACE,OAAO+D,GAAsBY,MAAiB,SAACpB,GAAO,MAAyB,SAApBA,EAAQ0O,OAAb,GAD/C,KAER4f,CARyB,EAAQ5O,IAUpCtF,GAAiB,MAAOkU,IAIxBtb,GAAkB,CAAC,CAAEV,KAAM,CAAC,MAAQgc,QCdvBC,YAAiBhO,GAAAgO,SAAAA,IAAA,OAAAnpB,OAAAmpB,GAAAxpB,EAAAA,MAAA3D,KAAA4D,UAAA,CAAAyE,EAAA8kB,EAAAhO,GAAA,IAAAjX,EAAAI,EAAA6kB,GAAA,OAAAlpB,EAAAkpB,EAAA,EAAQ7O,IACtCtF,GAAiB,QAASmU,IAC1BlC,GAAqBkC,IASrBvb,GAAkB,CAAC,CAAEwb,KAAM,CAAC,IAAM,CAAEC,IAAK,CAAC,IAAM,CAAEpnB,IAAK,CAAC,IAAM,CAAEqmB,IAAK,CAAC,IAAM,CAAEgB,QAAS,CAAC,IAAM,CAAEpyB,MAAO,CAAC,KAAOiyB,ICZlGI,IAAAA,YAAepO,GAAAoO,SAAAle,IAAA,OAAArL,OAAAupB,GAAA5pB,EAAAA,MAAA3D,KAAA4D,UAAA,CAAAyE,EAAAklB,EAAApO,GAAA,IAAAjX,EAAAI,EAAAilB,GAAA,OAAAtpB,EAAAspB,EAAA,EAAQjP,IACpCtF,GAAiB,MAAOuU,IACxBvU,GAAiB,MAAOuU,IAKxB3b,GAAkB,CAAC,CAAE4b,KAAM,CAAC,KAAO,CAAEC,SAAU,CAAC,MAAQF,ICP3CG,IAAAA,YAAiBvO,GAAAuO,SAAAre,IAAA,OAAArL,OAAA0pB,GAAA/pB,EAAAA,MAAA3D,KAAA4D,UAAA,CAAAyE,EAAAqlB,EAAAvO,GAAA,IAAAjX,EAAAI,EAAAolB,GAAA,OAAAzpB,EAAAypB,EAAA,EAAQpP,IACtCtF,GAAiB,KAAM0U,IAMvB9b,GAAkB,CAAC,CAAE+b,SAAU,EAAC,IAAU,CAAE9T,MAAO,CAAC,IAAM,CAAE3S,KAAM,CAAC,MAAQwmB,ICD9DE,IAAAA,YAAkBzO,GAAAyO,SAAAve,IAAArL,OAAA4pB,OAAAjmB,IAAAA,EAAA/D,UAAA3F,OAAAmD,EAAAM,MAAAiG,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAAxG,EAAAwG,GAAAhE,UAAAgE,GACwB,SADxBM,EAAAC,KAAAxE,MAAAuE,EAAA,CAAAlI,MAAAhE,OAAAoF,KACrB,KAAwC,GADnB,CAAAiH,EAAAulB,EAAAzO,GAAA,IAAAjX,EAAAI,EAAAslB,GAgF5B,OA/EoD3pB,EAAA2pB,EAAA,CAAA,CAAA1qB,IAAA,QAAA7H,IAKrDA,WACE,YAAakC,YAAcyC,KAAKzC,WAAWuQ,SAAShQ,QAAQkC,OAAU,CAD/D,GAIT,CAAAkD,IAAA,QAAA7H,IAIAA,WACE,OAAYoT,KAAAA,aAAa,UAAYzO,KAAKoG,WADnC,EAIT9K,IAIAA,SAAUuyB,GACR7tB,KAAKwS,aAAa,QAASqb,EADN,GAIvB,CAAA3qB,IAAA,WAAA7H,IAIAA,WACE,OAAO2E,KAAgC,GAD7B,EAIZ1E,IAIAA,SAAaJ,GACX8E,KAAgC,MAAK9E,EACrCM,EAASwE,KAAKsC,cAA2B,GAEvCtC,KAA6B,GAC7BoI,EAAY,cAEZpI,KAAgC,IAAE,EAAsB,GAPrC,GAWvB,CAAAkD,IAAA,OAAA7H,IAKAA,WACE,OAAO2E,KAAKoG,WADN,EAIR9K,IAIAA,SAAS+f,GACPrb,KAAKoG,YAAciV,CADA,GAIrB,CAAAnY,IAAA,QAAA7H,IAIAA,WACE,OAAO2E,KAAKyO,aAAa,UAAYzO,KAAKoG,WADnC,EAIT9K,IAIAA,SAAUJ,GACR8E,KAAKwS,aAAa,QAAStX,EADT,KA9ESmU,CAAA,EAAQiP,OAkFtB,SAAUsP,MACIA,GAAmB,CAChDE,SAAU,CAAC,SAAC1P,GAAE,OAAazd,OAAOyd,EAAE,IAAtB,EAAqD,SAACA,EAAIljB,GAAa,OAAekjB,EAAG0P,SAAqB,SAAV5yB,CAA7B,QAMrE,CAAC,CAAE6yB,gBAAiB,EAAC,EAAkB,aAAe,CAAE/N,SAAU,EAAC,IAAU,CAAE9Y,KAAM,CAAC,MAAQ0mB,QC9FnGI,YAAoB7O,GAAA6O,SAAAA,IAAAhqB,OAAAgqB,GAAA,IAAArmB,IAAAA,EAAA/D,UAAA3F,OAAAmD,EAAAM,MAAAiG,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAAxG,EAAAwG,GAAAhE,UAAAgE,GAGIxE,OAHJA,EAAA8E,EAAAC,KAAAxE,MAAAuE,EAAA,CAAAlI,MAAAhE,OAAAoF,KACvB,KAA6C,IAC7C,IAAoC,EAACgC,EACrCgoB,YAAsB,EAAKhoB,CAHJ,CAAAiF,EAAA2lB,EAAA7O,OAAAjX,EAAAI,EAAA0lB,GAkB9BA,OAfkC/pB,EAAA+pB,EAAA,CAAA,CAAA9qB,IAAA,WAAA7H,IAEnCA,WACE,OAAO2E,KAAI,KAAqC,EAAIA,KAAK9E,MAAQ8E,KAAKiG,GAD5D,GAEX,CAAA/C,IAAA,QAAA7H,IAEDA,WACE,OAAQ2E,KAAKorB,WAAuDprB,KAA6B,IAAvEmK,OAAOnK,KAAKyO,aAAa,WAAa,CADzD,EAERnT,IAEDA,SAAUJ,GACR8E,KAAI,KAAoC,EACxCA,KAAI,IAA4B9E,EAChC8E,KAAKorB,YAAa,CAHG,KAKtB4C,CAlB8B,EAAQ1P,IAoBzCtF,GAAiB,WAAYgV,IAC7B/C,GAAqB+C,IAIrBpc,GAAkB,CAAC,CAAE3L,IAAK,CAAC,KAAO+nB,IC3BrBC,IAAAA,YAAiB9O,GAAA8O,SAAAA,IAAA,OAAAjqB,OAAAiqB,GAAAtqB,EAAAA,MAAA3D,KAAA4D,UAAA,CAAAyE,EAAA4lB,EAAA9O,GAAAjX,IAAAA,EAAAI,EAAA2lB,GAAA,OAAAhqB,EAAAgqB,EAAA,EAAQ3P,IACtCtF,GAAiB,aAAciV,IAC/BjV,GAAiB,IAAKiV,IAItBrc,GAAkB,CAAC,CAAE4b,KAAM,CAAC,MAAQS,ICNvBC,IAAAA,YAAkB/O,GAAA+O,SAAAA,IAAAhmB,OAAAlE,OAAAkqB,GAAAhmB,EAAAvE,MAAA3D,KAAA4D,UAAA,CAAAyE,EAAA6lB,EAAA/O,GAAA,IAAAjX,EAAAI,EAAA4lB,GAgB5BA,OAhB4BjqB,EAAAiqB,EAAA,CAAA,CAAAhrB,IAAA,OAAA7H,IAM7BA,WACE,YAAY+K,WADN,EAIR9K,IAIAA,SAAS+f,GACPrb,KAAKoG,YAAciV,CADA,KAEpB6S,CAhB4B,EAAQ5P,IAkBvCtF,GAAiB,SAAUkV,IAU3Btc,GACE,CAAC,CAAE1K,KAAM,CAAC,KAAO,CAAEoiB,IAAK,CAAC,KAAO,CAAE6E,QAAS,CAAC,KAAO,CAAEC,MAAO,EAAC,IAAU,CAAEC,MAAO,EAAC,IAAU,CAAEzD,YAAa,CAAC,KAAO,CAAE7L,SAAU,EAAC,KAC/HmP,ICzBF,IAAMI,GAAoBlhB,EAA0B,CAAC,WAC/CmhB,GAA4BA,SAAC3vB,GAAgB,OAAc0vB,GAAkB1vB,KAAwD,IAA3CA,EAA8BkvB,QAA3E,EAatCU,YAAkBrP,GAAAqP,SAAAA,IAAAxqB,OAAAwqB,GAAA,IAAA7mB,IAAAA,EAAA/D,UAAA3F,OAAAmD,EAAAM,MAAAiG,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAAxG,EAAAwG,GAAAhE,UAAAgE,GACGxE,SADH8E,EAAAC,KAAAxE,MAAAuE,EAAA,CAAAlI,MAAAhE,OAAAoF,KACrB,KAAwB,EAAAgC,CADH,CAAAiF,EAAAmmB,EAAArP,OAAAjX,EAAAI,EAAAkmB,GA8H5BA,OA7H+BvqB,EAAAuqB,EAAA,CAAA,CAAAtrB,IAAA,KAAAhI,MAMtBkB,SAAiCsJ,GACzC+oB,EAAAC,EAAAF,EAAA3uB,WAAK,GAAAG,MAAAmI,KAAAnI,KAAiC0F,KAKhC1F,KAAKusB,UAAY+B,GAAkB5oB,IAAqBA,EAAMooB,UAA4B,KAAf9tB,KAAK9E,SACpF8E,KAAK9E,MAAQwK,EAAMxK,MAP+B,GAWtD,CAAAgI,IAAA,KAAAhI,MAIUkB,SAAgCsJ,GACxC+oB,EAAAC,EAAAF,EAAA3uB,WAAK,GAAAG,MAAAmI,KAAAnI,KAAgC0F,IAIhC1F,KAAKusB,UAAY7mB,EAAMooB,WAEL,GADf5oB,EAAUlF,KAAKkF,SACTjH,SACV+B,KAAK9E,MAAQgK,EAAQ,GAAGhK,OARuB,GAarD,CAAAgI,IAAA,SAAA7H,IAIAA,WACE,OAAY6J,KAAAA,QAAQjH,MADZ,GAIV,CAAAiF,IAAA,UAAA7H,IAKAA,WACE,OAAO2E,KAAK8N,SAASzO,OAAOivB,GADnB,GAIX,CAAAprB,IAAA,gBAAA7H,IAKAA,WACE,IAAMszB,EAAqB/gB,GAAkB5N,KAAMuuB,WAC5CI,EAAqB3uB,KAAK8N,SAAShQ,QAAQ6wB,IAAuB,CAF1D,EAKjBrzB,IAKAA,SAAkBszB,GAChB5uB,KAAK8N,SAAS3Q,SAAQ,SAACyB,EAAkBlD,GAAa,OAAMkD,EAAQkvB,SAAWpyB,IAAUkzB,CAAnC,GADjB,GAIvC,CAAA1rB,IAAA,kBAAA7H,IAKAA,WACE,UAA6B2E,KAAMuuB,GADlB,GAInB,CAAArrB,IAAA,OAAA7H,IAKAA,WACE,OAAmC,IAA5B2E,KAA4B,IAC/BA,KAAKusB,SACJ,EACA,EACDvsB,KAA4B,GAL1B,EAQR1E,IAKAA,SAASqxB,GACP3sB,KAA4B,IAAU,EAAP2sB,EAAWA,EAAO3sB,KAAKusB,SAAU,EAAwB,CADrE,GAIrB,CAAArpB,IAAA,OAAA7H,IAIAA,WACE,OAAYkxB,KAAAA,SAAU,aAAwB,iBADxC,GAIR,CAAArpB,IAAA,QAAA7H,IAIAA,WACE,IAAMszB,EAAqB/gB,GAAkB5N,KAAMuuB,IACnD,SAA6BI,EAAyCzzB,MAAQ,EAFvE,EAKTI,IAIAA,SAAUJ,GACR,IAAMiI,EAAcxC,OAAOzF,GAC3B8E,KAAK8N,SAAS3Q,SAAQ,SAACyB,GAAgB,OAAK0vB,GAAkB1vB,KAAaA,EAAQkvB,SAAWlvB,EAAQ1D,QAAUiI,EAAzE,GAFrB,KAGnBqrB,CA9H4B,EAAQlQ,IAgIvCtF,GAAiB,SAAUwV,IAC3BvD,GAAqBuD,IAMrB5c,GAAkB,CAAC,CAAE2a,SAAU,EAAC,IAAU,CAAErb,KAAM,CAAC,KAAO,CAAEwb,SAAU,EAAC,KAAW8B,IC1JrEK,IAAAA,YAAkB1P,GAAA0P,SAAAxf,WAAArL,OAAA6qB,GAAAlrB,EAAAA,MAAA3D,KAAA4D,UAAA,CAAAyE,EAAAwmB,EAAA1P,GAAAjX,IAAAA,EAAAI,EAAAumB,UAAA5qB,EAAA4qB,EAAA,EAAQvQ,IACvCtF,GAAiB,SAAU6V,IAQ3Bjd,GAAkB,CAAC,CAAE6N,MAAO,CAAC,KAAO,CAAEqL,MAAO,CAAC,KAAO,CAAExB,IAAK,CAAC,KAAO,CAAEyB,OAAQ,CAAC,KAAO,CAAE7jB,KAAM,CAAC,MAAQ2nB,ICT1FC,IAAAA,YAAiB3P,GAAA2P,SAAAA,IAAA,OAAA9qB,OAAA8qB,GAAAnrB,EAAAA,MAAA3D,KAAA4D,UAAA,CAAAyE,EAAAymB,EAAA3P,GAAAjX,IAAAA,EAAAI,EAAAwmB,GAAA,OAAA7qB,EAAA6qB,EAAA,EAAQxQ,IACtCtF,GAAiB,QAAS8V,IAK1Bld,GAAkB,CAAC,CAAE6N,MAAO,CAAC,KAAO,CAAEvY,KAAM,CAAC,MAAQ4nB,ICJxCC,IAAAA,YAAqB5P,GAAA4P,SAAAA,IAAA/qB,OAAA+qB,GAAA,IAAApnB,IAAAA,EAAA/D,UAAA3F,OAAAmD,EAAAM,MAAAiG,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAAxG,EAAAwG,GAAAhE,UAAAgE,GAChBxE,SADgB8E,EAAAC,KAAAxE,MAAAuE,EAAA,CAAAlI,MAAAhE,OAAAoF,KACxB4tB,cAAQ,EAAA5rB,CADgB,CAAAiF,EAAA0mB,EAAA5P,GAAAjX,IAAAA,EAAAI,EAAAymB,GAc/B,OAbe9qB,EAAA8qB,EAAA,CAAA,CAAA7rB,IAAA,UAAA7H,IAEhBA,WACE,OAAY2zB,KAAAA,WAAahvB,KAAKgvB,SAAW,IAAIzf,GAAavP,KAAM,WADhD,GAIlB,CAAAkD,IAAA,YAAA7H,IAIAA,WACE,IAAMqM,EAASsG,GAAmBhO,KAAMoN,EAA0B,CAAC,QACjD,OAAA,OAAX1F,EAAkBtI,GAAsBsI,EAAQ0F,EAA0B,CAAC,KAAM,QAAQtP,QAAQkC,OAAS,CAFtG,KAXmBqP,CAAA,EAAQiP,OAgBzB,KAAMyQ,IACvB/V,GAAiB,KAAM+V,IACvBjuB,EAA+BiuB,GAAsB,CACnDE,QAAS,CAAC,SAAC7Q,GAAE,OAAuB6Q,EAAAA,QAAQ/zB,KAA/B,EAAsC,SAACkjB,EAAIljB,GAAa,OAAS+zB,EAAAA,QAAQ/zB,MAAQA,CAAzB,KAQvE0W,GAAkB,CAAC,CAAEsd,KAAM,CAAC,KAAO,CAAEC,QAAS,CAAC,IAAM,CAAEC,QAAS,CAAC,IAAM,CAAEC,MAAO,CAAC,MAAQN,IC7B5EO,IAAAA,YAAoBnQ,GAAAmQ,SAAAjgB,IAAA,OAAArL,OAAAsrB,KAAA3rB,MAAA3D,KAAA4D,UAAA,CAAAyE,EAAAinB,EAAAnQ,OAAAjX,EAAAI,EAAAgnB,GAAA,SAAAA,EAAA,EAAQhR,IACzCtF,GAAiB,MAAOsW,IAIxB1d,GAAkB,CAAC,CAAE2d,KAAM,CAAC,KAAOD,ICD7BE,IAAAA,GAAgBA,SAAC5wB,GAAuB,OAAA+S,GAAqB/S,EAAQmI,QAA7B,EAExC0oB,GAAkCA,SAAC/nB,EAAiB9I,EAAkByO,GAK1E,IAAMqiB,EAAsB9hB,GAAkBlG,GAAQ,SAAC9I,GAAgB,OAAeyO,EAAS5G,SAAS7H,EAAQ0O,QAAzC,IACvE8N,EACE1T,EAAOf,aAAa/H,EAAS8wB,GAE7BhoB,EAAOZ,YAAYlI,EATwF,EAalG+wB,YAAiBxQ,GAAAwQ,SAAAtgB,WAAArL,OAAA2rB,GAAAhsB,EAAAA,MAAA3D,KAAA4D,UAAA,CAAAyE,EAAAsnB,EAAAxQ,GAAAjX,IAAAA,EAAAI,EAAAqnB,GAsF3B,OAtF2B1rB,EAAA0rB,EAAA,CAAA,CAAAzsB,IAAA,UAAA7H,IAK5BA,WACE,UAAyB2E,KAAMoN,EAA0B,CAAC,YADjD,EAIX9R,IAIAA,SAAYs0B,GACNA,GAAqC,YAAvBA,EAAWtiB,UAK3BkiB,GAAcxvB,KAAK6vB,SACnB7vB,KAAK2G,aAAaipB,EAAY5vB,KAAK8vB,mBAPD,GAWtC,CAAA5sB,IAAA,QAAA7H,IAIAA,WACE,OAAOuS,GAAkB5N,KAAMoN,EAA0B,CAAC,UADnD,EAIT9R,IAIAA,SAAUs0B,GACJA,GAAqC,UAAvBA,EAAWtiB,UAM3BkiB,GAAcxvB,KAAK+vB,OACnBN,GAAgCzvB,KAAM4vB,EAAY,CAAC,UAAW,aARd,GAYpD,CAAA1sB,IAAA,QAAA7H,IAIAA,WACE,UAAyB2E,KAAMoN,EAA0B,CAAC,UADnD,EAIT9R,IAIAA,SAAUs0B,GACJA,GAAqC,UAAvBA,EAAWtiB,UAM3BkiB,GAAcxvB,KAAKgwB,OACnBP,GAAgCzvB,KAAM4vB,EAAY,CAAC,UAAW,WAAY,UAR1B,GAYpD,CAAA1sB,IAAA,OAAA7H,IAIAA,WACE,UAA6B2E,KAAMoN,EAA0B,CAAC,OADxD,GAIR,CAAAlK,IAAA,UAAA7H,IAIAA,WACE,UAA6B2E,KAAMoN,EAA0B,CAAC,UADrD,MApFiB,EAAQkR,IAwFtCtF,GAAiB,QAAS2W,ICxGpBM,IAAAA,GAAyB,CAAA,QAAA,QAAA,QAAA,SAEzBC,GAAkBA,SAACtxB,EAA8BuxB,GAGrD,eAFMzoB,EAAyBsG,GAAmBpP,EAASuxB,KAEjC,EAAKzoB,EAA4B0oB,KAAKtyB,QAAQc,EAH4B,EAMzFyxB,YAAoBlR,GAAAkR,SAAAhhB,WAAArL,OAAAqsB,GAAA1sB,EAAAA,MAAA3D,KAAA4D,UAAA,CAAAyE,EAAAgoB,EAAAlR,OAAAjX,EAAAI,EAAA+nB,GAmD9B,OAnD8BpsB,EAAAosB,EAAA,CAAA,CAAAntB,IAAA,QAAA7H,IAK/BA,WACE,OAAO+D,GAAsBY,KAAMoN,EAA0B,CAAC,KAAM,OAD7D,GAIT,CAAAlK,IAAA,WAAA7H,IAIAA,WACE,OAAO60B,GAAgBlwB,KAAMoN,EAA0B,CAAC,UAD9C,GAIZ,CAAAlK,IAAA,kBAAA7H,IAIAA,WACE,UAAuB2E,KAAMoN,EAA0B6iB,IADtC,GAInB,CAAA/sB,IAAA,aAAAhI,MAKOo1B,SAAW50B,IACV60B,EAAOvwB,KAAKwwB,MAAM90B,KAEtB60B,EAAKxpB,QAHsB,GAO/B,CAAA7D,IAAA,aAAAhI,MAKOu1B,SAAW/0B,GAChB,IAAM80B,EAAQxwB,KAAKwwB,MACbE,EAAM1wB,KAAKsC,cAA2BquB,cAAc,MAM1D,SALIj1B,GAAaA,GAAS80B,EAAMvyB,OAC9B+B,KAAK8G,YAAY4pB,GAEjB1wB,KAAK2G,aAAa+pB,EAAI1wB,KAAK8N,SAASpS,KANT,MA1CA,EAAQ4iB,IAqDzCtF,GAAiB,KAAMqX,IC9DVO,IAAAA,YAAwBzR,GAAAyR,SAAAvhB,IAAAnH,OAAAlE,OAAA4sB,GAAA1oB,EAAAvE,MAAA3D,KAAA4D,UAAA,CAAAyE,EAAAuoB,EAAAzR,GAAAjX,IAAAA,EAAAI,EAAAsoB,GAoClCA,OApCkC3sB,EAAA2sB,EAAA,CAAA,CAAA1tB,IAAA,OAAA7H,IAKnCA,WACE,OAAO+D,GAAsBY,KAAMoN,EAA0B,CAAC,OADxD,GAIR,CAAAlK,IAAA,YAAAhI,MAKO21B,SAAUn1B,GACf,IAAM00B,EAAOpwB,KAAKowB,MACL,GAAT10B,GAAcA,GAAS00B,EAAKnyB,SAC9BmyB,EAAK10B,GAAOqL,QAHc,GAO9B,CAAA7D,IAAA,YAAAhI,MAMO41B,SAAUp1B,GACf,IAAM00B,EAAOpwB,KAAKowB,KACZW,EAAM/wB,KAAKsC,cAA2BquB,cAAc,MAMnDI,OALK,EAARr1B,GAAaA,GAAS00B,EAAKnyB,OAC7B+B,KAAK8G,YAAYiqB,GAEjB/wB,KAAK2G,aAAaoqB,EAAI/wB,KAAK8N,SAASpS,IAE/Bq1B,CARqB,KAS7BH,CApCkC,EAAQtS,OAsC5B,QAASsS,IAC1B5X,GAAiB,QAAS4X,IAC1B5X,GAAiB,QAAS4X,ICxCbI,IAAAA,YAAgB7R,GAAA6R,SAAAA,IAAA,OAAAhtB,OAAAgtB,GAAArtB,EAAAA,MAAA3D,KAAA4D,UAAA,CAAAyE,EAAA2oB,EAAA7R,GAAAjX,IAAAA,EAAAI,EAAA0oB,GAAA,OAAA/sB,EAAA+sB,EAAA,EAAQ1S,IACrCtF,GAAiB,OAAQgY,IAIzBpf,GAAkB,CAAC,CAAEqf,SAAU,CAAC,MAAQD,ICN3BE,IAAAA,YAAKzoB,GAChByoB,SAAAA,EAAYxuB,EAAcJ,EAAqBuD,GAAsBqC,OAAAlE,OAAAktB,GAAAhpB,EAAAC,KAC7DzF,KAAAA,IAA0B,QAASJ,EAAeuD,EADW,CADrDwC,EAAA6oB,EAAAzoB,OAAAP,EAAAI,EAAA4oB,YAUhBA,EAAA,CAAA,CAAAhuB,IAAA,cAAA7H,IAIAA,WACE,OAAO2E,KAAK0C,IADC,EAIfpH,IAKAA,SAAgBJ,GAEd8E,KAAK0I,UAAYxN,CAFU,GAK7B,CAAAgI,IAAA,YAAAhI,MAIOyN,WACL,YAAYrG,cAAcyF,eAAe/H,KAAK0C,KADhC,GAIhB,CAAAQ,IAAA,YAAAhI,MAMOi2B,SAAUhR,GACf,IAAMiR,EAAoB,IAAIF,EAAKlxB,KAAK0C,KAAKmE,MAAMsZ,EAAQngB,KAAK0C,KAAKzE,QAAS+B,KAAKsC,eAC7E/E,EAAayC,KAAKzC,cAEnBmL,KAAAA,UAAY1I,KAAK0C,KAAKmE,MAAM,EAAGsZ,GACjB,OAAf5iB,EAAqB,CAGvB,IAAM8zB,GADA/qB,EAAmB/I,EAAWK,YACUE,QAAQkC,MAAQ,SAG5C2G,EAAAA,aAAayqB,EAFN9qB,EAAiBrI,QAAUozB,EAAuB/qB,EAAiB+qB,GAAwB,KAJ7F,CASzB,OAd6BzsB,CAAA,KA1CfyK,CAAA,EAAQrH,GCCbspB,YAAiBjY,GAC5BiY,SAAAA,EAAYhvB,EAAqBuD,GAG6G,OAHvF7B,OAAAstB,IACrDluB,EAAA8E,EAAAC,KAAAnI,KAAK,GAAkC,qBAAsBsC,EAAeuD,IAExE,GAAqC,CAACzC,EAAI,GAA4DgF,GAAAA,EAAYhF,EAAKwC,UAAW,EAAG,IAHpF,CAD3ByC,EAAAipB,EAAAjY,GAAA,IAAAnR,EAAAI,EAAAgpB,GAiB3BA,OAVDrtB,EAAAqtB,EAAA,CAAA,CAAApuB,IAAA,YAAAhI,MAIOyN,WAA+B,IAArBwU,EAAA,EAAAvZ,UAAA3F,aAAAkG,IAAAP,UAAA,IAAAA,UAAA,GACTwZ,EAA0Bpd,KAAKsC,cAAcivB,yBAI5CnU,OAHPhC,GACEpb,KAAKpC,WAAWT,SAAQ,SAACuI,GAAK,SAAWoB,YAAYpB,EAAMiD,UAAUwU,GAAvC,IAEzBC,CAL6B,KAMrCkU,CAjB2B,EAAQriB,IC4CzBuiB,YAASjT,GAWpBiT,WAAYC,GAAmBztB,OAAAwtB,GAC7BpuB,IAAAA,EAAA8E,EAAAC,KAAAnI,KAAK,EAda0xB,YzC7CQxY,+ByC2DmC,eAXxDwN,iBAAW,EACXiL,EAAAA,qBAAe,EACfC,EAAAA,UAAI,EAGJ/0B,EAAAA,iBAAW,EAAAuG,EACXb,4BAAsB,EAAAa,EACtBT,+BAAyB,IACzB,KAA6C,EAKlDS,EAAKwC,SAhBa8rB,YAiBbC,EAAAA,gBAAeE,EAAAzuB,GAEfsjB,EAAAA,YAAc/mB,OAAOuB,OAAOuwB,EAAQ,CACvC91B,SAAQk2B,EAAAzuB,GACRsI,iBAAkBtI,EAAKsI,iBAAiB+D,KAAIoiB,EAAAzuB,IAC5CuI,oBAAqBvI,EAAKuI,oBAAoB8D,KAAIoiB,EAAAzuB,MATvBwB,CAAA,CAXXyD,EAAAmpB,EAAAjT,GAAArW,IAAAA,EAAAI,EAAAkpB,GAsGnB,OA9EDvtB,EAAAutB,EAAA,CAAA,CAAAtuB,IAAA,KAAAhI,MAMOkB,W1CoEH01B,IAAoBL,EAClB91B,EXlJiCE,EqD8EZk2B,E1CmEHN,E0ClENzxB,KAAK0mB,a1CmEjB/qB,EAAW81B,EAAO91B,UACV4G,wBAGd5G,EAAS4G,uBAAuB,WAAW,SAAAE,GACe,GAAA,KADZC,EAAID,EAAJC,UAC5C,CAIA,IAAM/F,EAAOtB,GADP+I,EAAQ1B,EAAmD,SAEpD,GAAA,OAAT/F,EAAe,CACZshB,IAAAA,EAALthB,EAAKshB,cACHte,EAAAA,OAAOuB,EAAPvB,EAAOuB,OACL0D,EAAA,IAAI4E,GAAMpF,EAAK,IAA0B,CACvCqT,QAASrT,EAAgC,IACzCoT,WAAYpT,EAAK,MAGHA,EAAAA,EAAqC,IACjCA,EAAAA,EAAyC,IAC/CA,EAAAA,EAAmC,IACpCA,EAAAA,EAAkC,IAChCA,EAAAA,EAAoC,IA3E3D,GAAwC,OA4EcA,EA5E7C,IAAqC,CACtC1I,IAAAA,EA2E8C0I,EA3Ec,IAAC,GAEnEgS,EAAO/a,EAAc,IAAVK,EAAcA,EAyEU+1B,EAAO91B,SAzED,GAHG,MAK9Cya,EAAO,KA2DHzZ,EAAAA,KAAAA,EACSuE,EAAPvB,KAAAA,EACEiF,EAIA,CACE2S,aAAcnT,EACdiT,iBAAkBjT,EAClBgT,WAAYhT,EACZ+S,UAAW/S,EACXyJ,YAAazJ,EACb9G,OAAQ00B,EACR9a,UAAW9S,EAAkC,IAC7C6S,OAAQ7S,EAA+B,IACvC6tB,QAAS7tB,EAAgC,IACzC2T,MAAO3T,EAA8B,IACrC0T,MAAO1T,EAA8B,IACrCyT,QAASzT,EAAgC,IACzCwT,QAASxT,EAAgC,IACzCuT,QAASS,GAAsBqZ,EAAO91B,SAAUyI,EAAiC,IACjFsT,eAAgBU,GAAsBqZ,EAAO91B,SAAUyI,EAAK,MAtBjD,CALnB,CAD+E,I2C9I7E8tB,SAAoBT,IAClB91B,EAAW81B,EAAO91B,UACV4G,wBAGd5G,EAAS4G,uBAAuB,WAAW,SAAAE,GACc,GAAA,KADXC,EAAID,EAAJC,UAC5C,KAIM/F,EAAOtB,GADP82B,EAAQzvB,EAAkD,SAEhExE,IACGvB,EAAK2F,cAA2D,KAAG,EAEpE3F,EAAKzB,MAAQi3B,EAA6B,IACzCx1B,EAAK2F,cAA2D,KAAG,EATtE,CADiF,GAL/B,EDwE9BtC,KAAK0mB,aE/EvBnhB,SAAoBksB,GACxB,IAAM91B,EAAW81B,EAAO91B,WACV4G,wBAGd5G,EAAS4G,uBAAuB,WAAW,SAAAE,GACzC,KAD4CC,EAAID,EAAJC,YAItCyvB,EAAQzvB,EAAmD,OAE/D+uB,EAAOW,WAAaD,EAAK,GACzBV,EAAOY,YAAcF,EAAK,GAPqD,GAL/B,CFgFlDG,CAAgBtyB,KAAK0mB,YAJW,GAOlC,CAAAxjB,IAAA,KAAAhI,MAKOkB,SAAgCm2B,EAAwBC,GAAyB,IAAArY,EAAAna,YAC9EwyB,EAAoC,IAC1C,KAAA,EACE,OAAWtB,IAAAA,GAAKqB,EAAQC,EAAiD,IAAGxyB,KAAMwyB,MACpF,KAAA,EACE,OAAO,IAAIhqB,EAAQ+pB,EAAQC,EAAiD,IAAGxyB,KAAMwyB,MAErF,QAAA,IAAM1hB,EAAuByhB,EAAQC,EAAkD,KzChGjEtZ,+ByCiGhBha,EAAoBqzB,EAAQC,MAE5B71B,EAAO,IADOoc,GAAgB,GAAA/c,OAAI8U,EAAY,KAAA9U,OAAIkD,KAAgBof,IACpBpf,EAAAA,EAAW4R,EAAc9Q,KAAMwyB,MAWnF,OATCA,MAA0C,IAAIr1B,SAAQ,SAACs1B,GAAS,OAE/D91B,EAAKof,eACuB,SAA1BwW,EAAQE,EAAU,IAAiBF,EAAQE,EAAU,IzCxGnCvZ,+ByCyGlBqZ,EAAQE,EAAU,IAClBF,EAAQE,EAAU,IAL2C,KAQhED,MAA0C,IAAIr1B,SAAQ,SAACuI,GAAK,OAAK/I,EAAKmK,YAAYqT,EAAmC,IAACoY,EAAS7sB,GAAnE,MApBqB,GAuBvF,CAAAxC,IAAA,gBAAAhI,MAEMy1B,SAAczf,GACnB,OAAYuJ,KAAAA,gBzCnHcvB,+ByCmH0BhI,E7DtHA/R,c6DqHrB,GAEhC,CAAA+D,IAAA,kBAAAhI,MAEMuf,SAAgB3J,EAA4B5R,GAEjD,OADoB6Z,IAAAA,GAAgB,GAAA/c,OAAI8U,EAAY,KAAA9U,OAAIkD,KAAgBof,IAC1Bpf,EAAAA,EAAW4R,EAAc9Q,KAFL,GAKpE,CAAAkD,IAAA,cAAAhI,MAIOw3B,SAAYxrB,GACjB,OAAWsC,IAAAA,MAAMtC,EAAM,CAAEuQ,SAAS,EAAOD,YAAY,GADxB,GAE9B,CAAAtU,IAAA,iBAAAhI,MAEM6M,SAAesT,GACpB,WAAW6V,GAAK7V,EAAMrb,KADU,GAEjC,CAAAkD,IAAA,gBAAAhI,MAEM0N,SAAcyS,GACnB,OAAO,IAAI7S,EAAQ6S,EAAMrb,KADM,GAEhC,CAAAkD,IAAA,yBAAAhI,MAEMq2B,WACL,WAAWD,GAAiBtxB,KADD,GAI7B,CAAAkD,IAAA,iBAAAhI,MAIO6xB,SAAejuB,GACpB,OAAO8O,GAAkB5N,KAAK4xB,MAAM,SAAChzB,GAAO,SAAaE,KAAOA,CAApB,GADd,MApGZ,EAAQsa,IG5CxBuZ,GAAgB,IAAO,GACzBC,GAAe,EACf9zB,GAAa,EACbqnB,GAAuB,GCLd0M,YAAWtU,GACtBsU,WAAY90B,EAAoBmB,EAAqB4R,EAA4BxO,GAGrDc,OAHwEY,OAAA6uB,IAClGzvB,EAAA8E,EAAAC,KAAAnI,KAAMjC,EAAUmB,E7CFS4b,6B6CEiBxY,IAErCsD,SAAW1G,EAAUkE,CAHwE,CAD9EiF,EAAAwqB,EAAAtU,GAAA,IAAArW,EAAAI,EAAAuqB,GAKrB,OAAA5uB,EAAA4uB,EALqB,EAAQzZ,IAOhCJ,GAAiB,MAAO6Z,G7CPK/X,8B8CgDvBgY,IAAAA,GAA2B,CAC/BV,WAAY,EACZC,YAAa,EACbrqB,cAAAA,EACAQ,QAAAA,EACAgpB,SAAAA,GACAF,iBAAAA,GACA/hB,aAAAA,GACA6J,QAAAA,GACA8F,kBAAAA,GACAQ,kBAAAA,GACAwJ,kBAAAA,GACAC,gBAAAA,GACAC,oBAAAA,GACA9K,YAAAA,GACA+K,iBAAAA,GACAI,oBAAAA,GACAC,gBAAAA,GACAQ,kBAAAA,GACAQ,iBAAAA,GACAS,iBAAAA,GACA0B,iBAAAA,GACAG,gBAAAA,GACAE,eAAAA,GACAC,iBAAAA,GACAI,eAAAA,GACAG,iBAAAA,GACAE,kBAAAA,GACAI,oBAAAA,GACAC,iBAAAA,GACAC,kBAAAA,GACAM,kBAAAA,GACAK,kBAAAA,GACAC,iBAAAA,GACAC,qBAAAA,GACAO,oBAAAA,GACAK,iBAAAA,GACAU,oBAAAA,GACAO,wBAAAA,GACAI,gBAAAA,GACA6B,WAAAA,GACA3B,KAAAA,GACA1nB,MAAOupB,GACP9tB,iBAAAA,EACA8H,sBAAuBE,KAAKF,uBFxDxBimB,SAAsBjuB,GAanBjG,OAZc,IAAjBqnB,GAAMloB,QA3BZg1B,WACE,IAAMC,EAAM5pB,KAAK4pB,MACXC,EAAOntB,KAAKotB,MAAMptB,KAAKC,IAAI,EAAG0sB,IAAiBrpB,KAAK4pB,MAAQN,MAClEA,GAAOM,EAAMC,EAEb7uB,YAAW,WACT,IAAI+uB,EAAKlN,GAAMtf,MAAM,GAIrBsf,GAAMloB,OAAS,EACf,IADiB,IAAA8T,EAAAA,WAEf,GAAIshB,EAAGx1B,GAAGy1B,UAAW,OAGrB,EAAA,IACED,EAAGx1B,GAAGkH,SAAS6tB,GADb,CAEF,MAAOhuB,GACPN,YAAW,WACT,MAAAqJ,CADS,GAER,EAHO,CANsB,EAA3B9P,EAAI,EAAGA,EAAIw1B,EAAGp1B,OAAQJ,IAAGkU,GANzB,GAkBRohB,EAvBgB,CA4BjBF,GAEFM,KAAWppB,OAAOqpB,mBAChB10B,GAAK,GAGPqnB,GAAM1qB,KAAK,CACTg4B,SAAU30B,GACViG,SAAAA,EACAuuB,WAAW,IAENx0B,EAbiD,EEyDxDkO,qBAAsBC,KAAKD,sBFzCvB0mB,SAAsBD,GAC1B,IAAK,IAAI51B,EAAI,EAAGA,EAAIsoB,GAAMloB,OAAQJ,IAChC,GAAIsoB,GAAMtoB,GAAG41B,SAAWA,EAAQ,CAC9BtN,GAAMtoB,GAAGy1B,WAAY,EACrB,KAF8B,CAFM,GE4CpCK,GAAOA,aAIAC,GAAmC,SAAU/2B,EAAa6O,EAAkBC,GACvF,IAAMhQ,EAAW,IAAI61B,GAASsB,IAe9B,OAbSj2B,EAAAA,YAAcA,EACvBlB,EAAS4G,uBAAyBmJ,EAClC/P,EAASgH,0BAA4BgJ,EAE5B7F,EAAAA,aAAc,EACvBnK,EAASmL,YAAanL,EAASi2B,KAAOj2B,EAASg1B,cAAc,SAKjDlK,GAAAA,gBAAmBxZ,KAAAA,gBAC/B6lB,GAAY9K,YAAe/a,KAAAA,YAEXyZ,EAAAA,WAhB0F,CAA5D,CAiB7C7pB,YAAY4S,KAAKxC,OAAS0mB,GAAMjoB,iBAAiB+D,KAAKxC,OAAS0mB,GAAMhoB,oBAAoB8D,KAAKxC,OAAS0mB,WAGzG,SAAUlC,IpDpCLoC,SAAwBpC,GAkB5B,IAAIqC,EAAUrC,EACd,IADqB1f,EAAAA,WAInBpS,OAAOo0B,oBAAoBD,GAAS32B,SAAQ,SAAC62B,GAC1BF,IAAAA,EAAAA,EAhBnB,IAAKjrB,EAAoBorB,eAgBGD,GAf1B,WACSE,EAciBF,EAftB,CAGF,MAAOpvB,GAW0C,CAAA,MAW3CjF,OAAOw0B,eAAeL,EAdqB,EAAhDA,GAAWA,EAAQxX,cAAgB7S,aAAWsI,GAnBA,CoDqCrD8hB,CAAcpC,GAER2C,IAAAA,EAAgB3C,EAAAA,MACtB,GAAI2C,EACF,IACEz0B,OAAOC,eAAe6xB,EAAQ,QAAS,CACrC3xB,YAAY,EACZu0B,UAAU,EACVt0B,cAAc,EACd7E,MAAOo5B,EAAaV,GAAUj4B,SAAUy4B,EAAc3kB,KAAKgiB,KAL3D,CAOF,MAAO7sB,GAAG,CAZf,CAAA,CAgBEqI,MAGFA,KAAalJ,IAAM,IAAIA,EAAI6vB,GAAUj4B,UAGrCsR,KAAasnB,exDhGRA,SAAyBrjB,EAAcsjB,GAC3C,IAAKtjB,GAAiB,KAATA,EACX,MAAMpP,MAAS,uEAEjB,GAAkB,mBAAP0yB,EACT,MAAM1yB,MAAS9F,0DAAAA,OAA2DkV,EAAIlV,OAAAA,OAAA6F,EAAa2yB,UAE7F,GAAItjB,KAAJujB,EACE,MAAU3yB,MAAK,wDAAA9F,OAAyDkV,SAE1ErM,EAAkBqM,GAAQsjB,CAV6B,EwDiGzD9oB,iBAAiB,WAAW,SAACgpB,GAAiB,OxDzIxCC,SAAqCvwB,EAAqBzI,GAE9D,GAA0D,MADpDi5B,EAAMxwB,EAAM1B,UAClB,CAKA,IAAMmyB,EADkBD,EACkD,IACpEE,EAAcpwB,KAAK0V,MAFDwa,OAGlBl5B,EAHkBk5B,EAG8B,IAEhDJ,EAAK3vB,EAAkBgwB,IAW7B54B,QAAQC,QAAQs4B,GACbr4B,MAAK,SAAC+B,GAAC,OAAKA,EAAEyF,MAAM,KAAMmxB,EAAnB,IACP34B,MACC,SAACjB,GACCM,EAASG,EAAU,CAAmED,GAAAA,EAAAA,EAAOT,EAAMyJ,KAAKC,UAAUzJ,KAD1G,IAGV,SAACssB,GACOuN,EAAerwB,KAAKC,UAAU6iB,EAAInjB,SAAWmjB,GAEnDhsB,EAASG,EAAU,MAGjBD,EACAT,EAAMyJ,KAAKC,qCAAS3I,OAA4B64B,EAAY,cAAA74B,OAAa+4B,EAAe,QAP7E,IAfjBv5B,EAASG,EAAU,MAGjBD,EACAT,EAAMyJ,KAAKC,UAAS,oCAAA3I,OAAqC64B,8BAf7D,CAF+F,CwDyI9CF,CAA2BD,EAAKd,GAAUj4B,SAA/C,cC1IxCq5B,SACJr5B,EACA42B,EACA0C,EACAC,EACAC,EAAqC1yB,EAErC2yB,EACAC,GAAqC,IAAAC,EAAAtJ,EAAAvpB,EAAA,GAFpC2vB,EAAUkD,EAAA,GAAEjD,EAAWiD,EAAA,GlDeAC,SAACvyB,GAErBwyB,KAAuB,IADrBA,EAAexyB,EAAK3D,QAAO,SAAC6D,GAAG,OAAKxC,MAAMwC,KAAgBkO,GAAoBvR,UAAUo0B,eAAe/wB,EAAxE,KACpBjF,QAAjB,CAIA,IAAMw3B,EAA2BrkB,GAAoBvR,UAAU5B,QAAU,EACzE,IAAIw3B,EACFrkB,GAAoBvR,UAAU5B,OAASw3B,EAA0BD,EAAav3B,OAE9E0B,OAAOC,eAAewR,GAAoBvR,UAAW,SAAU,CAC7DE,cAAc,EACds0B,UAAU,EACVn5B,MAAOs6B,EAAav3B,SAIxBu3B,EAAar4B,SAAQ,SAAC+F,EAAaxH,GACjC,IAAMg6B,EAA6BxyB,EApBmB/C,QAAQ,yBAA0B,OAAOA,QAAQ,uBAAwB,OjB5B3EhB,iBiBiDhCU,UAAUnE,EAAQ+5B,GAA2BC,EAE1DC,OAAAA,iBAAiBvkB,GAAoBvR,UAAS/C,EAClDoG,CAAAA,EAAAA,EAAM,CACL7H,eACE,YAAYgW,iBAAiBqkB,EAD5B,EAGHp6B,IAAGA,SAACJ,GACF8E,KAAKyR,YAAYikB,EAAex6B,EADzB,IAT2C,GAf1D,CAFsD,CkDXtD06B,CAAWV,G9Cb8BW,SAAC7yB,OACpCwyB,EAAexyB,EAAK3D,QAAO,SAAC6D,GAAG,OAAMob,GAAYze,UAAUo0B,eAAe/wB,EAA3C,KACpBjF,QAIjBu3B,EAAar4B,SAAQ,SAAC+F,GACpB,IAAM4yB,EAAgB5yB,EAAI/C,QAAQ,KAAM,IACxCR,OAAOC,eAAe0e,GAAYze,UAAWqD,EAAK,CAChDpD,YAAY,EACZzE,eACE,OAAO2E,KAA6C,IAAC81B,IAAkB,IADtE,EAGHx6B,IAAGA,SAACJ,GACF,IAAM66B,EAAS/1B,KAA6C,IAAC81B,GAC7DlxB,GACE5E,KAAK2L,oBAAoBmqB,EAAeC,GAE1C3a,uBACEpb,KAAK0L,iBAAiBoqB,EAAe56B,QAEM,IAAC46B,GAAiB56B,CARxD,GAP8B,GAN4B,C8CcvE26B,CAA4BV,KACpBh4B,QAAQiL,IACf6sB,MAAiD,IAAI93B,SAAQ,SAACuI,GAAK,OAClE/J,EAASi2B,KAAK9qB,YAAYnL,EAAQ,IAAgC42B,EAAS7sB,GADT,KAG9DswB,EAASr6B,EAAS+qB,aACjB0L,WAAaA,EACbC,EAAAA,YAAcA,ECjBjB4D,SAA4Bt6B,EAAmCy5B,EAAqCC,GACxG,IAAMW,EAASr6B,EAAS+qB,YACpB0O,EAAiBtyB,UACnBkzB,EAAOE,aAAetzB,EAAcjH,EAAiCy5B,EAAAA,EAAiBtyB,UAIjEA,EAAAA,UACrBkzB,EAAOG,eAAiBvzB,EAAcjH,EAAmC05B,EAAAA,EAAmBvyB,SAR+C,CDkB7ImzB,CAAkBt6B,EAAUy5B,EAAkBC,EAXT"}