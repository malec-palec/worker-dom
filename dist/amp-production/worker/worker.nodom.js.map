{"version":3,"file":"worker.nodom.js","sources":["../../../output/worker-thread/strings.js","../../../output/worker-thread/MutationTransfer.js","../../../output/worker-thread/phase.js","../../../output/worker-thread/Storage.js","../../../output/worker-thread/index.nodom.amp.js","../../../output/worker-thread/nodes.js","../../../output/worker-thread/amp/amp.js","../../../output/worker-thread/function.js","../../../output/worker-thread/dom/DocumentStub.js","../../../output/worker-thread/amp/delete-globals.js","../../../output/worker-thread/initialize-storage.js"],"sourcesContent":["let count = 0;\nlet transfer = [];\nconst mapping = new Map();\n/**\n * Stores a string in mapping and returns the index of the location.\n * @param value string to store\n * @return location in map\n */\nexport function store(value) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (mapping.has(value)) {\n        // Safe to cast since we verified the mapping contains the value\n        return mapping.get(value);\n    }\n    mapping.set(value, count);\n    transfer.push(value);\n    return count++;\n}\n/**\n * Retrieve the index for a string (mostly used for tests).\n * @param value string value we need to know the index of\n * @returns index in the map for the string\n */\nexport function getForTesting(value) {\n    return mapping.get(value);\n}\nexport function getForTestingPartial(value) {\n    const found = Array.from(mapping.keys()).find((str) => str.includes(value));\n    if (found) {\n        return mapping.get(found);\n    }\n}\n/**\n * Returns strings registered but not yet transferred.\n * Side effect: Resets the transfer array to default value, to prevent passing the same values multiple times.\n */\nexport function consume() {\n    const strings = transfer;\n    transfer = [];\n    return strings;\n}\n//# sourceMappingURL=strings.js.map","import { consume as consumeNodes } from './nodes';\nimport { consume as consumeStrings } from './strings';\nimport { phase, set as setPhase } from './phase';\nlet pending = false;\nlet pendingMutations = [];\n// TODO(choumx): Change `mutation` to Array<Uint16> to prevent casting errors e.g. integer underflow, precision loss.\nexport function transfer(document, mutation) {\n    if (process.env.SERVER) {\n        return;\n    }\n    if (phase > 0 /* Phase.Initializing */ && document[58 /* TransferrableKeys.allowTransfer */]) {\n        pending = true;\n        pendingMutations = pendingMutations.concat(mutation);\n        Promise.resolve().then((_) => {\n            if (pending) {\n                const nodes = new Uint16Array(consumeNodes().reduce((acc, node) => acc.concat(node[8 /* TransferrableKeys.creationFormat */]), [])).buffer;\n                const mutations = new Uint16Array(pendingMutations).buffer;\n                document.postMessage({\n                    [54 /* TransferrableKeys.phase */]: phase,\n                    [12 /* TransferrableKeys.type */]: phase === 2 /* Phase.Mutating */ ? 3 /* MessageType.MUTATE */ : 2 /* MessageType.HYDRATE */,\n                    [37 /* TransferrableKeys.nodes */]: nodes,\n                    [41 /* TransferrableKeys.strings */]: consumeStrings(),\n                    [36 /* TransferrableKeys.mutations */]: mutations,\n                }, [nodes, mutations]);\n                pendingMutations = [];\n                pending = false;\n                setPhase(2 /* Phase.Mutating */);\n            }\n        });\n    }\n}\n//# sourceMappingURL=MutationTransfer.js.map","export let phase = 0 /* Phase.Initializing */;\nexport const set = (newPhase) => (phase = newPhase);\n//# sourceMappingURL=phase.js.map","import { store } from './strings';\nimport { transfer } from './MutationTransfer';\n/**\n * @param document\n * @param location\n * @param data\n */\nexport function createStorage(document, location, data) {\n    const storage = Object.assign(Object.create(null), data);\n    // Define properties on a prototype-less object instead of a class so that\n    // it behaves more like normal objects, e.g. bracket notation and JSON.stringify.\n    const define = Object.defineProperty;\n    define(storage, 'length', {\n        get() {\n            return Object.keys(this).length;\n        },\n    });\n    define(storage, 'key', {\n        value(n) {\n            const keys = Object.keys(this);\n            return n >= 0 && n < keys.length ? keys[n] : null;\n        },\n    });\n    define(storage, 'getItem', {\n        value(key) {\n            const value = this[key];\n            return value ? value : null;\n        },\n    });\n    define(storage, 'setItem', {\n        value(key, value) {\n            const stringValue = String(value);\n            this[key] = stringValue;\n            transfer(document, [12 /* TransferrableMutationType.STORAGE */, 2 /* GetOrSet.SET */, location, store(key) + 1, store(stringValue) + 1]);\n        },\n    });\n    define(storage, 'removeItem', {\n        value(key) {\n            delete this[key];\n            transfer(document, [\n                12 /* TransferrableMutationType.STORAGE */,\n                2 /* GetOrSet.SET */,\n                location,\n                store(key) + 1,\n                0, // value == 0 represents deletion.\n            ]);\n        },\n    });\n    define(storage, 'clear', {\n        value() {\n            Object.keys(this).forEach((key) => {\n                delete this[key];\n            });\n            transfer(document, [\n                12 /* TransferrableMutationType.STORAGE */,\n                2 /* GetOrSet.SET */,\n                location,\n                0,\n                0, // value == 0 represents deletion.\n            ]);\n        },\n    });\n    return storage;\n}\n//# sourceMappingURL=Storage.js.map","import { AMP } from './amp/amp';\nimport { callFunctionMessageHandler, exportFunction } from './function';\nimport { DocumentStub } from './dom/DocumentStub';\nimport { deleteGlobals } from './amp/delete-globals';\nimport { initializeStorage } from './initialize-storage';\nconst noop = () => void 0;\nexport const workerDOM = (function (postMessage, addEventListener, removeEventListener) {\n    const document = new DocumentStub();\n    // TODO(choumx): Avoid polluting Document's public API.\n    document.postMessage = postMessage;\n    document.addGlobalEventListener = addEventListener;\n    document.removeGlobalEventListener = removeEventListener;\n    return document.defaultView;\n})(postMessage.bind(self) || noop, addEventListener.bind(self) || noop, removeEventListener.bind(self) || noop);\n// Modify global scope by removing disallowed properties.\ndeleteGlobals(self);\n// Offer APIs like AMP.setState() on the global scope.\nself.AMP = new AMP(workerDOM.document);\n// Allows for function invocation\nself.exportFunction = exportFunction;\naddEventListener('message', (evt) => callFunctionMessageHandler(evt, workerDOM.document));\nexport const hydrate = (document, strings, hydrateableNode, cssKeys, globalEventHandlerKeys, size, localStorageInit, sessionStorageInit) => {\n    initializeStorage(document, localStorageInit, sessionStorageInit);\n};\n//# sourceMappingURL=index.nodom.amp.js.map","import { phase } from './phase';\nlet count = 0;\nlet transfer = [];\nconst mapping = new Map();\n/**\n * Override the store for a node during the initialization phase.\n * @param node Node to store and modify with index\n * @param override Override number to use as the identifier.\n *\n * NOTE: THIS IS ONLY TO BE USED DURING INITIALIZATION.\n */\nexport function storeOverride(node, override) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (phase === 0 /* Phase.Initializing */) {\n        mapping.set((node[7 /* TransferrableKeys.index */] = override), node);\n        count = Math.max(count, override);\n    }\n    return override;\n}\n/**\n * Stores a node in mapping, and makes the index available on the Node directly.\n * @param node Node to store and modify with index\n * @return index Node was stored with in mapping\n */\nexport function store(node) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (node[7 /* TransferrableKeys.index */] !== undefined) {\n        return node[7 /* TransferrableKeys.index */];\n    }\n    mapping.set((node[7 /* TransferrableKeys.index */] = ++count), node);\n    if (phase > 0 /* Phase.Initializing */) {\n        // After Initialization, include all future dom node creation into the list for next transfer.\n        transfer.push(node);\n    }\n    return count;\n}\n/**\n * Retrieves a node based on an index.\n * @param index location in map to retrieve a Node for\n * @return either the Node represented in index position, or null if not available.\n */\nexport function get(index) {\n    // mapping has a 1 based index, since on first store we ++count before storing.\n    return (!!index && mapping.get(index)) || null;\n}\n/**\n * Returns nodes registered but not yet transferred.\n * Side effect: Resets the transfer array to default value, to prevent passing the same values multiple times.\n */\nexport function consume() {\n    const copy = transfer;\n    transfer = [];\n    return copy;\n}\n//# sourceMappingURL=nodes.js.map","import { store } from '../strings';\nimport { transfer } from '../MutationTransfer';\nexport class AMP {\n    document;\n    constructor(document) {\n        this.document = document;\n    }\n    /**\n     * Returns a promise that resolves with the value of `key`.\n     * @param key\n     */\n    getState(key = '') {\n        return new Promise((resolve) => {\n            const messageHandler = (event) => {\n                const message = event.data;\n                if (message[12 /* TransferrableKeys.type */] !== 11 /* MessageType.GET_STORAGE */) {\n                    return;\n                }\n                // TODO: There is a race condition here if there are multiple concurrent\n                // getState(k) messages in flight, where k is the same value.\n                const storageMessage = message;\n                if (storageMessage[74 /* TransferrableKeys.storageKey */] !== key) {\n                    return;\n                }\n                this.document.removeGlobalEventListener('message', messageHandler);\n                const value = storageMessage[21 /* TransferrableKeys.value */];\n                resolve(value);\n            };\n            this.document.addGlobalEventListener('message', messageHandler);\n            transfer(this.document, [12 /* TransferrableMutationType.STORAGE */, 1 /* GetOrSet.GET */, 2 /* StorageLocation.AmpState */, /* key */ store(key) + 1, /* value */ 0]);\n            setTimeout(resolve, 500, null); // TODO: Why a magical constant, define and explain.\n        });\n    }\n    /**\n     * Deep-merges `state` into the existing state.\n     * @param state\n     */\n    setState(state) {\n        // Stringify `state` so it can be post-messaged as a transferrable.\n        let stringified;\n        try {\n            stringified = JSON.stringify(state);\n        }\n        catch (e) {\n            throw new Error(`AMP.setState only accepts valid JSON as input.`);\n        }\n        transfer(this.document, [12 /* TransferrableMutationType.STORAGE */, 2 /* GetOrSet.SET */, 2 /* StorageLocation.AmpState */, /* key */ 0, /* value */ store(stringified) + 1]);\n    }\n}\n//# sourceMappingURL=amp.js.map","import { transfer } from './MutationTransfer';\nimport { store } from './strings';\nconst exportedFunctions = {};\nexport function callFunctionMessageHandler(event, document) {\n    const msg = event.data;\n    if (msg[12 /* TransferrableKeys.type */] !== 12 /* MessageType.FUNCTION */) {\n        return;\n    }\n    const functionMessage = msg;\n    const fnIdentifier = functionMessage[77 /* TransferrableKeys.functionIdentifier */];\n    const fnArguments = JSON.parse(functionMessage[78 /* TransferrableKeys.functionArguments */]);\n    const index = functionMessage[7 /* TransferrableKeys.index */];\n    const fn = exportedFunctions[fnIdentifier];\n    if (!fn) {\n        transfer(document, [\n            13 /* TransferrableMutationType.FUNCTION_CALL */,\n            2 /* ResolveOrReject.REJECT */,\n            index,\n            store(JSON.stringify(`[worker-dom]: Exported function \"${fnIdentifier}\" could not be found.`)),\n        ]);\n        return;\n    }\n    Promise.resolve(fn) // Forcing promise flows allows us to skip a try/catch block.\n        .then((f) => f.apply(null, fnArguments))\n        .then((value) => {\n        transfer(document, [13 /* TransferrableMutationType.FUNCTION_CALL */, 1 /* ResolveOrReject.RESOLVE */, index, store(JSON.stringify(value))]);\n    }, (err) => {\n        const errorMessage = JSON.stringify(err.message || err);\n        transfer(document, [\n            13 /* TransferrableMutationType.FUNCTION_CALL */,\n            2 /* ResolveOrReject.REJECT */,\n            index,\n            store(JSON.stringify(`[worker-dom]: Function \"${fnIdentifier}\" threw: \"${errorMessage}\"`)),\n        ]);\n    });\n}\nexport function exportFunction(name, fn) {\n    if (!name || name === '') {\n        throw new Error(`[worker-dom]: Attempt to export function was missing an identifier.`);\n    }\n    if (typeof fn !== 'function') {\n        throw new Error(`[worker-dom]: Attempt to export non-function failed: (\"${name}\", ${typeof fn}).`);\n    }\n    if (name in exportedFunctions) {\n        throw new Error(`[worker-dom]: Attempt to re-export function failed: \"${name}\".`);\n    }\n    exportedFunctions[name] = fn;\n}\nexport function resetForTesting() {\n    for (const key of Object.keys(exportedFunctions)) {\n        delete exportedFunctions[key];\n    }\n}\n//# sourceMappingURL=function.js.map","import { set as setPhase } from '../phase';\n/**\n * A lightweight Document stub for the no-dom amp binary.\n */\nexport class DocumentStub {\n    // Internal variables.\n    defaultView;\n    postMessage;\n    addGlobalEventListener;\n    removeGlobalEventListener;\n    [58 /* TransferrableKeys.allowTransfer */] = true;\n    [7 /* TransferrableKeys.index */] = -1;\n    constructor() {\n        this.defaultView = { document: this };\n    }\n    [59 /* TransferrableKeys.observe */]() {\n        setPhase(2 /* Phase.Mutating */);\n    }\n}\n//# sourceMappingURL=DocumentStub.js.map","const ALLOWLISTED_GLOBALS = {\n    Array: true,\n    ArrayBuffer: true,\n    BigInt: true,\n    BigInt64Array: true,\n    BigUint64Array: true,\n    Boolean: true,\n    Cache: true,\n    CustomEvent: true,\n    DataView: true,\n    Date: true,\n    Error: true,\n    EvalError: true,\n    Event: true,\n    EventTarget: true,\n    Float32Array: true,\n    Float64Array: true,\n    Function: true,\n    Infinity: true,\n    Int16Array: true,\n    Int32Array: true,\n    Int8Array: true,\n    Intl: true,\n    JSON: true,\n    Map: true,\n    Math: true,\n    NaN: true,\n    Number: true,\n    Object: true,\n    Promise: true,\n    Proxy: true,\n    RangeError: true,\n    ReferenceError: true,\n    Reflect: true,\n    RegExp: true,\n    Set: true,\n    String: true,\n    Symbol: true,\n    SyntaxError: true,\n    TextDecoder: true,\n    TextEncoder: true,\n    TypeError: true,\n    URIError: true,\n    URL: true,\n    Uint16Array: true,\n    Uint32Array: true,\n    Uint8Array: true,\n    Uint8ClampedArray: true,\n    WeakMap: true,\n    WeakSet: true,\n    WebAssembly: true,\n    WebSocket: true,\n    XMLHttpRequest: true,\n    atob: true,\n    addEventListener: true,\n    removeEventListener: true,\n    btoa: true,\n    caches: true,\n    clearInterval: true,\n    clearTimeout: true,\n    console: true,\n    decodeURI: true,\n    decodeURIComponent: true,\n    document: true,\n    encodeURI: true,\n    encodeURIComponent: true,\n    escape: true,\n    fetch: true,\n    indexedDB: true,\n    isFinite: true,\n    isNaN: true,\n    location: true,\n    navigator: true,\n    onerror: true,\n    onrejectionhandled: true,\n    onunhandledrejection: true,\n    parseFloat: true,\n    parseInt: true,\n    performance: true,\n    requestAnimationFrame: true,\n    cancelAnimationFrame: true,\n    self: true,\n    setTimeout: true,\n    setInterval: true,\n    unescape: true,\n};\n// Modify global scope by removing disallowed properties.\nexport function deleteGlobals(global) {\n    /**\n     * @param object\n     * @param property\n     * @return True if property was deleted from object. Otherwise, false.\n     */\n    const deleteUnsafe = (object, property) => {\n        if (!ALLOWLISTED_GLOBALS.hasOwnProperty(property)) {\n            try {\n                delete object[property];\n                return true;\n            }\n            catch (e) { }\n        }\n        return false;\n    };\n    // Walk up global's prototype chain and dereference non-allowlisted properties\n    // until EventTarget is reached.\n    let current = global;\n    while (current && current.constructor !== EventTarget) {\n        const deleted = [];\n        const failedToDelete = [];\n        Object.getOwnPropertyNames(current).forEach((prop) => {\n            if (deleteUnsafe(current, prop)) {\n                deleted.push(prop);\n            }\n            else {\n                failedToDelete.push(prop);\n            }\n        });\n        console.info(`Removed ${deleted.length} references from`, current, ':', deleted);\n        if (failedToDelete.length) {\n            console.info(`Failed to remove ${failedToDelete.length} references from`, current, ':', failedToDelete);\n        }\n        current = Object.getPrototypeOf(current);\n    }\n}\n//# sourceMappingURL=delete-globals.js.map","import { createStorage } from './Storage';\nexport function initializeStorage(document, localStorageInit, sessionStorageInit) {\n    const window = document.defaultView;\n    if (localStorageInit.storage) {\n        window.localStorage = createStorage(document, 0 /* StorageLocation.Local */, localStorageInit.storage);\n    }\n    else {\n        console.warn(localStorageInit.errorMsg);\n    }\n    if (sessionStorageInit.storage) {\n        window.sessionStorage = createStorage(document, 1 /* StorageLocation.Session */, sessionStorageInit.storage);\n    }\n    else {\n        console.warn(sessionStorageInit.errorMsg);\n    }\n}\n//# sourceMappingURL=initialize-storage.js.map"],"names":["store","value","mapping","has","get","set","count","push","transfer","document","mutation","phase","pending","pendingMutations","concat","Promise","resolve","then","_","nodes","buffer","Uint16Array","consumeNodes","reduce","acc","node","mutations","postMessage","_defineProperty","createStorage","location","data","storage","Object","assign","create","define","defineProperty","keys","this","length","n","key","stringValue","String","_this","forEach","c","addEventListener","removeEventListener","Map","AMP","_classCallCheck","_createClass","getState","arguments","undefined","addGlobalEventListener","messageHandler","event","message","removeGlobalEventListener","setTimeout","setState","state","stringified","JSON","stringify","e","Error","exportedFunctions","DocumentStub","defaultView","newPhase","ALLOWLISTED_GLOBALS","Array","ArrayBuffer","BigInt","BigInt64Array","BigUint64Array","Boolean","Cache","CustomEvent","DataView","Date","EvalError","Event","EventTarget","Float32Array","Float64Array","Function","Infinity","Int16Array","Int32Array","Int8Array","Intl","Math","NaN","Number","Proxy","RangeError","ReferenceError","Reflect","RegExp","Set","Symbol","SyntaxError","TextDecoder","TextEncoder","TypeError","URIError","URL","Uint32Array","Uint8Array","Uint8ClampedArray","WeakMap","WeakSet","WebAssembly","WebSocket","XMLHttpRequest","atob","btoa","caches","clearInterval","clearTimeout","console","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","escape","fetch","indexedDB","isFinite","isNaN","navigator","onerror","onrejectionhandled","onunhandledrejection","parseFloat","parseInt","performance","requestAnimationFrame","cancelAnimationFrame","self","setInterval","unescape","noop","workerDOM","bind","global","current","_loop","getOwnPropertyNames","prop","hasOwnProperty","object","getPrototypeOf","constructor","deleteGlobals","exportFunction","name","fn","b","_typeof","v","evt","callFunctionMessageHandler","msg","fnIdentifier","fnArguments","parse","index","f","apply","err","errorMessage","hydrate","strings","hydrateableNode","cssKeys","globalEventHandlerKeys","size","localStorageInit","sessionStorageInit","window","localStorage","sessionStorage"],"mappings":"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"}