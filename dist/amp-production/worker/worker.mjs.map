{"version":3,"file":"worker.mjs","sources":["../../../output/worker-thread/strings.js","../../../output/worker-thread/nodes.js","../../../output/worker-thread/MutationTransfer.js","../../../output/worker-thread/MutationObserver.js","../../../output/worker-thread/dom/elementSibling.js","../../../output/worker-thread/dom/ParentNode.js","../../../output/utils.js","../../../output/worker-thread/dom/DOMTokenList.js","../../../output/third_party/html-parser/html-parser.js","../../../output/worker-thread/dom/Element.js","../../../output/worker-thread/serializeTransferrableObject.js","../../../output/worker-thread/canvas/canvas-utils.js","../../../output/worker-thread/Storage.js","../../../output/worker-thread/long-task.js","../../../output/worker-thread/phase.js","../../../output/worker-thread/function.js","../../../output/worker-thread/dom/Node.js","../../../output/worker-thread/dom/CharacterData.js","../../../output/worker-thread/dom/Comment.js","../../../output/worker-thread/amp/delete-globals.js","../../../output/worker-thread/dom/matchElements.js","../../../output/worker-thread/dom/Attr.js","../../../output/worker-thread/css/CSSStyleDeclaration.js","../../../output/worker-thread/dom/enhanceElement.js","../../../output/worker-thread/Event.js","../../../output/transfer/TransferrableNodes.js","../../../output/worker-thread/dom/HTMLElement.js","../../../output/worker-thread/dom/HTMLAnchorElement.js","../../../output/worker-thread/dom/HTMLButtonElement.js","../../../output/worker-thread/canvas/CanvasGradient.js","../../../output/worker-thread/canvas/CanvasPattern.js","../../../output/worker-thread/canvas/OffscreenCanvasPolyfill.js","../../../output/worker-thread/canvas/FakeNativeCanvasPattern.js","../../../output/worker-thread/canvas/CanvasRenderingContext2D.js","../../../output/worker-thread/dom/HTMLCanvasElement.js","../../../output/worker-thread/dom/HTMLDataElement.js","../../../output/worker-thread/dom/HTMLDataListElement.js","../../../output/worker-thread/dom/HTMLEmbedElement.js","../../../output/worker-thread/dom/HTMLFormControlsMixin.js","../../../output/worker-thread/dom/HTMLFieldSetElement.js","../../../output/worker-thread/dom/HTMLFormElement.js","../../../output/worker-thread/dom/HTMLIFrameElement.js","../../../output/worker-thread/dom/HTMLImageElement.js","../../../output/worker-thread/dom/HTMLInputLabelsMixin.js","../../../output/worker-thread/dom/HTMLInputElement.js","../../../output/worker-thread/dom/HTMLLabelElement.js","../../../output/worker-thread/dom/HTMLLinkElement.js","../../../output/worker-thread/dom/HTMLMapElement.js","../../../output/worker-thread/dom/HTMLMeterElement.js","../../../output/worker-thread/dom/HTMLModElement.js","../../../output/worker-thread/dom/HTMLOListElement.js","../../../output/worker-thread/dom/HTMLOptionElement.js","../../../output/worker-thread/dom/HTMLProgressElement.js","../../../output/worker-thread/dom/HTMLQuoteElement.js","../../../output/worker-thread/dom/HTMLScriptElement.js","../../../output/worker-thread/dom/HTMLSelectElement.js","../../../output/worker-thread/dom/HTMLSourceElement.js","../../../output/worker-thread/dom/HTMLStyleElement.js","../../../output/worker-thread/dom/HTMLTableCellElement.js","../../../output/worker-thread/dom/HTMLTableColElement.js","../../../output/worker-thread/dom/HTMLTableElement.js","../../../output/worker-thread/dom/HTMLTableRowElement.js","../../../output/worker-thread/dom/HTMLTableSectionElement.js","../../../output/worker-thread/dom/HTMLTimeElement.js","../../../output/worker-thread/dom/Text.js","../../../output/worker-thread/dom/DocumentFragment.js","../../../output/worker-thread/dom/Document.js","../../../output/worker-thread/SyncValuePropagation.js","../../../output/worker-thread/ResizePropagation.js","../../../output/worker-thread/AnimationFrame.js","../../../output/worker-thread/dom/SVGElement.js","../../../output/worker-thread/index.amp.js","../../../output/worker-thread/amp/amp.js","../../../output/worker-thread/initialize.js","../../../output/worker-thread/initialize-storage.js"],"sourcesContent":["let count = 0;\nlet transfer = [];\nconst mapping = new Map();\n/**\n * Stores a string in mapping and returns the index of the location.\n * @param value string to store\n * @return location in map\n */\nexport function store(value) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (mapping.has(value)) {\n        // Safe to cast since we verified the mapping contains the value\n        return mapping.get(value);\n    }\n    mapping.set(value, count);\n    transfer.push(value);\n    return count++;\n}\n/**\n * Retrieve the index for a string (mostly used for tests).\n * @param value string value we need to know the index of\n * @returns index in the map for the string\n */\nexport function getForTesting(value) {\n    return mapping.get(value);\n}\nexport function getForTestingPartial(value) {\n    const found = Array.from(mapping.keys()).find((str) => str.includes(value));\n    if (found) {\n        return mapping.get(found);\n    }\n}\n/**\n * Returns strings registered but not yet transferred.\n * Side effect: Resets the transfer array to default value, to prevent passing the same values multiple times.\n */\nexport function consume() {\n    const strings = transfer;\n    transfer = [];\n    return strings;\n}\n//# sourceMappingURL=strings.js.map","import { phase } from './phase';\nlet count = 0;\nlet transfer = [];\nconst mapping = new Map();\n/**\n * Override the store for a node during the initialization phase.\n * @param node Node to store and modify with index\n * @param override Override number to use as the identifier.\n *\n * NOTE: THIS IS ONLY TO BE USED DURING INITIALIZATION.\n */\nexport function storeOverride(node, override) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (phase === 0 /* Phase.Initializing */) {\n        mapping.set((node[7 /* TransferrableKeys.index */] = override), node);\n        count = Math.max(count, override);\n    }\n    return override;\n}\n/**\n * Stores a node in mapping, and makes the index available on the Node directly.\n * @param node Node to store and modify with index\n * @return index Node was stored with in mapping\n */\nexport function store(node) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (node[7 /* TransferrableKeys.index */] !== undefined) {\n        return node[7 /* TransferrableKeys.index */];\n    }\n    mapping.set((node[7 /* TransferrableKeys.index */] = ++count), node);\n    if (phase > 0 /* Phase.Initializing */) {\n        // After Initialization, include all future dom node creation into the list for next transfer.\n        transfer.push(node);\n    }\n    return count;\n}\n/**\n * Retrieves a node based on an index.\n * @param index location in map to retrieve a Node for\n * @return either the Node represented in index position, or null if not available.\n */\nexport function get(index) {\n    // mapping has a 1 based index, since on first store we ++count before storing.\n    return (!!index && mapping.get(index)) || null;\n}\n/**\n * Returns nodes registered but not yet transferred.\n * Side effect: Resets the transfer array to default value, to prevent passing the same values multiple times.\n */\nexport function consume() {\n    const copy = transfer;\n    transfer = [];\n    return copy;\n}\n//# sourceMappingURL=nodes.js.map","import { consume as consumeNodes } from './nodes';\nimport { consume as consumeStrings } from './strings';\nimport { phase, set as setPhase } from './phase';\nlet pending = false;\nlet pendingMutations = [];\n// TODO(choumx): Change `mutation` to Array<Uint16> to prevent casting errors e.g. integer underflow, precision loss.\nexport function transfer(document, mutation) {\n    if (process.env.SERVER) {\n        return;\n    }\n    if (phase > 0 /* Phase.Initializing */ && document[58 /* TransferrableKeys.allowTransfer */]) {\n        pending = true;\n        pendingMutations = pendingMutations.concat(mutation);\n        Promise.resolve().then((_) => {\n            if (pending) {\n                const nodes = new Uint16Array(consumeNodes().reduce((acc, node) => acc.concat(node[8 /* TransferrableKeys.creationFormat */]), [])).buffer;\n                const mutations = new Uint16Array(pendingMutations).buffer;\n                document.postMessage({\n                    [54 /* TransferrableKeys.phase */]: phase,\n                    [12 /* TransferrableKeys.type */]: phase === 2 /* Phase.Mutating */ ? 3 /* MessageType.MUTATE */ : 2 /* MessageType.HYDRATE */,\n                    [37 /* TransferrableKeys.nodes */]: nodes,\n                    [41 /* TransferrableKeys.strings */]: consumeStrings(),\n                    [36 /* TransferrableKeys.mutations */]: mutations,\n                }, [nodes, mutations]);\n                pendingMutations = [];\n                pending = false;\n                setPhase(2 /* Phase.Mutating */);\n            }\n        });\n    }\n}\n//# sourceMappingURL=MutationTransfer.js.map","import { transfer } from './MutationTransfer';\nconst observers = [];\nlet pendingMutations = false;\n/**\n * @param observerTarget\n * @param target\n */\nconst matchesIndex = (observerTarget, target) => {\n    return !!observerTarget && observerTarget[7 /* TransferrableKeys.index */] === target[7 /* TransferrableKeys.index */];\n};\n/**\n * @param observer\n * @param record\n */\nconst pushMutation = (observer, record) => {\n    observer.pushRecord(record);\n    if (!pendingMutations) {\n        pendingMutations = true;\n        Promise.resolve().then(() => {\n            pendingMutations = false;\n            observers.forEach((observer) => observer.callback(observer.takeRecords()));\n        });\n    }\n};\n/**\n * @param document\n * @param record\n * @param transferable\n */\nexport function mutate(document, record, transferable) {\n    // Post-message `transferable` to the main thread to apply mutations.\n    transfer(document, transferable);\n    // The MutationRecord is only used for external callers of MutationObserver.\n    observers.forEach((observer) => {\n        for (let t = record.target; t; t = t.parentNode) {\n            if (matchesIndex(observer.target, t)) {\n                pushMutation(observer, record);\n                break;\n            }\n        }\n    });\n}\nexport class MutationObserver {\n    callback;\n    [42 /* TransferrableKeys.records */] = [];\n    target;\n    options;\n    constructor(callback) {\n        this.callback = callback;\n    }\n    /**\n     * Register the MutationObserver instance to observe a Nodes mutations.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     * @param target Node to observe DOM mutations\n     */\n    observe(target, options) {\n        this.disconnect();\n        this.target = target;\n        this.options = options || {};\n        observers.push(this);\n    }\n    /**\n     * Stop the MutationObserver instance from observing a Nodes mutations.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     */\n    disconnect() {\n        this.target = null;\n        const index = observers.indexOf(this);\n        if (index >= 0) {\n            observers.splice(index, 1);\n        }\n    }\n    /**\n     * Empties the MutationObserver instance's record queue and returns what was in there.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     * @return Mutation Records stored on this MutationObserver instance.\n     */\n    takeRecords() {\n        const records = this[42 /* TransferrableKeys.records */];\n        return records.splice(0, records.length);\n    }\n    /**\n     * NOTE: This method doesn't exist on native MutationObserver.\n     * @param record MutationRecord to store for this instance.\n     */\n    pushRecord(record) {\n        this[42 /* TransferrableKeys.records */].push(record);\n    }\n}\n//# sourceMappingURL=MutationObserver.js.map","export function getPreviousElementSibling(node) {\n    let parentNodes = node.parentNode && node.parentNode.childNodes;\n    if (!parentNodes) {\n        return null;\n    }\n    for (let i = parentNodes.indexOf(node) - 1; i >= 0; i--) {\n        let node = parentNodes[i];\n        if (node.nodeType === 1 /* NodeType.ELEMENT_NODE */) {\n            return node;\n        }\n    }\n    return null;\n}\nexport function getNextElementSibling(node) {\n    let parentNodes = node.parentNode && node.parentNode.childNodes;\n    if (!parentNodes) {\n        return null;\n    }\n    for (let i = parentNodes.indexOf(node) + 1; i < parentNodes.length; i++) {\n        let node = parentNodes[i];\n        if (node.nodeType === 1 /* NodeType.ELEMENT_NODE */) {\n            return node;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=elementSibling.js.map","import { elementPredicate, matchAttrReference, matchChildrenElements } from './matchElements';\nimport { Node } from './Node';\nimport { containsIndexOf, toLower } from '../../utils';\n/*\nNormally ParentNode is implemented as a mixin, but since the Node class is an abstract\nthis makes it hard to build a mixin that recieves a base of the representations of Node needing\nthe mixed in functionality.\n\n// Partially implemented Mixin Methods\n// Both Element.querySelector() and Element.querySelector() are only implemented for the following simple selectors:\n// - Element selectors\n// - ID selectors\n// - Class selectors\n// - Attribute selectors\n// Element.querySelector() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n// Element.querySelectorAll() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n*/\nexport class ParentNode extends Node {\n    /**\n     * Getter returning children of an Element that are Elements themselves.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/children\n     * @return Element objects that are children of this ParentNode, omitting all of its non-element nodes.\n     */\n    get children() {\n        return this.childNodes.filter(elementPredicate);\n    }\n    /**\n     * Getter returning the number of child elements of a Element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/childElementCount\n     * @return number of child elements of the given Element.\n     */\n    get childElementCount() {\n        return this.children.length;\n    }\n    /**\n     * Getter returning the first Element in Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/firstElementChild\n     * @return first childNode that is also an element.\n     */\n    get firstElementChild() {\n        return this.childNodes.find(elementPredicate) || null;\n    }\n    /**\n     * Getter returning the last Element in Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/lastElementChild\n     * @return first childNode that is also an element.\n     */\n    get lastElementChild() {\n        const children = this.children;\n        return children[children.length - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n     * @param selector the selector we are trying to match for.\n     * @return Element with matching selector.\n     */\n    querySelector(selector) {\n        const matches = querySelectorAll(this, selector);\n        return matches ? matches[0] : null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n     * @param selector the selector we are trying to match for.\n     * @return Elements with matching selector.\n     */\n    querySelectorAll(selector) {\n        return querySelectorAll(this, selector);\n    }\n}\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n * @param node the node to filter results under.\n * @param selector the selector we are trying to match for.\n * @return Element with matching selector.\n */\nfunction querySelectorAll(node, selector) {\n    // As per spec: https://dom.spec.whatwg.org/#scope-match-a-selectors-string\n    // First, parse the selector\n    const selectorBracketIndexes = [selector.indexOf('['), selector.indexOf(']')];\n    const selectorHasAttr = containsIndexOf(selectorBracketIndexes[0]) && containsIndexOf(selectorBracketIndexes[1]);\n    const elementSelector = selectorHasAttr ? selector.substring(0, selectorBracketIndexes[0]) : selector;\n    const attrSelector = selectorHasAttr ? selector.substring(selectorBracketIndexes[0], selectorBracketIndexes[1] + 1) : null;\n    // TODO(nainar): Parsing selectors is needed when we add in more complex selectors.\n    // Second, find all the matching elements on the Document\n    let matcher;\n    if (selector[0] === '[') {\n        matcher = (element) => matchAttrReference(selector, element);\n    }\n    else if (elementSelector[0] === '#') {\n        matcher = selectorHasAttr\n            ? (element) => element.id === elementSelector.substr(1) && matchAttrReference(attrSelector, element)\n            : (element) => element.id === elementSelector.substr(1);\n    }\n    else if (elementSelector[0] === '.') {\n        matcher = selectorHasAttr\n            ? (element) => element.classList.contains(elementSelector.substr(1)) && matchAttrReference(attrSelector, element)\n            : (element) => element.classList.contains(elementSelector.substr(1));\n    }\n    else {\n        matcher = selectorHasAttr\n            ? (element) => element.localName === toLower(elementSelector) && matchAttrReference(attrSelector, element)\n            : (element) => element.localName === toLower(elementSelector);\n    }\n    // Third, filter to return elements that exist within the querying element's descendants.\n    return matcher\n        ? matchChildrenElements(node[45 /* TransferrableKeys.scopingRoot */], matcher).filter((element) => node !== element && node.contains(element))\n        : [];\n}\n//# sourceMappingURL=ParentNode.js.map","export const toLower = (value) => value.toLowerCase();\nexport const toUpper = (value) => value.toUpperCase();\nexport const containsIndexOf = (pos) => pos !== -1;\nexport const keyValueString = (key, value) => `${key}=\"${value}\"`;\n//# sourceMappingURL=utils.js.map","import { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\nconst WHITESPACE_REGEX = /\\s/;\n/**\n * Synchronizes the string getter/setter with the actual DOMTokenList instance.\n * @param defineOn Element or class extension to define getter/setter pair for token list access.\n * @param accessorKey Key used to access DOMTokenList directly from specific element.\n * @param propertyName Key used to access DOMTokenList as string getter/setter.\n */\nexport function synchronizedAccessor(defineOn, accessorKey, propertyName) {\n    Object.defineProperty(defineOn.prototype, propertyName, {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return this[accessorKey].value;\n        },\n        set(value) {\n            this[accessorKey].value = value;\n        },\n    });\n}\nexport class DOMTokenList {\n    [43 /* TransferrableKeys.tokens */] = [];\n    [13 /* TransferrableKeys.target */];\n    [18 /* TransferrableKeys.attributeName */];\n    [44 /* TransferrableKeys.storeAttribute */];\n    /**\n     * The DOMTokenList interface represents a set of space-separated tokens.\n     * It is indexed beginning with 0 as with JavaScript Array objects and is case-sensitive.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList\n     * @param target Specific Element instance to modify when value is changed.\n     * @param attributeName Name of the attribute used by Element to access DOMTokenList.\n     */\n    constructor(target, attributeName) {\n        this[13 /* TransferrableKeys.target */] = target;\n        this[18 /* TransferrableKeys.attributeName */] = attributeName;\n        this[44 /* TransferrableKeys.storeAttribute */] = target[44 /* TransferrableKeys.storeAttribute */].bind(target);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/value\n     * @return string representation of tokens (space delimitted).\n     */\n    get value() {\n        return this[43 /* TransferrableKeys.tokens */].join(' ');\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/length\n     * @return integer representing the number of objects stored in the object.\n     */\n    get length() {\n        return this[43 /* TransferrableKeys.tokens */].length;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/value\n     * @param collection String of values space delimited to replace the current DOMTokenList with.\n     */\n    set value(collection) {\n        const oldValue = this.value;\n        const newValue = collection.trim();\n        // Replace current tokens with new tokens.\n        this[43 /* TransferrableKeys.tokens */].splice(0, this[43 /* TransferrableKeys.tokens */].length, ...(newValue !== '' ? newValue.split(/\\s+/) : ''));\n        this[67 /* TransferrableKeys.mutated */](oldValue, newValue);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/item\n     * @param index number from DOMTokenList entities to retrieve value of\n     * @return value stored at the index requested, or undefined if beyond known range.\n     */\n    item(index) {\n        return this[43 /* TransferrableKeys.tokens */][index];\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/contains\n     * @param token value the DOMTokenList is tested for.\n     * @return boolean indicating if the token is contained by the DOMTokenList.\n     */\n    contains(token) {\n        return this[43 /* TransferrableKeys.tokens */].includes(token);\n    }\n    /**\n     * Add a token or tokens to the list.\n     * Note: All duplicates are removed, and the first token's position with the value is preserved.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/add\n     * @param tokens each token is a string to add to a TokenList.\n     */\n    add(...tokens) {\n        const oldValue = this.value;\n        this[43 /* TransferrableKeys.tokens */].splice(0, this[43 /* TransferrableKeys.tokens */].length, ...Array.from(new Set(this[43 /* TransferrableKeys.tokens */].concat(tokens))));\n        this[67 /* TransferrableKeys.mutated */](oldValue, this.value);\n    }\n    /**\n     * Remove a token or tokens from the list.\n     * Note: All duplicates are removed, and the first token's position with the value is preserved.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/remove\n     * @param tokens each token is a string to remove from a TokenList.\n     */\n    remove(...tokens) {\n        const oldValue = this.value;\n        this[43 /* TransferrableKeys.tokens */].splice(0, this[43 /* TransferrableKeys.tokens */].length, ...Array.from(new Set(this[43 /* TransferrableKeys.tokens */].filter((token) => !tokens.includes(token)))));\n        this[67 /* TransferrableKeys.mutated */](oldValue, this.value);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/replace\n     * @param token\n     * @param newToken\n     */\n    replace(token, newToken) {\n        if (!this[43 /* TransferrableKeys.tokens */].includes(token)) {\n            return;\n        }\n        const oldValue = this.value;\n        const set = new Set(this[43 /* TransferrableKeys.tokens */]);\n        if (token !== newToken) {\n            set.delete(token);\n            if (newToken !== '') {\n                set.add(newToken);\n            }\n        }\n        this[43 /* TransferrableKeys.tokens */].splice(0, this[43 /* TransferrableKeys.tokens */].length, ...Array.from(set));\n        this[67 /* TransferrableKeys.mutated */](oldValue, this.value);\n    }\n    /**\n     * Adds or removes a token based on its presence in the token list.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/toggle\n     * @param token string to add or remove from the token list\n     * @param force changes toggle into a one way-only operation. true => token added. false => token removed.\n     * @return true if the token is in the list following mutation, false if not.\n     */\n    toggle(token, force) {\n        if (WHITESPACE_REGEX.test(token)) {\n            throw new TypeError('Uncaught DOMException');\n        }\n        if (!this[43 /* TransferrableKeys.tokens */].includes(token)) {\n            if (force === undefined || !!force) {\n                // Note, this will add the token if force is undefined (not passed into the method), or truthy.\n                this.add(token);\n            }\n            return true;\n        }\n        else if (!force) {\n            // Note, this will remove the token if force is undefined (not passed into the method), or falsey.\n            this.remove(token);\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Report tokenList mutations to MutationObserver.\n     * @param oldValue value before mutation\n     * @param value value after mutation\n     * @private\n     */\n    [67 /* TransferrableKeys.mutated */](oldValue, value) {\n        this[44 /* TransferrableKeys.storeAttribute */](this[13 /* TransferrableKeys.target */].namespaceURI, this[18 /* TransferrableKeys.attributeName */], value);\n        mutate(this[13 /* TransferrableKeys.target */].ownerDocument, {\n            type: 0 /* MutationRecordType.ATTRIBUTES */,\n            target: this[13 /* TransferrableKeys.target */],\n            attributeName: this[18 /* TransferrableKeys.attributeName */],\n            value,\n            oldValue,\n        }, [\n            0 /* TransferrableMutationType.ATTRIBUTES */,\n            this[13 /* TransferrableKeys.target */][7 /* TransferrableKeys.index */],\n            storeString(this[18 /* TransferrableKeys.attributeName */]),\n            0,\n            value !== null ? storeString(value) + 1 : 0,\n        ]);\n    }\n}\n//# sourceMappingURL=DOMTokenList.js.map","import { SVG_NAMESPACE, HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { toLower, toUpper } from '../../utils';\nfunction arr_back(arr) {\n    return arr[arr.length - 1];\n}\n// https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\nconst kMarkupPattern = /<!--([^]*)-->|<(\\/?)([a-z][-.0-9_a-z]*)([^>]*?)(\\/?)>/gi;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\nconst kAttributePattern = /(^|\\s)([^\\s\"'>\\/=]+)\\s*=\\s*(\"([^\"]+)\"|'([^']+)'|(\\S+))/gi;\nconst kSelfClosingElements = {\n    AREA: true,\n    BASE: true,\n    BR: true,\n    COL: true,\n    HR: true,\n    IMG: true,\n    INPUT: true,\n    LINK: true,\n    META: true,\n    PARAM: true,\n    SOURCE: true,\n    TRACK: true,\n    WBR: true,\n};\nconst kElementsClosedByOpening = {\n    LI: { LI: true },\n    DT: { DT: true, DD: true },\n    DD: { DD: true, DT: true },\n    P: {\n        ADDRESS: true,\n        ARTICLE: true,\n        ASIDE: true,\n        BLOCKQUOTE: true,\n        DETAILS: true,\n        DIV: true,\n        DL: true,\n        FIELDSET: true,\n        FIGCAPTION: true,\n        FIGURE: true,\n        FOOTER: true,\n        FORM: true,\n        H1: true,\n        H2: true,\n        H3: true,\n        H4: true,\n        H5: true,\n        H6: true,\n        HEADER: true,\n        HR: true,\n        MAIN: true,\n        NAV: true,\n        OL: true,\n        P: true,\n        PRE: true,\n        SECTION: true,\n        TABLE: true,\n        UL: true,\n    },\n    RT: { RT: true, RP: true },\n    RP: { RT: true, RP: true },\n    OPTGROUP: { OPTGROUP: true },\n    OPTION: { OPTION: true, OPTGROUP: true },\n    THEAD: { TBODY: true, TFOOT: true },\n    TBODY: { TBODY: true, TFOOT: true },\n    TR: { TR: true },\n    TD: { TD: true, TH: true },\n    TH: { TD: true, TH: true },\n};\nconst kElementsClosedByClosing = {\n    LI: { UL: true, OL: true },\n    A: { DIV: true },\n    B: { DIV: true },\n    I: { DIV: true },\n    P: { DIV: true },\n    TD: { TR: true, TABLE: true },\n    TH: { TR: true, TABLE: true },\n};\nconst kBlockTextElements = {\n    SCRIPT: true,\n    NOSCRIPT: true,\n    STYLE: true,\n    PRE: true,\n};\n/**\n * Parses HTML and returns a root element\n * Parse a chuck of HTML source.\n * @param  {string} data HTML in string format.\n * @param {!Element} root The element to use as root.\n * @return {Element}      root element\n */\nexport function parse(data, rootElement) {\n    const ownerDocument = rootElement.ownerDocument;\n    const root = ownerDocument.createElementNS(rootElement.namespaceURI, rootElement.localName);\n    let currentParent = root;\n    let currentNamespace = root.namespaceURI;\n    const stack = [root];\n    let lastTextPos = 0;\n    let match;\n    data = '<q>' + data + '</q>';\n    const tagsClosed = [];\n    if (currentNamespace !== SVG_NAMESPACE && currentNamespace !== HTML_NAMESPACE) {\n        throw new Error('Namespace not supported: ' + currentNamespace);\n    }\n    while ((match = kMarkupPattern.exec(data))) {\n        const commentContents = match[1]; // <!--contents-->\n        const beginningSlash = match[2]; // ... </ ...\n        const tagName = match[3];\n        const matchAttributes = match[4];\n        const endSlash = match[5]; // ... /> ...\n        if (lastTextPos < match.index) {\n            // if has content\n            const text = data.slice(lastTextPos, match.index);\n            currentParent.appendChild(ownerDocument.createTextNode(decodeEntities(text)));\n        }\n        lastTextPos = kMarkupPattern.lastIndex;\n        if (commentContents !== undefined) {\n            // this is a comment\n            currentParent.appendChild(ownerDocument.createComment(commentContents));\n            continue;\n        }\n        const normalizedTagName = toUpper(tagName);\n        if (normalizedTagName === 'SVG') {\n            currentNamespace = beginningSlash ? HTML_NAMESPACE : SVG_NAMESPACE;\n        }\n        if (!beginningSlash) {\n            // not </ tags\n            if (!endSlash && kElementsClosedByOpening[currentParent.tagName]) {\n                if (kElementsClosedByOpening[currentParent.tagName][normalizedTagName]) {\n                    stack.pop();\n                    currentParent = arr_back(stack);\n                }\n            }\n            const childToAppend = ownerDocument.createElementNS(currentNamespace, currentNamespace === HTML_NAMESPACE ? toLower(tagName) : tagName);\n            for (let attMatch; (attMatch = kAttributePattern.exec(matchAttributes));) {\n                const attrName = attMatch[2];\n                const attrValue = attMatch[4] || attMatch[5] || attMatch[6];\n                childToAppend.setAttribute(attrName, attrValue);\n            }\n            currentParent = currentParent.appendChild(childToAppend);\n            stack.push(currentParent);\n            if (kBlockTextElements[normalizedTagName]) {\n                // a little test to find next </script> or </style> ...\n                const closeMarkup = '</' + toLower(normalizedTagName) + '>';\n                const index = data.indexOf(closeMarkup, kMarkupPattern.lastIndex);\n                if (index == -1) {\n                    throw new Error('Close markup not found.');\n                }\n                else {\n                    kMarkupPattern.lastIndex = index;\n                }\n            }\n        }\n        if (tagName === 'foreignObject') {\n            currentNamespace = beginningSlash ? SVG_NAMESPACE : HTML_NAMESPACE;\n        }\n        if (beginningSlash || endSlash || kSelfClosingElements[normalizedTagName]) {\n            // </ or /> or <br> etc.\n            while (true) {\n                if (stack.length <= 1) {\n                    break;\n                }\n                if (toUpper(currentParent.nodeName) == normalizedTagName) {\n                    stack.pop();\n                    currentParent = arr_back(stack);\n                    break;\n                }\n                else {\n                    // Trying to close current tag, and move on\n                    if (kElementsClosedByClosing[currentParent.tagName]) {\n                        if (kElementsClosedByClosing[currentParent.tagName][normalizedTagName]) {\n                            stack.pop();\n                            currentParent = arr_back(stack);\n                            continue;\n                        }\n                    }\n                    // Use aggressive strategy to handle unmatching markups.\n                    break;\n                }\n            }\n        }\n    }\n    for (const node of stack) {\n        if (tagsClosed[tagsClosed.length - 1] == node.nodeName) {\n            stack.pop();\n            tagsClosed.pop();\n            currentParent = arr_back(stack);\n        }\n        else\n            break;\n    }\n    const valid = stack.length === 1;\n    if (!valid) {\n        throw new Error('Attempting to parse invalid HTML content.');\n    }\n    const wrapper = root.firstChild;\n    if (wrapper) {\n        wrapper.parentNode = null;\n        wrapper.childNodes.forEach((node) => {\n            node.parentNode = null;\n        });\n        return wrapper;\n    }\n    throw new Error('Attempting to parse invalid HTML.');\n}\n/**\n * Decodes HTML Entities.\n * Currently only works for numeric entities, as well as the 4 named entities\n * required for encoding HTML: &, \", <, >.\n * See https://developer.mozilla.org/en-US/docs/Glossary/Entity.\n *\n * TODO: create solution for other named entities.\n */\nconst RESERVED_CHARACTERS = {\n    __proto__: null,\n    amp: '&',\n    lt: '<',\n    gt: '>',\n    quot: '\"',\n};\nfunction decodeEntities(html) {\n    return html.replace(/&(?:(#x?[\\da-f]+)|([\\w]+));?/gi, function (s, numericEntity, namedEntity) {\n        // Numeric entity\n        if (numericEntity) {\n            let code = numericEntity.charAt(1).toLowerCase() === 'x' ? parseInt(numericEntity.substr(2), 16) : parseInt(numericEntity.substr(1), 10);\n            // 1114111 is the largest valid unicode codepoint.\n            if (isNaN(code) || code > 1114111) {\n                return s;\n            }\n            return String.fromCodePoint(code) || s;\n        }\n        // Named entity. Only HTML reserved entities are currently supported.\n        if (namedEntity) {\n            return RESERVED_CHARACTERS[namedEntity.toLowerCase()] || s;\n        }\n        return s;\n    });\n}\n//# sourceMappingURL=html-parser.js.map","import { ParentNode } from './ParentNode';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nimport { toString as attrsToString, matchPredicate as matchAttrPredicate } from './Attr';\nimport { mutate } from '../MutationObserver';\nimport { toLower, toUpper } from '../../utils';\nimport { CSSStyleDeclaration } from '../css/CSSStyleDeclaration';\nimport { matchChildrenElements } from './matchElements';\nimport { reflectProperties } from './enhanceElement';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\nimport { HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { parse } from '../../third_party/html-parser/html-parser';\nimport { propagate } from './Node';\nimport { Event } from '../Event';\nimport { getNextElementSibling, getPreviousElementSibling } from './elementSibling';\nexport const NS_NAME_TO_CLASS = {};\nexport const registerSubclass = (localName, subclass, namespace = HTML_NAMESPACE) => (NS_NAME_TO_CLASS[`${namespace}:${localName}`] = subclass);\nexport function definePropertyBackedAttributes(defineOn, attributes) {\n    const sub = Object.create(defineOn[46 /* TransferrableKeys.propertyBackedAttributes */]);\n    defineOn[46 /* TransferrableKeys.propertyBackedAttributes */] = Object.assign(sub, attributes);\n}\n/**\n * There are six kinds of elements, each having different start/close tag semantics.\n * @see https://html.spec.whatwg.org/multipage/syntax.html#elements-2\n */\nvar ElementKind;\n(function (ElementKind) {\n    ElementKind[ElementKind[\"NORMAL\"] = 0] = \"NORMAL\";\n    ElementKind[ElementKind[\"VOID\"] = 1] = \"VOID\";\n    // The following element kinds have no special handling in worker-dom yet\n    // and are lumped into the NORMAL kind.\n    /*\n    FOREIGN,\n    TEMPLATE,\n    RAW_TEXT,\n    ESCAPABLE_RAW,\n    */\n})(ElementKind || (ElementKind = {}));\n/**\n * @see https://html.spec.whatwg.org/multipage/syntax.html#void-elements\n */\nconst VOID_ELEMENTS = ['AREA', 'BASE', 'BR', 'COL', 'EMBED', 'HR', 'IMG', 'INPUT', 'LINK', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR'];\nexport class Element extends ParentNode {\n    _classList;\n    static [46 /* TransferrableKeys.propertyBackedAttributes */] = {\n        class: [(el) => el.classList.value, (el, value) => (el.classList.value = value)],\n        style: [(el) => el.cssText, (el, value) => (el.cssText = value)],\n    };\n    localName;\n    attributes = [];\n    namespaceURI;\n    style_;\n    /**\n     * Element \"kind\" dictates certain behaviors e.g. start/end tag semantics.\n     * @see https://html.spec.whatwg.org/multipage/syntax.html#elements-2\n     */\n    kind;\n    constructor(nodeType, localName, namespaceURI, ownerDocument, overrideIndex) {\n        super(nodeType, toUpper(localName), ownerDocument, overrideIndex);\n        this.namespaceURI = namespaceURI || HTML_NAMESPACE;\n        this.localName = localName;\n        this.kind = VOID_ELEMENTS.includes(this.tagName) ? ElementKind.VOID : ElementKind.NORMAL;\n        this[8 /* TransferrableKeys.creationFormat */] = [\n            this[7 /* TransferrableKeys.index */],\n            this.nodeType,\n            storeString(this.localName),\n            0,\n            this.namespaceURI === null ? 0 : storeString(this.namespaceURI),\n        ];\n    }\n    // We lazily instantiate the CSSStyleDeclaration to keep element creation cheap\n    // See https://github.com/ampproject/worker-dom/pull/1096 for context.\n    get style() {\n        if (!this.style_) {\n            this.style_ = new CSSStyleDeclaration(this);\n        }\n        return this.style_;\n    }\n    // Unimplemented properties\n    // Element.clientHeight – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientHeight\n    // Element.clientLeft – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientLeft\n    // Element.clientTop – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientTop\n    // Element.clientWidth – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientWidth\n    // set Element.innerHTML – https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n    // Element.prefix – https://developer.mozilla.org/en-US/docs/Web/API/Element/prefix\n    // Element.scrollHeight – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight\n    // Element.scrollLeft – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeft\n    // Element.scrollLeftMax – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeftMax\n    // Element.scrollTop – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTop\n    // Element.scrollTopMax – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTopMax\n    // Element.scrollWidth – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollWidth\n    // Element.shadowRoot – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/shadowRoot\n    // Element.slot – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/slot\n    // Element.tabStop – https://developer.mozilla.org/en-US/docs/Web/API/Element/tabStop\n    // Element.undoManager – https://developer.mozilla.org/en-US/docs/Web/API/Element/undoManager\n    // Element.undoScope – https://developer.mozilla.org/en-US/docs/Web/API/Element/undoScope\n    // Unimplemented Methods\n    // Element.attachShadow() – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow\n    // Element.animate() – https://developer.mozilla.org/en-US/docs/Web/API/Element/animate\n    // Element.closest() – https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n    // Element.getAttributeNames() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNames\n    // Element.getBoundingClientRect() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    // Element.getClientRects() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getClientRects\n    // Element.getElementsByTagNameNS() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagNameNS\n    // Element.insertAdjacentElement() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentElement\n    // Element.insertAdjacentHTML() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentHTML\n    // Element.insertAdjacentText() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentText\n    // Element.matches() – https://developer.mozilla.org/en-US/docs/Web/API/Element/matches\n    // Element.releasePointerCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/releasePointerCapture\n    // Element.requestFullscreen() – https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n    // Element.requestPointerLock() – https://developer.mozilla.org/en-US/docs/Web/API/Element/requestPointerLock\n    // Element.scrollIntoView() – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n    // Element.setCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/setCapture\n    // Element.setPointerCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/setPointerCapture\n    // Partially implemented Mixin Methods\n    // Both Element.querySelector() and Element.querySelector() are only implemented for the following simple selectors:\n    // - Element selectors\n    // - ID selectors\n    // - Class selectors\n    // - Attribute selectors\n    // Element.querySelector() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n    // Element.querySelectorAll() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n    // Mixins not implemented\n    // Slotable.assignedSlot – https://developer.mozilla.org/en-US/docs/Web/API/Slotable/assignedSlot\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/previousElementSibling\n     * Returns the Element immediately prior to the specified one in its parent's children list,\n     * or null if the specified element is the first one in the list.\n     */\n    get previousElementSibling() {\n        return getPreviousElementSibling(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/nextElementSibling\n     * Returns the Element immediately following the specified one in its parent's children list,\n     * or null if the specified element is the last one in the list.\n     */\n    get nextElementSibling() {\n        return getNextElementSibling(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/outerHTML\n     * @return string representation of serialized HTML describing the Element and its descendants.\n     */\n    get outerHTML() {\n        const tag = this.localName || this.tagName;\n        const start = `<${[tag, attrsToString(this.attributes)].join(' ').trim()}>`;\n        const contents = this.innerHTML;\n        if (!contents) {\n            if (this.kind === ElementKind.VOID) {\n                // Void elements e.g. <input> only have a start tag (unless children are added programmatically).\n                // https://html.spec.whatwg.org/multipage/syntax.html#void-elements\n                return start;\n            }\n        }\n        return start + contents + `</${tag}>`;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n     * @return string representation of serialized HTML describing the Element's descendants.\n     */\n    get innerHTML() {\n        const childNodes = this.childNodes;\n        if (childNodes.length) {\n            return childNodes\n                .map((child) => {\n                switch (child.nodeType) {\n                    case 3 /* NodeType.TEXT_NODE */:\n                        return child.textContent;\n                    case 8 /* NodeType.COMMENT_NODE */:\n                        return `<!--${child.textContent}-->`;\n                    default:\n                        return child.outerHTML;\n                }\n            })\n                .join('');\n        }\n        return '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n     * @param html The raw html string to parse.\n     */\n    set innerHTML(html) {\n        const root = parse(html, this);\n        // remove previous children\n        this.childNodes.forEach((n) => {\n            propagate(n, 'isConnected', false);\n            propagate(n, 45 /* TransferrableKeys.scopingRoot */, n);\n        });\n        mutate(this.ownerDocument, {\n            removedNodes: this.childNodes,\n            type: 2 /* MutationRecordType.CHILD_LIST */,\n            target: this,\n        }, [\n            2 /* TransferrableMutationType.CHILD_LIST */,\n            this[7 /* TransferrableKeys.index */],\n            0,\n            0,\n            0,\n            this.childNodes.length,\n            ...this.childNodes.map((node) => node[7 /* TransferrableKeys.index */]),\n        ]);\n        this.childNodes = [];\n        // add new children\n        root.childNodes.forEach((child) => this.appendChild(child));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @param text new text replacing all childNodes content.\n     */\n    set textContent(text) {\n        // TODO(KB): Investigate removing all children in a single .splice to childNodes.\n        this.childNodes.slice().forEach((child) => child.remove());\n        this.appendChild(this.ownerDocument.createTextNode(text));\n    }\n    /**\n     * Getter returning the text representation of Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @return text from all childNodes.\n     */\n    get textContent() {\n        return this.getTextContent();\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/tagName\n     * @return string tag name (i.e 'div')\n     */\n    get tagName() {\n        return this.nodeName;\n    }\n    /**\n     * Sets the value of an attribute on this element using a null namespace.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute\n     * @param name attribute name\n     * @param value attribute value\n     */\n    setAttribute(name, value) {\n        this.setAttributeNS(HTML_NAMESPACE, name, value);\n    }\n    /**\n     * Get the value of an attribute on this Element with the null namespace.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute\n     * @param name attribute name\n     * @return value of a specified attribute on the element, or null if the attribute doesn't exist.\n     */\n    getAttribute(name) {\n        return this.getAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * Remove an attribute from this element in the null namespace.\n     *\n     * Method returns void, so it is not chainable.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute\n     * @param name attribute name\n     */\n    removeAttribute(name) {\n        this.removeAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttribute\n     * @param name attribute name\n     * @return Boolean indicating if the element has the specified attribute.\n     */\n    hasAttribute(name) {\n        return this.hasAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttributes\n     * @return Boolean indicating if the element has any attributes.\n     */\n    hasAttributes() {\n        return this.attributes.length > 0;\n    }\n    /**\n     * Sets the value of an attribute on this Element with the provided namespace.\n     *\n     * If the attribute already exists, the value is updated; otherwise a new attribute is added with the specified name and value.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttributeNS\n     * @param namespaceURI\n     * @param name attribute name\n     * @param value attribute value\n     */\n    setAttributeNS(namespaceURI, name, value) {\n        const valueAsString = String(value);\n        const propertyBacked = this.constructor[46 /* TransferrableKeys.propertyBackedAttributes */][name];\n        if (propertyBacked !== undefined) {\n            if (!this.attributes.find(matchAttrPredicate(namespaceURI, name))) {\n                this.attributes.push({\n                    namespaceURI,\n                    name,\n                    value: valueAsString,\n                });\n            }\n            propertyBacked[1](this, valueAsString);\n            return;\n        }\n        const oldValue = this[44 /* TransferrableKeys.storeAttribute */](namespaceURI, name, valueAsString);\n        mutate(this.ownerDocument, {\n            type: 0 /* MutationRecordType.ATTRIBUTES */,\n            target: this,\n            attributeName: name,\n            attributeNamespace: namespaceURI,\n            value: valueAsString,\n            oldValue,\n        }, [\n            0 /* TransferrableMutationType.ATTRIBUTES */,\n            this[7 /* TransferrableKeys.index */],\n            storeString(name),\n            storeString(namespaceURI),\n            value !== null ? storeString(valueAsString) + 1 : 0,\n        ]);\n    }\n    [44 /* TransferrableKeys.storeAttribute */](namespaceURI, name, value) {\n        const attr = this.attributes.find(matchAttrPredicate(namespaceURI, name));\n        const oldValue = (attr && attr.value) || '';\n        if (attr) {\n            attr.value = value;\n        }\n        else {\n            this.attributes.push({\n                namespaceURI,\n                name,\n                value,\n            });\n        }\n        return oldValue;\n    }\n    /**\n     * Get the value of an attribute on this Element with the specified namespace.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     * @return value of a specified attribute on the element, or null if the attribute doesn't exist.\n     */\n    getAttributeNS(namespaceURI, name) {\n        const attr = this.attributes.find(matchAttrPredicate(namespaceURI, name));\n        if (attr) {\n            const propertyBacked = this.constructor[46 /* TransferrableKeys.propertyBackedAttributes */][name];\n            return propertyBacked !== undefined ? propertyBacked[0](this) : attr.value;\n        }\n        return null;\n    }\n    /**\n     * Remove an attribute from this element in the specified namespace.\n     *\n     * Method returns void, so it is not chainable.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     */\n    removeAttributeNS(namespaceURI, name) {\n        const index = this.attributes.findIndex(matchAttrPredicate(namespaceURI, name));\n        if (index >= 0) {\n            const oldValue = this.attributes[index].value;\n            this.attributes.splice(index, 1);\n            mutate(this.ownerDocument, {\n                type: 0 /* MutationRecordType.ATTRIBUTES */,\n                target: this,\n                attributeName: name,\n                attributeNamespace: namespaceURI,\n                oldValue,\n            }, [\n                0 /* TransferrableMutationType.ATTRIBUTES */,\n                this[7 /* TransferrableKeys.index */],\n                storeString(name),\n                storeString(namespaceURI),\n                0, // 0 means no value\n            ]);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttributeNS\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     * @return Boolean indicating if the element has the specified attribute.\n     */\n    hasAttributeNS(namespaceURI, name) {\n        return this.attributes.some(matchAttrPredicate(namespaceURI, name));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByClassName\n     * @param names contains one more more classnames to match on. Multiples are space seperated, indicating an AND operation.\n     * @return Element array with matching classnames\n     */\n    getElementsByClassName(names) {\n        const inputClassList = names.split(' ');\n        // TODO(KB) – Compare performance of [].some(value => DOMTokenList.contains(value)) and regex.\n        // const classRegex = new RegExp(classNames.split(' ').map(name => `(?=.*${name})`).join(''));\n        return matchChildrenElements(this, (element) => inputClassList.some((inputClassName) => element.classList.contains(inputClassName)));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagName\n     * @param tagName the qualified name to look for. The special string \"*\" represents all elements.\n     * @return Element array with matching tagnames\n     */\n    getElementsByTagName(tagName) {\n        const lowerTagName = toLower(tagName);\n        return matchChildrenElements(this, tagName === '*'\n            ? (_) => true\n            : (element) => (element.namespaceURI === HTML_NAMESPACE ? element.localName === lowerTagName : element.tagName === tagName));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByName\n     * @param name value of name attribute elements must have to be returned\n     * @return Element array with matching name attributes\n     */\n    getElementsByName(name) {\n        const stringName = '' + name;\n        return matchChildrenElements(this, (element) => element.getAttribute('name') === stringName);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @param deep boolean determines if the clone should include a recursive copy of all childNodes.\n     * @return Element containing all current attributes and potentially childNode clones of the Element requested to be cloned.\n     */\n    cloneNode(deep = false) {\n        const clone = this.ownerDocument.createElementNS(this.namespaceURI, this.namespaceURI === HTML_NAMESPACE ? toLower(this.tagName) : this.tagName);\n        this.attributes.forEach((attr) => clone.setAttribute(attr.name, attr.value));\n        if (deep) {\n            this.childNodes.forEach((child) => clone.appendChild(child.cloneNode(deep)));\n        }\n        return clone;\n    }\n    /**\n     * Return the ClientRect for an Element once determined by the main thread.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n     * @return Promise<ClientRect>\n     *\n     * Note: Edge and IE11 do not return the x/y value, but top/left are equivalent. Normalize the values here.\n     */\n    getBoundingClientRectAsync() {\n        const defaultValue = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0,\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n        return new Promise((resolve) => {\n            const messageHandler = ({ data }) => {\n                if (data[12 /* TransferrableKeys.type */] === 6 /* MessageType.GET_BOUNDING_CLIENT_RECT */ &&\n                    data[13 /* TransferrableKeys.target */][0] === this[7 /* TransferrableKeys.index */]) {\n                    this.ownerDocument.removeGlobalEventListener('message', messageHandler);\n                    const transferredBoundingClientRect = data[38 /* TransferrableKeys.data */];\n                    resolve({\n                        top: transferredBoundingClientRect[0],\n                        right: transferredBoundingClientRect[1],\n                        bottom: transferredBoundingClientRect[2],\n                        left: transferredBoundingClientRect[3],\n                        width: transferredBoundingClientRect[4],\n                        height: transferredBoundingClientRect[5],\n                        x: transferredBoundingClientRect[0],\n                        y: transferredBoundingClientRect[3],\n                    });\n                }\n            };\n            if (!this.ownerDocument.addGlobalEventListener || !this.isConnected) {\n                // Elements run within Node runtimes are missing addEventListener as a global.\n                // In this case, treat the return value the same as a disconnected node.\n                resolve(defaultValue);\n            }\n            else {\n                this.ownerDocument.addGlobalEventListener('message', messageHandler);\n                transfer(this.ownerDocument, [5 /* TransferrableMutationType.GET_BOUNDING_CLIENT_RECT */, this[7 /* TransferrableKeys.index */]]);\n                setTimeout(resolve, 500, defaultValue); // TODO: Why a magical constant, define and explain.\n            }\n        });\n    }\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/click\n    click() {\n        const event = new Event('click', {});\n        event.target = this;\n        this.dispatchEvent(event);\n    }\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n    scrollIntoView() {\n        if (this.isConnected) {\n            transfer(this.ownerDocument, [14 /* TransferrableMutationType.SCROLL_INTO_VIEW */, this[7 /* TransferrableKeys.index */]]);\n        }\n    }\n    get classList() {\n        return this._classList || (this._classList = new DOMTokenList(this, 'class'));\n    }\n}\nsynchronizedAccessor(Element, 'classList', 'className');\nreflectProperties([{ id: [''] }], Element);\n//# sourceMappingURL=Element.js.map","import { store } from './strings';\nconst f32 = new Float32Array(1);\nconst u16 = new Uint16Array(f32.buffer);\nfunction isSmallInt(num) {\n    u16[0] = num;\n    // If the Uint16Array doesn't coerce it to another value, that means it fits\n    // into a Uint16Array.\n    return u16[0] === num;\n}\n/**\n * Serializes arguments into a Uint16 compatible format.\n *\n * The serialization format uses a variable length tuple, with the first item\n * being the encoded representation's type and any number of values afterwards.\n *\n * @param args The arguments to serialize\n */\nexport function serializeTransferrableObject(args) {\n    const serialized = [];\n    for (let i = 0; i < args.length; i++) {\n        const arg = args[i];\n        if (typeof arg === 'number') {\n            if (isSmallInt(arg)) {\n                serialized.push(1 /* TransferrableObjectType.SmallInt */, arg);\n            }\n            else {\n                f32[0] = arg;\n                serialized.push(2 /* TransferrableObjectType.Float */, u16[0], u16[1]);\n            }\n            continue;\n        }\n        if (typeof arg === 'string') {\n            serialized.push(3 /* TransferrableObjectType.String */, store(arg));\n            continue;\n        }\n        if (Array.isArray(arg)) {\n            serialized.push(4 /* TransferrableObjectType.Array */, arg.length);\n            const serializedArray = serializeTransferrableObject(arg);\n            for (let i = 0; i < serializedArray.length; i++) {\n                serialized.push(serializedArray[i]);\n            }\n            continue;\n        }\n        if (typeof arg === 'object') {\n            const serializedObject = arg[68 /* TransferrableKeys.serializeAsTransferrableObject */]();\n            for (let i = 0; i < serializedObject.length; i++) {\n                serialized.push(serializedObject[i]);\n            }\n            continue;\n        }\n        throw new Error('Cannot serialize argument.');\n    }\n    return serialized;\n}\n//# sourceMappingURL=serializeTransferrableObject.js.map","import { transfer } from '../MutationTransfer';\nlet indexTracker = 0;\nexport function retrieveImageBitmap(image, canvas) {\n    const callIndex = indexTracker++;\n    const document = canvas.ownerDocument;\n    return new Promise((resolve) => {\n        const messageHandler = ({ data }) => {\n            if (data[12 /* TransferrableKeys.type */] === 10 /* MessageType.IMAGE_BITMAP_INSTANCE */ && data[73 /* TransferrableKeys.callIndex */] === callIndex) {\n                document.removeGlobalEventListener('message', messageHandler);\n                const transferredImageBitmap = data[38 /* TransferrableKeys.data */];\n                resolve(transferredImageBitmap);\n            }\n        };\n        if (!document.addGlobalEventListener) {\n            throw new Error('addGlobalEventListener is not defined.');\n        }\n        else {\n            document.addGlobalEventListener('message', messageHandler);\n            transfer(canvas.ownerDocument, [11 /* TransferrableMutationType.IMAGE_BITMAP_INSTANCE */, image[7 /* TransferrableKeys.index */], callIndex]);\n        }\n    });\n}\n//# sourceMappingURL=canvas-utils.js.map","import { store } from './strings';\nimport { transfer } from './MutationTransfer';\n/**\n * @param document\n * @param location\n * @param data\n */\nexport function createStorage(document, location, data) {\n    const storage = Object.assign(Object.create(null), data);\n    // Define properties on a prototype-less object instead of a class so that\n    // it behaves more like normal objects, e.g. bracket notation and JSON.stringify.\n    const define = Object.defineProperty;\n    define(storage, 'length', {\n        get() {\n            return Object.keys(this).length;\n        },\n    });\n    define(storage, 'key', {\n        value(n) {\n            const keys = Object.keys(this);\n            return n >= 0 && n < keys.length ? keys[n] : null;\n        },\n    });\n    define(storage, 'getItem', {\n        value(key) {\n            const value = this[key];\n            return value ? value : null;\n        },\n    });\n    define(storage, 'setItem', {\n        value(key, value) {\n            const stringValue = String(value);\n            this[key] = stringValue;\n            transfer(document, [12 /* TransferrableMutationType.STORAGE */, 2 /* GetOrSet.SET */, location, store(key) + 1, store(stringValue) + 1]);\n        },\n    });\n    define(storage, 'removeItem', {\n        value(key) {\n            delete this[key];\n            transfer(document, [\n                12 /* TransferrableMutationType.STORAGE */,\n                2 /* GetOrSet.SET */,\n                location,\n                store(key) + 1,\n                0, // value == 0 represents deletion.\n            ]);\n        },\n    });\n    define(storage, 'clear', {\n        value() {\n            Object.keys(this).forEach((key) => {\n                delete this[key];\n            });\n            transfer(document, [\n                12 /* TransferrableMutationType.STORAGE */,\n                2 /* GetOrSet.SET */,\n                location,\n                0,\n                0, // value == 0 represents deletion.\n            ]);\n        },\n    });\n    return storage;\n}\n//# sourceMappingURL=Storage.js.map","import { transfer } from './MutationTransfer';\nexport function wrap(target, func) {\n    return function () {\n        return execute(target, Promise.resolve(func.apply(null, arguments)));\n    };\n}\nfunction execute(target, promise) {\n    // Start the task.\n    transfer(target.ownerDocument, [6 /* TransferrableMutationType.LONG_TASK_START */, target[7 /* TransferrableKeys.index */]]);\n    return promise.then((result) => {\n        // Complete the task.\n        transfer(target.ownerDocument, [7 /* TransferrableMutationType.LONG_TASK_END */, target[7 /* TransferrableKeys.index */]]);\n        return result;\n    }, (reason) => {\n        // Complete the task.\n        transfer(target.ownerDocument, [7 /* TransferrableMutationType.LONG_TASK_END */, target[7 /* TransferrableKeys.index */]]);\n        throw reason;\n    });\n}\n//# sourceMappingURL=long-task.js.map","export let phase = 0 /* Phase.Initializing */;\nexport const set = (newPhase) => (phase = newPhase);\n//# sourceMappingURL=phase.js.map","import { transfer } from './MutationTransfer';\nimport { store } from './strings';\nconst exportedFunctions = {};\nexport function callFunctionMessageHandler(event, document) {\n    const msg = event.data;\n    if (msg[12 /* TransferrableKeys.type */] !== 12 /* MessageType.FUNCTION */) {\n        return;\n    }\n    const functionMessage = msg;\n    const fnIdentifier = functionMessage[77 /* TransferrableKeys.functionIdentifier */];\n    const fnArguments = JSON.parse(functionMessage[78 /* TransferrableKeys.functionArguments */]);\n    const index = functionMessage[7 /* TransferrableKeys.index */];\n    const fn = exportedFunctions[fnIdentifier];\n    if (!fn) {\n        transfer(document, [\n            13 /* TransferrableMutationType.FUNCTION_CALL */,\n            2 /* ResolveOrReject.REJECT */,\n            index,\n            store(JSON.stringify(`[worker-dom]: Exported function \"${fnIdentifier}\" could not be found.`)),\n        ]);\n        return;\n    }\n    Promise.resolve(fn) // Forcing promise flows allows us to skip a try/catch block.\n        .then((f) => f.apply(null, fnArguments))\n        .then((value) => {\n        transfer(document, [13 /* TransferrableMutationType.FUNCTION_CALL */, 1 /* ResolveOrReject.RESOLVE */, index, store(JSON.stringify(value))]);\n    }, (err) => {\n        const errorMessage = JSON.stringify(err.message || err);\n        transfer(document, [\n            13 /* TransferrableMutationType.FUNCTION_CALL */,\n            2 /* ResolveOrReject.REJECT */,\n            index,\n            store(JSON.stringify(`[worker-dom]: Function \"${fnIdentifier}\" threw: \"${errorMessage}\"`)),\n        ]);\n    });\n}\nexport function exportFunction(name, fn) {\n    if (!name || name === '') {\n        throw new Error(`[worker-dom]: Attempt to export function was missing an identifier.`);\n    }\n    if (typeof fn !== 'function') {\n        throw new Error(`[worker-dom]: Attempt to export non-function failed: (\"${name}\", ${typeof fn}).`);\n    }\n    if (name in exportedFunctions) {\n        throw new Error(`[worker-dom]: Attempt to re-export function failed: \"${name}\".`);\n    }\n    exportedFunctions[name] = fn;\n}\nexport function resetForTesting() {\n    for (const key of Object.keys(exportedFunctions)) {\n        delete exportedFunctions[key];\n    }\n}\n//# sourceMappingURL=function.js.map","import { store as storeNodeMapping, storeOverride as storeOverrideNodeMapping } from '../nodes';\nimport { toLower } from '../../utils';\nimport { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\n/**\n * Propagates a property change for a Node to itself and all childNodes.\n * @param node Node to start applying change to\n * @param property Property to modify\n * @param value New value to apply\n */\nexport const propagate = (node, property, value) => {\n    node[property] = value;\n    node.childNodes.forEach((child) => propagate(child, property, value));\n};\n// https://developer.mozilla.org/en-US/docs/Web/API/Node\n// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\n//\n// Please note, in this implmentation Node doesn't extend EventTarget.\n// This is intentional to reduce the number of classes.\nexport class Node {\n    ownerDocument; // TODO(choumx): Should be a Document.\n    // https://drafts.csswg.org/selectors-4/#scoping-root\n    [45 /* TransferrableKeys.scopingRoot */];\n    nodeType;\n    nodeName;\n    childNodes = [];\n    parentNode = null;\n    isConnected = false;\n    [7 /* TransferrableKeys.index */];\n    [9 /* TransferrableKeys.transferredFormat */];\n    [8 /* TransferrableKeys.creationFormat */];\n    [10 /* TransferrableKeys.handlers */] = {};\n    constructor(nodeType, nodeName, ownerDocument, overrideIndex) {\n        this.nodeType = nodeType;\n        this.nodeName = nodeName;\n        this.ownerDocument = ownerDocument || this;\n        this[45 /* TransferrableKeys.scopingRoot */] = this;\n        if (process.env.SERVER) {\n            return;\n        }\n        this[7 /* TransferrableKeys.index */] = overrideIndex ? storeOverrideNodeMapping(this, overrideIndex) : storeNodeMapping(this);\n        this[9 /* TransferrableKeys.transferredFormat */] = [this[7 /* TransferrableKeys.index */]];\n    }\n    // Unimplemented Properties\n    // Node.baseURI – https://developer.mozilla.org/en-US/docs/Web/API/Node/baseURI\n    // Unimplemented Methods\n    // Node.compareDocumentPosition() – https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n    // Node.getRootNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/getRootNode\n    // Node.isDefaultNamespace() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isDefaultNamespace\n    // Node.isEqualNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isEqualNode\n    // Node.isSameNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isSameNode\n    // Node.lookupPrefix() – https://developer.mozilla.org/en-US/docs/Web/API/Node/lookupPrefix\n    // Node.lookupNamespaceURI() – https://developer.mozilla.org/en-US/docs/Web/API/Node/lookupNamespaceURI\n    // Node.normalize() – https://developer.mozilla.org/en-US/docs/Web/API/Node/normalize\n    // Implemented at Element/Text layer\n    // Node.nodeValue – https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeValue\n    // Node.cloneNode – https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n    /**\n     * Getter returning the text representation of Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @return text from all childNodes.\n     */\n    get textContent() {\n        return this.getTextContent();\n    }\n    /**\n     * Use `this.getTextContent()` instead of `super.textContent` to avoid incorrect or expensive ES5 transpilation.\n     */\n    getTextContent() {\n        let textContent = '';\n        const childNodes = this.childNodes;\n        if (childNodes.length) {\n            childNodes.forEach((childNode) => (textContent += childNode.textContent));\n            return textContent;\n        }\n        return '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/firstChild\n     * @return Node's first child in the tree, or null if the node has no children.\n     */\n    get firstChild() {\n        return this.childNodes[0] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/lastChild\n     * @return The last child of a node, or null if there are no child elements.\n     */\n    get lastChild() {\n        return this.childNodes[this.childNodes.length - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/nextSibling\n     * @return node immediately following the specified one in it's parent's childNodes, or null if one doesn't exist.\n     */\n    get nextSibling() {\n        if (this.parentNode === null) {\n            return null;\n        }\n        const parentChildNodes = this.parentNode.childNodes;\n        return parentChildNodes[parentChildNodes.indexOf(this) + 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/previousSibling\n     * @return node immediately preceding the specified one in its parent's childNodes, or null if the specified node is the first in that list.\n     */\n    get previousSibling() {\n        if (this.parentNode === null) {\n            return null;\n        }\n        const parentChildNodes = this.parentNode.childNodes;\n        return parentChildNodes[parentChildNodes.indexOf(this) - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/hasChildNodes\n     * @return boolean if the Node has childNodes.\n     */\n    hasChildNodes() {\n        return this.childNodes.length > 0;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/contains\n     * @param otherNode\n     * @return whether a Node is a descendant of a given Node\n     */\n    contains(otherNode) {\n        if (otherNode === this) {\n            return true;\n        }\n        if (this.childNodes.length > 0) {\n            if (this.childNodes.includes(this)) {\n                return true;\n            }\n            return this.childNodes.some((child) => child.contains(otherNode));\n        }\n        return false;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/insertBefore\n     * @param child\n     * @param referenceNode\n     * @return child after it has been inserted.\n     */\n    insertBefore(child, referenceNode) {\n        if (child === null || child === this) {\n            // The new child cannot contain the parent.\n            return child;\n        }\n        if (child.nodeType === 11 /* NodeType.DOCUMENT_FRAGMENT_NODE */) {\n            child.childNodes.slice().forEach((node) => this.insertBefore(node, referenceNode));\n        }\n        else if (referenceNode == null) {\n            // When a referenceNode is not valid, appendChild(child).\n            return this.appendChild(child);\n        }\n        else if (this.childNodes.indexOf(referenceNode) >= 0) {\n            // Should only insertBefore direct children of this Node.\n            child.remove();\n            // Removing a child can cause this.childNodes to change, meaning we need to splice from its updated location.\n            this.childNodes.splice(this.childNodes.indexOf(referenceNode), 0, child);\n            this[56 /* TransferrableKeys.insertedNode */](child);\n            mutate(this.ownerDocument, {\n                addedNodes: [child],\n                nextSibling: referenceNode,\n                type: 2 /* MutationRecordType.CHILD_LIST */,\n                target: this,\n            }, [\n                2 /* TransferrableMutationType.CHILD_LIST */,\n                this[7 /* TransferrableKeys.index */],\n                referenceNode[7 /* TransferrableKeys.index */],\n                0,\n                1,\n                0,\n                child[7 /* TransferrableKeys.index */],\n            ]);\n            return child;\n        }\n        return null;\n    }\n    /**\n     * When a Node is inserted, this method is called (and can be extended by other classes)\n     * @param child\n     */\n    [56 /* TransferrableKeys.insertedNode */](child) {\n        child.parentNode = this;\n        propagate(child, 'isConnected', this.isConnected);\n        propagate(child, 45 /* TransferrableKeys.scopingRoot */, this[45 /* TransferrableKeys.scopingRoot */]);\n    }\n    /**\n     * When a node is removed, this method is called (and can be extended by other classes)\n     * @param child\n     */\n    [57 /* TransferrableKeys.removedNode */](child) {\n        child.parentNode = null;\n        propagate(child, 'isConnected', false);\n        propagate(child, 45 /* TransferrableKeys.scopingRoot */, child);\n    }\n    /**\n     * Adds the specified childNode argument as the last child to the current node.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/appendChild\n     * @param child Child Node to append to this Node.\n     * @return Node the appended node.\n     */\n    appendChild(child) {\n        if (child.nodeType === 11 /* NodeType.DOCUMENT_FRAGMENT_NODE */) {\n            child.childNodes.slice().forEach(this.appendChild, this);\n        }\n        else {\n            child.remove();\n            this.childNodes.push(child);\n            this[56 /* TransferrableKeys.insertedNode */](child);\n            const previousSibling = this.childNodes[this.childNodes.length - 2];\n            mutate(this.ownerDocument, {\n                addedNodes: [child],\n                previousSibling,\n                type: 2 /* MutationRecordType.CHILD_LIST */,\n                target: this,\n            }, [\n                2 /* TransferrableMutationType.CHILD_LIST */,\n                this[7 /* TransferrableKeys.index */],\n                0,\n                previousSibling ? previousSibling[7 /* TransferrableKeys.index */] : 0,\n                1,\n                0,\n                child[7 /* TransferrableKeys.index */],\n            ]);\n        }\n        return child;\n    }\n    /**\n     * Removes a child node from the current element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/removeChild\n     * @param child Child Node to remove from this Node.\n     * @return Node removed from the tree or null if the node wasn't attached to this tree.\n     */\n    removeChild(child) {\n        const index = this.childNodes.indexOf(child);\n        const exists = index >= 0;\n        if (exists) {\n            this.childNodes.splice(index, 1);\n            this[57 /* TransferrableKeys.removedNode */](child);\n            mutate(this.ownerDocument, {\n                removedNodes: [child],\n                type: 2 /* MutationRecordType.CHILD_LIST */,\n                target: this,\n            }, [2 /* TransferrableMutationType.CHILD_LIST */, this[7 /* TransferrableKeys.index */], 0, 0, 0, 1, child[7 /* TransferrableKeys.index */]]);\n            return child;\n        }\n        return null;\n    }\n    /**\n     * @param newChild\n     * @param oldChild\n     * @return child that was replaced.\n     * @note `HierarchyRequestError` not handled e.g. newChild is an ancestor of current node.\n     * @see https://dom.spec.whatwg.org/#concept-node-replace\n     */\n    replaceChild(newChild, oldChild) {\n        if (newChild === oldChild ||\n            // In DOM, this throws DOMException: \"The node to be replaced is not a child of this node.\"\n            oldChild.parentNode !== this ||\n            // In DOM, this throws DOMException: \"The new child element contains the parent.\"\n            newChild.contains(this)) {\n            return oldChild;\n        }\n        // If newChild already exists in the DOM, it is first removed.\n        // TODO: Consider using a mutation-free API here to avoid two mutations\n        // per replaceChild() call.\n        newChild.remove();\n        const index = this.childNodes.indexOf(oldChild);\n        this.childNodes.splice(index, 1, newChild);\n        this[57 /* TransferrableKeys.removedNode */](oldChild);\n        this[56 /* TransferrableKeys.insertedNode */](newChild);\n        mutate(this.ownerDocument, {\n            addedNodes: [newChild],\n            removedNodes: [oldChild],\n            type: 2 /* MutationRecordType.CHILD_LIST */,\n            nextSibling: this.childNodes[index + 1],\n            target: this,\n        }, [\n            2 /* TransferrableMutationType.CHILD_LIST */,\n            this[7 /* TransferrableKeys.index */],\n            this.childNodes[index + 1] ? this.childNodes[index + 1][7 /* TransferrableKeys.index */] : 0,\n            0,\n            1,\n            1,\n            newChild[7 /* TransferrableKeys.index */],\n            oldChild[7 /* TransferrableKeys.index */],\n        ]);\n        return oldChild;\n    }\n    /**\n     * Replaces the current node with the provided Array<node|string>.\n     * @param nodes\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/replaceWith\n     */\n    replaceWith(...nodes) {\n        const parent = this.parentNode;\n        let nodeIterator = nodes.length;\n        let currentNode;\n        if (!parent) {\n            return;\n        }\n        if (!nodeIterator) {\n            parent.removeChild(this);\n        }\n        while (nodeIterator--) {\n            currentNode = nodes[nodeIterator];\n            if (typeof currentNode !== 'object') {\n                currentNode = this.ownerDocument.createTextNode(currentNode);\n            }\n            // TODO: Investigate inserting all new nodes in a single operation.\n            if (!nodeIterator) {\n                // currentNode is the first argument (currentNode === arguments[0])\n                parent.replaceChild(currentNode, this);\n            }\n            else {\n                parent.insertBefore(currentNode, this.nextSibling);\n            }\n        }\n    }\n    /**\n     * Removes this Node from the tree it belogs too.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/remove\n     */\n    remove() {\n        if (this.parentNode) {\n            this.parentNode.removeChild(this);\n        }\n    }\n    /**\n     * Add an event listener to callback when a specific event type is dispatched.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n     * @param type Event Type (i.e 'click')\n     * @param handler Function called when event is dispatched.\n     */\n    addEventListener(type, handler, options = {}) {\n        const lowerType = toLower(type);\n        const storedType = storeString(lowerType);\n        const handlers = this[10 /* TransferrableKeys.handlers */][lowerType];\n        let index = 0;\n        if (handlers) {\n            index = handlers.push(handler);\n        }\n        else {\n            this[10 /* TransferrableKeys.handlers */][lowerType] = [handler];\n        }\n        transfer(this.ownerDocument, [\n            4 /* TransferrableMutationType.EVENT_SUBSCRIPTION */,\n            this[7 /* TransferrableKeys.index */],\n            0,\n            1,\n            storedType,\n            index,\n            Number(Boolean(options.capture)),\n            Number(Boolean(options.once)),\n            Number(Boolean(options.passive)),\n            Number(Boolean(options.workerDOMPreventDefault)),\n        ]);\n    }\n    /**\n     * Remove a registered event listener for a specific event type.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n     * @param type Event Type (i.e 'click')\n     * @param handler Function to stop calling when event is dispatched.\n     */\n    removeEventListener(type, handler) {\n        const lowerType = toLower(type);\n        const handlers = this[10 /* TransferrableKeys.handlers */][lowerType];\n        const index = !!handlers ? handlers.indexOf(handler) : -1;\n        if (index >= 0) {\n            handlers.splice(index, 1);\n            transfer(this.ownerDocument, [\n                4 /* TransferrableMutationType.EVENT_SUBSCRIPTION */,\n                this[7 /* TransferrableKeys.index */],\n                1,\n                0,\n                storeString(lowerType),\n                index,\n            ]);\n        }\n    }\n    /**\n     * Dispatch an event for this Node.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent\n     * @param event Event to dispatch to this node and potentially cascade to parents.\n     */\n    dispatchEvent(event) {\n        let target = (event.currentTarget = this);\n        let handlers;\n        let iterator;\n        do {\n            handlers = target && target[10 /* TransferrableKeys.handlers */] && target[10 /* TransferrableKeys.handlers */][toLower(event.type)];\n            if (handlers) {\n                for (iterator = handlers.length; iterator--;) {\n                    if ((handlers[iterator].call(target, event) === false || event[51 /* TransferrableKeys.end */]) && event.cancelable) {\n                        break;\n                    }\n                }\n            }\n        } while (event.bubbles && !(event.cancelable && event[50 /* TransferrableKeys.stop */]) && (target = target && target.parentNode));\n        return !event.defaultPrevented;\n    }\n}\n//# sourceMappingURL=Node.js.map","import { Node } from './Node';\nimport { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\nimport { getNextElementSibling, getPreviousElementSibling } from './elementSibling';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/CharacterData\nexport class CharacterData extends Node {\n    [38 /* TransferrableKeys.data */];\n    constructor(data, nodeType, nodeName, ownerDocument, overrideIndex) {\n        super(nodeType, nodeName, ownerDocument, overrideIndex);\n        this[38 /* TransferrableKeys.data */] = data;\n        this[8 /* TransferrableKeys.creationFormat */] = [this[7 /* TransferrableKeys.index */], nodeType, storeString(nodeName), storeString(data), 0];\n    }\n    // Unimplemented Methods\n    // NonDocumentTypeChildNode.nextElementSibling – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/nextElementSibling\n    // NonDocumentTypeChildNode.previousElementSibling – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/previousElementSibling\n    // CharacterData.appendData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/appendData\n    // CharacterData.deleteData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/deleteData\n    // CharacterData.insertData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/insertData\n    // CharacterData.replaceData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/replaceData\n    // CharacterData.substringData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/substringData\n    /**\n     * @return Returns the string contained in private CharacterData.data\n     */\n    get data() {\n        return this[38 /* TransferrableKeys.data */];\n    }\n    /**\n     * @param value string value to store as CharacterData.data.\n     */\n    set data(value) {\n        const oldValue = this.data;\n        this[38 /* TransferrableKeys.data */] = value;\n        mutate(this.ownerDocument, {\n            target: this,\n            type: 1 /* MutationRecordType.CHARACTER_DATA */,\n            value,\n            oldValue,\n        }, [1 /* TransferrableMutationType.CHARACTER_DATA */, this[7 /* TransferrableKeys.index */], storeString(value)]);\n    }\n    /**\n     * @return Returns the size of the string contained in CharacterData.data\n     */\n    get length() {\n        return this[38 /* TransferrableKeys.data */].length;\n    }\n    /**\n     * @return Returns the string contained in CharacterData.data\n     */\n    get nodeValue() {\n        return this[38 /* TransferrableKeys.data */];\n    }\n    /**\n     * @param value string value to store as CharacterData.data.\n     */\n    set nodeValue(value) {\n        this.data = value;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/previousElementSibling\n     * Returns the Element immediately prior to the specified one in its parent's children list,\n     * or null if the specified element is the first one in the list.\n     */\n    get previousElementSibling() {\n        return getPreviousElementSibling(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/nextElementSibling\n     * Returns the Element immediately following the specified one in its parent's children list,\n     * or null if the specified element is the last one in the list.\n     */\n    get nextElementSibling() {\n        return getNextElementSibling(this);\n    }\n}\n//# sourceMappingURL=CharacterData.js.map","import { CharacterData } from './CharacterData';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/Comment\nexport class Comment extends CharacterData {\n    constructor(data, ownerDocument, overrideIndex) {\n        super(data, 8 /* NodeType.COMMENT_NODE */, '#comment', ownerDocument, overrideIndex);\n    }\n    /**\n     * textContent getter, retrieves underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     */\n    get textContent() {\n        return this.data;\n    }\n    /**\n     * textContent setter, mutates underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     * @param value new value\n     */\n    set textContent(value) {\n        // Mutation Observation is performed by CharacterData.\n        this.nodeValue = value;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @return new Comment Node with the same data as the Comment to clone.\n     */\n    cloneNode() {\n        return this.ownerDocument.createComment(this.data);\n    }\n}\n//# sourceMappingURL=Comment.js.map","const ALLOWLISTED_GLOBALS = {\n    Array: true,\n    ArrayBuffer: true,\n    BigInt: true,\n    BigInt64Array: true,\n    BigUint64Array: true,\n    Boolean: true,\n    Cache: true,\n    CustomEvent: true,\n    DataView: true,\n    Date: true,\n    Error: true,\n    EvalError: true,\n    Event: true,\n    EventTarget: true,\n    Float32Array: true,\n    Float64Array: true,\n    Function: true,\n    Infinity: true,\n    Int16Array: true,\n    Int32Array: true,\n    Int8Array: true,\n    Intl: true,\n    JSON: true,\n    Map: true,\n    Math: true,\n    NaN: true,\n    Number: true,\n    Object: true,\n    Promise: true,\n    Proxy: true,\n    RangeError: true,\n    ReferenceError: true,\n    Reflect: true,\n    RegExp: true,\n    Set: true,\n    String: true,\n    Symbol: true,\n    SyntaxError: true,\n    TextDecoder: true,\n    TextEncoder: true,\n    TypeError: true,\n    URIError: true,\n    URL: true,\n    Uint16Array: true,\n    Uint32Array: true,\n    Uint8Array: true,\n    Uint8ClampedArray: true,\n    WeakMap: true,\n    WeakSet: true,\n    WebAssembly: true,\n    WebSocket: true,\n    XMLHttpRequest: true,\n    atob: true,\n    addEventListener: true,\n    removeEventListener: true,\n    btoa: true,\n    caches: true,\n    clearInterval: true,\n    clearTimeout: true,\n    console: true,\n    decodeURI: true,\n    decodeURIComponent: true,\n    document: true,\n    encodeURI: true,\n    encodeURIComponent: true,\n    escape: true,\n    fetch: true,\n    indexedDB: true,\n    isFinite: true,\n    isNaN: true,\n    location: true,\n    navigator: true,\n    onerror: true,\n    onrejectionhandled: true,\n    onunhandledrejection: true,\n    parseFloat: true,\n    parseInt: true,\n    performance: true,\n    requestAnimationFrame: true,\n    cancelAnimationFrame: true,\n    self: true,\n    setTimeout: true,\n    setInterval: true,\n    unescape: true,\n};\n// Modify global scope by removing disallowed properties.\nexport function deleteGlobals(global) {\n    /**\n     * @param object\n     * @param property\n     * @return True if property was deleted from object. Otherwise, false.\n     */\n    const deleteUnsafe = (object, property) => {\n        if (!ALLOWLISTED_GLOBALS.hasOwnProperty(property)) {\n            try {\n                delete object[property];\n                return true;\n            }\n            catch (e) { }\n        }\n        return false;\n    };\n    // Walk up global's prototype chain and dereference non-allowlisted properties\n    // until EventTarget is reached.\n    let current = global;\n    while (current && current.constructor !== EventTarget) {\n        const deleted = [];\n        const failedToDelete = [];\n        Object.getOwnPropertyNames(current).forEach((prop) => {\n            if (deleteUnsafe(current, prop)) {\n                deleted.push(prop);\n            }\n            else {\n                failedToDelete.push(prop);\n            }\n        });\n        console.info(`Removed ${deleted.length} references from`, current, ':', deleted);\n        if (failedToDelete.length) {\n            console.info(`Failed to remove ${failedToDelete.length} references from`, current, ':', failedToDelete);\n        }\n        current = Object.getPrototypeOf(current);\n    }\n}\n//# sourceMappingURL=delete-globals.js.map","import { toLower, toUpper } from '../../utils';\n// To future authors: It would be great if we could enforce that elements are not modified by a ConditionPredicate.\nexport const tagNameConditionPredicate = (tagNames) => (element) => {\n    console.assert(tagNames.every((t) => t === toUpper(t)), 'tagNames must be all uppercase.');\n    return tagNames.includes(element.tagName);\n};\nexport const elementPredicate = (node) => node.nodeType === 1 /* NodeType.ELEMENT_NODE */;\nexport const matchChildrenElements = (node, conditionPredicate) => {\n    const matchingElements = [];\n    node.childNodes.forEach((child) => {\n        if (elementPredicate(child)) {\n            if (conditionPredicate(child)) {\n                matchingElements.push(child);\n            }\n            matchingElements.push(...matchChildrenElements(child, conditionPredicate));\n        }\n    });\n    return matchingElements;\n};\nexport const matchChildElement = (element, conditionPredicate) => {\n    let returnValue = null;\n    element.children.some((child) => {\n        if (conditionPredicate(child)) {\n            returnValue = child;\n            return true;\n        }\n        const grandChildMatch = matchChildElement(child, conditionPredicate);\n        if (grandChildMatch !== null) {\n            returnValue = grandChildMatch;\n            return true;\n        }\n        return false;\n    });\n    return returnValue;\n};\nexport const matchNearestParent = (element, conditionPredicate) => {\n    while ((element = element.parentNode)) {\n        if (conditionPredicate(element)) {\n            return element;\n        }\n    }\n    return null;\n};\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors\n * @param attrSelector the selector we are trying to match for.\n * @param element the element being tested.\n * @return boolean for whether we match the condition\n */\nexport const matchAttrReference = (attrSelector, element) => {\n    if (!attrSelector) {\n        return false;\n    }\n    const equalPos = attrSelector.indexOf('=');\n    const selectorLength = attrSelector.length;\n    const caseInsensitive = attrSelector.charAt(selectorLength - 2) === 'i';\n    const endPos = caseInsensitive ? selectorLength - 3 : selectorLength - 1;\n    if (equalPos !== -1) {\n        const equalSuffix = attrSelector.charAt(equalPos - 1);\n        const possibleSuffixes = ['~', '|', '$', '^', '*'];\n        const attrString = possibleSuffixes.includes(equalSuffix) ? attrSelector.substring(1, equalPos - 1) : attrSelector.substring(1, equalPos);\n        const rawValue = attrSelector.substring(equalPos + 1, endPos);\n        const rawAttrValue = element.getAttribute(attrString);\n        if (rawAttrValue) {\n            const casedValue = caseInsensitive ? toLower(rawValue) : rawValue;\n            const casedAttrValue = caseInsensitive ? toLower(rawAttrValue) : rawAttrValue;\n            switch (equalSuffix) {\n                case '~':\n                    return casedAttrValue.split(' ').indexOf(casedValue) !== -1;\n                case '|':\n                    return casedAttrValue === casedValue || casedAttrValue === `${casedValue}-`;\n                case '^':\n                    return casedAttrValue.startsWith(casedValue);\n                case '$':\n                    return casedAttrValue.endsWith(casedValue);\n                case '*':\n                    return casedAttrValue.indexOf(casedValue) !== -1;\n                default:\n                    return casedAttrValue === casedValue;\n            }\n        }\n        return false;\n    }\n    else {\n        return element.hasAttribute(attrSelector.substring(1, endPos));\n    }\n};\n//# sourceMappingURL=matchElements.js.map","import { keyValueString } from '../../utils';\nexport const toString = (attributes) => attributes.map((attr) => keyValueString(attr.name, attr.value)).join(' ');\nexport const matchPredicate = (namespaceURI, name) => (attr) => attr.namespaceURI === namespaceURI && attr.name === name;\n//# sourceMappingURL=Attr.js.map","import { mutate } from '../MutationObserver';\nimport { toLower } from '../../utils';\nimport { store as storeString } from '../strings';\nconst hyphenateKey = (key) => toLower(key.replace(/(webkit|ms|moz|khtml)/g, '-$1').replace(/([a-zA-Z])(?=[A-Z])/g, '$1-'));\nexport const appendKeys = (keys) => {\n    const keysToAppend = keys.filter((key) => isNaN(key) && !CSSStyleDeclaration.prototype.hasOwnProperty(key));\n    if (keysToAppend.length <= 0) {\n        return;\n    }\n    const previousPrototypeLength = (CSSStyleDeclaration.prototype.length || 0);\n    if (previousPrototypeLength !== 0) {\n        CSSStyleDeclaration.prototype.length = previousPrototypeLength + keysToAppend.length;\n    }\n    else {\n        Object.defineProperty(CSSStyleDeclaration.prototype, 'length', {\n            configurable: true,\n            writable: true,\n            value: keysToAppend.length,\n        });\n    }\n    keysToAppend.forEach((key, index) => {\n        const hyphenatedKey = hyphenateKey(key);\n        CSSStyleDeclaration.prototype[index + previousPrototypeLength] = hyphenatedKey;\n        Object.defineProperties(CSSStyleDeclaration.prototype, {\n            [key]: {\n                get() {\n                    return this.getPropertyValue(hyphenatedKey);\n                },\n                set(value) {\n                    this.setProperty(hyphenatedKey, value);\n                },\n            },\n        });\n    });\n};\nexport class CSSStyleDeclaration {\n    [3 /* TransferrableKeys.properties */] = {};\n    [44 /* TransferrableKeys.storeAttribute */];\n    [13 /* TransferrableKeys.target */];\n    constructor(target) {\n        this[44 /* TransferrableKeys.storeAttribute */] = target[44 /* TransferrableKeys.storeAttribute */].bind(target);\n        this[13 /* TransferrableKeys.target */] = target;\n    }\n    /**\n     * Retrieve the value for a given property key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/getPropertyValue\n     * @param key the name of the property to retrieve the value for.\n     * @return value stored for the provided key.\n     */\n    getPropertyValue(key) {\n        return this[3 /* TransferrableKeys.properties */][key] || '';\n    }\n    /**\n     * Remove a value for a given property key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/removeProperty\n     * @param key the name of the property to retrieve the value for.\n     * @return previously stored value for the provided key.\n     */\n    removeProperty(key) {\n        const oldValue = this.getPropertyValue(key);\n        this[3 /* TransferrableKeys.properties */][key] = null;\n        this.mutated(this.cssText);\n        return oldValue;\n    }\n    /**\n     * Stores a given value for the provided key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/setProperty\n     * @param key modify this key\n     * @param value store this value\n     */\n    setProperty(key, value) {\n        this[3 /* TransferrableKeys.properties */][key] = value;\n        this.mutated(this.cssText);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/cssText\n     * @return css text string representing known and valid style declarations.\n     */\n    get cssText() {\n        let value;\n        let returnValue = '';\n        for (const key in this[3 /* TransferrableKeys.properties */]) {\n            if ((value = this.getPropertyValue(key)) !== '') {\n                returnValue += `${key}: ${value}; `;\n            }\n        }\n        return returnValue.trim();\n    }\n    /**\n     * Replace all style declarations with new values parsed from a cssText string.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/cssText\n     * @param value css text string to parse and store\n     */\n    set cssText(value) {\n        // value should have an \"unknown\" type but get/set can't have different types.\n        // https://github.com/Microsoft/TypeScript/issues/2521\n        const stringValue = typeof value === 'string' ? value : '';\n        this[3 /* TransferrableKeys.properties */] = {};\n        const values = stringValue.split(/[:;]/);\n        const length = values.length;\n        for (let index = 0; index + 1 < length; index += 2) {\n            this[3 /* TransferrableKeys.properties */][toLower(values[index].trim())] = values[index + 1].trim();\n        }\n        this.mutated(this.cssText);\n    }\n    /**\n     * Report CSSStyleDeclaration mutations to MutationObserver.\n     * @param value value after mutation\n     * @private\n     * // TODO(KB): Write a test to ensure mutations are fired for CSSStyleDeclaration changes.\n     */\n    mutated(value) {\n        const oldValue = this[44 /* TransferrableKeys.storeAttribute */](this[13 /* TransferrableKeys.target */].namespaceURI, 'style', value);\n        mutate(this[13 /* TransferrableKeys.target */].ownerDocument, {\n            type: 0 /* MutationRecordType.ATTRIBUTES */,\n            target: this[13 /* TransferrableKeys.target */],\n            attributeName: 'style',\n            value,\n            oldValue,\n        }, [\n            0 /* TransferrableMutationType.ATTRIBUTES */,\n            this[13 /* TransferrableKeys.target */][7 /* TransferrableKeys.index */],\n            storeString('style'),\n            0,\n            value !== null ? storeString(value) + 1 : 0,\n        ]);\n    }\n}\n//# sourceMappingURL=CSSStyleDeclaration.js.map","import { toLower } from '../../utils';\n// TODO: Do all boolean attributes have boolean properties?\n// TODO: Do enumerated attributes with non-boolean properties exist?\nexport const reflectProperties = (properties, defineOn) => {\n    properties.forEach((pair) => {\n        for (const property in pair) {\n            const { 0: defaultValue, 1: attributeName = toLower(property), 2: keywords } = pair[property];\n            // Boolean attributes only care about presence, not attribute value.\n            // https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes\n            const isBooleanAttribute = typeof defaultValue === 'boolean';\n            Object.defineProperty(defineOn.prototype, property, {\n                enumerable: true,\n                get() {\n                    const element = this;\n                    const attributeValue = element.getAttribute(attributeName);\n                    if (keywords) {\n                        return element.hasAttribute(attributeName) ? attributeValue === keywords[0] : defaultValue;\n                    }\n                    if (isBooleanAttribute) {\n                        return element.hasAttribute(attributeName);\n                    }\n                    const castableValue = attributeValue || defaultValue;\n                    return typeof defaultValue === 'number' ? Number(castableValue) : String(castableValue);\n                },\n                set(value) {\n                    const element = this;\n                    if (keywords) {\n                        element.setAttribute(attributeName, value ? keywords[0] : keywords[1]);\n                    }\n                    else if (isBooleanAttribute) {\n                        value ? element.setAttribute(attributeName, '') : element.removeAttribute(attributeName);\n                    }\n                    else {\n                        element.setAttribute(attributeName, String(value));\n                    }\n                },\n            });\n        }\n    });\n};\n//# sourceMappingURL=enhanceElement.js.map","/**\n * @fileoverview\n * WorkerDOM's `Event` class. `CustomEvent` is available natively in web worker.\n */\nimport { get } from './nodes';\nexport class Event {\n    bubbles;\n    cancelable;\n    cancelBubble;\n    currentTarget;\n    defaultPrevented;\n    eventPhase;\n    isTrusted;\n    returnValue;\n    // public srcElement: Element | null;\n    // TODO(KB): Restore srcElement.\n    target;\n    timeStamp;\n    type;\n    scoped;\n    [50 /* TransferrableKeys.stop */] = false;\n    [51 /* TransferrableKeys.end */] = false;\n    pageX;\n    pageY;\n    offsetX;\n    offsetY;\n    touches;\n    changedTouches;\n    constructor(type, opts) {\n        this.type = type;\n        this.bubbles = !!opts.bubbles;\n        this.cancelable = !!opts.cancelable;\n    }\n    stopPropagation() {\n        this[50 /* TransferrableKeys.stop */] = true;\n    }\n    stopImmediatePropagation() {\n        this[51 /* TransferrableKeys.end */] = this[50 /* TransferrableKeys.stop */] = true;\n    }\n    preventDefault() {\n        this.defaultPrevented = true;\n    }\n    /** Event.initEvent() is deprecated but supported here for legacy usage.  */\n    initEvent(type, bubbles, cancelable) {\n        this.type = type;\n        this.bubbles = bubbles;\n        this.cancelable = cancelable;\n    }\n}\n/**\n * Determine the target for a TransferrableEvent.\n * @param document Event intended within the scope of this document.\n * @param event\n */\nconst targetFromTransfer = (document, event) => {\n    if (event[13 /* TransferrableKeys.target */] !== null) {\n        const index = event[13 /* TransferrableKeys.target */][0];\n        // If the target was sent as index 0, use the current document.\n        return get(index !== 0 ? index : document[7 /* TransferrableKeys.index */]);\n    }\n    return null;\n};\n/**\n *\n * @param document\n * @param event\n */\nconst touchListFromTransfer = (document, event, key) => {\n    if (event[key] !== undefined) {\n        const touchListKeys = Object.keys(event[key]);\n        const list = {\n            length: touchListKeys.length,\n            item(index) {\n                return this[index] || null;\n            },\n        };\n        touchListKeys.forEach((touchListKey) => {\n            const numericKey = Number(touchListKey);\n            const transferredTouch = event[key][numericKey];\n            list[numericKey] = {\n                identifier: transferredTouch[0],\n                screenX: transferredTouch[1],\n                screenY: transferredTouch[2],\n                clientX: transferredTouch[3],\n                clientY: transferredTouch[4],\n                pageX: transferredTouch[5],\n                pageY: transferredTouch[6],\n                target: get(transferredTouch[7] !== 0 ? transferredTouch[7] : document[7 /* TransferrableKeys.index */]),\n            };\n        });\n        return list;\n    }\n    return undefined;\n};\n/**\n * When an event is dispatched from the main thread, it needs to be propagated in the worker thread.\n * Propagate adds an event listener to the worker global scope and uses the WorkerDOM Node.dispatchEvent\n * method to dispatch the transfered event in the worker thread.\n */\nexport function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* TransferrableKeys.type */] !== 1 /* MessageType.EVENT */) {\n            return;\n        }\n        const event = data[39 /* TransferrableKeys.event */];\n        const node = get(event[7 /* TransferrableKeys.index */]);\n        if (node !== null) {\n            node.dispatchEvent(Object.assign(new Event(event[12 /* TransferrableKeys.type */], {\n                bubbles: event[25 /* TransferrableKeys.bubbles */],\n                cancelable: event[26 /* TransferrableKeys.cancelable */],\n            }), {\n                cancelBubble: event[27 /* TransferrableKeys.cancelBubble */],\n                defaultPrevented: event[29 /* TransferrableKeys.defaultPrevented */],\n                eventPhase: event[30 /* TransferrableKeys.eventPhase */],\n                isTrusted: event[31 /* TransferrableKeys.isTrusted */],\n                returnValue: event[32 /* TransferrableKeys.returnValue */],\n                target: targetFromTransfer(global.document, event),\n                timeStamp: event[33 /* TransferrableKeys.timeStamp */],\n                scoped: event[34 /* TransferrableKeys.scoped */],\n                keyCode: event[35 /* TransferrableKeys.keyCode */],\n                pageX: event[60 /* TransferrableKeys.pageX */],\n                pageY: event[61 /* TransferrableKeys.pageY */],\n                offsetX: event[65 /* TransferrableKeys.offsetX */],\n                offsetY: event[66 /* TransferrableKeys.offsetY */],\n                touches: touchListFromTransfer(global.document, event, 62 /* TransferrableKeys.touches */),\n                changedTouches: touchListFromTransfer(global.document, event, 63 /* TransferrableKeys.changedTouches */),\n            }));\n        }\n    });\n}\n//# sourceMappingURL=Event.js.map","export const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n//# sourceMappingURL=TransferrableNodes.js.map","import { Element } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { matchNearestParent, tagNameConditionPredicate } from './matchElements';\nexport const appendGlobalEventProperties = (keys) => {\n    const keysToAppend = keys.filter((key) => !HTMLElement.prototype.hasOwnProperty(key));\n    if (keysToAppend.length <= 0) {\n        return;\n    }\n    keysToAppend.forEach((key) => {\n        const normalizedKey = key.replace(/on/, '');\n        Object.defineProperty(HTMLElement.prototype, key, {\n            enumerable: true,\n            get() {\n                return this[76 /* TransferrableKeys.propertyEventHandlers */][normalizedKey] || null;\n            },\n            set(value) {\n                const stored = this[76 /* TransferrableKeys.propertyEventHandlers */][normalizedKey];\n                if (stored) {\n                    this.removeEventListener(normalizedKey, stored);\n                }\n                if (value instanceof Function) {\n                    this.addEventListener(normalizedKey, value);\n                }\n                this[76 /* TransferrableKeys.propertyEventHandlers */][normalizedKey] = value;\n            },\n        });\n    });\n};\nexport class HTMLElement extends Element {\n    [76 /* TransferrableKeys.propertyEventHandlers */] = {};\n    /**\n     * Find the nearest parent form element.\n     * Implemented in HTMLElement since so many extensions of HTMLElement repeat this functionality. This is not to spec.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFieldSetElement\n     * @return nearest parent form element.\n     */\n    get form() {\n        return matchNearestParent(this, tagNameConditionPredicate(['FORM']));\n    }\n    [68 /* TransferrableKeys.serializeAsTransferrableObject */]() {\n        return [7 /* TransferrableObjectType.HTMLElement */, this[7 /* TransferrableKeys.index */]];\n    }\n}\n// Reflected properties\n// HTMLElement.accessKey => string, reflected attribute\n// HTMLElement.contentEditable => string, reflected attribute\n// HTMLElement.dir => string, reflected attribute\n// HTMLElement.lang => string, reflected attribute\n// HTMLElement.title => string, reflected attribute\n// HTMLElement.draggable => boolean, reflected attribute\n// HTMLElement.hidden => boolean, reflected attribute\n// HTMLElement.noModule => boolean, reflected attribute\n// HTMLElement.spellcheck => boolean, reflected attribute\n// HTMLElement.translate => boolean, reflected attribute\nreflectProperties([\n    { accessKey: [''] },\n    { contentEditable: ['inherit'] },\n    { dir: [''] },\n    { lang: [''] },\n    { title: [''] },\n    {\n        draggable: [false, /* attr */ undefined, /* keywords */ ['true', 'false']],\n    },\n    { hidden: [false, /* attr */ undefined] },\n    { noModule: [false] },\n    {\n        spellcheck: [true, /* attr */ undefined, /* keywords */ ['true', 'false']],\n    },\n    { translate: [true, /* attr */ undefined, /* keywords */ ['yes', 'no']] },\n], HTMLElement);\n// Properties\n// HTMLElement.accessKeyLabel => string, readonly value of \"accessKey\"\n// HTMLElement.isContentEditable => boolean, readonly value of contentEditable\n// HTMLElement.nonce => string, NOT REFLECTED\n// HTMLElement.tabIndex => number, reflected attribute\n// Layout Properties (TBD)\n// HTMLElement.offsetHeight => double, readonly\n// HTMLElement.offsetLeft => double, readonly\n// HTMLElement.offsetParent => Element\n// HTMLElement.offsetTop => double, readonly\n// HTMLElement.offsetWidth => double, readonly\n// Unimplemented Properties\n// HTMLElement.contextMenu => HTMLElement\n// HTMLElement.dataset => Map<string (get/set), string>\n// HTMLElement.dropzone => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.inert => boolean, reflected\n// HTMLElement.itemScope => boolean\n// HTMLElement.itemType => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemId => string\n// HTMLElement.itemRef => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemProp => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemValue => object\n// HTMLElement.properties => HTMLPropertiesCollection, readonly\n//# sourceMappingURL=HTMLElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLAnchorElement extends HTMLElement {\n    _relList;\n    get relList() {\n        return this._relList || (this._relList = new DOMTokenList(this, 'rel'));\n    }\n    /**\n     * Returns the href property/attribute value\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/toString\n     * @return string href attached to HTMLAnchorElement\n     */\n    toString() {\n        return this.href;\n    }\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * A Synonym for the Node.textContent property setter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement\n     * @param text replacement for all current childNodes.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n}\nregisterSubclass('a', HTMLAnchorElement);\ndefinePropertyBackedAttributes(HTMLAnchorElement, {\n    rel: [(el) => el.relList.value, (el, value) => (el.relList.value = value)],\n});\nsynchronizedAccessor(HTMLAnchorElement, 'relList', 'rel');\n// Reflected properties, strings.\n// HTMLAnchorElement.href => string, reflected attribute\n// HTMLAnchorElement.hreflang => string, reflected attribute\n// HTMLAnchorElement.media => string, reflected attribute\n// HTMLAnchorElement.target => string, reflected attribute\n// HTMLAnchorElement.type => string, reflected attribute\nreflectProperties([{ href: [''] }, { hreflang: [''] }, { media: [''] }, { target: [''] }, { type: [''] }], HTMLAnchorElement);\n// Unimplemented\n// HTMLAnchorElement.download => string, reflected attribute\n// HTMLAnchorElement.type => Is a DOMString that reflects the type HTML attribute, indicating the MIME type of the linked resource.\n// Unimplemented URL parse of href attribute due to IE11 compatibility and low usage.\n// Note: Implementation doable using a private url property\n/*\n  class {\n    private url: URL | null = null;\n\n    constructor(...) {\n      // Element.getAttribute('href') => Element.href.\n      Object.assign(this[TransferrableKeys.propertyBackedAttributes], {\n        href: this.href,\n      });\n    }\n\n    get href(): string {\n      return this.url ? this.url.href : '';\n    }\n    set href(url: string) {\n      this.url = new URL(url);\n      this.setAttribute('href', this.url.href);\n    }\n  }\n*/\n// HTMLAnchorElement.host => string\n// HTMLAnchorElement.hostname => string\n// HTMLAnchorElement.protocol => string\n// HTMLAnchorElement.pathname => string\n// HTMLAnchorElement.search => string\n// HTMLAnchorElement.hash => string\n// HTMLAnchorElement.username => string\n// HTMLAnchorElement.password => string\n// HTMLAnchorElement.origin => string, readonly (getter no setter)\n//# sourceMappingURL=HTMLAnchorElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLButtonElement extends HTMLElement {\n}\nregisterSubclass('button', HTMLButtonElement);\n// Reflected properties, strings.\n// HTMLButtonElement.formAction => string, reflected attribute\n// HTMLButtonElement.formEnctype => string, reflected attribute\n// HTMLButtonElement.formMethod => string, reflected attribute\n// HTMLButtonElement.formTarget => string, reflected attribute\n// HTMLButtonElement.name => string, reflected attribute\n// HTMLButtonElement.type => string, reflected attribute (default submit)\n// HTMLButtonElement.value => string, reflected attribute\n// HTMLButtonElement.autofocus => boolean, reflected attribute\n// HTMLButtonElement.disabled => boolean, reflected attribute\nreflectProperties([\n    { formAction: [''] },\n    { formEnctype: [''] },\n    { formMethod: [''] },\n    { formTarget: [''] },\n    { name: [''] },\n    { type: ['submit'] },\n    { value: [''] },\n    { autofocus: [false] },\n    { disabled: [false] },\n], HTMLButtonElement);\n// Not reflected\n// HTMLButtonElement.formNoValidate => boolean\n// HTMLButtonElement.validity => ValidityState, readonly\n// Unimplemented\n// HTMLButtonElement.form => HTMLFormElement | null, readonly\n// HTMLButtonElement.labels => Array<HTMLLabelElement>, readonly\n// HTMLButtonElement.menu => HTMLMenuElement\n// HTMLButtonElement.willValidate => boolean, readonly\n// HTMLButtonElement.validationMessage => string, readonly\n//# sourceMappingURL=HTMLButtonElement.js.map","import { transfer } from '../MutationTransfer';\nimport { serializeTransferrableObject } from '../serializeTransferrableObject';\nimport { store } from '../strings';\n/**\n * Wrapper class for CanvasGradient. The user will be able to manipulate as a regular CanvasGradient object.\n */\nexport class CanvasGradient {\n    id;\n    document;\n    constructor(id, document) {\n        this.document = document;\n        this.id = id;\n    }\n    addColorStop(offset, color) {\n        transfer(this.document, [\n            9 /* TransferrableMutationType.OBJECT_MUTATION */,\n            store('addColorStop'),\n            2,\n            ...this[68 /* TransferrableKeys.serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject([...arguments]),\n        ]);\n    }\n    [68 /* TransferrableKeys.serializeAsTransferrableObject */]() {\n        return [5 /* TransferrableObjectType.TransferObject */, this.id];\n    }\n}\n//# sourceMappingURL=CanvasGradient.js.map","/**\n * Wrapper class for CanvasPattern. The user will be able to manipulate as a regular CanvasPattern object.\n * This class will be used when the CanvasRenderingContext is using an OffscreenCanvas polyfill.\n */\nexport class CanvasPattern {\n    id;\n    constructor(id) {\n        this.id = id;\n    }\n    /**\n     * This is an experimental method.\n     */\n    setTransform() { }\n    [68 /* TransferrableKeys.serializeAsTransferrableObject */]() {\n        return [5 /* TransferrableObjectType.TransferObject */, this.id];\n    }\n}\n//# sourceMappingURL=CanvasPattern.js.map","import { transfer } from '../MutationTransfer';\nimport { toLower } from '../../utils';\nimport { store } from '../strings';\nimport { serializeTransferrableObject } from '../serializeTransferrableObject';\nimport { CanvasGradient } from './CanvasGradient';\nimport { CanvasPattern } from './CanvasPattern';\n/**\n * Handles calls to a CanvasRenderingContext2D object in cases where the user's environment does not\n * support native OffscreenCanvas.\n */\nexport class OffscreenCanvasPolyfill {\n    canvas;\n    context;\n    constructor(canvas) {\n        this.canvas = canvas;\n    }\n    getContext(contextType) {\n        if (!this.context) {\n            if (toLower(contextType) === '2d') {\n                this.context = new OffscreenCanvasRenderingContext2DPolyfill(this.canvas);\n            }\n            else {\n                throw new Error('Context type not supported.');\n            }\n        }\n        return this.context;\n    }\n}\nclass OffscreenCanvasRenderingContext2DPolyfill {\n    canvasElement;\n    lineDash;\n    objectIndex = 0;\n    constructor(canvas) {\n        this.canvasElement = canvas;\n        this.lineDash = [];\n    }\n    [67 /* TransferrableKeys.mutated */](fnName, args) {\n        transfer(this.canvasElement.ownerDocument, [\n            9 /* TransferrableMutationType.OBJECT_MUTATION */,\n            store(fnName),\n            args.length,\n            ...this[68 /* TransferrableKeys.serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject(args),\n        ]);\n    }\n    [68 /* TransferrableKeys.serializeAsTransferrableObject */]() {\n        return [6 /* TransferrableObjectType.CanvasRenderingContext2D */, this.canvasElement[7 /* TransferrableKeys.index */]];\n    }\n    /**\n     * Creates object in the main thread, and associates it with the id provided.\n     * @param objectId ID to associate the created object with.\n     * @param creationMethod Method to use for object creation.\n     * @param creationArgs Arguments to pass into the creation method.\n     */\n    createObjectReference(objectId, creationMethod, creationArgs) {\n        transfer(this.canvasElement.ownerDocument, [\n            10 /* TransferrableMutationType.OBJECT_CREATION */,\n            store(creationMethod),\n            objectId,\n            creationArgs.length,\n            ...this[68 /* TransferrableKeys.serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject(creationArgs),\n        ]);\n    }\n    get canvas() {\n        return this.canvasElement;\n    }\n    clearRect(x, y, w, h) {\n        this[67 /* TransferrableKeys.mutated */]('clearRect', [...arguments]);\n    }\n    fillRect(x, y, w, h) {\n        this[67 /* TransferrableKeys.mutated */]('fillRect', [...arguments]);\n    }\n    strokeRect(x, y, w, h) {\n        this[67 /* TransferrableKeys.mutated */]('strokeRect', [...arguments]);\n    }\n    roundRect(x, y, w, h, radii) {\n        this[67 /* TransferrableKeys.mutated */]('roundRect', [...arguments]);\n    }\n    set lineWidth(value) {\n        this[67 /* TransferrableKeys.mutated */]('lineWidth', [...arguments]);\n    }\n    fillText(text, x, y, maxWidth) {\n        this[67 /* TransferrableKeys.mutated */]('fillText', [...arguments]);\n    }\n    moveTo(x, y) {\n        this[67 /* TransferrableKeys.mutated */]('moveTo', [...arguments]);\n    }\n    lineTo(x, y) {\n        this[67 /* TransferrableKeys.mutated */]('lineTo', [...arguments]);\n    }\n    closePath() {\n        this[67 /* TransferrableKeys.mutated */]('closePath', []);\n    }\n    stroke() {\n        this[67 /* TransferrableKeys.mutated */]('stroke', []);\n    }\n    restore() {\n        this[67 /* TransferrableKeys.mutated */]('restore', []);\n    }\n    save() {\n        this[67 /* TransferrableKeys.mutated */]('save', []);\n    }\n    resetTransform() {\n        this[67 /* TransferrableKeys.mutated */]('resetTransform', []);\n    }\n    rotate(angle) {\n        this[67 /* TransferrableKeys.mutated */]('rotate', [...arguments]);\n    }\n    transform(a, b, c, d, e, f) {\n        this[67 /* TransferrableKeys.mutated */]('transform', [...arguments]);\n    }\n    translate(x, y) {\n        this[67 /* TransferrableKeys.mutated */]('translate', [...arguments]);\n    }\n    scale(x, y) {\n        this[67 /* TransferrableKeys.mutated */]('scale', [...arguments]);\n    }\n    set globalAlpha(value) {\n        this[67 /* TransferrableKeys.mutated */]('globalAlpha', [...arguments]);\n    }\n    set globalCompositeOperation(value) {\n        this[67 /* TransferrableKeys.mutated */]('globalCompositeOperation', [...arguments]);\n    }\n    set imageSmoothingQuality(value) {\n        this[67 /* TransferrableKeys.mutated */]('imageSmoothingQuality', [...arguments]);\n    }\n    set fillStyle(value) {\n        this[67 /* TransferrableKeys.mutated */]('fillStyle', [...arguments]);\n    }\n    set strokeStyle(value) {\n        this[67 /* TransferrableKeys.mutated */]('strokeStyle', [...arguments]);\n    }\n    set shadowBlur(value) {\n        this[67 /* TransferrableKeys.mutated */]('shadowBlur', [...arguments]);\n    }\n    set shadowColor(value) {\n        this[67 /* TransferrableKeys.mutated */]('shadowColor', [...arguments]);\n    }\n    set shadowOffsetX(value) {\n        this[67 /* TransferrableKeys.mutated */]('shadowOffsetX', [...arguments]);\n    }\n    set shadowOffsetY(value) {\n        this[67 /* TransferrableKeys.mutated */]('shadowOffsetY', [...arguments]);\n    }\n    set filter(value) {\n        this[67 /* TransferrableKeys.mutated */]('filter', [...arguments]);\n    }\n    beginPath() {\n        this[67 /* TransferrableKeys.mutated */]('beginPath', []);\n    }\n    strokeText(text, x, y, maxWidth) {\n        this[67 /* TransferrableKeys.mutated */]('strokeText', [...arguments]);\n    }\n    set textAlign(value) {\n        this[67 /* TransferrableKeys.mutated */]('textAlign', [...arguments]);\n    }\n    set textBaseline(value) {\n        this[67 /* TransferrableKeys.mutated */]('textBaseline', [...arguments]);\n    }\n    set lineCap(value) {\n        this[67 /* TransferrableKeys.mutated */]('lineCap', [...arguments]);\n    }\n    set lineDashOffset(value) {\n        this[67 /* TransferrableKeys.mutated */]('lineDashOffset', [...arguments]);\n    }\n    set lineJoin(value) {\n        this[67 /* TransferrableKeys.mutated */]('lineJoin', [...arguments]);\n    }\n    set miterLimit(value) {\n        this[67 /* TransferrableKeys.mutated */]('miterLimit', [...arguments]);\n    }\n    arc(x, y, radius, startAngle, endAngle, anticlockwise) {\n        this[67 /* TransferrableKeys.mutated */]('arc', [...arguments]);\n    }\n    arcTo(x1, y1, x2, y2, radius) {\n        this[67 /* TransferrableKeys.mutated */]('arcTo', [...arguments]);\n    }\n    set direction(value) {\n        this[67 /* TransferrableKeys.mutated */]('direction', [...arguments]);\n    }\n    set font(value) {\n        this[67 /* TransferrableKeys.mutated */]('font', [...arguments]);\n    }\n    ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, anticlockwise) {\n        this[67 /* TransferrableKeys.mutated */]('ellipse', [...arguments]);\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this[67 /* TransferrableKeys.mutated */]('bezierCurveTo', [...arguments]);\n    }\n    rect(x, y, width, height) {\n        this[67 /* TransferrableKeys.mutated */]('rect', [...arguments]);\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this[67 /* TransferrableKeys.mutated */]('quadraticCurveTo', [...arguments]);\n    }\n    set imageSmoothingEnabled(value) {\n        this[67 /* TransferrableKeys.mutated */]('imageSmoothingEnabled', [...arguments]);\n    }\n    setLineDash(lineDash) {\n        lineDash = [...lineDash];\n        if (lineDash.length % 2 !== 0) {\n            lineDash = lineDash.concat(lineDash);\n        }\n        this.lineDash = lineDash;\n        this[67 /* TransferrableKeys.mutated */]('setLineDash', [...arguments]);\n    }\n    getLineDash() {\n        return [...this.lineDash];\n    }\n    clip(pathOrFillRule, fillRule) {\n        if (typeof pathOrFillRule === 'object') {\n            throw new Error('clip(Path2D) is currently not supported!');\n        }\n        this[67 /* TransferrableKeys.mutated */]('clip', [...arguments]);\n    }\n    fill(pathOrFillRule, fillRule) {\n        if (typeof pathOrFillRule === 'object') {\n            throw new Error('fill(Path2D) is currently not supported!');\n        }\n        this[67 /* TransferrableKeys.mutated */]('fill', [...arguments]);\n    }\n    // Method has a different signature in MDN than it does in HTML spec\n    setTransform(transformOrA, bOrC, cOrD, dOrE, eOrF, f) {\n        if (typeof transformOrA === 'object') {\n            throw new Error('setTransform(DOMMatrix2DInit) is currently not supported!');\n        }\n        this[67 /* TransferrableKeys.mutated */]('setTransform', [...arguments]);\n    }\n    createLinearGradient(x0, y0, x1, y1) {\n        const gradientId = this.objectIndex++;\n        this.createObjectReference(gradientId, 'createLinearGradient', [...arguments]);\n        return new CanvasGradient(gradientId, this.canvasElement.ownerDocument);\n    }\n    createRadialGradient(x0, y0, r0, x1, y1, r1) {\n        const gradientId = this.objectIndex++;\n        this.createObjectReference(gradientId, 'createRadialGradient', [...arguments]);\n        return new CanvasGradient(gradientId, this.canvasElement.ownerDocument);\n    }\n    createPattern(image, repetition) {\n        const patternId = this.objectIndex++;\n        this.createObjectReference(patternId, 'createPattern', [...arguments]);\n        return new CanvasPattern(patternId);\n    }\n    drawImage(image, dx, dy) {\n        this[67 /* TransferrableKeys.mutated */]('drawImage', [...arguments]);\n    }\n    createImageData() {\n        return {};\n    }\n    getImageData() {\n        return {};\n    }\n    putImageData() { }\n    isPointInPath() {\n        throw new Error('isPointInPath is not implemented.');\n    }\n    isPointInStroke() {\n        throw new Error('isPointInStroke is not implemented.');\n    }\n    measureText() {\n        throw new Error('measureText is not implemented.');\n    }\n}\n//# sourceMappingURL=OffscreenCanvasPolyfill.js.map","import { retrieveImageBitmap } from './canvas-utils';\n/**\n * Wraps CanvasPattern for usage in a native OffscreenCanvas case.\n */\nexport class FakeNativeCanvasPattern {\n    [70 /* TransferrableKeys.patternImplementation */] = {};\n    [71 /* TransferrableKeys.patternUpgraded */] = false;\n    [72 /* TransferrableKeys.patternUpgradePromise */];\n    /**\n     * Retrieves ImageBitmap object from main-thread, which replicates the input image. Upon\n     * retrieval, uses it to create a real CanvasPattern and upgrade the implementation property.\n     * @param canvas Canvas element used to create the pattern.\n     * @param image Image to be used as the pattern's image\n     * @param repetition DOMStrings indicating how to repeat the pattern's image.\n     */\n    [69 /* TransferrableKeys.retrieveCanvasPattern */](canvas, image, repetition) {\n        this[72 /* TransferrableKeys.patternUpgradePromise */] = retrieveImageBitmap(image, canvas)\n            // Create new pattern with retrieved ImageBitmap\n            .then((instance) => {\n            const pattern = canvas.getContext('2d').createPattern(instance, repetition);\n            if (!pattern) {\n                throw new Error('Pattern is null!');\n            }\n            this[70 /* TransferrableKeys.patternImplementation */] = pattern;\n            this[71 /* TransferrableKeys.patternUpgraded */] = true;\n        });\n        return this[72 /* TransferrableKeys.patternUpgradePromise */];\n    }\n    // This method is experimental.\n    // Takes an SVGMatrix as an argument, which is a deprecated API.\n    setTransform() { }\n}\n//# sourceMappingURL=FakeNativeCanvasPattern.js.map","import { transfer } from '../MutationTransfer';\nimport { OffscreenCanvasPolyfill } from './OffscreenCanvasPolyfill';\nimport { FakeNativeCanvasPattern } from './FakeNativeCanvasPattern';\nimport { retrieveImageBitmap } from './canvas-utils';\nexport const deferredUpgrades = new WeakMap();\n/**\n * Delegates all CanvasRenderingContext2D calls, either to an OffscreenCanvas or a polyfill\n * (depending on whether it is supported).\n */\nexport class CanvasRenderingContext2DShim {\n    queue = [];\n    implementation;\n    upgraded = false;\n    canvasElement;\n    polyfillUsed;\n    // createPattern calls need to retrieve an ImageBitmap from the main-thread. Since those can\n    // happen subsequently, we must keep track of these to avoid reentrancy problems.\n    unresolvedCalls = 0;\n    goodImplementation;\n    constructor(canvas) {\n        this.canvasElement = canvas;\n        const OffscreenCanvas = canvas.ownerDocument.defaultView.OffscreenCanvas;\n        // If the browser does not support OffscreenCanvas, use polyfill\n        if (typeof OffscreenCanvas === 'undefined') {\n            this.implementation = new OffscreenCanvasPolyfill(canvas).getContext('2d');\n            this.upgraded = true;\n            this.polyfillUsed = true;\n        }\n        // If the browser supports OffscreenCanvas:\n        // 1. Use un-upgraded (not auto-synchronized) version for all calls performed immediately after\n        // creation. All calls will be queued to call on upgraded version after.\n        // 2. Retrieve an auto-synchronized OffscreenCanvas from the main-thread and call all methods\n        // in the queue.\n        else {\n            this.implementation = new OffscreenCanvas(0, 0).getContext('2d');\n            this.getOffscreenCanvasAsync(this.canvasElement);\n            this.polyfillUsed = false;\n        }\n    }\n    /**\n     * Retrieves auto-synchronized version of an OffscreenCanvas from the main-thread.\n     * @param canvas HTMLCanvasElement associated with this context.\n     */\n    getOffscreenCanvasAsync(canvas) {\n        this.unresolvedCalls++;\n        const deferred = {};\n        const document = this.canvasElement.ownerDocument;\n        const isTestMode = !document.addGlobalEventListener;\n        const upgradePromise = new Promise((resolve) => {\n            const messageHandler = ({ data }) => {\n                if (data[12 /* TransferrableKeys.type */] === 9 /* MessageType.OFFSCREEN_CANVAS_INSTANCE */ &&\n                    data[13 /* TransferrableKeys.target */][0] === canvas[7 /* TransferrableKeys.index */]) {\n                    document.removeGlobalEventListener('message', messageHandler);\n                    const transferredOffscreenCanvas = data[38 /* TransferrableKeys.data */];\n                    resolve(transferredOffscreenCanvas);\n                }\n            };\n            if (!document.addGlobalEventListener) {\n                if (isTestMode) {\n                    deferred.resolve = resolve;\n                }\n                else {\n                    throw new Error('addGlobalEventListener is not defined.');\n                }\n            }\n            else {\n                document.addGlobalEventListener('message', messageHandler);\n                transfer(canvas.ownerDocument, [8 /* TransferrableMutationType.OFFSCREEN_CANVAS_INSTANCE */, canvas[7 /* TransferrableKeys.index */]]);\n            }\n        }).then((instance) => {\n            this.goodImplementation = instance.getContext('2d');\n            this.maybeUpgradeImplementation();\n        });\n        if (isTestMode) {\n            deferred.upgradePromise = upgradePromise;\n            deferredUpgrades.set(canvas, deferred);\n        }\n        return upgradePromise;\n    }\n    /**\n     * Degrades the underlying context implementation and adds to the unresolved call count.\n     */\n    degradeImplementation() {\n        this.upgraded = false;\n        const OffscreenCanvas = this.canvasElement.ownerDocument.defaultView.OffscreenCanvas;\n        this.implementation = new OffscreenCanvas(0, 0).getContext('2d');\n        this.unresolvedCalls++;\n    }\n    /**\n     * Will upgrade the underlying context implementation if no more unresolved calls remain.\n     */\n    maybeUpgradeImplementation() {\n        this.unresolvedCalls--;\n        if (this.unresolvedCalls === 0) {\n            this.implementation = this.goodImplementation;\n            this.upgraded = true;\n            this.flushQueue();\n        }\n    }\n    flushQueue() {\n        for (const call of this.queue) {\n            if (call.isSetter) {\n                this[call.fnName] = call.args[0];\n            }\n            else {\n                this[call.fnName](...call.args);\n            }\n        }\n        this.queue.length = 0;\n    }\n    delegateFunc(name, args) {\n        const returnValue = this.implementation[name](...args);\n        if (!this.upgraded) {\n            this.queue.push({ fnName: name, args, isSetter: false });\n        }\n        return returnValue;\n    }\n    delegateSetter(name, args) {\n        this.implementation[name] = args[0];\n        if (!this.upgraded) {\n            this.queue.push({ fnName: name, args, isSetter: true });\n        }\n    }\n    delegateGetter(name) {\n        return this.implementation[name];\n    }\n    /* DRAWING RECTANGLES */\n    clearRect(x, y, width, height) {\n        this.delegateFunc('clearRect', [...arguments]);\n    }\n    fillRect(x, y, width, height) {\n        this.delegateFunc('fillRect', [...arguments]);\n    }\n    strokeRect(x, y, width, height) {\n        this.delegateFunc('strokeRect', [...arguments]);\n    }\n    roundRect(x, y, w, h, radii) {\n        this.delegateFunc('roundRect', [...arguments]);\n    }\n    /* DRAWING TEXT */\n    fillText(text, x, y, maxWidth) {\n        this.delegateFunc('fillText', [...arguments]);\n    }\n    strokeText(text, x, y, maxWidth) {\n        this.delegateFunc('strokeText', [...arguments]);\n    }\n    measureText(text) {\n        return this.delegateFunc('measureText', [...arguments]);\n    }\n    /* LINE STYLES */\n    set lineWidth(value) {\n        this.delegateSetter('lineWidth', [...arguments]);\n    }\n    get lineWidth() {\n        return this.delegateGetter('lineWidth');\n    }\n    set lineCap(value) {\n        this.delegateSetter('lineCap', [...arguments]);\n    }\n    get lineCap() {\n        return this.delegateGetter('lineCap');\n    }\n    set lineJoin(value) {\n        this.delegateSetter('lineJoin', [...arguments]);\n    }\n    get lineJoin() {\n        return this.delegateGetter('lineJoin');\n    }\n    set miterLimit(value) {\n        this.delegateSetter('miterLimit', [...arguments]);\n    }\n    get miterLimit() {\n        return this.delegateGetter('miterLimit');\n    }\n    getLineDash() {\n        return this.delegateFunc('getLineDash', [...arguments]);\n    }\n    setLineDash(segments) {\n        this.delegateFunc('setLineDash', [...arguments]);\n    }\n    set lineDashOffset(value) {\n        this.delegateSetter('lineDashOffset', [...arguments]);\n    }\n    get lineDashOffset() {\n        return this.delegateGetter('lineDashOffset');\n    }\n    /* TEXT STYLES */\n    set font(value) {\n        this.delegateSetter('font', [...arguments]);\n    }\n    get font() {\n        return this.delegateGetter('font');\n    }\n    set textAlign(value) {\n        this.delegateSetter('textAlign', [...arguments]);\n    }\n    get textAlign() {\n        return this.delegateGetter('textAlign');\n    }\n    set textBaseline(value) {\n        this.delegateSetter('textBaseline', [...arguments]);\n    }\n    get textBaseline() {\n        return this.delegateGetter('textBaseline');\n    }\n    set direction(value) {\n        this.delegateSetter('direction', [...arguments]);\n    }\n    get direction() {\n        return this.delegateGetter('direction');\n    }\n    /* FILL AND STROKE STYLES */\n    set fillStyle(value) {\n        // 1. Native pattern instances given to the user hold the 'real' pattern as their implementation prop.\n        // 2. Pattern must be upgraded, otherwise an undefined 'implementation' will be queued instead of the wrapper object.\n        if (value instanceof FakeNativeCanvasPattern && this.upgraded) {\n            // This case occurs only when an un-upgraded pattern is passed into a different (already\n            // upgraded) canvas context.\n            if (!value[71 /* TransferrableKeys.patternUpgraded */]) {\n                this.queue.push({ fnName: 'fillStyle', args: [value], isSetter: true });\n                this.degradeImplementation();\n                value[72 /* TransferrableKeys.patternUpgradePromise */].then(() => {\n                    this.maybeUpgradeImplementation();\n                });\n            }\n            else {\n                this.delegateSetter('fillStyle', [value[70 /* TransferrableKeys.patternImplementation */]]);\n            }\n            // Any other case does not require special handling.\n        }\n        else {\n            this.delegateSetter('fillStyle', [...arguments]);\n        }\n    }\n    get fillStyle() {\n        return this.delegateGetter('fillStyle');\n    }\n    set strokeStyle(value) {\n        // 1. Native pattern instances given to the user hold the 'real' pattern as their implementation prop.\n        // 2. Pattern must be upgraded, otherwise an undefined 'implementation' could be queued instead of the wrapper object.\n        if (value instanceof FakeNativeCanvasPattern && this.upgraded) {\n            // This case occurs only when an un-upgraded pattern is passed into a different (already\n            // upgraded) canvas context.\n            if (!value[71 /* TransferrableKeys.patternUpgraded */]) {\n                this.queue.push({\n                    fnName: 'strokeStyle',\n                    args: [value],\n                    isSetter: true,\n                });\n                this.degradeImplementation();\n                value[72 /* TransferrableKeys.patternUpgradePromise */].then(() => {\n                    this.maybeUpgradeImplementation();\n                });\n            }\n            else {\n                this.delegateSetter('strokeStyle', [value[70 /* TransferrableKeys.patternImplementation */]]);\n            }\n            // Any other case does not require special handling.\n        }\n        else {\n            this.delegateSetter('strokeStyle', [...arguments]);\n        }\n    }\n    get strokeStyle() {\n        return this.delegateGetter('strokeStyle');\n    }\n    /* GRADIENTS AND PATTERNS */\n    createLinearGradient(x0, y0, x1, y1) {\n        return this.delegateFunc('createLinearGradient', [...arguments]);\n    }\n    createRadialGradient(x0, y0, r0, x1, y1, r1) {\n        return this.delegateFunc('createRadialGradient', [...arguments]);\n    }\n    createPattern(image, repetition) {\n        const ImageBitmap = this.canvasElement.ownerDocument.defaultView.ImageBitmap;\n        // Only HTMLElement image sources require special handling. ImageBitmap is OK to use.\n        if (this.polyfillUsed || image instanceof ImageBitmap) {\n            return this.delegateFunc('createPattern', [...arguments]);\n        }\n        else {\n            // Degrade the underlying implementation because we don't want calls on the real one until\n            // after pattern is retrieved\n            this.degradeImplementation();\n            const fakePattern = new FakeNativeCanvasPattern();\n            fakePattern[69 /* TransferrableKeys.retrieveCanvasPattern */](this.canvas, image, repetition).then(() => {\n                this.maybeUpgradeImplementation();\n            });\n            return fakePattern;\n        }\n    }\n    /* DRAWING IMAGES */\n    drawImage(image, dx, dy) {\n        const ImageBitmap = this.canvasElement.ownerDocument.defaultView.ImageBitmap;\n        // Only HTMLElement image sources require special handling. ImageBitmap is OK to use.\n        if (this.polyfillUsed || image instanceof ImageBitmap) {\n            this.delegateFunc('drawImage', [...arguments]);\n        }\n        else {\n            // Queue the drawImage call to make sure it gets called in correct order\n            const args = [];\n            this.queue.push({ fnName: 'drawImage', args, isSetter: false });\n            // Degrade the underlying implementation because we don't want calls on the real one\n            // until after the ImageBitmap is received.\n            this.degradeImplementation();\n            // Retrieve an ImageBitmap from the main-thread with the same image as the input image\n            retrieveImageBitmap(image, this.canvas)\n                // Then call the actual method with the retrieved ImageBitmap\n                .then((instance) => {\n                args.push(instance, dx, dy);\n                this.maybeUpgradeImplementation();\n            });\n        }\n    }\n    /* SHADOWS */\n    set shadowBlur(value) {\n        this.delegateSetter('shadowBlur', [...arguments]);\n    }\n    get shadowBlur() {\n        return this.delegateGetter('shadowBlur');\n    }\n    set shadowColor(value) {\n        this.delegateSetter('shadowColor', [...arguments]);\n    }\n    get shadowColor() {\n        return this.delegateGetter('shadowColor');\n    }\n    set shadowOffsetX(value) {\n        this.delegateSetter('shadowOffsetX', [...arguments]);\n    }\n    get shadowOffsetX() {\n        return this.delegateGetter('shadowOffsetX');\n    }\n    set shadowOffsetY(value) {\n        this.delegateSetter('shadowOffsetY', [...arguments]);\n    }\n    get shadowOffsetY() {\n        return this.delegateGetter('shadowOffsetY');\n    }\n    /* PATHS */\n    beginPath() {\n        this.delegateFunc('beginPath', [...arguments]);\n    }\n    closePath() {\n        this.delegateFunc('closePath', [...arguments]);\n    }\n    moveTo(x, y) {\n        this.delegateFunc('moveTo', [...arguments]);\n    }\n    lineTo(x, y) {\n        this.delegateFunc('lineTo', [...arguments]);\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this.delegateFunc('bezierCurveTo', [...arguments]);\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this.delegateFunc('quadraticCurveTo', [...arguments]);\n    }\n    arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n        this.delegateFunc('arc', [...arguments]);\n    }\n    arcTo(x1, y1, x2, y2, radius) {\n        this.delegateFunc('arcTo', [...arguments]);\n    }\n    ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise) {\n        this.delegateFunc('ellipse', [...arguments]);\n    }\n    rect(x, y, width, height) {\n        this.delegateFunc('rect', [...arguments]);\n    }\n    /* DRAWING PATHS */\n    fill(pathOrFillRule, fillRule) {\n        const args = [...arguments];\n        this.delegateFunc('fill', args);\n    }\n    stroke(path) {\n        const args = [...arguments];\n        this.delegateFunc('stroke', args);\n    }\n    clip(pathOrFillRule, fillRule) {\n        const args = [...arguments];\n        this.delegateFunc('clip', args);\n    }\n    isPointInPath(pathOrX, xOrY, yOrFillRule, fillRule) {\n        const args = [...arguments];\n        return this.delegateFunc('isPointInPath', args);\n    }\n    isPointInStroke(pathOrX, xOrY, y) {\n        const args = [...arguments];\n        return this.delegateFunc('isPointInStroke', args);\n    }\n    /* TRANSFORMATIONS */\n    rotate(angle) {\n        this.delegateFunc('rotate', [...arguments]);\n    }\n    scale(x, y) {\n        this.delegateFunc('scale', [...arguments]);\n    }\n    translate(x, y) {\n        this.delegateFunc('translate', [...arguments]);\n    }\n    transform(a, b, c, d, e, f) {\n        this.delegateFunc('transform', [...arguments]);\n    }\n    setTransform(transformOrA, bOrC, cOrD, dOrE, eOrF, f) {\n        const args = [...arguments];\n        this.delegateFunc('setTransform', args);\n    }\n    /* experimental */ resetTransform() {\n        this.delegateFunc('resetTransform', [...arguments]);\n    }\n    /* COMPOSITING */\n    set globalAlpha(value) {\n        this.delegateSetter('globalAlpha', [...arguments]);\n    }\n    get globalAlpha() {\n        return this.delegateGetter('globalAlpha');\n    }\n    set globalCompositeOperation(value) {\n        this.delegateSetter('globalCompositeOperation', [...arguments]);\n    }\n    get globalCompositeOperation() {\n        return this.delegateGetter('globalCompositeOperation');\n    }\n    /* PIXEL MANIPULATION */\n    createImageData(imagedataOrWidth, height) {\n        const args = [...arguments];\n        return this.delegateFunc('createImageData', args);\n    }\n    getImageData(sx, sy, sw, sh) {\n        return this.delegateFunc('getImageData', [...arguments]);\n    }\n    putImageData(imageData, dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight) {\n        this.delegateFunc('putImageData', [...arguments]);\n    }\n    /* IMAGE SMOOTHING */\n    /* experimental */ set imageSmoothingEnabled(value) {\n        this.delegateSetter('imageSmoothingEnabled', [...arguments]);\n    }\n    /* experimental */ get imageSmoothingEnabled() {\n        return this.delegateGetter('imageSmoothingEnabled');\n    }\n    /* experimental */ set imageSmoothingQuality(value) {\n        this.delegateSetter('imageSmoothingQuality', [...arguments]);\n    }\n    /* experimental */ get imageSmoothingQuality() {\n        return this.delegateGetter('imageSmoothingQuality');\n    }\n    /* THE CANVAS STATE */\n    save() {\n        this.delegateFunc('save', [...arguments]);\n    }\n    restore() {\n        this.delegateFunc('restore', [...arguments]);\n    }\n    // canvas property is readonly. We don't want to implement getters, but this must be here\n    // in order for TypeScript to not complain (for now)\n    get canvas() {\n        return this.canvasElement;\n    }\n    /* FILTERS */\n    /* experimental */ set filter(value) {\n        this.delegateSetter('filter', [...arguments]);\n    }\n    /* experimental */ get filter() {\n        return this.delegateGetter('filter');\n    }\n}\n//# sourceMappingURL=CanvasRenderingContext2D.js.map","import { HTMLElement } from './HTMLElement';\nimport { registerSubclass } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { CanvasRenderingContext2DShim } from '../canvas/CanvasRenderingContext2D';\nexport class HTMLCanvasElement extends HTMLElement {\n    context;\n    getContext(contextType) {\n        if (!this.context) {\n            if (contextType === '2D' || contextType === '2d') {\n                this.context = new CanvasRenderingContext2DShim(this);\n            }\n            else {\n                throw new Error('Context type not supported.');\n            }\n        }\n        return this.context;\n    }\n}\nregisterSubclass('canvas', HTMLCanvasElement);\n// Reflected Properties\n// HTMLCanvasElement.height => number, reflected attribute\n// HTMLCanvasElement.width => number, reflected attribute\nreflectProperties([{ height: [0] }, { width: [0] }], HTMLCanvasElement);\n// Unimplemented Properties\n// HTMLCanvasElement.mozOpaque => boolean\n// HTMLCanvasElement.mozPrintCallback => function\n// Unimplemented Methods\n// HTMLCanvasElement.captureStream()\n// HTMLCanvasElement.toDataURL()\n// HTMLCanvasElement.toBlob()\n// HTMLCanvasElement.transferControlToOffscreen()\n// HTMLCanvasElement.mozGetAsFile()\n//# sourceMappingURL=HTMLCanvasElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLDataElement extends HTMLElement {\n}\nregisterSubclass('data', HTMLDataElement);\n// Reflected properties, strings.\n// HTMLEmbedElement.value => string, reflected attribute\nreflectProperties([{ value: [''] }], HTMLDataElement);\n//# sourceMappingURL=HTMLDataElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nexport class HTMLDataListElement extends HTMLElement {\n    /**\n     * Getter returning option elements that are direct children of a HTMLDataListElement\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLDataListElement\n     * @return Element \"options\" objects that are direct children.\n     */\n    get options() {\n        return this.childNodes.filter((node) => node.nodeName === 'OPTION');\n    }\n}\nregisterSubclass('datalist', HTMLDataListElement);\n/**\n * HTMLDataListElement.options Read only\n * Is a HTMLCollection representing a collection of the contained option elements.\n */\n/**\n * <label for=\"myBrowser\">Choose a browser from this list:</label>\n * <input list=\"browsers\" id=\"myBrowser\" name=\"myBrowser\" />\n * <datalist id=\"browsers\">\n *   <option value=\"Chrome\">\n *   <option value=\"Firefox\">\n *   <option value=\"Internet Explorer\">\n *   <option value=\"Opera\">\n *   <option value=\"Safari\">\n *   <option value=\"Microsoft Edge\">\n * </datalist>\n */\n//# sourceMappingURL=HTMLDataListElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLEmbedElement extends HTMLElement {\n}\nregisterSubclass('embed', HTMLEmbedElement);\n// Reflected properties, strings.\n// HTMLEmbedElement.height => string, reflected attribute\n// HTMLEmbedElement.src => string, reflected attribute\n// HTMLEmbedElement.type => string, reflected attribute\n// HTMLEmbedElement.width => string, reflected attribute\nreflectProperties([{ height: [''] }, { src: [''] }, { type: [''] }, { width: [''] }], HTMLEmbedElement);\n// Unimplemented\n// HTMLEmbedElement.align => string, not reflected\n// HTMLEmbedElement.name => string, not reflected\n//# sourceMappingURL=HTMLEmbedElement.js.map","import { matchChildrenElements, tagNameConditionPredicate } from './matchElements';\nconst MATCHING_CHILD_ELEMENT_TAGNAMES = 'BUTTON FIELDSET INPUT OBJECT OUTPUT SELECT TEXTAREA'.split(' ');\n/**\n * The HTMLFormControlsCollection interface represents a collection of HTML form control elements.\n * It is mixedin to both HTMLFormElement and HTMLFieldSetElement.\n */\nexport const HTMLFormControlsCollectionMixin = (defineOn) => {\n    Object.defineProperty(defineOn.prototype, 'elements', {\n        /**\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormControlsCollection\n         * @return Element array matching children of specific tagnames.\n         */\n        get() {\n            return matchChildrenElements(this, tagNameConditionPredicate(MATCHING_CHILD_ELEMENT_TAGNAMES));\n        },\n    });\n};\n//# sourceMappingURL=HTMLFormControlsMixin.js.map","import { registerSubclass } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLFormControlsCollectionMixin } from './HTMLFormControlsMixin';\nimport { HTMLElement } from './HTMLElement';\nimport { toLower } from '../../utils';\nexport class HTMLFieldSetElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFieldSetElement\n     * @return hardcoded string 'fieldset'\n     */\n    get type() {\n        return toLower(this.tagName);\n    }\n}\nregisterSubclass('fieldset', HTMLFieldSetElement);\nHTMLFormControlsCollectionMixin(HTMLFieldSetElement);\n// Reflected properties\n// HTMLFieldSetElement.name => string, reflected attribute\n// HTMLFieldSetElement.disabled => boolean, reflected attribute\nreflectProperties([{ name: [''] }, { disabled: [false] }], HTMLFieldSetElement);\n// Unimplemented properties\n// HTMLFieldSetElement.validity\n// HTMLFieldSetElement.willValidate\n// HTMLFieldSetElement.validationMessage\n//# sourceMappingURL=HTMLFieldSetElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { HTMLFormControlsCollectionMixin } from './HTMLFormControlsMixin';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLFormElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/length\n     * @return number of controls in the form\n     */\n    get length() {\n        return this.elements.length;\n    }\n}\nregisterSubclass('form', HTMLFormElement);\nHTMLFormControlsCollectionMixin(HTMLFormElement);\n// Reflected properties\n// HTMLFormElement.name => string, reflected attribute\n// HTMLFormElement.method => string, reflected attribute\n// HTMLFormElement.target => string, reflected attribute\n// HTMLFormElement.action => string, reflected attribute\n// HTMLFormElement.enctype => string, reflected attribute\n// HTMLFormElement.acceptCharset => string, reflected attribute\n// HTMLFormElement.autocomplete => string, reflected attribute\n// HTMLFormElement.autocapitalize => string, reflected attribute\nreflectProperties([\n    { name: [''] },\n    { method: ['get'] },\n    { target: [''] },\n    { action: [''] },\n    { enctype: ['application/x-www-form-urlencoded'] },\n    { acceptCharset: ['', /* attr */ 'accept-charset'] },\n    { autocomplete: ['on'] },\n    { autocapitalize: ['sentences'] },\n], HTMLFormElement);\n// Unimplemented properties\n// HTMLFormElement.encoding => string, reflected attribute\n// HTMLFormElement.noValidate => boolean, reflected attribute\n/*\nUnimplemented, TBD:\n\nNamed inputs are added to their owner form instance as properties, and can overwrite native properties\nif they share the same name (eg a form with an input named action will have its action property return\nthat input instead of the form's action HTML attribute).\n*/\n//# sourceMappingURL=HTMLFormElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList } from './DOMTokenList';\nexport class HTMLIFrameElement extends HTMLElement {\n    _sandbox;\n    // HTMLIFrameElement.sandbox, DOMTokenList, reflected attribute\n    get sandbox() {\n        return this._sandbox || (this._sandbox = new DOMTokenList(this, 'sandbox'));\n    }\n}\nregisterSubclass('iframe', HTMLIFrameElement);\ndefinePropertyBackedAttributes(HTMLIFrameElement, {\n    sandbox: [(el) => el.sandbox.value, (el, value) => (el.sandbox.value = value)],\n});\n// Reflected properties\n// HTMLIFrameElement.allow => string, reflected attribute\n// HTMLIFrameElement.allowFullscreen => boolean, reflected attribute\n// HTMLIFrameElement.csp => string, reflected attribute\n// HTMLIFrameElement.height => string, reflected attribute\n// HTMLIFrameElement.name => string, reflected attribute\n// HTMLIFrameElement.referrerPolicy => string, reflected attribute\n// HTMLIFrameElement.src => string, reflected attribute\n// HTMLIFrameElement.srcdoc => string, reflected attribute\n// HTMLIFrameElement.width => string, reflected attribute\nreflectProperties([\n    { allow: [''] },\n    { allowFullscreen: [false] },\n    { csp: [''] },\n    { height: [''] },\n    { name: [''] },\n    { referrerPolicy: [''] },\n    { src: [''] },\n    { srcdoc: [''] },\n    { width: [''] },\n], HTMLIFrameElement);\n// Unimplemented Properties\n// HTMLIFrameElement.allowPaymentRequest => boolean, reflected attribute\n// HTMLIFrameElement.contentDocument => Document, read only (active document in the inline frame's nested browsing context)\n// HTMLIFrameElement.contentWindow => WindowProxy, read only (window proxy for the nested browsing context)\n//# sourceMappingURL=HTMLIFrameElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLImageElement extends HTMLElement {\n}\nregisterSubclass('img', HTMLImageElement);\n// Reflected Properties\n// HTMLImageElement.alt => string, reflected attribute\n// HTMLImageElement.crossOrigin => string, reflected attribute\n// HTMLImageElement.height => number, reflected attribute\n// HTMLImageElement.isMap => boolean, reflected attribute\n// HTMLImageElement.referrerPolicy => string, reflected attribute\n// HTMLImageElement.src => string, reflected attribute\n// HTMLImageElement.sizes => string, reflected attribute\n// HTMLImageElement.srcset => string, reflected attribute\n// HTMLImageElement.useMap => string, reflected attribute\n// HTMLImageElement.width => number, reflected attribute\nreflectProperties([\n    { alt: [''] },\n    { crossOrigin: [''] },\n    { height: [0] },\n    { isMap: [false] },\n    { referrerPolicy: [''] },\n    { src: [''] },\n    { sizes: [''] },\n    { srcset: [''] },\n    { useMap: [''] },\n    { width: [0] },\n], HTMLImageElement);\n// Unimplmented Properties\n// HTMLImageElement.complete Read only\n// Returns a Boolean that is true if the browser has finished fetching the image, whether successful or not. It also shows true, if the image has no src value.\n// HTMLImageElement.currentSrc Read only\n// Returns a DOMString representing the URL to the currently displayed image (which may change, for example in response to media queries).\n// HTMLImageElement.naturalHeight Read only\n// Returns a unsigned long representing the intrinsic height of the image in CSS pixels, if it is available; else, it shows 0.\n// HTMLImageElement.naturalWidth Read only\n// Returns a unsigned long representing the intrinsic width of the image in CSS pixels, if it is available; otherwise, it will show 0.\n//# sourceMappingURL=HTMLImageElement.js.map","import { matchChildrenElements } from './matchElements';\n/**\n * The HTMLInputLabels interface represents a collection of input getters for their related label Elements.\n * It is mixedin to both HTMLInputElement, HTMLMeterElement, and HTMLProgressElement.\n */\nexport const HTMLInputLabelsMixin = (defineOn) => {\n    Object.defineProperty(defineOn.prototype, 'labels', {\n        /**\n         * Getter returning label elements associated to this meter.\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLProgressElement/labels\n         * @return label elements associated to this meter.\n         */\n        get() {\n            return matchChildrenElements(this.ownerDocument || this, (element) => element.tagName === 'LABEL' && element.for && element.for === this.id);\n        },\n    });\n};\n//# sourceMappingURL=HTMLInputLabelsMixin.js.map","import { HTMLElement } from './HTMLElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nimport { reflectProperties } from './enhanceElement';\nimport { registerSubclass } from './Element';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\nexport class HTMLInputElement extends HTMLElement {\n    // Per spec, some attributes like 'value' and 'checked' change behavior based on dirty flags.\n    // Since these flags can only be changed on interaction (outside of worker), we can ignore them here.\n    // Tradeoffs: Consequent attribute changes are missing, HTMLFormElement.reset() doesn't work, etc.\n    // Alternative: Implement dirty flag checking in worker-dom, which would require listening for\n    //     and forwarding interaction events to flag \"dirtiness\".\n    // https://html.spec.whatwg.org/multipage/input.html#common-input-element-apis\n    [21 /* TransferrableKeys.value */] = '';\n    dirtyValue = false;\n    [47 /* TransferrableKeys.checked */] = false;\n    // TODO(willchou): There are a few interrelated issues with `value` property.\n    //   1. \"Dirtiness\" caveat above.\n    //   2. Duplicate SYNC events. Sent by every event fired from elements with a `value`, plus the default 'change' listener.\n    //   3. Duplicate MUTATE events. Caused by stale `value` in worker due to no default 'input' listener (see below).\n    get value() {\n        return !this.dirtyValue ? this.getAttribute('value') || '' : this[21 /* TransferrableKeys.value */];\n    }\n    set value(value) {\n        // Don't early-out if value doesn't appear to have changed.\n        // The worker may have a stale value since 'input' events aren't being forwarded.\n        this[21 /* TransferrableKeys.value */] = String(value);\n        this.dirtyValue = true;\n        transfer(this.ownerDocument, [\n            3 /* TransferrableMutationType.PROPERTIES */,\n            this[7 /* TransferrableKeys.index */],\n            storeString('value'),\n            0 /* NumericBoolean.FALSE */,\n            storeString(value),\n        ]);\n    }\n    get valueAsDate() {\n        // Don't use Date constructor or Date.parse() since ISO 8601 (yyyy-mm-dd) parsing is inconsistent.\n        const date = this.stringToDate(this.value);\n        const invalid = !date || isNaN(date.getTime());\n        return invalid ? null : date;\n    }\n    /** Unlike browsers, does not throw if this input[type] doesn't support dates. */\n    set valueAsDate(value) {\n        if (!(value instanceof Date)) {\n            throw new TypeError('The provided value is not a Date.');\n        }\n        this.value = this.dateToString(value);\n    }\n    get valueAsNumber() {\n        if (this.value.length === 0) {\n            return NaN;\n        }\n        return Number(this.value);\n    }\n    /** Unlike browsers, does not throw if this input[type] doesn't support numbers. */\n    set valueAsNumber(value) {\n        if (typeof value === 'number') {\n            this.value = String(value);\n        }\n        else {\n            this.value = '';\n        }\n    }\n    get checked() {\n        return this[47 /* TransferrableKeys.checked */];\n    }\n    set checked(value) {\n        if (this[47 /* TransferrableKeys.checked */] === value) {\n            return;\n        }\n        this[47 /* TransferrableKeys.checked */] = !!value;\n        transfer(this.ownerDocument, [\n            3 /* TransferrableMutationType.PROPERTIES */,\n            this[7 /* TransferrableKeys.index */],\n            storeString('checked'),\n            1 /* NumericBoolean.TRUE */,\n            value === true ? 1 /* NumericBoolean.TRUE */ : 0 /* NumericBoolean.FALSE */,\n        ]);\n    }\n    /**\n     * Returns a date in 'yyyy-mm-dd' format.\n     * @param date\n     */\n    dateToString(date) {\n        const y = date.getFullYear();\n        const m = date.getMonth() + 1; // getMonth() is 0-index.\n        const d = date.getDate();\n        return `${y}-${m > 9 ? '' : '0'}${m}-${d > 9 ? '' : '0'}${d}`;\n    }\n    /**\n     * Returns a Date from a 'yyyy-mm-dd' format.\n     * @param s\n     */\n    stringToDate(str) {\n        const components = str.split('-');\n        if (components.length !== 3) {\n            return null;\n        }\n        const [y, m, d] = components;\n        // Month is 0-index.\n        return new Date(parseInt(y, 10), parseInt(m, 10) - 1, parseInt(d, 10));\n    }\n}\nregisterSubclass('input', HTMLInputElement);\nHTMLInputLabelsMixin(HTMLInputElement);\n// Reflected Properties\n// HTMLInputElement.formAction => string, reflected attribute\n// HTMLInputElement.formEncType\t=> string, reflected attribute\n// HTMLInputElement.formMethod => string, reflected attribute\n// HTMLInputElement.formTarget => string, reflected attribute\n// HTMLInputElement.name => string, reflected attribute\n// HTMLInputElement.type => string, reflected attribute\n// HTMLInputElement.disabled => boolean, reflected attribute\n// HTMLInputElement.autofocus => boolean, reflected attribute\n// HTMLInputElement.required => boolean, reflected attribute\n// HTMLInputElement.defaultChecked => boolean, reflected attribute (\"checked\")\n// HTMLInputElement.alt => string, reflected attribute\n// HTMLInputElement.height => number, reflected attribute\n// HTMLInputElement.src => string, reflected attribute\n// HTMLInputElement.width => number, reflected attribute\n// HTMLInputElement.accept => string, reflected attribute\n// HTMLInputElement.autocomplete => string, reflected attribute\n// HTMLInputElement.maxLength => number, reflected attribute\n// HTMLInputElement.size => number, reflected attribute\n// HTMLInputElement.pattern => string, reflected attribute\n// HTMLInputElement.placeholder => string, reflected attribute\n// HTMLInputElement.readOnly => boolean, reflected attribute\n// HTMLInputElement.min => string, reflected attribute\n// HTMLInputElement.max => string, reflected attribute\n// HTMLInputElement.defaultValue => string, reflected attribute\n// HTMLInputElement.dirname => string, reflected attribute\n// HTMLInputElement.multiple => boolean, reflected attribute\n// HTMLInputElement.step => string, reflected attribute\n// HTMLInputElement.autocapitalize => string, reflected attribute\nreflectProperties([\n    { accept: [''] },\n    { alt: [''] },\n    { autocapitalize: [''] },\n    { autocomplete: [''] },\n    { autofocus: [false] },\n    { defaultChecked: [false, /* attr */ 'checked'] },\n    { defaultValue: ['', /* attr */ 'value'] },\n    { dirName: [''] },\n    { disabled: [false] },\n    { formAction: [''] },\n    { formEncType: [''] },\n    { formMethod: [''] },\n    { formTarget: [''] },\n    { height: [0] },\n    { max: [''] },\n    { maxLength: [0] },\n    { min: [''] },\n    { multiple: [false] },\n    { name: [''] },\n    { pattern: [''] },\n    { placeholder: [''] },\n    { readOnly: [false] },\n    { required: [false] },\n    { size: [0] },\n    { src: [''] },\n    { step: [''] },\n    { type: ['text'] },\n    { width: [0] },\n], HTMLInputElement);\n// TODO(KB) Not Reflected Properties\n// HTMLInputElement.indeterminate => boolean\n// Unimplemented Properties\n// HTMLInputElement.formNoValidate => string, reflected attribute\n// HTMLInputElement.validity => ValidityState, readonly\n// HTMLInputElement.validationMessage => string, readonly\n// HTMLInputElement.willValidate => boolean, readonly\n// HTMLInputElement.allowdirs => boolean\n// HTMLInputElement.files\t=> Array<File>\n// HTMLInputElement.webkitdirectory\t=> boolean, reflected attribute\n// HTMLInputElement.webkitEntries => Array<FileSystemEntry>\n// HTMLInputElement.selectionStart => number\n// HTMLInputElement.selectionEnd => number\n// HTMLInputElement.selectionDirection => string\n// HTMLInputElement.list => Element, read only (element pointed by list attribute)\n// Unimplemented Methods\n// HTMLInputElement.setSelectionRange()\n// HTMLInputElement.setRangeText()\n// HTMLInputElement.setCustomValidity()\n// HTMLInputElement.checkValidity()\n// HTMLInputElement.stepDown()\n// HTMLInputElement.stepUp()\n//# sourceMappingURL=HTMLInputElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { matchChildElement, tagNameConditionPredicate } from './matchElements';\nexport class HTMLLabelElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control\n     * @return input element\n     */\n    get control() {\n        const htmlFor = this.getAttribute('for');\n        if (htmlFor !== null) {\n            return this.ownerDocument && this.ownerDocument.getElementById(htmlFor);\n        }\n        return matchChildElement(this, tagNameConditionPredicate(['INPUT']));\n    }\n}\nregisterSubclass('label', HTMLLabelElement);\n// Reflected Properties\n// HTMLLabelElement.htmlFor => string, reflected attribute 'for'\nreflectProperties([{ htmlFor: ['', 'for'] }], HTMLLabelElement);\n//# sourceMappingURL=HTMLLabelElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nexport class HTMLLinkElement extends HTMLElement {\n    _relList;\n    get relList() {\n        return this._relList || (this._relList = new DOMTokenList(this, 'rel'));\n    }\n}\nregisterSubclass('link', HTMLLinkElement);\ndefinePropertyBackedAttributes(HTMLLinkElement, {\n    rel: [(el) => el.relList.value, (el, value) => (el.relList.value = value)],\n});\nsynchronizedAccessor(HTMLLinkElement, 'relList', 'rel');\n// Reflected Properties\n// HTMLLinkElement.as => string, reflected attribute\n// HTMLLinkElement.crossOrigin => string, reflected attribute\n// HTMLLinkElement.disabled => boolean, reflected attribute\n// HTMLLinkElement.href => string, reflected attribute\n// HTMLLinkElement.hreflang => string, reflected attribute\n// HTMLLinkElement.media => string, reflected attribute\n// HTMLLinkElement.referrerPolicy => string, reflected attribute\n// HTMLLinkElement.sizes => string, reflected attribute\n// HTMLLinkElement.type => string, reflected attribute\nreflectProperties([\n    { as: [''] },\n    { crossOrigin: [''] },\n    { disabled: [false] },\n    { href: [''] },\n    { hreflang: [''] },\n    { media: [''] },\n    { referrerPolicy: [''] },\n    { sizes: [''] },\n    { type: [''] },\n], HTMLLinkElement);\n// Unimplemented Properties\n// LinkStyle.sheet Read only\n// Returns the StyleSheet object associated with the given element, or null if there is none.\n//# sourceMappingURL=HTMLLinkElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { matchChildrenElements } from './matchElements';\nexport class HTMLMapElement extends HTMLElement {\n    /**\n     * Getter returning area elements associated to this map.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLMapElement\n     * @return area elements associated to this map.\n     */\n    get areas() {\n        return matchChildrenElements(this, (element) => element.tagName === 'AREA');\n    }\n}\nregisterSubclass('map', HTMLMapElement);\n// Reflected Properties\n// HTMLMapElement.name => string, reflected attribute\nreflectProperties([{ name: [''] }], HTMLMapElement);\n//# sourceMappingURL=HTMLMapElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nexport class HTMLMeterElement extends HTMLElement {\n}\nregisterSubclass('meter', HTMLMeterElement);\nHTMLInputLabelsMixin(HTMLMeterElement);\n// Reflected Properties\n// HTMLMeterElement.high => number, reflected attribute\n// HTMLMeterElement.low => number, reflected attribute\n// HTMLMeterElement.max => number, reflected attribute\n// HTMLMeterElement.min => number, reflected attribute\n// HTMLMeterElement.optimum => number, reflected attribute\n// HTMLMeterElement.value => number, reflected attribute\nreflectProperties([{ high: [0] }, { low: [0] }, { max: [1] }, { min: [0] }, { optimum: [0] }, { value: [0] }], HTMLMeterElement);\n//# sourceMappingURL=HTMLMeterElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLModElement extends HTMLElement {\n}\nregisterSubclass('del', HTMLModElement);\nregisterSubclass('ins', HTMLModElement);\n// Reflected Properties\n// HTMLModElement.cite => string, reflected attribute\n// HTMLModElement.datetime => string, reflected attribute\nreflectProperties([{ cite: [''] }, { datetime: [''] }], HTMLModElement);\n//# sourceMappingURL=HTMLModElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLOListElement extends HTMLElement {\n}\nregisterSubclass('ol', HTMLOListElement);\n// Reflected Properties\n// HTMLModElement.reversed => boolean, reflected attribute\n// HTMLModElement.start => number, reflected attribute\n// HTMLOListElement.type => string, reflected attribute\nreflectProperties([{ reversed: [false] }, { start: [1] }, { type: [''] }], HTMLOListElement);\n//# sourceMappingURL=HTMLOListElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { transfer } from '../MutationTransfer';\nimport { store as storeString } from '../strings';\nexport class HTMLOptionElement extends HTMLElement {\n    [52 /* TransferrableKeys.selected */] = false;\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return position of the option within the list of options it's within, or zero if there is no valid parent.\n     */\n    get index() {\n        return (this.parentNode && this.parentNode.children.indexOf(this)) || 0;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return label attribute value or text content if there is no attribute.\n     */\n    get label() {\n        return this.getAttribute('label') || this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param label new label value to store as an attribute.\n     */\n    set label(label) {\n        this.setAttribute('label', label);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return boolean based on if the option element is selected.\n     */\n    get selected() {\n        return this[52 /* TransferrableKeys.selected */];\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param value new selected boolean value.\n     */\n    set selected(value) {\n        this[52 /* TransferrableKeys.selected */] = !!value;\n        transfer(this.ownerDocument, [\n            3 /* TransferrableMutationType.PROPERTIES */,\n            this[7 /* TransferrableKeys.index */],\n            storeString('selected'),\n            1 /* NumericBoolean.TRUE */,\n            this[52 /* TransferrableKeys.selected */] ? 1 /* NumericBoolean.TRUE */ : 0 /* NumericBoolean.FALSE */,\n        ]);\n    }\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param text new text content to store for this Element.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return value attribute value or text content if there is no attribute.\n     */\n    get value() {\n        return this.getAttribute('value') || this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param value new value for an option element.\n     */\n    set value(value) {\n        this.setAttribute('value', value);\n    }\n}\nregisterSubclass('option', HTMLOptionElement);\ndefinePropertyBackedAttributes(HTMLOptionElement, {\n    selected: [(el) => String(el[52 /* TransferrableKeys.selected */]), (el, value) => (el.selected = value === 'true')],\n});\n// Reflected Properties\n// HTMLOptionElement.defaultSelected => boolean, reflected attribute\n// HTMLOptionElement.disabled => boolean, reflected attribute\n// HTMLOptionElement.type => string, reflected attribute\nreflectProperties([{ defaultSelected: [false, /* attr */ 'selected'] }, { disabled: [false] }, { type: [''] }], HTMLOptionElement);\n// Implemented at HTMLElement\n// HTMLOptionElement.form, Read only\t=> HTMLFormElement\n//# sourceMappingURL=HTMLOptionElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nexport class HTMLProgressElement extends HTMLElement {\n    [48 /* TransferrableKeys.indeterminate */] = true;\n    [21 /* TransferrableKeys.value */] = 0;\n    dirtyValue = false;\n    get position() {\n        return this[48 /* TransferrableKeys.indeterminate */] ? -1 : this.value / this.max;\n    }\n    get value() {\n        return !this.dirtyValue ? Number(this.getAttribute('value')) || 0 : this[21 /* TransferrableKeys.value */];\n    }\n    set value(value) {\n        this[48 /* TransferrableKeys.indeterminate */] = false;\n        this[21 /* TransferrableKeys.value */] = value;\n        this.dirtyValue = true;\n        // TODO(KB) This is a property mutation needing tracked.\n    }\n}\nregisterSubclass('progress', HTMLProgressElement);\nHTMLInputLabelsMixin(HTMLProgressElement);\n// Reflected Properties\n// HTMLModElement.max => number, reflected attribute\nreflectProperties([{ max: [1] }], HTMLProgressElement);\n//# sourceMappingURL=HTMLProgressElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLQuoteElement extends HTMLElement {\n}\nregisterSubclass('blockquote', HTMLQuoteElement);\nregisterSubclass('q', HTMLQuoteElement);\n// Reflected Properties\n// HTMLModElement.cite => string, reflected attribute\nreflectProperties([{ cite: [''] }], HTMLQuoteElement);\n//# sourceMappingURL=HTMLQuoteElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLScriptElement extends HTMLElement {\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement\n     * @param text new text content to store for this Element.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n}\nregisterSubclass('script', HTMLScriptElement);\n// Reflected Properties\n// HTMLScriptElement.type => string, reflected attribute\n// HTMLScriptElement.src => string, reflected attribute\n// HTMLScriptElement.charset => string, reflected attribute\n// HTMLScriptElement.async => boolean, reflected attribute\n// HTMLScriptElement.defer => boolean, reflected attribute\n// HTMLScriptElement.crossOrigin => string, reflected attribute\n// HTMLScriptElement.noModule => boolean, reflected attribute\nreflectProperties([{ type: [''] }, { src: [''] }, { charset: [''] }, { async: [false] }, { defer: [false] }, { crossOrigin: [''] }, { noModule: [false] }], HTMLScriptElement);\n//# sourceMappingURL=HTMLScriptElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nimport { matchChildrenElements, matchChildElement, tagNameConditionPredicate } from './matchElements';\nconst isOptionPredicate = tagNameConditionPredicate(['OPTION']);\nconst isSelectedOptionPredicate = (element) => isOptionPredicate(element) && element.selected === true;\nexport class HTMLSelectElement extends HTMLElement {\n    [49 /* TransferrableKeys.size */] = -1 /* SizeDefaults.UNMODIFIED */;\n    /**\n     * Extend functionality after child insertion to make sure the correct option is selected.\n     * @param child\n     */\n    [56 /* TransferrableKeys.insertedNode */](child) {\n        super[56 /* TransferrableKeys.insertedNode */](child);\n        // When this singular value select is appending a child, set the value property for two cases.\n        // 1. The inserted child is already selected.\n        // 2. The current value of the select is the default ('').\n        if ((!this.multiple && isOptionPredicate(child) && child.selected) || this.value === '') {\n            this.value = child.value;\n        }\n    }\n    /**\n     * Extend functionality after child insertion to make sure the correct option is selected.\n     * @param child\n     */\n    [57 /* TransferrableKeys.removedNode */](child) {\n        super[57 /* TransferrableKeys.removedNode */](child);\n        // When this singular value select is removing a selected child\n        // ... set the value property to the first valid option.\n        if (!this.multiple && child.selected) {\n            const options = this.options;\n            if (options.length > 0) {\n                this.value = options[0].value;\n            }\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/length\n     * @return number of controls in the form\n     */\n    get length() {\n        return this.options.length;\n    }\n    /**\n     * Getter returning option elements that are direct children of a HTMLSelectElement\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return Element \"options\" objects that are direct children.\n     */\n    get options() {\n        return this.children.filter(isOptionPredicate);\n    }\n    /**\n     * Getter returning the index of the first selected <option> element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedIndex\n     * @return the index of the first selected option element, or -1 if no element is selected.\n     */\n    get selectedIndex() {\n        const firstSelectedChild = matchChildElement(this, isSelectedOptionPredicate);\n        return firstSelectedChild ? this.children.indexOf(firstSelectedChild) : -1;\n    }\n    /**\n     * Setter making the <option> element at the passed index selected.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedIndex\n     * @param selectedIndex index number to make selected.\n     */\n    set selectedIndex(selectedIndex) {\n        this.children.forEach((element, index) => (element.selected = index === selectedIndex));\n    }\n    /**\n     * Getter returning the <option> elements selected.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedOptions\n     * @return array of Elements currently selected.\n     */\n    get selectedOptions() {\n        return matchChildrenElements(this, isSelectedOptionPredicate);\n    }\n    /**\n     * Getter returning the size of the select element (by default 1 for single and 4 for multiple)\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return size of the select element.\n     */\n    get size() {\n        return this[49 /* TransferrableKeys.size */] === -1 /* SizeDefaults.UNMODIFIED */\n            ? this.multiple\n                ? 4 /* SizeDefaults.MULTIPLE */\n                : 1 /* SizeDefaults.SINGLE */\n            : this[49 /* TransferrableKeys.size */];\n    }\n    /**\n     * Override the size of this element (each positive unit is the height of a single option)\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @param size number to set the size to.\n     */\n    set size(size) {\n        this[49 /* TransferrableKeys.size */] = size > 0 ? size : this.multiple ? 4 /* SizeDefaults.MULTIPLE */ : 1 /* SizeDefaults.SINGLE */;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return string representing the select element type.\n     */\n    get type() {\n        return this.multiple ? \"select-one\" /* TypeDefaults.MULTIPLE */ : \"select-multiple\" /* TypeDefaults.SINGLE */;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return the value of the first selected option\n     */\n    get value() {\n        const firstSelectedChild = matchChildElement(this, isSelectedOptionPredicate);\n        return firstSelectedChild ? firstSelectedChild.value : '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @set value\n     */\n    set value(value) {\n        const stringValue = String(value);\n        this.children.forEach((element) => isOptionPredicate(element) && (element.selected = element.value === stringValue));\n    }\n}\nregisterSubclass('select', HTMLSelectElement);\nHTMLInputLabelsMixin(HTMLSelectElement);\n// Reflected Properties\n// HTMLSelectElement.multiple => boolean, reflected attribute\n// HTMLSelectElement.name => string, reflected attribute\n// HTMLSelectElement.required => boolean, reflected attribute\nreflectProperties([{ multiple: [false] }, { name: [''] }, { required: [false] }], HTMLSelectElement);\n// Implemented on HTMLElement\n// HTMLSelectElement.form => HTMLFormElement, readonly\n// Unimplemented Properties\n// HTMLSelectElement.validation => string\n// HTMLSelectElement.validity => ValidityState\n// HTMLSelectElement.willValidate => boolean\n//# sourceMappingURL=HTMLSelectElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLSourceElement extends HTMLElement {\n}\nregisterSubclass('source', HTMLSourceElement);\n// Reflected Properties\n// HTMLSourceElement.media => string, reflected attribute\n// HTMLSourceElement.sizes => string, reflected attribute\n// HTMLSourceElement.src => string, reflected attribute\n// HTMLSourceElement.srcset => string, reflected attribute\n// HTMLSourceElement.type => string, reflected attribute\nreflectProperties([{ media: [''] }, { sizes: [''] }, { src: [''] }, { srcset: [''] }, { type: [''] }], HTMLSourceElement);\n// Unimplemented Properties\n// HTMLSourceElement.keySystem => string\n//# sourceMappingURL=HTMLSourceElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLStyleElement extends HTMLElement {\n}\nregisterSubclass('style', HTMLStyleElement);\n// Reflected Properties\n// HTMLStyleElement.media => string, reflected attribute\n// HTMLStyleElement.type => string, reflected attribute\nreflectProperties([{ media: [''] }, { type: [''] }], HTMLStyleElement);\n// Unimplemented Properties\n// HTMLStyleElement.disabled => boolean\n// HTMLStyleElement.scoped => boolean, reflected attribute\n// HTMLStyleElement.sheet => StyleSheet, read only\n//# sourceMappingURL=HTMLStyleElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList } from './DOMTokenList';\nimport { matchNearestParent, tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nexport class HTMLTableCellElement extends HTMLElement {\n    _headers;\n    get headers() {\n        return this._headers || (this._headers = new DOMTokenList(this, 'headers'));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCellElement\n     * @return position of the cell within the parent tr, if not nested in a tr the value is -1.\n     */\n    get cellIndex() {\n        const parent = matchNearestParent(this, tagNameConditionPredicate(['TR']));\n        return parent !== null ? matchChildrenElements(parent, tagNameConditionPredicate(['TH', 'TD'])).indexOf(this) : -1;\n    }\n}\nregisterSubclass('th', HTMLTableCellElement);\nregisterSubclass('td', HTMLTableCellElement);\ndefinePropertyBackedAttributes(HTMLTableCellElement, {\n    headers: [(el) => el.headers.value, (el, value) => (el.headers.value = value)],\n});\n// Reflected Properties\n// HTMLTableCellElement.abbr => string, reflected attribute\n// HTMLTableCellElement.colSpan => number, reflected attribute\n// HTMLTableCellElement.rowSpan => number, reflected attribute\n// HTMLTableCellElement.scope => string, reflected attribute\nreflectProperties([{ abbr: [''] }, { colSpan: [1] }, { rowSpan: [1] }, { scope: [''] }], HTMLTableCellElement);\n//# sourceMappingURL=HTMLTableCellElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLTableColElement extends HTMLElement {\n}\nregisterSubclass('col', HTMLTableColElement);\n// Reflected Properties\n// HTMLTableColElement.span => number, reflected attribute\nreflectProperties([{ span: [1] }], HTMLTableColElement);\n//# sourceMappingURL=HTMLTableColElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { matchChildElement, matchChildrenElements, tagNameConditionPredicate } from './matchElements';\nimport { toUpper } from '../../utils';\nconst removeElement = (element) => element && element.remove();\nconst insertBeforeElementsWithTagName = (parent, element, tagNames) => {\n    console.assert(tagNames.every((t) => t === toUpper(t)), 'tagNames must be all uppercase.');\n    const insertBeforeElement = matchChildElement(parent, (element) => !tagNames.includes(element.tagName));\n    if (insertBeforeElement) {\n        parent.insertBefore(element, insertBeforeElement);\n    }\n    else {\n        parent.appendChild(element);\n    }\n};\nexport class HTMLTableElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/caption\n     * @return first matching caption Element or null if none exists.\n     */\n    get caption() {\n        return matchChildElement(this, tagNameConditionPredicate(['CAPTION']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/caption\n     * @param element new caption element to replace the existing, or become the first element child.\n     */\n    set caption(newElement) {\n        if (newElement && newElement.tagName === 'CAPTION') {\n            // If a correct object is given,\n            // it is inserted in the tree as the first child of this element and the first <caption>\n            // that is a child of this element is removed from the tree, if any.\n            removeElement(this.caption);\n            this.insertBefore(newElement, this.firstElementChild);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @return first matching thead Element or null if none exists.\n     */\n    get tHead() {\n        return matchChildElement(this, tagNameConditionPredicate(['THEAD']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @param newElement new thead element to insert in this table.\n     */\n    set tHead(newElement) {\n        if (newElement && newElement.tagName === 'THEAD') {\n            // If a correct object is given,\n            // it is inserted in the tree immediately before the first element that is\n            // neither a <caption>, nor a <colgroup>, or as the last child if there is no such element.\n            // Additionally, the first <thead> that is a child of this element is removed from the tree, if any.\n            removeElement(this.tHead);\n            insertBeforeElementsWithTagName(this, newElement, ['CAPTION', 'COLGROUP']);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @return first matching thead Element or null if none exists.\n     */\n    get tFoot() {\n        return matchChildElement(this, tagNameConditionPredicate(['TFOOT']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @param newElement new tfoot element to insert in this table.\n     */\n    set tFoot(newElement) {\n        if (newElement && newElement.tagName === 'TFOOT') {\n            // If a correct object is given,\n            // it is inserted in the tree immediately before the first element that is neither a <caption>,\n            // a <colgroup>, nor a <thead>, or as the last child if there is no such element, and the first <tfoot> that is a child of\n            // this element is removed from the tree, if any.\n            removeElement(this.tFoot);\n            insertBeforeElementsWithTagName(this, newElement, ['CAPTION', 'COLGROUP', 'THEAD']);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement\n     * @return array of 'tr' tagname elements\n     */\n    get rows() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TR']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement\n     * @return array of 'tbody' tagname elements\n     */\n    get tBodies() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TBODY']));\n    }\n}\nregisterSubclass('table', HTMLTableElement);\n// Unimplemented Properties\n// HTMLTableElement.sortable => boolean\n// Unimplemented Methods\n// HTMLTableElement.createTHead()\n// HTMLTableElement.deleteTHead()\n// HTMLTableElement.createTFoot()\n// HTMLTableElement.deleteTFoot()\n// HTMLTableElement.createCaption()\n// HTMLTableElement.deleteCaption()\n// HTMLTableElement.insertRow()\n// HTMLTableElement.deleteRow()\n//# sourceMappingURL=HTMLTableElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { matchNearestParent, tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nconst TABLE_SECTION_TAGNAMES = 'TABLE TBODY THEAD TFOOT'.split(' ');\nconst indexInAncestor = (element, isValidAncestor) => {\n    const parent = matchNearestParent(element, isValidAncestor);\n    // TODO(KB): This is either a HTMLTableElement or HTMLTableSectionElement.\n    return parent === null ? -1 : parent.rows.indexOf(element);\n};\nexport class HTMLTableRowElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return td and th elements that are children of this row.\n     */\n    get cells() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TD', 'TH']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return position of the row within a table, if not nested within in a table the value is -1.\n     */\n    get rowIndex() {\n        return indexInAncestor(this, tagNameConditionPredicate(['TABLE']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return position of the row within a parent section, if not nested directly in a section the value is -1.\n     */\n    get sectionRowIndex() {\n        return indexInAncestor(this, tagNameConditionPredicate(TABLE_SECTION_TAGNAMES));\n    }\n    /**\n     * Removes the cell in provided position of this row.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @param index position of the cell in the row to remove.\n     */\n    deleteCell(index) {\n        const cell = this.cells[index];\n        if (cell) {\n            cell.remove();\n        }\n    }\n    /**\n     * Insert a new cell ('td') in the row at a specified position.\n     * @param index position in the children to insert before.\n     * @return newly inserted td element.\n     */\n    insertCell(index) {\n        const cells = this.cells;\n        const td = this.ownerDocument.createElement('td');\n        if (index < 0 || index >= cells.length) {\n            this.appendChild(td);\n        }\n        else {\n            this.insertBefore(td, this.children[index]);\n        }\n        return td;\n    }\n}\nregisterSubclass('tr', HTMLTableRowElement);\n//# sourceMappingURL=HTMLTableRowElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nexport class HTMLTableSectionElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @return All rows (tr elements) within the table section.\n     */\n    get rows() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TR']));\n    }\n    /**\n     * Remove a node in a specified position from the section.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @param index position in the section to remove the node of.\n     */\n    deleteRow(index) {\n        const rows = this.rows;\n        if (index >= 0 || index <= rows.length) {\n            rows[index].remove();\n        }\n    }\n    /**\n     * Insert a new row ('tr') in the row at a specified position.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @param index position in the children to insert before.\n     * @return newly inserted tr element.\n     */\n    insertRow(index) {\n        const rows = this.rows;\n        const tr = this.ownerDocument.createElement('tr');\n        if (index < 0 || index >= rows.length) {\n            this.appendChild(tr);\n        }\n        else {\n            this.insertBefore(tr, this.children[index]);\n        }\n        return tr;\n    }\n}\nregisterSubclass('thead', HTMLTableSectionElement);\nregisterSubclass('tfoot', HTMLTableSectionElement);\nregisterSubclass('tbody', HTMLTableSectionElement);\n//# sourceMappingURL=HTMLTableSectionElement.js.map","// <blockquote> and <q>\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLTimeElement extends HTMLElement {\n}\nregisterSubclass('time', HTMLTimeElement);\n// Reflected Properties\n// HTMLTimeElement.dateTime => string, reflected attribute\nreflectProperties([{ dateTime: [''] }], HTMLTimeElement);\n//# sourceMappingURL=HTMLTimeElement.js.map","import { CharacterData } from './CharacterData';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/Text\nexport class Text extends CharacterData {\n    constructor(data, ownerDocument, overrideIndex) {\n        super(data, 3 /* NodeType.TEXT_NODE */, '#text', ownerDocument, overrideIndex);\n    }\n    // Unimplemented Properties\n    // Text.isElementContentWhitespace – https://developer.mozilla.org/en-US/docs/Web/API/Text/isElementContentWhitespace\n    // Text.wholeText – https://developer.mozilla.org/en-US/docs/Web/API/Text/wholeText\n    // Text.assignedSlot – https://developer.mozilla.org/en-US/docs/Web/API/Text/assignedSlot\n    /**\n     * textContent getter, retrieves underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     */\n    get textContent() {\n        return this.data;\n    }\n    /**\n     * textContent setter, mutates underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     * @param value new value\n     */\n    set textContent(value) {\n        // Mutation Observation is performed by CharacterData.\n        this.nodeValue = value;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @return new Text Node with the same data as the Text to clone.\n     */\n    cloneNode() {\n        return this.ownerDocument.createTextNode(this.data);\n    }\n    /**\n     * Breaks Text node into two nodes at the specified offset, keeping both nodes in the tree as siblings.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Text/splitText\n     * @param offset number position to split text at.\n     * @return Text Node after the offset.\n     */\n    splitText(offset) {\n        const remainderTextNode = new Text(this.data.slice(offset, this.data.length), this.ownerDocument);\n        const parentNode = this.parentNode;\n        this.nodeValue = this.data.slice(0, offset);\n        if (parentNode !== null) {\n            // When this node is attached to the DOM, the remainder text needs to be inserted directly after.\n            const parentChildNodes = parentNode.childNodes;\n            const insertBeforePosition = parentChildNodes.indexOf(this) + 1;\n            const insertBeforeNode = parentChildNodes.length >= insertBeforePosition ? parentChildNodes[insertBeforePosition] : null;\n            return parentNode.insertBefore(remainderTextNode, insertBeforeNode);\n        }\n        return remainderTextNode;\n    }\n}\n//# sourceMappingURL=Text.js.map","import { ParentNode } from './ParentNode';\nimport { store as storeString } from '../strings';\nexport class DocumentFragment extends ParentNode {\n    constructor(ownerDocument, overrideIndex) {\n        super(11 /* NodeType.DOCUMENT_FRAGMENT_NODE */, '#document-fragment', ownerDocument, overrideIndex);\n        this[8 /* TransferrableKeys.creationFormat */] = [this[7 /* TransferrableKeys.index */], 11 /* NodeType.DOCUMENT_FRAGMENT_NODE */, storeString(this.nodeName), 0, 0];\n    }\n    /**\n     * @param deep boolean determines if the clone should include a recursive copy of all childNodes.\n     * @return DocumentFragment containing childNode clones of the DocumentFragment requested to be cloned.\n     */\n    cloneNode(deep = false) {\n        const clone = this.ownerDocument.createDocumentFragment();\n        if (deep) {\n            this.childNodes.forEach((child) => clone.appendChild(child.cloneNode(deep)));\n        }\n        return clone;\n    }\n}\n//# sourceMappingURL=DocumentFragment.js.map","import { Element, NS_NAME_TO_CLASS } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport './HTMLAnchorElement';\nimport './HTMLButtonElement';\nimport './HTMLCanvasElement';\nimport './HTMLDataElement';\nimport './HTMLDataListElement';\nimport './HTMLEmbedElement';\nimport './HTMLFieldSetElement';\nimport './HTMLFormElement';\nimport './HTMLIFrameElement';\nimport './HTMLImageElement';\nimport './HTMLInputElement';\nimport './HTMLLabelElement';\nimport './HTMLLinkElement';\nimport './HTMLMapElement';\nimport './HTMLMeterElement';\nimport './HTMLModElement';\nimport './HTMLOListElement';\nimport './HTMLOptionElement';\nimport './HTMLProgressElement';\nimport './HTMLQuoteElement';\nimport './HTMLScriptElement';\nimport './HTMLSelectElement';\nimport './HTMLSourceElement';\nimport './HTMLStyleElement';\nimport './HTMLTableCellElement';\nimport './HTMLTableColElement';\nimport './HTMLTableElement';\nimport './HTMLTableRowElement';\nimport './HTMLTableSectionElement';\nimport './HTMLTimeElement';\nimport { matchChildElement } from './matchElements';\nimport { Text } from './Text';\nimport { Comment } from './Comment';\nimport { toLower } from '../../utils';\nimport { DocumentFragment } from './DocumentFragment';\nimport { HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { propagate as propagateEvents } from '../Event';\nimport { propagate as propagateSyncValues } from '../SyncValuePropagation';\nimport { propagate as propagateResize } from '../ResizePropagation';\nimport { set as setPhase } from '../phase';\nconst DOCUMENT_NAME = '#document';\nexport class Document extends Element {\n    defaultView;\n    documentElement;\n    body;\n    // Internal variables.\n    postMessage;\n    addGlobalEventListener;\n    removeGlobalEventListener;\n    [58 /* TransferrableKeys.allowTransfer */] = true;\n    constructor(global) {\n        super(9 /* NodeType.DOCUMENT_NODE */, DOCUMENT_NAME, HTML_NAMESPACE, null);\n        // Element uppercases its nodeName, but Document doesn't.\n        this.nodeName = DOCUMENT_NAME;\n        this.documentElement = this; // TODO(choumx): Should be the <html> element.\n        this.defaultView = Object.assign(global, {\n            document: this,\n            addEventListener: this.addEventListener.bind(this),\n            removeEventListener: this.removeEventListener.bind(this),\n        });\n    }\n    /**\n     * Observing the Document indicates it's attached to a main thread\n     * version of the document.\n     *\n     * Each mutation needs to be transferred, synced values need to propagate.\n     */\n    [59 /* TransferrableKeys.observe */]() {\n        setPhase(1 /* Phase.Hydrating */);\n        propagateEvents(this.defaultView);\n        propagateSyncValues(this.defaultView);\n        propagateResize(this.defaultView);\n    }\n    /**\n     * Hydrate\n     * @param strings\n     * @param skeleton\n     */\n    [64 /* TransferrableKeys.hydrateNode */](strings, skeleton) {\n        switch (skeleton[0 /* TransferrableKeys.nodeType */]) {\n            case 3 /* NodeType.TEXT_NODE */:\n                return new Text(strings[skeleton[5 /* TransferrableKeys.textContent */]], this, skeleton[7 /* TransferrableKeys.index */]);\n            case 8 /* NodeType.COMMENT_NODE */:\n                return new Comment(strings[skeleton[5 /* TransferrableKeys.textContent */]], this, skeleton[7 /* TransferrableKeys.index */]);\n            default:\n                const namespaceURI = strings[skeleton[6 /* TransferrableKeys.namespaceURI */]] || HTML_NAMESPACE;\n                const localName = strings[skeleton[1 /* TransferrableKeys.localOrNodeName */]];\n                const constructor = NS_NAME_TO_CLASS[`${namespaceURI}:${localName}`] || HTMLElement;\n                const node = new constructor(1 /* NodeType.ELEMENT_NODE */, localName, namespaceURI, this, skeleton[7 /* TransferrableKeys.index */]);\n                (skeleton[2 /* TransferrableKeys.attributes */] || []).forEach((attribute) => \n                // AttributeNamespaceURI = strings[attribute[0]] !== 'null' ? strings[attribute[0]] : HTML_NAMESPACE\n                node.setAttributeNS(strings[attribute[0]] !== 'null' ? strings[attribute[0]] : HTML_NAMESPACE, strings[attribute[1]], strings[attribute[2]]));\n                (skeleton[4 /* TransferrableKeys.childNodes */] || []).forEach((child) => node.appendChild(this[64 /* TransferrableKeys.hydrateNode */](strings, child)));\n                return node;\n        }\n    }\n    createElement(name) {\n        return this.createElementNS(HTML_NAMESPACE, toLower(name));\n    }\n    createElementNS(namespaceURI, localName) {\n        const constructor = NS_NAME_TO_CLASS[`${namespaceURI}:${localName}`] || HTMLElement;\n        return new constructor(1 /* NodeType.ELEMENT_NODE */, localName, namespaceURI, this);\n    }\n    /**\n     * Note: Unlike DOM, Event subclasses (e.g. MouseEvent) are not instantiated based on `type`.\n     * @param type\n     */\n    createEvent(type) {\n        return new Event(type, { bubbles: false, cancelable: false });\n    }\n    createTextNode(text) {\n        return new Text(text, this);\n    }\n    createComment(text) {\n        return new Comment(text, this);\n    }\n    createDocumentFragment() {\n        return new DocumentFragment(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementById\n     * @return Element with matching id attribute.\n     */\n    getElementById(id) {\n        return matchChildElement(this.body, (element) => element.id === id);\n    }\n}\n//# sourceMappingURL=Document.js.map","import { get } from './nodes';\n/**\n * When an event is dispatched from the main thread, it needs to be propagated in the worker thread.\n * Propagate adds an event listener to the worker global scope and uses the WorkerDOM Node.dispatchEvent\n * method to dispatch the transfered event in the worker thread.\n */\nexport function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* TransferrableKeys.type */] !== 4 /* MessageType.SYNC */) {\n            return;\n        }\n        const sync = data[40 /* TransferrableKeys.sync */];\n        const node = get(sync[7 /* TransferrableKeys.index */]);\n        if (node) {\n            node.ownerDocument[58 /* TransferrableKeys.allowTransfer */] = false;\n            // Modify the private backing ivar of `value` property to avoid mutation/sync cycle.\n            node.value = sync[21 /* TransferrableKeys.value */];\n            node.ownerDocument[58 /* TransferrableKeys.allowTransfer */] = true;\n        }\n    });\n}\n//# sourceMappingURL=SyncValuePropagation.js.map","export function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* TransferrableKeys.type */] !== 5 /* MessageType.RESIZE */) {\n            return;\n        }\n        const sync = data[40 /* TransferrableKeys.sync */];\n        if (sync) {\n            global.innerWidth = sync[0];\n            global.innerHeight = sync[1];\n        }\n    });\n}\n//# sourceMappingURL=ResizePropagation.js.map","const frameDuration = 1000 / 60;\nlet last = 0;\nlet id = 0;\nlet queue = [];\n/**\n * Schedules the accumulated callbacks to be fired 16ms after the last round.\n */\nfunction scheduleNext() {\n    const now = Date.now();\n    const next = Math.round(Math.max(0, frameDuration - (Date.now() - last)));\n    last = now + next;\n    setTimeout(function () {\n        var cp = queue.slice(0);\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0;\n        for (var i = 0; i < cp.length; i++) {\n            if (cp[i].cancelled) {\n                continue;\n            }\n            try {\n                cp[i].callback(last);\n            }\n            catch (e) {\n                setTimeout(function () {\n                    throw e;\n                }, 0);\n            }\n        }\n    }, next);\n}\nexport function rafPolyfill(callback) {\n    if (queue.length === 0) {\n        scheduleNext();\n    }\n    if (id === Number.MAX_SAFE_INTEGER) {\n        id = 0;\n    }\n    queue.push({\n        handle: ++id,\n        callback,\n        cancelled: false,\n    });\n    return id;\n}\nexport function cafPolyfill(handle) {\n    for (let i = 0; i < queue.length; i++) {\n        if (queue[i].handle === handle) {\n            queue[i].cancelled = true;\n            return;\n        }\n    }\n}\n//# sourceMappingURL=AnimationFrame.js.map","import { Element, registerSubclass } from './Element';\nimport { SVG_NAMESPACE } from '../../transfer/TransferrableNodes';\nexport class SVGElement extends Element {\n    constructor(nodeType, localName, namespaceURI, ownerDocument) {\n        super(nodeType, localName, SVG_NAMESPACE, ownerDocument);\n        // Element uppercases its nodeName, but SVG elements don't.\n        this.nodeName = localName;\n    }\n}\nregisterSubclass('svg', SVGElement, SVG_NAMESPACE);\n//# sourceMappingURL=SVGElement.js.map","import { AMP } from './amp/amp';\nimport { callFunctionMessageHandler, exportFunction } from './function';\nimport { CharacterData } from './dom/CharacterData';\nimport { Comment } from './dom/Comment';\nimport { deleteGlobals } from './amp/delete-globals';\nimport { Document } from './dom/Document';\nimport { DocumentFragment } from './dom/DocumentFragment';\nimport { DOMTokenList } from './dom/DOMTokenList';\nimport { Element } from './dom/Element';\nimport { Event as WorkerDOMEvent } from './Event';\nimport { HTMLAnchorElement } from './dom/HTMLAnchorElement';\nimport { HTMLButtonElement } from './dom/HTMLButtonElement';\nimport { HTMLCanvasElement } from './dom/HTMLCanvasElement';\nimport { HTMLDataElement } from './dom/HTMLDataElement';\nimport { HTMLDataListElement } from './dom/HTMLDataListElement';\nimport { HTMLElement } from './dom/HTMLElement';\nimport { HTMLEmbedElement } from './dom/HTMLEmbedElement';\nimport { HTMLFieldSetElement } from './dom/HTMLFieldSetElement';\nimport { HTMLFormElement } from './dom/HTMLFormElement';\nimport { HTMLIFrameElement } from './dom/HTMLIFrameElement';\nimport { HTMLImageElement } from './dom/HTMLImageElement';\nimport { HTMLInputElement } from './dom/HTMLInputElement';\nimport { HTMLLabelElement } from './dom/HTMLLabelElement';\nimport { HTMLLinkElement } from './dom/HTMLLinkElement';\nimport { HTMLMapElement } from './dom/HTMLMapElement';\nimport { HTMLMeterElement } from './dom/HTMLMeterElement';\nimport { HTMLModElement } from './dom/HTMLModElement';\nimport { HTMLOListElement } from './dom/HTMLOListElement';\nimport { HTMLOptionElement } from './dom/HTMLOptionElement';\nimport { HTMLProgressElement } from './dom/HTMLProgressElement';\nimport { HTMLQuoteElement } from './dom/HTMLQuoteElement';\nimport { HTMLScriptElement } from './dom/HTMLScriptElement';\nimport { HTMLSelectElement } from './dom/HTMLSelectElement';\nimport { HTMLSourceElement } from './dom/HTMLSourceElement';\nimport { HTMLStyleElement } from './dom/HTMLStyleElement';\nimport { HTMLTableCellElement } from './dom/HTMLTableCellElement';\nimport { HTMLTableColElement } from './dom/HTMLTableColElement';\nimport { HTMLTableElement } from './dom/HTMLTableElement';\nimport { HTMLTableRowElement } from './dom/HTMLTableRowElement';\nimport { HTMLTableSectionElement } from './dom/HTMLTableSectionElement';\nimport { HTMLTimeElement } from './dom/HTMLTimeElement';\nimport { initialize } from './initialize';\nimport { MutationObserver } from './MutationObserver';\nimport { rafPolyfill, cafPolyfill } from './AnimationFrame';\nimport { SVGElement } from './dom/SVGElement';\nimport { Text } from './dom/Text';\nimport { wrap as longTaskWrap } from './long-task';\nconst globalScope = {\n    innerWidth: 0,\n    innerHeight: 0,\n    CharacterData,\n    Comment,\n    Document,\n    DocumentFragment,\n    DOMTokenList,\n    Element,\n    HTMLAnchorElement,\n    HTMLButtonElement,\n    HTMLCanvasElement,\n    HTMLDataElement,\n    HTMLDataListElement,\n    HTMLElement,\n    HTMLEmbedElement,\n    HTMLFieldSetElement,\n    HTMLFormElement,\n    HTMLIFrameElement,\n    HTMLImageElement,\n    HTMLInputElement,\n    HTMLLabelElement,\n    HTMLLinkElement,\n    HTMLMapElement,\n    HTMLMeterElement,\n    HTMLModElement,\n    HTMLOListElement,\n    HTMLOptionElement,\n    HTMLProgressElement,\n    HTMLQuoteElement,\n    HTMLScriptElement,\n    HTMLSelectElement,\n    HTMLSourceElement,\n    HTMLStyleElement,\n    HTMLTableCellElement,\n    HTMLTableColElement,\n    HTMLTableElement,\n    HTMLTableRowElement,\n    HTMLTableSectionElement,\n    HTMLTimeElement,\n    SVGElement,\n    Text,\n    Event: WorkerDOMEvent,\n    MutationObserver,\n    requestAnimationFrame: self.requestAnimationFrame || rafPolyfill,\n    cancelAnimationFrame: self.cancelAnimationFrame || cafPolyfill,\n};\nconst noop = () => void 0;\n// WorkerDOM.Document.defaultView ends up being the window object.\n// React requires the classes to exist off the window object for instanceof checks.\nexport const workerDOM = (function (postMessage, addEventListener, removeEventListener) {\n    const document = new Document(globalScope);\n    // TODO(choumx): Avoid polluting Document's public API.\n    document.postMessage = postMessage;\n    document.addGlobalEventListener = addEventListener;\n    document.removeGlobalEventListener = removeEventListener;\n    document.isConnected = true;\n    document.appendChild((document.body = document.createElement('body')));\n    // TODO(choumx): Remove once defaultView contains all native worker globals.\n    // Canvas's use of native OffscreenCanvas checks the existence of the property\n    // on the WorkerDOMGlobalScope.\n    globalScope.OffscreenCanvas = self['OffscreenCanvas'];\n    globalScope.ImageBitmap = self['ImageBitmap'];\n    return document.defaultView;\n})(postMessage.bind(self) || noop, addEventListener.bind(self) || noop, removeEventListener.bind(self) || noop);\n// Modify global scope by removing disallowed properties and wrapping `fetch()`.\n(function (global) {\n    deleteGlobals(global);\n    // Wrap global.fetch() with our longTask API.\n    const originalFetch = global['fetch'];\n    if (originalFetch) {\n        try {\n            Object.defineProperty(global, 'fetch', {\n                enumerable: true,\n                writable: true,\n                configurable: true,\n                value: longTaskWrap(workerDOM.document, originalFetch.bind(global)),\n            });\n        }\n        catch (e) {\n            console.warn(e);\n        }\n    }\n})(self);\n// Offer APIs like AMP.setState() on the global scope.\nself.AMP = new AMP(workerDOM.document);\n// Allows for function invocation\nself.exportFunction = exportFunction;\naddEventListener('message', (evt) => callFunctionMessageHandler(evt, workerDOM.document));\nexport const hydrate = initialize;\n//# sourceMappingURL=index.amp.js.map","import { store } from '../strings';\nimport { transfer } from '../MutationTransfer';\nexport class AMP {\n    document;\n    constructor(document) {\n        this.document = document;\n    }\n    /**\n     * Returns a promise that resolves with the value of `key`.\n     * @param key\n     */\n    getState(key = '') {\n        return new Promise((resolve) => {\n            const messageHandler = (event) => {\n                const message = event.data;\n                if (message[12 /* TransferrableKeys.type */] !== 11 /* MessageType.GET_STORAGE */) {\n                    return;\n                }\n                // TODO: There is a race condition here if there are multiple concurrent\n                // getState(k) messages in flight, where k is the same value.\n                const storageMessage = message;\n                if (storageMessage[74 /* TransferrableKeys.storageKey */] !== key) {\n                    return;\n                }\n                this.document.removeGlobalEventListener('message', messageHandler);\n                const value = storageMessage[21 /* TransferrableKeys.value */];\n                resolve(value);\n            };\n            this.document.addGlobalEventListener('message', messageHandler);\n            transfer(this.document, [12 /* TransferrableMutationType.STORAGE */, 1 /* GetOrSet.GET */, 2 /* StorageLocation.AmpState */, /* key */ store(key) + 1, /* value */ 0]);\n            setTimeout(resolve, 500, null); // TODO: Why a magical constant, define and explain.\n        });\n    }\n    /**\n     * Deep-merges `state` into the existing state.\n     * @param state\n     */\n    setState(state) {\n        // Stringify `state` so it can be post-messaged as a transferrable.\n        let stringified;\n        try {\n            stringified = JSON.stringify(state);\n        }\n        catch (e) {\n            throw new Error(`AMP.setState only accepts valid JSON as input.`);\n        }\n        transfer(this.document, [12 /* TransferrableMutationType.STORAGE */, 2 /* GetOrSet.SET */, 2 /* StorageLocation.AmpState */, /* key */ 0, /* value */ store(stringified) + 1]);\n    }\n}\n//# sourceMappingURL=amp.js.map","import { store as storeString } from './strings';\nimport { appendKeys as addCssKeys } from './css/CSSStyleDeclaration';\nimport { appendGlobalEventProperties } from './dom/HTMLElement';\nimport { initializeStorage } from './initialize-storage';\nexport function initialize(document, strings, hydrateableNode, cssKeys, globalEventHandlerKeys, [innerWidth, innerHeight], localStorageInit, sessionStorageInit) {\n    addCssKeys(cssKeys);\n    appendGlobalEventProperties(globalEventHandlerKeys);\n    strings.forEach(storeString);\n    (hydrateableNode[4 /* TransferrableKeys.childNodes */] || []).forEach((child) => document.body.appendChild(document[64 /* TransferrableKeys.hydrateNode */](strings, child)));\n    const window = document.defaultView;\n    window.innerWidth = innerWidth;\n    window.innerHeight = innerHeight;\n    initializeStorage(document, localStorageInit, sessionStorageInit);\n}\n//# sourceMappingURL=initialize.js.map","import { createStorage } from './Storage';\nexport function initializeStorage(document, localStorageInit, sessionStorageInit) {\n    const window = document.defaultView;\n    if (localStorageInit.storage) {\n        window.localStorage = createStorage(document, 0 /* StorageLocation.Local */, localStorageInit.storage);\n    }\n    else {\n        console.warn(localStorageInit.errorMsg);\n    }\n    if (sessionStorageInit.storage) {\n        window.sessionStorage = createStorage(document, 1 /* StorageLocation.Session */, sessionStorageInit.storage);\n    }\n    else {\n        console.warn(sessionStorageInit.errorMsg);\n    }\n}\n//# sourceMappingURL=initialize-storage.js.map"],"names":["store$1","value","has","mapping","get","set","push","transfer","count","a","sa","document","concat","b","Promise","resolve","then","_","pending","qb","reduce","consume","f","e","node","acc","buffer","Uint16Array","postMessage","A","d","mutate","record","transferable","forEach","observer","t","target","parentNode","observerTarget","pushMutation","getPreviousElementSibling","parentNodes","childNodes","i","indexOf","nodeType","getNextElementSibling","length","querySelectorAll","selector","selectorBracketIndexes","selectorHasAttr","attrSelector","substring","matcher","element","matchAttrReference","elementSelector","id","substr","classList","contains","localName","matchChildrenElements","filter","synchronizedAccessor","defineOn","accessorKey","propertyName","Object","defineProperty","prototype","enumerable","configurable","this","decodeEntities","html","replace","s","numericEntity","namedEntity","code","charAt","toLowerCase","parseInt","isNaN","String","fromCodePoint","RESERVED_CHARACTERS","definePropertyBackedAttributes","attributes","sub","create","assign","serializeTransferrableObject","args","serialized","arg","u16","num","f32","store","Array","isArray","serializedArray","Error","serializedObject","retrieveImageBitmap","image","canvas","callIndex","indexTracker","ownerDocument","messageHandler","data","removeGlobalEventListener","addGlobalEventListener","createStorage","location","storage","define","keys","n","key","stringValue","wrap","func","execute","promise","result","c","reason","apply","arguments","mapping$1","Map","phase","pendingMutations","exportedFunctions","observers","pushRecord","callback","takeRecords","propagate","property","child","constructor","nodeName","overrideIndex","isConnected","storeOverrideNodeMapping","Math","max","undefined","storeNodeMapping","textContent","getTextContent","childNode","firstChild","lastChild","nextSibling","parentChildNodes","previousSibling","hasChildNodes","otherNode","includes","some","insertBefore","referenceNode","slice","appendChild","remove","splice","addedNodes","type","removeChild","index","removedNodes","replaceChild","newChild","oldChild","replaceWith","nodes","currentNode","nodeIterator","parent","createTextNode","CharacterData","Node","super","storeString","oldValue","nodeValue","previousElementSibling","nextElementSibling","Comment","ya","cloneNode","createComment","ALLOWLISTED_GLOBALS","ArrayBuffer","BigInt","BigInt64Array","BigUint64Array","Boolean","Cache","CustomEvent","DataView","Date","EvalError","Event","EventTarget","Float32Array","Float64Array","Function","Infinity","Int16Array","Int32Array","Int8Array","Intl","JSON","NaN","Number","Proxy","RangeError","ReferenceError","Reflect","RegExp","Set","Symbol","SyntaxError","TextDecoder","TextEncoder","TypeError","URIError","URL","Uint32Array","Uint8Array","Uint8ClampedArray","WeakMap","WeakSet","WebAssembly","WebSocket","XMLHttpRequest","atob","addEventListener","removeEventListener","btoa","caches","clearInterval","clearTimeout","console","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","escape","fetch","indexedDB","isFinite","navigator","onerror","onrejectionhandled","onunhandledrejection","parseFloat","performance","requestAnimationFrame","cancelAnimationFrame","self","setTimeout","setInterval","unescape","tagNameConditionPredicate","tagNames","tagName","elementPredicate","conditionPredicate","matchingElements","matchChildElement","returnValue","children","grandChildMatch","matchNearestParent","equalPos","selectorLength","caseInsensitive","endPos","equalSuffix","attrString","possibleSuffixes","rawAttrValue","rawValue","getAttribute","casedValue","casedAttrValue","split","startsWith","endsWith","hasAttribute","ParentNode","childElementCount","firstElementChild","find","lastElementChild","querySelector","matches","WHITESPACE_REGEX","G","attributeName","bind","join","collection","newValue","item","token","add","tokens","from","newToken","delete","toggle","force","test","namespaceURI","toString","map","keyValueString","attr","matchPredicate","name","appendKeys","keysToAppend","CSSStyleDeclaration","hasOwnProperty","previousPrototypeLength","writable","hyphenatedKey","defineProperties","getPropertyValue","setProperty","D","removeProperty","mutated","cssText","trim","values","reflectProperties","properties","pair","defaultValue","keywords","isBooleanAttribute","attributeValue","castableValue","setAttribute","removeAttribute","kMarkupPattern","kAttributePattern","kSelfClosingElements","AREA","BASE","BR","COL","HR","IMG","INPUT","LINK","META","PARAM","SOURCE","TRACK","WBR","kElementsClosedByOpening","LI","DT","DD","P","ADDRESS","ARTICLE","ASIDE","BLOCKQUOTE","DETAILS","DIV","DL","FIELDSET","FIGCAPTION","FIGURE","FOOTER","FORM","H1","H2","H3","H4","H5","H6","HEADER","MAIN","NAV","OL","PRE","SECTION","TABLE","UL","RT","RP","OPTGROUP","OPTION","THEAD","TBODY","TFOOT","TR","TD","TH","kElementsClosedByClosing","B","I","kBlockTextElements","SCRIPT","NOSCRIPT","STYLE","__proto__","amp","lt","gt","quot","Event$1","opts","scoped","timeStamp","isTrusted","eventPhase","defaultPrevented","currentTarget","cancelBubble","cancelable","bubbles","changedTouches","touches","offsetY","offsetX","pageY","pageX","stopPropagation","stopImmediatePropagation","preventDefault","initEvent","touchListFromTransfer","event","touchListKeys","list","touchListKey","numericKey","transferredTouch","identifier","screenX","screenY","clientX","clientY","NS_NAME_TO_CLASS","registerSubclass","subclass","namespace","HTML_NAMESPACE","ElementKind","VOID_ELEMENTS","Element","_classList","kind","style_","VOID","NORMAL","style","outerHTML","tag","start","innerHTML","contents","root","parse","rootElement","currentParent","currentNamespace","match","lastTextPos","tagsClosed","exec","text","lastIndex","commentContents","beginningSlash","endSlash","normalizedTagName","stack","pop","attMatch","matchAttributes","childToAppend","closeMarkup","wrapper","setAttributeNS","getAttributeNS","removeAttributeNS","hasAttributeNS","hasAttributes","propertyBacked","matchAttrPredicate","valueAsString","attributeNamespace","findIndex","getElementsByClassName","names","inputClassList","inputClassName","getElementsByTagName","lowerTagName","getElementsByName","stringName","deep","clone","createElementNS","getBoundingClientRectAsync","left","top","right","bottom","x","y","width","height","transferredBoundingClientRect","click","dispatchEvent","scrollIntoView","DOMTokenList","class","el","appendGlobalEventProperties","HTMLElement","normalizedKey","stored","form","accessKey","contentEditable","dir","lang","title","draggable","hidden","noModule","spellcheck","translate","M","k","_relList","relList","href","HTMLAnchorElement","rel","hreflang","media","HTMLButtonElement","formAction","formEnctype","formMethod","formTarget","autofocus","disabled","addColorStop","offset","color","setTransform","OffscreenCanvasPolyfill","context","getContext","contextType","OffscreenCanvasRenderingContext2DPolyfill","Vb","objectIndex","canvasElement","lineDash","fnName","createObjectReference","objectId","creationMethod","creationArgs","clearRect","w","h","fillRect","strokeRect","roundRect","radii","lineWidth","fillText","maxWidth","moveTo","lineTo","closePath","stroke","restore","save","resetTransform","rotate","angle","transform","scale","globalAlpha","globalCompositeOperation","imageSmoothingQuality","fillStyle","strokeStyle","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","beginPath","strokeText","textAlign","textBaseline","lineCap","lineDashOffset","lineJoin","miterLimit","arc","radius","startAngle","endAngle","anticlockwise","arcTo","x1","y1","x2","y2","direction","font","ellipse","radiusX","radiusY","rotation","bezierCurveTo","cp1x","cp1y","cp2x","cp2y","rect","quadraticCurveTo","cpx","cpy","imageSmoothingEnabled","setLineDash","getLineDash","clip","pathOrFillRule","fillRule","fill","transformOrA","bOrC","cOrD","dOrE","eOrF","createLinearGradient","x0","y0","gradientId","CanvasGradient","createRadialGradient","r0","r1","createPattern","repetition","patternId","CanvasPattern","drawImage","dx","dy","createImageData","getImageData","putImageData","isPointInPath","isPointInStroke","measureText","instance","pattern","deferredUpgrades","Xb","queue","implementation","upgraded","polyfillUsed","unresolvedCalls","goodImplementation","OffscreenCanvas","defaultView","getOffscreenCanvasAsync","deferred","isTestMode","maybeUpgradeImplementation","upgradePromise","degradeImplementation","flushQueue","call","isSetter","delegateFunc","delegateSetter","delegateGetter","segments","FakeNativeCanvasPattern","ImageBitmap","antiClockwise","path","pathOrX","xOrY","yOrFillRule","imagedataOrWidth","sx","sy","sw","sh","imageData","dirtyX","dirtyY","dirtyWidth","dirtyHeight","HTMLCanvasElement","CanvasRenderingContext2DShim","HTMLDataElement","HTMLDataListElement","options","HTMLEmbedElement","src","MATCHING_CHILD_ELEMENT_TAGNAMES","HTMLFormControlsCollectionMixin","HTMLFieldSetElement","elements","HTMLFormElement","method","action","enctype","acceptCharset","autocomplete","autocapitalize","HTMLIFrameElement","_sandbox","sandbox","allow","allowFullscreen","csp","referrerPolicy","srcdoc","Ha","HTMLImageElement","alt","crossOrigin","isMap","sizes","srcset","useMap","HTMLInputLabelsMixin","for","HTMLInputElement","dirtyValue","valueAsDate","date","stringToDate","getTime","dateToString","valueAsNumber","checked","m","str","components","accept","defaultChecked","dirName","formEncType","maxLength","min","multiple","placeholder","readOnly","required","size","step","HTMLLabelElement","control","htmlFor","getElementById","N","HTMLLinkElement","as","Ja","areas","HTMLMapElement","HTMLMeterElement","high","low","optimum","HTMLModElement","cite","datetime","Ka","HTMLOListElement","reversed","ea","label","selected","HTMLOptionElement","defaultSelected","fa","position","HTMLProgressElement","ha","HTMLQuoteElement","HTMLScriptElement","charset","async","defer","isOptionPredicate","isSelectedOptionPredicate","ja","selectedIndex","firstSelectedChild","selectedOptions","HTMLSelectElement","HTMLSourceElement","Oa","HTMLStyleElement","HTMLTableCellElement","_headers","headers","cellIndex","abbr","colSpan","rowSpan","scope","Pa","HTMLTableColElement","span","insertBeforeElementsWithTagName","insertBeforeElement","HTMLTableElement","caption","newElement","tHead","tFoot","rows","tBodies","TABLE_SECTION_TAGNAMES","indexInAncestor","isValidAncestor","HTMLTableRowElement","cells","rowIndex","sectionRowIndex","deleteCell","cell","insertCell","td","createElement","ka","deleteRow","insertRow","tr","HTMLTableSectionElement","HTMLTimeElement","dateTime","la","splitText","remainderTextNode","Text","insertBeforePosition","createDocumentFragment","Document","global","DOCUMENT_NAME","body","documentElement","newPhase","propagate$2","p","z","targetFromTransfer","keyCode","propagateEvents","propagate$1","sync","propagateSyncValues","innerWidth","innerHeight","propagateResize","strings","skeleton","attribute","createEvent","DocumentFragment","frameDuration","last","SVGElement","globalScope","WorkerDOMEvent","MutationObserver","observe","disconnect","records","rafPolyfill","scheduleNext","next","round","now","cp","cancelled","MAX_SAFE_INTEGER","handle","V","cafPolyfill","noop","workerDOM","deleteGlobals","current","getOwnPropertyNames","prop","object","getPrototypeOf","originalFetch","longTaskWrap","AMP","getState","message","setState","state","stringified","stringify","exportFunction","fn","evt","callFunctionMessageHandler","msg","fnArguments","functionMessage","err","errorMessage","fnIdentifier","initialize","hydrateableNode","cssKeys","globalEventHandlerKeys","localStorageInit","sessionStorageInit","addCssKeys","initializeStorage","window","localStorage","sessionStorage"],"mappings":"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"}