{"version":3,"file":"worker.mjs","sources":["../../output/worker-thread/nodes.js","../../output/worker-thread/strings.js","../../output/worker-thread/MutationTransfer.js","../../output/worker-thread/MutationObserver.js","../../output/worker-thread/dom/ParentNode.js","../../output/utils.js","../../output/worker-thread/dom/DOMTokenList.js","../../output/third_party/html-parser/html-parser.js","../../output/worker-thread/dom/elementSibling.js","../../output/worker-thread/dom/Element.js","../../output/worker-thread/serializeTransferrableObject.js","../../output/worker-thread/canvas/canvas-utils.js","../../output/worker-thread/Storage.js","../../output/worker-thread/dom/matchElements.js","../../output/worker-thread/phase.js","../../output/worker-thread/dom/Node.js","../../output/worker-thread/dom/Attr.js","../../output/worker-thread/css/CSSStyleDeclaration.js","../../output/worker-thread/dom/enhanceElement.js","../../output/worker-thread/Event.js","../../output/transfer/TransferrableNodes.js","../../output/worker-thread/dom/HTMLElement.js","../../output/worker-thread/dom/SVGElement.js","../../output/worker-thread/dom/HTMLAnchorElement.js","../../output/worker-thread/dom/HTMLButtonElement.js","../../output/worker-thread/canvas/CanvasGradient.js","../../output/worker-thread/canvas/CanvasPattern.js","../../output/worker-thread/canvas/OffscreenCanvasPolyfill.js","../../output/worker-thread/canvas/FakeNativeCanvasPattern.js","../../output/worker-thread/canvas/CanvasRenderingContext2D.js","../../output/worker-thread/dom/HTMLCanvasElement.js","../../output/worker-thread/dom/HTMLDataElement.js","../../output/worker-thread/dom/HTMLEmbedElement.js","../../output/worker-thread/dom/HTMLFormControlsMixin.js","../../output/worker-thread/dom/HTMLFieldSetElement.js","../../output/worker-thread/dom/HTMLFormElement.js","../../output/worker-thread/dom/HTMLIFrameElement.js","../../output/worker-thread/dom/HTMLImageElement.js","../../output/worker-thread/dom/HTMLInputLabelsMixin.js","../../output/worker-thread/dom/HTMLInputElement.js","../../output/worker-thread/dom/HTMLLabelElement.js","../../output/worker-thread/dom/HTMLLinkElement.js","../../output/worker-thread/dom/HTMLMapElement.js","../../output/worker-thread/dom/HTMLMeterElement.js","../../output/worker-thread/dom/HTMLModElement.js","../../output/worker-thread/dom/HTMLOListElement.js","../../output/worker-thread/dom/HTMLOptionElement.js","../../output/worker-thread/dom/HTMLProgressElement.js","../../output/worker-thread/dom/HTMLQuoteElement.js","../../output/worker-thread/dom/HTMLScriptElement.js","../../output/worker-thread/dom/HTMLSelectElement.js","../../output/worker-thread/dom/HTMLSourceElement.js","../../output/worker-thread/dom/HTMLStyleElement.js","../../output/worker-thread/dom/HTMLTableCellElement.js","../../output/worker-thread/dom/HTMLTableColElement.js","../../output/worker-thread/dom/HTMLTableElement.js","../../output/worker-thread/dom/HTMLTableRowElement.js","../../output/worker-thread/dom/HTMLTableSectionElement.js","../../output/worker-thread/dom/HTMLTimeElement.js","../../output/worker-thread/dom/HTMLDataListElement.js","../../output/worker-thread/dom/CharacterData.js","../../output/worker-thread/dom/Text.js","../../output/worker-thread/dom/Comment.js","../../output/worker-thread/dom/DocumentFragment.js","../../output/worker-thread/dom/Document.js","../../output/worker-thread/SyncValuePropagation.js","../../output/worker-thread/ResizePropagation.js","../../output/worker-thread/AnimationFrame.js","../../output/worker-thread/index.js","../../output/worker-thread/initialize.js","../../output/worker-thread/initialize-storage.js"],"sourcesContent":["import { phase } from './phase';\nlet count = 0;\nlet transfer = [];\nconst mapping = new Map();\n/**\n * Override the store for a node during the initialization phase.\n * @param node Node to store and modify with index\n * @param override Override number to use as the identifier.\n *\n * NOTE: THIS IS ONLY TO BE USED DURING INITIALIZATION.\n */\nexport function storeOverride(node, override) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (phase === 0 /* Phase.Initializing */) {\n        mapping.set((node[7 /* TransferrableKeys.index */] = override), node);\n        count = Math.max(count, override);\n    }\n    return override;\n}\n/**\n * Stores a node in mapping, and makes the index available on the Node directly.\n * @param node Node to store and modify with index\n * @return index Node was stored with in mapping\n */\nexport function store(node) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (node[7 /* TransferrableKeys.index */] !== undefined) {\n        return node[7 /* TransferrableKeys.index */];\n    }\n    mapping.set((node[7 /* TransferrableKeys.index */] = ++count), node);\n    if (phase > 0 /* Phase.Initializing */) {\n        // After Initialization, include all future dom node creation into the list for next transfer.\n        transfer.push(node);\n    }\n    return count;\n}\n/**\n * Retrieves a node based on an index.\n * @param index location in map to retrieve a Node for\n * @return either the Node represented in index position, or null if not available.\n */\nexport function get(index) {\n    // mapping has a 1 based index, since on first store we ++count before storing.\n    return (!!index && mapping.get(index)) || null;\n}\n/**\n * Returns nodes registered but not yet transferred.\n * Side effect: Resets the transfer array to default value, to prevent passing the same values multiple times.\n */\nexport function consume() {\n    const copy = transfer;\n    transfer = [];\n    return copy;\n}\n//# sourceMappingURL=nodes.js.map","let count = 0;\nlet transfer = [];\nconst mapping = new Map();\n/**\n * Stores a string in mapping and returns the index of the location.\n * @param value string to store\n * @return location in map\n */\nexport function store(value) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (mapping.has(value)) {\n        // Safe to cast since we verified the mapping contains the value\n        return mapping.get(value);\n    }\n    mapping.set(value, count);\n    transfer.push(value);\n    return count++;\n}\n/**\n * Retrieve the index for a string (mostly used for tests).\n * @param value string value we need to know the index of\n * @returns index in the map for the string\n */\nexport function getForTesting(value) {\n    return mapping.get(value);\n}\nexport function getForTestingPartial(value) {\n    const found = Array.from(mapping.keys()).find((str) => str.includes(value));\n    if (found) {\n        return mapping.get(found);\n    }\n}\n/**\n * Returns strings registered but not yet transferred.\n * Side effect: Resets the transfer array to default value, to prevent passing the same values multiple times.\n */\nexport function consume() {\n    const strings = transfer;\n    transfer = [];\n    return strings;\n}\n//# sourceMappingURL=strings.js.map","import { consume as consumeNodes } from './nodes';\nimport { consume as consumeStrings } from './strings';\nimport { phase, set as setPhase } from './phase';\nlet pending = false;\nlet pendingMutations = [];\n// TODO(choumx): Change `mutation` to Array<Uint16> to prevent casting errors e.g. integer underflow, precision loss.\nexport function transfer(document, mutation) {\n    if (process.env.SERVER) {\n        return;\n    }\n    if (phase > 0 /* Phase.Initializing */ && document[58 /* TransferrableKeys.allowTransfer */]) {\n        pending = true;\n        pendingMutations = pendingMutations.concat(mutation);\n        Promise.resolve().then((_) => {\n            if (pending) {\n                const nodes = new Uint16Array(consumeNodes().reduce((acc, node) => acc.concat(node[8 /* TransferrableKeys.creationFormat */]), [])).buffer;\n                const mutations = new Uint16Array(pendingMutations).buffer;\n                document.postMessage({\n                    [54 /* TransferrableKeys.phase */]: phase,\n                    [12 /* TransferrableKeys.type */]: phase === 2 /* Phase.Mutating */ ? 3 /* MessageType.MUTATE */ : 2 /* MessageType.HYDRATE */,\n                    [37 /* TransferrableKeys.nodes */]: nodes,\n                    [41 /* TransferrableKeys.strings */]: consumeStrings(),\n                    [36 /* TransferrableKeys.mutations */]: mutations,\n                }, [nodes, mutations]);\n                pendingMutations = [];\n                pending = false;\n                setPhase(2 /* Phase.Mutating */);\n            }\n        });\n    }\n}\n//# sourceMappingURL=MutationTransfer.js.map","import { transfer } from './MutationTransfer';\nconst observers = [];\nlet pendingMutations = false;\n/**\n * @param observerTarget\n * @param target\n */\nconst matchesIndex = (observerTarget, target) => {\n    return !!observerTarget && observerTarget[7 /* TransferrableKeys.index */] === target[7 /* TransferrableKeys.index */];\n};\n/**\n * @param observer\n * @param record\n */\nconst pushMutation = (observer, record) => {\n    observer.pushRecord(record);\n    if (!pendingMutations) {\n        pendingMutations = true;\n        Promise.resolve().then(() => {\n            pendingMutations = false;\n            observers.forEach((observer) => observer.callback(observer.takeRecords()));\n        });\n    }\n};\n/**\n * @param document\n * @param record\n * @param transferable\n */\nexport function mutate(document, record, transferable) {\n    // Post-message `transferable` to the main thread to apply mutations.\n    transfer(document, transferable);\n    // The MutationRecord is only used for external callers of MutationObserver.\n    observers.forEach((observer) => {\n        for (let t = record.target; t; t = t.parentNode) {\n            if (matchesIndex(observer.target, t)) {\n                pushMutation(observer, record);\n                break;\n            }\n        }\n    });\n}\nexport class MutationObserver {\n    callback;\n    [42 /* TransferrableKeys.records */] = [];\n    target;\n    options;\n    constructor(callback) {\n        this.callback = callback;\n    }\n    /**\n     * Register the MutationObserver instance to observe a Nodes mutations.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     * @param target Node to observe DOM mutations\n     */\n    observe(target, options) {\n        this.disconnect();\n        this.target = target;\n        this.options = options || {};\n        observers.push(this);\n    }\n    /**\n     * Stop the MutationObserver instance from observing a Nodes mutations.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     */\n    disconnect() {\n        this.target = null;\n        const index = observers.indexOf(this);\n        if (index >= 0) {\n            observers.splice(index, 1);\n        }\n    }\n    /**\n     * Empties the MutationObserver instance's record queue and returns what was in there.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     * @return Mutation Records stored on this MutationObserver instance.\n     */\n    takeRecords() {\n        const records = this[42 /* TransferrableKeys.records */];\n        return records.splice(0, records.length);\n    }\n    /**\n     * NOTE: This method doesn't exist on native MutationObserver.\n     * @param record MutationRecord to store for this instance.\n     */\n    pushRecord(record) {\n        this[42 /* TransferrableKeys.records */].push(record);\n    }\n}\n//# sourceMappingURL=MutationObserver.js.map","import { elementPredicate, matchAttrReference, matchChildrenElements } from './matchElements';\nimport { Node } from './Node';\nimport { containsIndexOf, toLower } from '../../utils';\n/*\nNormally ParentNode is implemented as a mixin, but since the Node class is an abstract\nthis makes it hard to build a mixin that recieves a base of the representations of Node needing\nthe mixed in functionality.\n\n// Partially implemented Mixin Methods\n// Both Element.querySelector() and Element.querySelector() are only implemented for the following simple selectors:\n// - Element selectors\n// - ID selectors\n// - Class selectors\n// - Attribute selectors\n// Element.querySelector() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n// Element.querySelectorAll() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n*/\nexport class ParentNode extends Node {\n    /**\n     * Getter returning children of an Element that are Elements themselves.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/children\n     * @return Element objects that are children of this ParentNode, omitting all of its non-element nodes.\n     */\n    get children() {\n        return this.childNodes.filter(elementPredicate);\n    }\n    /**\n     * Getter returning the number of child elements of a Element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/childElementCount\n     * @return number of child elements of the given Element.\n     */\n    get childElementCount() {\n        return this.children.length;\n    }\n    /**\n     * Getter returning the first Element in Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/firstElementChild\n     * @return first childNode that is also an element.\n     */\n    get firstElementChild() {\n        return this.childNodes.find(elementPredicate) || null;\n    }\n    /**\n     * Getter returning the last Element in Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/lastElementChild\n     * @return first childNode that is also an element.\n     */\n    get lastElementChild() {\n        const children = this.children;\n        return children[children.length - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n     * @param selector the selector we are trying to match for.\n     * @return Element with matching selector.\n     */\n    querySelector(selector) {\n        const matches = querySelectorAll(this, selector);\n        return matches ? matches[0] : null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n     * @param selector the selector we are trying to match for.\n     * @return Elements with matching selector.\n     */\n    querySelectorAll(selector) {\n        return querySelectorAll(this, selector);\n    }\n}\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n * @param node the node to filter results under.\n * @param selector the selector we are trying to match for.\n * @return Element with matching selector.\n */\nfunction querySelectorAll(node, selector) {\n    // As per spec: https://dom.spec.whatwg.org/#scope-match-a-selectors-string\n    // First, parse the selector\n    const selectorBracketIndexes = [selector.indexOf('['), selector.indexOf(']')];\n    const selectorHasAttr = containsIndexOf(selectorBracketIndexes[0]) && containsIndexOf(selectorBracketIndexes[1]);\n    const elementSelector = selectorHasAttr ? selector.substring(0, selectorBracketIndexes[0]) : selector;\n    const attrSelector = selectorHasAttr ? selector.substring(selectorBracketIndexes[0], selectorBracketIndexes[1] + 1) : null;\n    // TODO(nainar): Parsing selectors is needed when we add in more complex selectors.\n    // Second, find all the matching elements on the Document\n    let matcher;\n    if (selector[0] === '[') {\n        matcher = (element) => matchAttrReference(selector, element);\n    }\n    else if (elementSelector[0] === '#') {\n        matcher = selectorHasAttr\n            ? (element) => element.id === elementSelector.substr(1) && matchAttrReference(attrSelector, element)\n            : (element) => element.id === elementSelector.substr(1);\n    }\n    else if (elementSelector[0] === '.') {\n        matcher = selectorHasAttr\n            ? (element) => element.classList.contains(elementSelector.substr(1)) && matchAttrReference(attrSelector, element)\n            : (element) => element.classList.contains(elementSelector.substr(1));\n    }\n    else {\n        matcher = selectorHasAttr\n            ? (element) => element.localName === toLower(elementSelector) && matchAttrReference(attrSelector, element)\n            : (element) => element.localName === toLower(elementSelector);\n    }\n    // Third, filter to return elements that exist within the querying element's descendants.\n    return matcher\n        ? matchChildrenElements(node[45 /* TransferrableKeys.scopingRoot */], matcher).filter((element) => node !== element && node.contains(element))\n        : [];\n}\n//# sourceMappingURL=ParentNode.js.map","export const toLower = (value) => value.toLowerCase();\nexport const toUpper = (value) => value.toUpperCase();\nexport const containsIndexOf = (pos) => pos !== -1;\nexport const keyValueString = (key, value) => `${key}=\"${value}\"`;\n//# sourceMappingURL=utils.js.map","import { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\nconst WHITESPACE_REGEX = /\\s/;\n/**\n * Synchronizes the string getter/setter with the actual DOMTokenList instance.\n * @param defineOn Element or class extension to define getter/setter pair for token list access.\n * @param accessorKey Key used to access DOMTokenList directly from specific element.\n * @param propertyName Key used to access DOMTokenList as string getter/setter.\n */\nexport function synchronizedAccessor(defineOn, accessorKey, propertyName) {\n    Object.defineProperty(defineOn.prototype, propertyName, {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return this[accessorKey].value;\n        },\n        set(value) {\n            this[accessorKey].value = value;\n        },\n    });\n}\nexport class DOMTokenList {\n    [43 /* TransferrableKeys.tokens */] = [];\n    [13 /* TransferrableKeys.target */];\n    [18 /* TransferrableKeys.attributeName */];\n    [44 /* TransferrableKeys.storeAttribute */];\n    /**\n     * The DOMTokenList interface represents a set of space-separated tokens.\n     * It is indexed beginning with 0 as with JavaScript Array objects and is case-sensitive.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList\n     * @param target Specific Element instance to modify when value is changed.\n     * @param attributeName Name of the attribute used by Element to access DOMTokenList.\n     */\n    constructor(target, attributeName) {\n        this[13 /* TransferrableKeys.target */] = target;\n        this[18 /* TransferrableKeys.attributeName */] = attributeName;\n        this[44 /* TransferrableKeys.storeAttribute */] = target[44 /* TransferrableKeys.storeAttribute */].bind(target);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/value\n     * @return string representation of tokens (space delimitted).\n     */\n    get value() {\n        return this[43 /* TransferrableKeys.tokens */].join(' ');\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/length\n     * @return integer representing the number of objects stored in the object.\n     */\n    get length() {\n        return this[43 /* TransferrableKeys.tokens */].length;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/value\n     * @param collection String of values space delimited to replace the current DOMTokenList with.\n     */\n    set value(collection) {\n        const oldValue = this.value;\n        const newValue = collection.trim();\n        // Replace current tokens with new tokens.\n        this[43 /* TransferrableKeys.tokens */].splice(0, this[43 /* TransferrableKeys.tokens */].length, ...(newValue !== '' ? newValue.split(/\\s+/) : ''));\n        this[67 /* TransferrableKeys.mutated */](oldValue, newValue);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/item\n     * @param index number from DOMTokenList entities to retrieve value of\n     * @return value stored at the index requested, or undefined if beyond known range.\n     */\n    item(index) {\n        return this[43 /* TransferrableKeys.tokens */][index];\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/contains\n     * @param token value the DOMTokenList is tested for.\n     * @return boolean indicating if the token is contained by the DOMTokenList.\n     */\n    contains(token) {\n        return this[43 /* TransferrableKeys.tokens */].includes(token);\n    }\n    /**\n     * Add a token or tokens to the list.\n     * Note: All duplicates are removed, and the first token's position with the value is preserved.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/add\n     * @param tokens each token is a string to add to a TokenList.\n     */\n    add(...tokens) {\n        const oldValue = this.value;\n        this[43 /* TransferrableKeys.tokens */].splice(0, this[43 /* TransferrableKeys.tokens */].length, ...Array.from(new Set(this[43 /* TransferrableKeys.tokens */].concat(tokens))));\n        this[67 /* TransferrableKeys.mutated */](oldValue, this.value);\n    }\n    /**\n     * Remove a token or tokens from the list.\n     * Note: All duplicates are removed, and the first token's position with the value is preserved.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/remove\n     * @param tokens each token is a string to remove from a TokenList.\n     */\n    remove(...tokens) {\n        const oldValue = this.value;\n        this[43 /* TransferrableKeys.tokens */].splice(0, this[43 /* TransferrableKeys.tokens */].length, ...Array.from(new Set(this[43 /* TransferrableKeys.tokens */].filter((token) => !tokens.includes(token)))));\n        this[67 /* TransferrableKeys.mutated */](oldValue, this.value);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/replace\n     * @param token\n     * @param newToken\n     */\n    replace(token, newToken) {\n        if (!this[43 /* TransferrableKeys.tokens */].includes(token)) {\n            return;\n        }\n        const oldValue = this.value;\n        const set = new Set(this[43 /* TransferrableKeys.tokens */]);\n        if (token !== newToken) {\n            set.delete(token);\n            if (newToken !== '') {\n                set.add(newToken);\n            }\n        }\n        this[43 /* TransferrableKeys.tokens */].splice(0, this[43 /* TransferrableKeys.tokens */].length, ...Array.from(set));\n        this[67 /* TransferrableKeys.mutated */](oldValue, this.value);\n    }\n    /**\n     * Adds or removes a token based on its presence in the token list.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/toggle\n     * @param token string to add or remove from the token list\n     * @param force changes toggle into a one way-only operation. true => token added. false => token removed.\n     * @return true if the token is in the list following mutation, false if not.\n     */\n    toggle(token, force) {\n        if (WHITESPACE_REGEX.test(token)) {\n            throw new TypeError('Uncaught DOMException');\n        }\n        if (!this[43 /* TransferrableKeys.tokens */].includes(token)) {\n            if (force === undefined || !!force) {\n                // Note, this will add the token if force is undefined (not passed into the method), or truthy.\n                this.add(token);\n            }\n            return true;\n        }\n        else if (!force) {\n            // Note, this will remove the token if force is undefined (not passed into the method), or falsey.\n            this.remove(token);\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Report tokenList mutations to MutationObserver.\n     * @param oldValue value before mutation\n     * @param value value after mutation\n     * @private\n     */\n    [67 /* TransferrableKeys.mutated */](oldValue, value) {\n        this[44 /* TransferrableKeys.storeAttribute */](this[13 /* TransferrableKeys.target */].namespaceURI, this[18 /* TransferrableKeys.attributeName */], value);\n        mutate(this[13 /* TransferrableKeys.target */].ownerDocument, {\n            type: 0 /* MutationRecordType.ATTRIBUTES */,\n            target: this[13 /* TransferrableKeys.target */],\n            attributeName: this[18 /* TransferrableKeys.attributeName */],\n            value,\n            oldValue,\n        }, [\n            0 /* TransferrableMutationType.ATTRIBUTES */,\n            this[13 /* TransferrableKeys.target */][7 /* TransferrableKeys.index */],\n            storeString(this[18 /* TransferrableKeys.attributeName */]),\n            0,\n            value !== null ? storeString(value) + 1 : 0,\n        ]);\n    }\n}\n//# sourceMappingURL=DOMTokenList.js.map","import { SVG_NAMESPACE, HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { toLower, toUpper } from '../../utils';\nfunction arr_back(arr) {\n    return arr[arr.length - 1];\n}\n// https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\nconst kMarkupPattern = /<!--([^]*)-->|<(\\/?)([a-z][-.0-9_a-z]*)([^>]*?)(\\/?)>/gi;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\nconst kAttributePattern = /(^|\\s)([^\\s\"'>\\/=]+)\\s*=\\s*(\"([^\"]+)\"|'([^']+)'|(\\S+))/gi;\nconst kSelfClosingElements = {\n    AREA: true,\n    BASE: true,\n    BR: true,\n    COL: true,\n    HR: true,\n    IMG: true,\n    INPUT: true,\n    LINK: true,\n    META: true,\n    PARAM: true,\n    SOURCE: true,\n    TRACK: true,\n    WBR: true,\n};\nconst kElementsClosedByOpening = {\n    LI: { LI: true },\n    DT: { DT: true, DD: true },\n    DD: { DD: true, DT: true },\n    P: {\n        ADDRESS: true,\n        ARTICLE: true,\n        ASIDE: true,\n        BLOCKQUOTE: true,\n        DETAILS: true,\n        DIV: true,\n        DL: true,\n        FIELDSET: true,\n        FIGCAPTION: true,\n        FIGURE: true,\n        FOOTER: true,\n        FORM: true,\n        H1: true,\n        H2: true,\n        H3: true,\n        H4: true,\n        H5: true,\n        H6: true,\n        HEADER: true,\n        HR: true,\n        MAIN: true,\n        NAV: true,\n        OL: true,\n        P: true,\n        PRE: true,\n        SECTION: true,\n        TABLE: true,\n        UL: true,\n    },\n    RT: { RT: true, RP: true },\n    RP: { RT: true, RP: true },\n    OPTGROUP: { OPTGROUP: true },\n    OPTION: { OPTION: true, OPTGROUP: true },\n    THEAD: { TBODY: true, TFOOT: true },\n    TBODY: { TBODY: true, TFOOT: true },\n    TR: { TR: true },\n    TD: { TD: true, TH: true },\n    TH: { TD: true, TH: true },\n};\nconst kElementsClosedByClosing = {\n    LI: { UL: true, OL: true },\n    A: { DIV: true },\n    B: { DIV: true },\n    I: { DIV: true },\n    P: { DIV: true },\n    TD: { TR: true, TABLE: true },\n    TH: { TR: true, TABLE: true },\n};\nconst kBlockTextElements = {\n    SCRIPT: true,\n    NOSCRIPT: true,\n    STYLE: true,\n    PRE: true,\n};\n/**\n * Parses HTML and returns a root element\n * Parse a chuck of HTML source.\n * @param  {string} data HTML in string format.\n * @param {!Element} root The element to use as root.\n * @return {Element}      root element\n */\nexport function parse(data, rootElement) {\n    const ownerDocument = rootElement.ownerDocument;\n    const root = ownerDocument.createElementNS(rootElement.namespaceURI, rootElement.localName);\n    let currentParent = root;\n    let currentNamespace = root.namespaceURI;\n    const stack = [root];\n    let lastTextPos = 0;\n    let match;\n    data = '<q>' + data + '</q>';\n    const tagsClosed = [];\n    if (currentNamespace !== SVG_NAMESPACE && currentNamespace !== HTML_NAMESPACE) {\n        throw new Error('Namespace not supported: ' + currentNamespace);\n    }\n    while ((match = kMarkupPattern.exec(data))) {\n        const commentContents = match[1]; // <!--contents-->\n        const beginningSlash = match[2]; // ... </ ...\n        const tagName = match[3];\n        const matchAttributes = match[4];\n        const endSlash = match[5]; // ... /> ...\n        if (lastTextPos < match.index) {\n            // if has content\n            const text = data.slice(lastTextPos, match.index);\n            currentParent.appendChild(ownerDocument.createTextNode(decodeEntities(text)));\n        }\n        lastTextPos = kMarkupPattern.lastIndex;\n        if (commentContents !== undefined) {\n            // this is a comment\n            currentParent.appendChild(ownerDocument.createComment(commentContents));\n            continue;\n        }\n        const normalizedTagName = toUpper(tagName);\n        if (normalizedTagName === 'SVG') {\n            currentNamespace = beginningSlash ? HTML_NAMESPACE : SVG_NAMESPACE;\n        }\n        if (!beginningSlash) {\n            // not </ tags\n            if (!endSlash && kElementsClosedByOpening[currentParent.tagName]) {\n                if (kElementsClosedByOpening[currentParent.tagName][normalizedTagName]) {\n                    stack.pop();\n                    currentParent = arr_back(stack);\n                }\n            }\n            const childToAppend = ownerDocument.createElementNS(currentNamespace, currentNamespace === HTML_NAMESPACE ? toLower(tagName) : tagName);\n            for (let attMatch; (attMatch = kAttributePattern.exec(matchAttributes));) {\n                const attrName = attMatch[2];\n                const attrValue = attMatch[4] || attMatch[5] || attMatch[6];\n                childToAppend.setAttribute(attrName, attrValue);\n            }\n            currentParent = currentParent.appendChild(childToAppend);\n            stack.push(currentParent);\n            if (kBlockTextElements[normalizedTagName]) {\n                // a little test to find next </script> or </style> ...\n                const closeMarkup = '</' + toLower(normalizedTagName) + '>';\n                const index = data.indexOf(closeMarkup, kMarkupPattern.lastIndex);\n                if (index == -1) {\n                    throw new Error('Close markup not found.');\n                }\n                else {\n                    kMarkupPattern.lastIndex = index;\n                }\n            }\n        }\n        if (tagName === 'foreignObject') {\n            currentNamespace = beginningSlash ? SVG_NAMESPACE : HTML_NAMESPACE;\n        }\n        if (beginningSlash || endSlash || kSelfClosingElements[normalizedTagName]) {\n            // </ or /> or <br> etc.\n            while (true) {\n                if (stack.length <= 1) {\n                    break;\n                }\n                if (toUpper(currentParent.nodeName) == normalizedTagName) {\n                    stack.pop();\n                    currentParent = arr_back(stack);\n                    break;\n                }\n                else {\n                    // Trying to close current tag, and move on\n                    if (kElementsClosedByClosing[currentParent.tagName]) {\n                        if (kElementsClosedByClosing[currentParent.tagName][normalizedTagName]) {\n                            stack.pop();\n                            currentParent = arr_back(stack);\n                            continue;\n                        }\n                    }\n                    // Use aggressive strategy to handle unmatching markups.\n                    break;\n                }\n            }\n        }\n    }\n    for (const node of stack) {\n        if (tagsClosed[tagsClosed.length - 1] == node.nodeName) {\n            stack.pop();\n            tagsClosed.pop();\n            currentParent = arr_back(stack);\n        }\n        else\n            break;\n    }\n    const valid = stack.length === 1;\n    if (!valid) {\n        throw new Error('Attempting to parse invalid HTML content.');\n    }\n    const wrapper = root.firstChild;\n    if (wrapper) {\n        wrapper.parentNode = null;\n        wrapper.childNodes.forEach((node) => {\n            node.parentNode = null;\n        });\n        return wrapper;\n    }\n    throw new Error('Attempting to parse invalid HTML.');\n}\n/**\n * Decodes HTML Entities.\n * Currently only works for numeric entities, as well as the 4 named entities\n * required for encoding HTML: &, \", <, >.\n * See https://developer.mozilla.org/en-US/docs/Glossary/Entity.\n *\n * TODO: create solution for other named entities.\n */\nconst RESERVED_CHARACTERS = {\n    __proto__: null,\n    amp: '&',\n    lt: '<',\n    gt: '>',\n    quot: '\"',\n};\nfunction decodeEntities(html) {\n    return html.replace(/&(?:(#x?[\\da-f]+)|([\\w]+));?/gi, function (s, numericEntity, namedEntity) {\n        // Numeric entity\n        if (numericEntity) {\n            let code = numericEntity.charAt(1).toLowerCase() === 'x' ? parseInt(numericEntity.substr(2), 16) : parseInt(numericEntity.substr(1), 10);\n            // 1114111 is the largest valid unicode codepoint.\n            if (isNaN(code) || code > 1114111) {\n                return s;\n            }\n            return String.fromCodePoint(code) || s;\n        }\n        // Named entity. Only HTML reserved entities are currently supported.\n        if (namedEntity) {\n            return RESERVED_CHARACTERS[namedEntity.toLowerCase()] || s;\n        }\n        return s;\n    });\n}\n//# sourceMappingURL=html-parser.js.map","export function getPreviousElementSibling(node) {\n    let parentNodes = node.parentNode && node.parentNode.childNodes;\n    if (!parentNodes) {\n        return null;\n    }\n    for (let i = parentNodes.indexOf(node) - 1; i >= 0; i--) {\n        let node = parentNodes[i];\n        if (node.nodeType === 1 /* NodeType.ELEMENT_NODE */) {\n            return node;\n        }\n    }\n    return null;\n}\nexport function getNextElementSibling(node) {\n    let parentNodes = node.parentNode && node.parentNode.childNodes;\n    if (!parentNodes) {\n        return null;\n    }\n    for (let i = parentNodes.indexOf(node) + 1; i < parentNodes.length; i++) {\n        let node = parentNodes[i];\n        if (node.nodeType === 1 /* NodeType.ELEMENT_NODE */) {\n            return node;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=elementSibling.js.map","import { ParentNode } from './ParentNode';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nimport { toString as attrsToString, matchPredicate as matchAttrPredicate } from './Attr';\nimport { mutate } from '../MutationObserver';\nimport { toLower, toUpper } from '../../utils';\nimport { CSSStyleDeclaration } from '../css/CSSStyleDeclaration';\nimport { matchChildrenElements } from './matchElements';\nimport { reflectProperties } from './enhanceElement';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\nimport { HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { parse } from '../../third_party/html-parser/html-parser';\nimport { propagate } from './Node';\nimport { Event } from '../Event';\nimport { getNextElementSibling, getPreviousElementSibling } from './elementSibling';\nexport const NS_NAME_TO_CLASS = {};\nexport const registerSubclass = (localName, subclass, namespace = HTML_NAMESPACE) => (NS_NAME_TO_CLASS[`${namespace}:${localName}`] = subclass);\nexport function definePropertyBackedAttributes(defineOn, attributes) {\n    const sub = Object.create(defineOn[46 /* TransferrableKeys.propertyBackedAttributes */]);\n    defineOn[46 /* TransferrableKeys.propertyBackedAttributes */] = Object.assign(sub, attributes);\n}\n/**\n * There are six kinds of elements, each having different start/close tag semantics.\n * @see https://html.spec.whatwg.org/multipage/syntax.html#elements-2\n */\nvar ElementKind;\n(function (ElementKind) {\n    ElementKind[ElementKind[\"NORMAL\"] = 0] = \"NORMAL\";\n    ElementKind[ElementKind[\"VOID\"] = 1] = \"VOID\";\n    // The following element kinds have no special handling in worker-dom yet\n    // and are lumped into the NORMAL kind.\n    /*\n    FOREIGN,\n    TEMPLATE,\n    RAW_TEXT,\n    ESCAPABLE_RAW,\n    */\n})(ElementKind || (ElementKind = {}));\n/**\n * @see https://html.spec.whatwg.org/multipage/syntax.html#void-elements\n */\nconst VOID_ELEMENTS = ['AREA', 'BASE', 'BR', 'COL', 'EMBED', 'HR', 'IMG', 'INPUT', 'LINK', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR'];\nexport class Element extends ParentNode {\n    _classList;\n    static [46 /* TransferrableKeys.propertyBackedAttributes */] = {\n        class: [(el) => el.classList.value, (el, value) => (el.classList.value = value)],\n        style: [(el) => el.cssText, (el, value) => (el.cssText = value)],\n    };\n    localName;\n    attributes = [];\n    namespaceURI;\n    style_;\n    /**\n     * Element \"kind\" dictates certain behaviors e.g. start/end tag semantics.\n     * @see https://html.spec.whatwg.org/multipage/syntax.html#elements-2\n     */\n    kind;\n    constructor(nodeType, localName, namespaceURI, ownerDocument, overrideIndex) {\n        super(nodeType, toUpper(localName), ownerDocument, overrideIndex);\n        this.namespaceURI = namespaceURI || HTML_NAMESPACE;\n        this.localName = localName;\n        this.kind = VOID_ELEMENTS.includes(this.tagName) ? ElementKind.VOID : ElementKind.NORMAL;\n        this[8 /* TransferrableKeys.creationFormat */] = [\n            this[7 /* TransferrableKeys.index */],\n            this.nodeType,\n            storeString(this.localName),\n            0,\n            this.namespaceURI === null ? 0 : storeString(this.namespaceURI),\n        ];\n    }\n    // We lazily instantiate the CSSStyleDeclaration to keep element creation cheap\n    // See https://github.com/ampproject/worker-dom/pull/1096 for context.\n    get style() {\n        if (!this.style_) {\n            this.style_ = new CSSStyleDeclaration(this);\n        }\n        return this.style_;\n    }\n    // Unimplemented properties\n    // Element.clientHeight – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientHeight\n    // Element.clientLeft – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientLeft\n    // Element.clientTop – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientTop\n    // Element.clientWidth – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientWidth\n    // set Element.innerHTML – https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n    // Element.prefix – https://developer.mozilla.org/en-US/docs/Web/API/Element/prefix\n    // Element.scrollHeight – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight\n    // Element.scrollLeft – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeft\n    // Element.scrollLeftMax – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeftMax\n    // Element.scrollTop – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTop\n    // Element.scrollTopMax – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTopMax\n    // Element.scrollWidth – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollWidth\n    // Element.shadowRoot – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/shadowRoot\n    // Element.slot – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/slot\n    // Element.tabStop – https://developer.mozilla.org/en-US/docs/Web/API/Element/tabStop\n    // Element.undoManager – https://developer.mozilla.org/en-US/docs/Web/API/Element/undoManager\n    // Element.undoScope – https://developer.mozilla.org/en-US/docs/Web/API/Element/undoScope\n    // Unimplemented Methods\n    // Element.attachShadow() – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow\n    // Element.animate() – https://developer.mozilla.org/en-US/docs/Web/API/Element/animate\n    // Element.closest() – https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n    // Element.getAttributeNames() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNames\n    // Element.getBoundingClientRect() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    // Element.getClientRects() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getClientRects\n    // Element.getElementsByTagNameNS() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagNameNS\n    // Element.insertAdjacentElement() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentElement\n    // Element.insertAdjacentHTML() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentHTML\n    // Element.insertAdjacentText() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentText\n    // Element.matches() – https://developer.mozilla.org/en-US/docs/Web/API/Element/matches\n    // Element.releasePointerCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/releasePointerCapture\n    // Element.requestFullscreen() – https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n    // Element.requestPointerLock() – https://developer.mozilla.org/en-US/docs/Web/API/Element/requestPointerLock\n    // Element.scrollIntoView() – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n    // Element.setCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/setCapture\n    // Element.setPointerCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/setPointerCapture\n    // Partially implemented Mixin Methods\n    // Both Element.querySelector() and Element.querySelector() are only implemented for the following simple selectors:\n    // - Element selectors\n    // - ID selectors\n    // - Class selectors\n    // - Attribute selectors\n    // Element.querySelector() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n    // Element.querySelectorAll() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n    // Mixins not implemented\n    // Slotable.assignedSlot – https://developer.mozilla.org/en-US/docs/Web/API/Slotable/assignedSlot\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/previousElementSibling\n     * Returns the Element immediately prior to the specified one in its parent's children list,\n     * or null if the specified element is the first one in the list.\n     */\n    get previousElementSibling() {\n        return getPreviousElementSibling(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/nextElementSibling\n     * Returns the Element immediately following the specified one in its parent's children list,\n     * or null if the specified element is the last one in the list.\n     */\n    get nextElementSibling() {\n        return getNextElementSibling(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/outerHTML\n     * @return string representation of serialized HTML describing the Element and its descendants.\n     */\n    get outerHTML() {\n        const tag = this.localName || this.tagName;\n        const start = `<${[tag, attrsToString(this.attributes)].join(' ').trim()}>`;\n        const contents = this.innerHTML;\n        if (!contents) {\n            if (this.kind === ElementKind.VOID) {\n                // Void elements e.g. <input> only have a start tag (unless children are added programmatically).\n                // https://html.spec.whatwg.org/multipage/syntax.html#void-elements\n                return start;\n            }\n        }\n        return start + contents + `</${tag}>`;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n     * @return string representation of serialized HTML describing the Element's descendants.\n     */\n    get innerHTML() {\n        const childNodes = this.childNodes;\n        if (childNodes.length) {\n            return childNodes\n                .map((child) => {\n                switch (child.nodeType) {\n                    case 3 /* NodeType.TEXT_NODE */:\n                        return child.textContent;\n                    case 8 /* NodeType.COMMENT_NODE */:\n                        return `<!--${child.textContent}-->`;\n                    default:\n                        return child.outerHTML;\n                }\n            })\n                .join('');\n        }\n        return '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n     * @param html The raw html string to parse.\n     */\n    set innerHTML(html) {\n        const root = parse(html, this);\n        // remove previous children\n        this.childNodes.forEach((n) => {\n            propagate(n, 'isConnected', false);\n            propagate(n, 45 /* TransferrableKeys.scopingRoot */, n);\n        });\n        mutate(this.ownerDocument, {\n            removedNodes: this.childNodes,\n            type: 2 /* MutationRecordType.CHILD_LIST */,\n            target: this,\n        }, [\n            2 /* TransferrableMutationType.CHILD_LIST */,\n            this[7 /* TransferrableKeys.index */],\n            0,\n            0,\n            0,\n            this.childNodes.length,\n            ...this.childNodes.map((node) => node[7 /* TransferrableKeys.index */]),\n        ]);\n        this.childNodes = [];\n        // add new children\n        root.childNodes.forEach((child) => this.appendChild(child));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @param text new text replacing all childNodes content.\n     */\n    set textContent(text) {\n        // TODO(KB): Investigate removing all children in a single .splice to childNodes.\n        this.childNodes.slice().forEach((child) => child.remove());\n        this.appendChild(this.ownerDocument.createTextNode(text));\n    }\n    /**\n     * Getter returning the text representation of Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @return text from all childNodes.\n     */\n    get textContent() {\n        return this.getTextContent();\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/tagName\n     * @return string tag name (i.e 'div')\n     */\n    get tagName() {\n        return this.nodeName;\n    }\n    /**\n     * Sets the value of an attribute on this element using a null namespace.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute\n     * @param name attribute name\n     * @param value attribute value\n     */\n    setAttribute(name, value) {\n        this.setAttributeNS(HTML_NAMESPACE, name, value);\n    }\n    /**\n     * Get the value of an attribute on this Element with the null namespace.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute\n     * @param name attribute name\n     * @return value of a specified attribute on the element, or null if the attribute doesn't exist.\n     */\n    getAttribute(name) {\n        return this.getAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * Remove an attribute from this element in the null namespace.\n     *\n     * Method returns void, so it is not chainable.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute\n     * @param name attribute name\n     */\n    removeAttribute(name) {\n        this.removeAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttribute\n     * @param name attribute name\n     * @return Boolean indicating if the element has the specified attribute.\n     */\n    hasAttribute(name) {\n        return this.hasAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttributes\n     * @return Boolean indicating if the element has any attributes.\n     */\n    hasAttributes() {\n        return this.attributes.length > 0;\n    }\n    /**\n     * Sets the value of an attribute on this Element with the provided namespace.\n     *\n     * If the attribute already exists, the value is updated; otherwise a new attribute is added with the specified name and value.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttributeNS\n     * @param namespaceURI\n     * @param name attribute name\n     * @param value attribute value\n     */\n    setAttributeNS(namespaceURI, name, value) {\n        const valueAsString = String(value);\n        const propertyBacked = this.constructor[46 /* TransferrableKeys.propertyBackedAttributes */][name];\n        if (propertyBacked !== undefined) {\n            if (!this.attributes.find(matchAttrPredicate(namespaceURI, name))) {\n                this.attributes.push({\n                    namespaceURI,\n                    name,\n                    value: valueAsString,\n                });\n            }\n            propertyBacked[1](this, valueAsString);\n            return;\n        }\n        const oldValue = this[44 /* TransferrableKeys.storeAttribute */](namespaceURI, name, valueAsString);\n        mutate(this.ownerDocument, {\n            type: 0 /* MutationRecordType.ATTRIBUTES */,\n            target: this,\n            attributeName: name,\n            attributeNamespace: namespaceURI,\n            value: valueAsString,\n            oldValue,\n        }, [\n            0 /* TransferrableMutationType.ATTRIBUTES */,\n            this[7 /* TransferrableKeys.index */],\n            storeString(name),\n            storeString(namespaceURI),\n            value !== null ? storeString(valueAsString) + 1 : 0,\n        ]);\n    }\n    [44 /* TransferrableKeys.storeAttribute */](namespaceURI, name, value) {\n        const attr = this.attributes.find(matchAttrPredicate(namespaceURI, name));\n        const oldValue = (attr && attr.value) || '';\n        if (attr) {\n            attr.value = value;\n        }\n        else {\n            this.attributes.push({\n                namespaceURI,\n                name,\n                value,\n            });\n        }\n        return oldValue;\n    }\n    /**\n     * Get the value of an attribute on this Element with the specified namespace.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     * @return value of a specified attribute on the element, or null if the attribute doesn't exist.\n     */\n    getAttributeNS(namespaceURI, name) {\n        const attr = this.attributes.find(matchAttrPredicate(namespaceURI, name));\n        if (attr) {\n            const propertyBacked = this.constructor[46 /* TransferrableKeys.propertyBackedAttributes */][name];\n            return propertyBacked !== undefined ? propertyBacked[0](this) : attr.value;\n        }\n        return null;\n    }\n    /**\n     * Remove an attribute from this element in the specified namespace.\n     *\n     * Method returns void, so it is not chainable.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     */\n    removeAttributeNS(namespaceURI, name) {\n        const index = this.attributes.findIndex(matchAttrPredicate(namespaceURI, name));\n        if (index >= 0) {\n            const oldValue = this.attributes[index].value;\n            this.attributes.splice(index, 1);\n            mutate(this.ownerDocument, {\n                type: 0 /* MutationRecordType.ATTRIBUTES */,\n                target: this,\n                attributeName: name,\n                attributeNamespace: namespaceURI,\n                oldValue,\n            }, [\n                0 /* TransferrableMutationType.ATTRIBUTES */,\n                this[7 /* TransferrableKeys.index */],\n                storeString(name),\n                storeString(namespaceURI),\n                0, // 0 means no value\n            ]);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttributeNS\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     * @return Boolean indicating if the element has the specified attribute.\n     */\n    hasAttributeNS(namespaceURI, name) {\n        return this.attributes.some(matchAttrPredicate(namespaceURI, name));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByClassName\n     * @param names contains one more more classnames to match on. Multiples are space seperated, indicating an AND operation.\n     * @return Element array with matching classnames\n     */\n    getElementsByClassName(names) {\n        const inputClassList = names.split(' ');\n        // TODO(KB) – Compare performance of [].some(value => DOMTokenList.contains(value)) and regex.\n        // const classRegex = new RegExp(classNames.split(' ').map(name => `(?=.*${name})`).join(''));\n        return matchChildrenElements(this, (element) => inputClassList.some((inputClassName) => element.classList.contains(inputClassName)));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagName\n     * @param tagName the qualified name to look for. The special string \"*\" represents all elements.\n     * @return Element array with matching tagnames\n     */\n    getElementsByTagName(tagName) {\n        const lowerTagName = toLower(tagName);\n        return matchChildrenElements(this, tagName === '*'\n            ? (_) => true\n            : (element) => (element.namespaceURI === HTML_NAMESPACE ? element.localName === lowerTagName : element.tagName === tagName));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByName\n     * @param name value of name attribute elements must have to be returned\n     * @return Element array with matching name attributes\n     */\n    getElementsByName(name) {\n        const stringName = '' + name;\n        return matchChildrenElements(this, (element) => element.getAttribute('name') === stringName);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @param deep boolean determines if the clone should include a recursive copy of all childNodes.\n     * @return Element containing all current attributes and potentially childNode clones of the Element requested to be cloned.\n     */\n    cloneNode(deep = false) {\n        const clone = this.ownerDocument.createElementNS(this.namespaceURI, this.namespaceURI === HTML_NAMESPACE ? toLower(this.tagName) : this.tagName);\n        this.attributes.forEach((attr) => clone.setAttribute(attr.name, attr.value));\n        if (deep) {\n            this.childNodes.forEach((child) => clone.appendChild(child.cloneNode(deep)));\n        }\n        return clone;\n    }\n    /**\n     * Return the ClientRect for an Element once determined by the main thread.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n     * @return Promise<ClientRect>\n     *\n     * Note: Edge and IE11 do not return the x/y value, but top/left are equivalent. Normalize the values here.\n     */\n    getBoundingClientRectAsync() {\n        const defaultValue = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0,\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n        return new Promise((resolve) => {\n            const messageHandler = ({ data }) => {\n                if (data[12 /* TransferrableKeys.type */] === 6 /* MessageType.GET_BOUNDING_CLIENT_RECT */ &&\n                    data[13 /* TransferrableKeys.target */][0] === this[7 /* TransferrableKeys.index */]) {\n                    this.ownerDocument.removeGlobalEventListener('message', messageHandler);\n                    const transferredBoundingClientRect = data[38 /* TransferrableKeys.data */];\n                    resolve({\n                        top: transferredBoundingClientRect[0],\n                        right: transferredBoundingClientRect[1],\n                        bottom: transferredBoundingClientRect[2],\n                        left: transferredBoundingClientRect[3],\n                        width: transferredBoundingClientRect[4],\n                        height: transferredBoundingClientRect[5],\n                        x: transferredBoundingClientRect[0],\n                        y: transferredBoundingClientRect[3],\n                    });\n                }\n            };\n            if (!this.ownerDocument.addGlobalEventListener || !this.isConnected) {\n                // Elements run within Node runtimes are missing addEventListener as a global.\n                // In this case, treat the return value the same as a disconnected node.\n                resolve(defaultValue);\n            }\n            else {\n                this.ownerDocument.addGlobalEventListener('message', messageHandler);\n                transfer(this.ownerDocument, [5 /* TransferrableMutationType.GET_BOUNDING_CLIENT_RECT */, this[7 /* TransferrableKeys.index */]]);\n                setTimeout(resolve, 500, defaultValue); // TODO: Why a magical constant, define and explain.\n            }\n        });\n    }\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/click\n    click() {\n        const event = new Event('click', {});\n        event.target = this;\n        this.dispatchEvent(event);\n    }\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n    scrollIntoView() {\n        if (this.isConnected) {\n            transfer(this.ownerDocument, [14 /* TransferrableMutationType.SCROLL_INTO_VIEW */, this[7 /* TransferrableKeys.index */]]);\n        }\n    }\n    get classList() {\n        return this._classList || (this._classList = new DOMTokenList(this, 'class'));\n    }\n}\nsynchronizedAccessor(Element, 'classList', 'className');\nreflectProperties([{ id: [''] }], Element);\n//# sourceMappingURL=Element.js.map","import { store } from './strings';\nconst f32 = new Float32Array(1);\nconst u16 = new Uint16Array(f32.buffer);\nfunction isSmallInt(num) {\n    u16[0] = num;\n    // If the Uint16Array doesn't coerce it to another value, that means it fits\n    // into a Uint16Array.\n    return u16[0] === num;\n}\n/**\n * Serializes arguments into a Uint16 compatible format.\n *\n * The serialization format uses a variable length tuple, with the first item\n * being the encoded representation's type and any number of values afterwards.\n *\n * @param args The arguments to serialize\n */\nexport function serializeTransferrableObject(args) {\n    const serialized = [];\n    for (let i = 0; i < args.length; i++) {\n        const arg = args[i];\n        if (typeof arg === 'number') {\n            if (isSmallInt(arg)) {\n                serialized.push(1 /* TransferrableObjectType.SmallInt */, arg);\n            }\n            else {\n                f32[0] = arg;\n                serialized.push(2 /* TransferrableObjectType.Float */, u16[0], u16[1]);\n            }\n            continue;\n        }\n        if (typeof arg === 'string') {\n            serialized.push(3 /* TransferrableObjectType.String */, store(arg));\n            continue;\n        }\n        if (Array.isArray(arg)) {\n            serialized.push(4 /* TransferrableObjectType.Array */, arg.length);\n            const serializedArray = serializeTransferrableObject(arg);\n            for (let i = 0; i < serializedArray.length; i++) {\n                serialized.push(serializedArray[i]);\n            }\n            continue;\n        }\n        if (typeof arg === 'object') {\n            const serializedObject = arg[68 /* TransferrableKeys.serializeAsTransferrableObject */]();\n            for (let i = 0; i < serializedObject.length; i++) {\n                serialized.push(serializedObject[i]);\n            }\n            continue;\n        }\n        throw new Error('Cannot serialize argument.');\n    }\n    return serialized;\n}\n//# sourceMappingURL=serializeTransferrableObject.js.map","import { transfer } from '../MutationTransfer';\nlet indexTracker = 0;\nexport function retrieveImageBitmap(image, canvas) {\n    const callIndex = indexTracker++;\n    const document = canvas.ownerDocument;\n    return new Promise((resolve) => {\n        const messageHandler = ({ data }) => {\n            if (data[12 /* TransferrableKeys.type */] === 10 /* MessageType.IMAGE_BITMAP_INSTANCE */ && data[73 /* TransferrableKeys.callIndex */] === callIndex) {\n                document.removeGlobalEventListener('message', messageHandler);\n                const transferredImageBitmap = data[38 /* TransferrableKeys.data */];\n                resolve(transferredImageBitmap);\n            }\n        };\n        if (!document.addGlobalEventListener) {\n            throw new Error('addGlobalEventListener is not defined.');\n        }\n        else {\n            document.addGlobalEventListener('message', messageHandler);\n            transfer(canvas.ownerDocument, [11 /* TransferrableMutationType.IMAGE_BITMAP_INSTANCE */, image[7 /* TransferrableKeys.index */], callIndex]);\n        }\n    });\n}\n//# sourceMappingURL=canvas-utils.js.map","import { store } from './strings';\nimport { transfer } from './MutationTransfer';\n/**\n * @param document\n * @param location\n * @param data\n */\nexport function createStorage(document, location, data) {\n    const storage = Object.assign(Object.create(null), data);\n    // Define properties on a prototype-less object instead of a class so that\n    // it behaves more like normal objects, e.g. bracket notation and JSON.stringify.\n    const define = Object.defineProperty;\n    define(storage, 'length', {\n        get() {\n            return Object.keys(this).length;\n        },\n    });\n    define(storage, 'key', {\n        value(n) {\n            const keys = Object.keys(this);\n            return n >= 0 && n < keys.length ? keys[n] : null;\n        },\n    });\n    define(storage, 'getItem', {\n        value(key) {\n            const value = this[key];\n            return value ? value : null;\n        },\n    });\n    define(storage, 'setItem', {\n        value(key, value) {\n            const stringValue = String(value);\n            this[key] = stringValue;\n            transfer(document, [12 /* TransferrableMutationType.STORAGE */, 2 /* GetOrSet.SET */, location, store(key) + 1, store(stringValue) + 1]);\n        },\n    });\n    define(storage, 'removeItem', {\n        value(key) {\n            delete this[key];\n            transfer(document, [\n                12 /* TransferrableMutationType.STORAGE */,\n                2 /* GetOrSet.SET */,\n                location,\n                store(key) + 1,\n                0, // value == 0 represents deletion.\n            ]);\n        },\n    });\n    define(storage, 'clear', {\n        value() {\n            Object.keys(this).forEach((key) => {\n                delete this[key];\n            });\n            transfer(document, [\n                12 /* TransferrableMutationType.STORAGE */,\n                2 /* GetOrSet.SET */,\n                location,\n                0,\n                0, // value == 0 represents deletion.\n            ]);\n        },\n    });\n    return storage;\n}\n//# sourceMappingURL=Storage.js.map","import { toLower, toUpper } from '../../utils';\n// To future authors: It would be great if we could enforce that elements are not modified by a ConditionPredicate.\nexport const tagNameConditionPredicate = (tagNames) => (element) => {\n    console.assert(tagNames.every((t) => t === toUpper(t)), 'tagNames must be all uppercase.');\n    return tagNames.includes(element.tagName);\n};\nexport const elementPredicate = (node) => node.nodeType === 1 /* NodeType.ELEMENT_NODE */;\nexport const matchChildrenElements = (node, conditionPredicate) => {\n    const matchingElements = [];\n    node.childNodes.forEach((child) => {\n        if (elementPredicate(child)) {\n            if (conditionPredicate(child)) {\n                matchingElements.push(child);\n            }\n            matchingElements.push(...matchChildrenElements(child, conditionPredicate));\n        }\n    });\n    return matchingElements;\n};\nexport const matchChildElement = (element, conditionPredicate) => {\n    let returnValue = null;\n    element.children.some((child) => {\n        if (conditionPredicate(child)) {\n            returnValue = child;\n            return true;\n        }\n        const grandChildMatch = matchChildElement(child, conditionPredicate);\n        if (grandChildMatch !== null) {\n            returnValue = grandChildMatch;\n            return true;\n        }\n        return false;\n    });\n    return returnValue;\n};\nexport const matchNearestParent = (element, conditionPredicate) => {\n    while ((element = element.parentNode)) {\n        if (conditionPredicate(element)) {\n            return element;\n        }\n    }\n    return null;\n};\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors\n * @param attrSelector the selector we are trying to match for.\n * @param element the element being tested.\n * @return boolean for whether we match the condition\n */\nexport const matchAttrReference = (attrSelector, element) => {\n    if (!attrSelector) {\n        return false;\n    }\n    const equalPos = attrSelector.indexOf('=');\n    const selectorLength = attrSelector.length;\n    const caseInsensitive = attrSelector.charAt(selectorLength - 2) === 'i';\n    const endPos = caseInsensitive ? selectorLength - 3 : selectorLength - 1;\n    if (equalPos !== -1) {\n        const equalSuffix = attrSelector.charAt(equalPos - 1);\n        const possibleSuffixes = ['~', '|', '$', '^', '*'];\n        const attrString = possibleSuffixes.includes(equalSuffix) ? attrSelector.substring(1, equalPos - 1) : attrSelector.substring(1, equalPos);\n        const rawValue = attrSelector.substring(equalPos + 1, endPos);\n        const rawAttrValue = element.getAttribute(attrString);\n        if (rawAttrValue) {\n            const casedValue = caseInsensitive ? toLower(rawValue) : rawValue;\n            const casedAttrValue = caseInsensitive ? toLower(rawAttrValue) : rawAttrValue;\n            switch (equalSuffix) {\n                case '~':\n                    return casedAttrValue.split(' ').indexOf(casedValue) !== -1;\n                case '|':\n                    return casedAttrValue === casedValue || casedAttrValue === `${casedValue}-`;\n                case '^':\n                    return casedAttrValue.startsWith(casedValue);\n                case '$':\n                    return casedAttrValue.endsWith(casedValue);\n                case '*':\n                    return casedAttrValue.indexOf(casedValue) !== -1;\n                default:\n                    return casedAttrValue === casedValue;\n            }\n        }\n        return false;\n    }\n    else {\n        return element.hasAttribute(attrSelector.substring(1, endPos));\n    }\n};\n//# sourceMappingURL=matchElements.js.map","export let phase = 0 /* Phase.Initializing */;\nexport const set = (newPhase) => (phase = newPhase);\n//# sourceMappingURL=phase.js.map","import { store as storeNodeMapping, storeOverride as storeOverrideNodeMapping } from '../nodes';\nimport { toLower } from '../../utils';\nimport { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\n/**\n * Propagates a property change for a Node to itself and all childNodes.\n * @param node Node to start applying change to\n * @param property Property to modify\n * @param value New value to apply\n */\nexport const propagate = (node, property, value) => {\n    node[property] = value;\n    node.childNodes.forEach((child) => propagate(child, property, value));\n};\n// https://developer.mozilla.org/en-US/docs/Web/API/Node\n// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\n//\n// Please note, in this implmentation Node doesn't extend EventTarget.\n// This is intentional to reduce the number of classes.\nexport class Node {\n    ownerDocument; // TODO(choumx): Should be a Document.\n    // https://drafts.csswg.org/selectors-4/#scoping-root\n    [45 /* TransferrableKeys.scopingRoot */];\n    nodeType;\n    nodeName;\n    childNodes = [];\n    parentNode = null;\n    isConnected = false;\n    [7 /* TransferrableKeys.index */];\n    [9 /* TransferrableKeys.transferredFormat */];\n    [8 /* TransferrableKeys.creationFormat */];\n    [10 /* TransferrableKeys.handlers */] = {};\n    constructor(nodeType, nodeName, ownerDocument, overrideIndex) {\n        this.nodeType = nodeType;\n        this.nodeName = nodeName;\n        this.ownerDocument = ownerDocument || this;\n        this[45 /* TransferrableKeys.scopingRoot */] = this;\n        if (process.env.SERVER) {\n            return;\n        }\n        this[7 /* TransferrableKeys.index */] = overrideIndex ? storeOverrideNodeMapping(this, overrideIndex) : storeNodeMapping(this);\n        this[9 /* TransferrableKeys.transferredFormat */] = [this[7 /* TransferrableKeys.index */]];\n    }\n    // Unimplemented Properties\n    // Node.baseURI – https://developer.mozilla.org/en-US/docs/Web/API/Node/baseURI\n    // Unimplemented Methods\n    // Node.compareDocumentPosition() – https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n    // Node.getRootNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/getRootNode\n    // Node.isDefaultNamespace() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isDefaultNamespace\n    // Node.isEqualNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isEqualNode\n    // Node.isSameNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isSameNode\n    // Node.lookupPrefix() – https://developer.mozilla.org/en-US/docs/Web/API/Node/lookupPrefix\n    // Node.lookupNamespaceURI() – https://developer.mozilla.org/en-US/docs/Web/API/Node/lookupNamespaceURI\n    // Node.normalize() – https://developer.mozilla.org/en-US/docs/Web/API/Node/normalize\n    // Implemented at Element/Text layer\n    // Node.nodeValue – https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeValue\n    // Node.cloneNode – https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n    /**\n     * Getter returning the text representation of Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @return text from all childNodes.\n     */\n    get textContent() {\n        return this.getTextContent();\n    }\n    /**\n     * Use `this.getTextContent()` instead of `super.textContent` to avoid incorrect or expensive ES5 transpilation.\n     */\n    getTextContent() {\n        let textContent = '';\n        const childNodes = this.childNodes;\n        if (childNodes.length) {\n            childNodes.forEach((childNode) => (textContent += childNode.textContent));\n            return textContent;\n        }\n        return '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/firstChild\n     * @return Node's first child in the tree, or null if the node has no children.\n     */\n    get firstChild() {\n        return this.childNodes[0] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/lastChild\n     * @return The last child of a node, or null if there are no child elements.\n     */\n    get lastChild() {\n        return this.childNodes[this.childNodes.length - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/nextSibling\n     * @return node immediately following the specified one in it's parent's childNodes, or null if one doesn't exist.\n     */\n    get nextSibling() {\n        if (this.parentNode === null) {\n            return null;\n        }\n        const parentChildNodes = this.parentNode.childNodes;\n        return parentChildNodes[parentChildNodes.indexOf(this) + 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/previousSibling\n     * @return node immediately preceding the specified one in its parent's childNodes, or null if the specified node is the first in that list.\n     */\n    get previousSibling() {\n        if (this.parentNode === null) {\n            return null;\n        }\n        const parentChildNodes = this.parentNode.childNodes;\n        return parentChildNodes[parentChildNodes.indexOf(this) - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/hasChildNodes\n     * @return boolean if the Node has childNodes.\n     */\n    hasChildNodes() {\n        return this.childNodes.length > 0;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/contains\n     * @param otherNode\n     * @return whether a Node is a descendant of a given Node\n     */\n    contains(otherNode) {\n        if (otherNode === this) {\n            return true;\n        }\n        if (this.childNodes.length > 0) {\n            if (this.childNodes.includes(this)) {\n                return true;\n            }\n            return this.childNodes.some((child) => child.contains(otherNode));\n        }\n        return false;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/insertBefore\n     * @param child\n     * @param referenceNode\n     * @return child after it has been inserted.\n     */\n    insertBefore(child, referenceNode) {\n        if (child === null || child === this) {\n            // The new child cannot contain the parent.\n            return child;\n        }\n        if (child.nodeType === 11 /* NodeType.DOCUMENT_FRAGMENT_NODE */) {\n            child.childNodes.slice().forEach((node) => this.insertBefore(node, referenceNode));\n        }\n        else if (referenceNode == null) {\n            // When a referenceNode is not valid, appendChild(child).\n            return this.appendChild(child);\n        }\n        else if (this.childNodes.indexOf(referenceNode) >= 0) {\n            // Should only insertBefore direct children of this Node.\n            child.remove();\n            // Removing a child can cause this.childNodes to change, meaning we need to splice from its updated location.\n            this.childNodes.splice(this.childNodes.indexOf(referenceNode), 0, child);\n            this[56 /* TransferrableKeys.insertedNode */](child);\n            mutate(this.ownerDocument, {\n                addedNodes: [child],\n                nextSibling: referenceNode,\n                type: 2 /* MutationRecordType.CHILD_LIST */,\n                target: this,\n            }, [\n                2 /* TransferrableMutationType.CHILD_LIST */,\n                this[7 /* TransferrableKeys.index */],\n                referenceNode[7 /* TransferrableKeys.index */],\n                0,\n                1,\n                0,\n                child[7 /* TransferrableKeys.index */],\n            ]);\n            return child;\n        }\n        return null;\n    }\n    /**\n     * When a Node is inserted, this method is called (and can be extended by other classes)\n     * @param child\n     */\n    [56 /* TransferrableKeys.insertedNode */](child) {\n        child.parentNode = this;\n        propagate(child, 'isConnected', this.isConnected);\n        propagate(child, 45 /* TransferrableKeys.scopingRoot */, this[45 /* TransferrableKeys.scopingRoot */]);\n    }\n    /**\n     * When a node is removed, this method is called (and can be extended by other classes)\n     * @param child\n     */\n    [57 /* TransferrableKeys.removedNode */](child) {\n        child.parentNode = null;\n        propagate(child, 'isConnected', false);\n        propagate(child, 45 /* TransferrableKeys.scopingRoot */, child);\n    }\n    /**\n     * Adds the specified childNode argument as the last child to the current node.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/appendChild\n     * @param child Child Node to append to this Node.\n     * @return Node the appended node.\n     */\n    appendChild(child) {\n        if (child.nodeType === 11 /* NodeType.DOCUMENT_FRAGMENT_NODE */) {\n            child.childNodes.slice().forEach(this.appendChild, this);\n        }\n        else {\n            child.remove();\n            this.childNodes.push(child);\n            this[56 /* TransferrableKeys.insertedNode */](child);\n            const previousSibling = this.childNodes[this.childNodes.length - 2];\n            mutate(this.ownerDocument, {\n                addedNodes: [child],\n                previousSibling,\n                type: 2 /* MutationRecordType.CHILD_LIST */,\n                target: this,\n            }, [\n                2 /* TransferrableMutationType.CHILD_LIST */,\n                this[7 /* TransferrableKeys.index */],\n                0,\n                previousSibling ? previousSibling[7 /* TransferrableKeys.index */] : 0,\n                1,\n                0,\n                child[7 /* TransferrableKeys.index */],\n            ]);\n        }\n        return child;\n    }\n    /**\n     * Removes a child node from the current element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/removeChild\n     * @param child Child Node to remove from this Node.\n     * @return Node removed from the tree or null if the node wasn't attached to this tree.\n     */\n    removeChild(child) {\n        const index = this.childNodes.indexOf(child);\n        const exists = index >= 0;\n        if (exists) {\n            this.childNodes.splice(index, 1);\n            this[57 /* TransferrableKeys.removedNode */](child);\n            mutate(this.ownerDocument, {\n                removedNodes: [child],\n                type: 2 /* MutationRecordType.CHILD_LIST */,\n                target: this,\n            }, [2 /* TransferrableMutationType.CHILD_LIST */, this[7 /* TransferrableKeys.index */], 0, 0, 0, 1, child[7 /* TransferrableKeys.index */]]);\n            return child;\n        }\n        return null;\n    }\n    /**\n     * @param newChild\n     * @param oldChild\n     * @return child that was replaced.\n     * @note `HierarchyRequestError` not handled e.g. newChild is an ancestor of current node.\n     * @see https://dom.spec.whatwg.org/#concept-node-replace\n     */\n    replaceChild(newChild, oldChild) {\n        if (newChild === oldChild ||\n            // In DOM, this throws DOMException: \"The node to be replaced is not a child of this node.\"\n            oldChild.parentNode !== this ||\n            // In DOM, this throws DOMException: \"The new child element contains the parent.\"\n            newChild.contains(this)) {\n            return oldChild;\n        }\n        // If newChild already exists in the DOM, it is first removed.\n        // TODO: Consider using a mutation-free API here to avoid two mutations\n        // per replaceChild() call.\n        newChild.remove();\n        const index = this.childNodes.indexOf(oldChild);\n        this.childNodes.splice(index, 1, newChild);\n        this[57 /* TransferrableKeys.removedNode */](oldChild);\n        this[56 /* TransferrableKeys.insertedNode */](newChild);\n        mutate(this.ownerDocument, {\n            addedNodes: [newChild],\n            removedNodes: [oldChild],\n            type: 2 /* MutationRecordType.CHILD_LIST */,\n            nextSibling: this.childNodes[index + 1],\n            target: this,\n        }, [\n            2 /* TransferrableMutationType.CHILD_LIST */,\n            this[7 /* TransferrableKeys.index */],\n            this.childNodes[index + 1] ? this.childNodes[index + 1][7 /* TransferrableKeys.index */] : 0,\n            0,\n            1,\n            1,\n            newChild[7 /* TransferrableKeys.index */],\n            oldChild[7 /* TransferrableKeys.index */],\n        ]);\n        return oldChild;\n    }\n    /**\n     * Replaces the current node with the provided Array<node|string>.\n     * @param nodes\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/replaceWith\n     */\n    replaceWith(...nodes) {\n        const parent = this.parentNode;\n        let nodeIterator = nodes.length;\n        let currentNode;\n        if (!parent) {\n            return;\n        }\n        if (!nodeIterator) {\n            parent.removeChild(this);\n        }\n        while (nodeIterator--) {\n            currentNode = nodes[nodeIterator];\n            if (typeof currentNode !== 'object') {\n                currentNode = this.ownerDocument.createTextNode(currentNode);\n            }\n            // TODO: Investigate inserting all new nodes in a single operation.\n            if (!nodeIterator) {\n                // currentNode is the first argument (currentNode === arguments[0])\n                parent.replaceChild(currentNode, this);\n            }\n            else {\n                parent.insertBefore(currentNode, this.nextSibling);\n            }\n        }\n    }\n    /**\n     * Removes this Node from the tree it belogs too.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/remove\n     */\n    remove() {\n        if (this.parentNode) {\n            this.parentNode.removeChild(this);\n        }\n    }\n    /**\n     * Add an event listener to callback when a specific event type is dispatched.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n     * @param type Event Type (i.e 'click')\n     * @param handler Function called when event is dispatched.\n     */\n    addEventListener(type, handler, options = {}) {\n        const lowerType = toLower(type);\n        const storedType = storeString(lowerType);\n        const handlers = this[10 /* TransferrableKeys.handlers */][lowerType];\n        let index = 0;\n        if (handlers) {\n            index = handlers.push(handler);\n        }\n        else {\n            this[10 /* TransferrableKeys.handlers */][lowerType] = [handler];\n        }\n        transfer(this.ownerDocument, [\n            4 /* TransferrableMutationType.EVENT_SUBSCRIPTION */,\n            this[7 /* TransferrableKeys.index */],\n            0,\n            1,\n            storedType,\n            index,\n            Number(Boolean(options.capture)),\n            Number(Boolean(options.once)),\n            Number(Boolean(options.passive)),\n            Number(Boolean(options.workerDOMPreventDefault)),\n        ]);\n    }\n    /**\n     * Remove a registered event listener for a specific event type.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n     * @param type Event Type (i.e 'click')\n     * @param handler Function to stop calling when event is dispatched.\n     */\n    removeEventListener(type, handler) {\n        const lowerType = toLower(type);\n        const handlers = this[10 /* TransferrableKeys.handlers */][lowerType];\n        const index = !!handlers ? handlers.indexOf(handler) : -1;\n        if (index >= 0) {\n            handlers.splice(index, 1);\n            transfer(this.ownerDocument, [\n                4 /* TransferrableMutationType.EVENT_SUBSCRIPTION */,\n                this[7 /* TransferrableKeys.index */],\n                1,\n                0,\n                storeString(lowerType),\n                index,\n            ]);\n        }\n    }\n    /**\n     * Dispatch an event for this Node.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent\n     * @param event Event to dispatch to this node and potentially cascade to parents.\n     */\n    dispatchEvent(event) {\n        let target = (event.currentTarget = this);\n        let handlers;\n        let iterator;\n        do {\n            handlers = target && target[10 /* TransferrableKeys.handlers */] && target[10 /* TransferrableKeys.handlers */][toLower(event.type)];\n            if (handlers) {\n                for (iterator = handlers.length; iterator--;) {\n                    if ((handlers[iterator].call(target, event) === false || event[51 /* TransferrableKeys.end */]) && event.cancelable) {\n                        break;\n                    }\n                }\n            }\n        } while (event.bubbles && !(event.cancelable && event[50 /* TransferrableKeys.stop */]) && (target = target && target.parentNode));\n        return !event.defaultPrevented;\n    }\n}\n//# sourceMappingURL=Node.js.map","import { keyValueString } from '../../utils';\nexport const toString = (attributes) => attributes.map((attr) => keyValueString(attr.name, attr.value)).join(' ');\nexport const matchPredicate = (namespaceURI, name) => (attr) => attr.namespaceURI === namespaceURI && attr.name === name;\n//# sourceMappingURL=Attr.js.map","import { mutate } from '../MutationObserver';\nimport { toLower } from '../../utils';\nimport { store as storeString } from '../strings';\nconst hyphenateKey = (key) => toLower(key.replace(/(webkit|ms|moz|khtml)/g, '-$1').replace(/([a-zA-Z])(?=[A-Z])/g, '$1-'));\nexport const appendKeys = (keys) => {\n    const keysToAppend = keys.filter((key) => isNaN(key) && !CSSStyleDeclaration.prototype.hasOwnProperty(key));\n    if (keysToAppend.length <= 0) {\n        return;\n    }\n    const previousPrototypeLength = (CSSStyleDeclaration.prototype.length || 0);\n    if (previousPrototypeLength !== 0) {\n        CSSStyleDeclaration.prototype.length = previousPrototypeLength + keysToAppend.length;\n    }\n    else {\n        Object.defineProperty(CSSStyleDeclaration.prototype, 'length', {\n            configurable: true,\n            writable: true,\n            value: keysToAppend.length,\n        });\n    }\n    keysToAppend.forEach((key, index) => {\n        const hyphenatedKey = hyphenateKey(key);\n        CSSStyleDeclaration.prototype[index + previousPrototypeLength] = hyphenatedKey;\n        Object.defineProperties(CSSStyleDeclaration.prototype, {\n            [key]: {\n                get() {\n                    return this.getPropertyValue(hyphenatedKey);\n                },\n                set(value) {\n                    this.setProperty(hyphenatedKey, value);\n                },\n            },\n        });\n    });\n};\nexport class CSSStyleDeclaration {\n    [3 /* TransferrableKeys.properties */] = {};\n    [44 /* TransferrableKeys.storeAttribute */];\n    [13 /* TransferrableKeys.target */];\n    constructor(target) {\n        this[44 /* TransferrableKeys.storeAttribute */] = target[44 /* TransferrableKeys.storeAttribute */].bind(target);\n        this[13 /* TransferrableKeys.target */] = target;\n    }\n    /**\n     * Retrieve the value for a given property key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/getPropertyValue\n     * @param key the name of the property to retrieve the value for.\n     * @return value stored for the provided key.\n     */\n    getPropertyValue(key) {\n        return this[3 /* TransferrableKeys.properties */][key] || '';\n    }\n    /**\n     * Remove a value for a given property key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/removeProperty\n     * @param key the name of the property to retrieve the value for.\n     * @return previously stored value for the provided key.\n     */\n    removeProperty(key) {\n        const oldValue = this.getPropertyValue(key);\n        this[3 /* TransferrableKeys.properties */][key] = null;\n        this.mutated(this.cssText);\n        return oldValue;\n    }\n    /**\n     * Stores a given value for the provided key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/setProperty\n     * @param key modify this key\n     * @param value store this value\n     */\n    setProperty(key, value) {\n        this[3 /* TransferrableKeys.properties */][key] = value;\n        this.mutated(this.cssText);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/cssText\n     * @return css text string representing known and valid style declarations.\n     */\n    get cssText() {\n        let value;\n        let returnValue = '';\n        for (const key in this[3 /* TransferrableKeys.properties */]) {\n            if ((value = this.getPropertyValue(key)) !== '') {\n                returnValue += `${key}: ${value}; `;\n            }\n        }\n        return returnValue.trim();\n    }\n    /**\n     * Replace all style declarations with new values parsed from a cssText string.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/cssText\n     * @param value css text string to parse and store\n     */\n    set cssText(value) {\n        // value should have an \"unknown\" type but get/set can't have different types.\n        // https://github.com/Microsoft/TypeScript/issues/2521\n        const stringValue = typeof value === 'string' ? value : '';\n        this[3 /* TransferrableKeys.properties */] = {};\n        const values = stringValue.split(/[:;]/);\n        const length = values.length;\n        for (let index = 0; index + 1 < length; index += 2) {\n            this[3 /* TransferrableKeys.properties */][toLower(values[index].trim())] = values[index + 1].trim();\n        }\n        this.mutated(this.cssText);\n    }\n    /**\n     * Report CSSStyleDeclaration mutations to MutationObserver.\n     * @param value value after mutation\n     * @private\n     * // TODO(KB): Write a test to ensure mutations are fired for CSSStyleDeclaration changes.\n     */\n    mutated(value) {\n        const oldValue = this[44 /* TransferrableKeys.storeAttribute */](this[13 /* TransferrableKeys.target */].namespaceURI, 'style', value);\n        mutate(this[13 /* TransferrableKeys.target */].ownerDocument, {\n            type: 0 /* MutationRecordType.ATTRIBUTES */,\n            target: this[13 /* TransferrableKeys.target */],\n            attributeName: 'style',\n            value,\n            oldValue,\n        }, [\n            0 /* TransferrableMutationType.ATTRIBUTES */,\n            this[13 /* TransferrableKeys.target */][7 /* TransferrableKeys.index */],\n            storeString('style'),\n            0,\n            value !== null ? storeString(value) + 1 : 0,\n        ]);\n    }\n}\n//# sourceMappingURL=CSSStyleDeclaration.js.map","import { toLower } from '../../utils';\n// TODO: Do all boolean attributes have boolean properties?\n// TODO: Do enumerated attributes with non-boolean properties exist?\nexport const reflectProperties = (properties, defineOn) => {\n    properties.forEach((pair) => {\n        for (const property in pair) {\n            const { 0: defaultValue, 1: attributeName = toLower(property), 2: keywords } = pair[property];\n            // Boolean attributes only care about presence, not attribute value.\n            // https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes\n            const isBooleanAttribute = typeof defaultValue === 'boolean';\n            Object.defineProperty(defineOn.prototype, property, {\n                enumerable: true,\n                get() {\n                    const element = this;\n                    const attributeValue = element.getAttribute(attributeName);\n                    if (keywords) {\n                        return element.hasAttribute(attributeName) ? attributeValue === keywords[0] : defaultValue;\n                    }\n                    if (isBooleanAttribute) {\n                        return element.hasAttribute(attributeName);\n                    }\n                    const castableValue = attributeValue || defaultValue;\n                    return typeof defaultValue === 'number' ? Number(castableValue) : String(castableValue);\n                },\n                set(value) {\n                    const element = this;\n                    if (keywords) {\n                        element.setAttribute(attributeName, value ? keywords[0] : keywords[1]);\n                    }\n                    else if (isBooleanAttribute) {\n                        value ? element.setAttribute(attributeName, '') : element.removeAttribute(attributeName);\n                    }\n                    else {\n                        element.setAttribute(attributeName, String(value));\n                    }\n                },\n            });\n        }\n    });\n};\n//# sourceMappingURL=enhanceElement.js.map","/**\n * @fileoverview\n * WorkerDOM's `Event` class. `CustomEvent` is available natively in web worker.\n */\nimport { get } from './nodes';\nexport class Event {\n    bubbles;\n    cancelable;\n    cancelBubble;\n    currentTarget;\n    defaultPrevented;\n    eventPhase;\n    isTrusted;\n    returnValue;\n    // public srcElement: Element | null;\n    // TODO(KB): Restore srcElement.\n    target;\n    timeStamp;\n    type;\n    scoped;\n    [50 /* TransferrableKeys.stop */] = false;\n    [51 /* TransferrableKeys.end */] = false;\n    pageX;\n    pageY;\n    offsetX;\n    offsetY;\n    touches;\n    changedTouches;\n    constructor(type, opts) {\n        this.type = type;\n        this.bubbles = !!opts.bubbles;\n        this.cancelable = !!opts.cancelable;\n    }\n    stopPropagation() {\n        this[50 /* TransferrableKeys.stop */] = true;\n    }\n    stopImmediatePropagation() {\n        this[51 /* TransferrableKeys.end */] = this[50 /* TransferrableKeys.stop */] = true;\n    }\n    preventDefault() {\n        this.defaultPrevented = true;\n    }\n    /** Event.initEvent() is deprecated but supported here for legacy usage.  */\n    initEvent(type, bubbles, cancelable) {\n        this.type = type;\n        this.bubbles = bubbles;\n        this.cancelable = cancelable;\n    }\n}\n/**\n * Determine the target for a TransferrableEvent.\n * @param document Event intended within the scope of this document.\n * @param event\n */\nconst targetFromTransfer = (document, event) => {\n    if (event[13 /* TransferrableKeys.target */] !== null) {\n        const index = event[13 /* TransferrableKeys.target */][0];\n        // If the target was sent as index 0, use the current document.\n        return get(index !== 0 ? index : document[7 /* TransferrableKeys.index */]);\n    }\n    return null;\n};\n/**\n *\n * @param document\n * @param event\n */\nconst touchListFromTransfer = (document, event, key) => {\n    if (event[key] !== undefined) {\n        const touchListKeys = Object.keys(event[key]);\n        const list = {\n            length: touchListKeys.length,\n            item(index) {\n                return this[index] || null;\n            },\n        };\n        touchListKeys.forEach((touchListKey) => {\n            const numericKey = Number(touchListKey);\n            const transferredTouch = event[key][numericKey];\n            list[numericKey] = {\n                identifier: transferredTouch[0],\n                screenX: transferredTouch[1],\n                screenY: transferredTouch[2],\n                clientX: transferredTouch[3],\n                clientY: transferredTouch[4],\n                pageX: transferredTouch[5],\n                pageY: transferredTouch[6],\n                target: get(transferredTouch[7] !== 0 ? transferredTouch[7] : document[7 /* TransferrableKeys.index */]),\n            };\n        });\n        return list;\n    }\n    return undefined;\n};\n/**\n * When an event is dispatched from the main thread, it needs to be propagated in the worker thread.\n * Propagate adds an event listener to the worker global scope and uses the WorkerDOM Node.dispatchEvent\n * method to dispatch the transfered event in the worker thread.\n */\nexport function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* TransferrableKeys.type */] !== 1 /* MessageType.EVENT */) {\n            return;\n        }\n        const event = data[39 /* TransferrableKeys.event */];\n        const node = get(event[7 /* TransferrableKeys.index */]);\n        if (node !== null) {\n            node.dispatchEvent(Object.assign(new Event(event[12 /* TransferrableKeys.type */], {\n                bubbles: event[25 /* TransferrableKeys.bubbles */],\n                cancelable: event[26 /* TransferrableKeys.cancelable */],\n            }), {\n                cancelBubble: event[27 /* TransferrableKeys.cancelBubble */],\n                defaultPrevented: event[29 /* TransferrableKeys.defaultPrevented */],\n                eventPhase: event[30 /* TransferrableKeys.eventPhase */],\n                isTrusted: event[31 /* TransferrableKeys.isTrusted */],\n                returnValue: event[32 /* TransferrableKeys.returnValue */],\n                target: targetFromTransfer(global.document, event),\n                timeStamp: event[33 /* TransferrableKeys.timeStamp */],\n                scoped: event[34 /* TransferrableKeys.scoped */],\n                keyCode: event[35 /* TransferrableKeys.keyCode */],\n                pageX: event[60 /* TransferrableKeys.pageX */],\n                pageY: event[61 /* TransferrableKeys.pageY */],\n                offsetX: event[65 /* TransferrableKeys.offsetX */],\n                offsetY: event[66 /* TransferrableKeys.offsetY */],\n                touches: touchListFromTransfer(global.document, event, 62 /* TransferrableKeys.touches */),\n                changedTouches: touchListFromTransfer(global.document, event, 63 /* TransferrableKeys.changedTouches */),\n            }));\n        }\n    });\n}\n//# sourceMappingURL=Event.js.map","export const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n//# sourceMappingURL=TransferrableNodes.js.map","import { Element } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { matchNearestParent, tagNameConditionPredicate } from './matchElements';\nexport const appendGlobalEventProperties = (keys) => {\n    const keysToAppend = keys.filter((key) => !HTMLElement.prototype.hasOwnProperty(key));\n    if (keysToAppend.length <= 0) {\n        return;\n    }\n    keysToAppend.forEach((key) => {\n        const normalizedKey = key.replace(/on/, '');\n        Object.defineProperty(HTMLElement.prototype, key, {\n            enumerable: true,\n            get() {\n                return this[76 /* TransferrableKeys.propertyEventHandlers */][normalizedKey] || null;\n            },\n            set(value) {\n                const stored = this[76 /* TransferrableKeys.propertyEventHandlers */][normalizedKey];\n                if (stored) {\n                    this.removeEventListener(normalizedKey, stored);\n                }\n                if (value instanceof Function) {\n                    this.addEventListener(normalizedKey, value);\n                }\n                this[76 /* TransferrableKeys.propertyEventHandlers */][normalizedKey] = value;\n            },\n        });\n    });\n};\nexport class HTMLElement extends Element {\n    [76 /* TransferrableKeys.propertyEventHandlers */] = {};\n    /**\n     * Find the nearest parent form element.\n     * Implemented in HTMLElement since so many extensions of HTMLElement repeat this functionality. This is not to spec.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFieldSetElement\n     * @return nearest parent form element.\n     */\n    get form() {\n        return matchNearestParent(this, tagNameConditionPredicate(['FORM']));\n    }\n    [68 /* TransferrableKeys.serializeAsTransferrableObject */]() {\n        return [7 /* TransferrableObjectType.HTMLElement */, this[7 /* TransferrableKeys.index */]];\n    }\n}\n// Reflected properties\n// HTMLElement.accessKey => string, reflected attribute\n// HTMLElement.contentEditable => string, reflected attribute\n// HTMLElement.dir => string, reflected attribute\n// HTMLElement.lang => string, reflected attribute\n// HTMLElement.title => string, reflected attribute\n// HTMLElement.draggable => boolean, reflected attribute\n// HTMLElement.hidden => boolean, reflected attribute\n// HTMLElement.noModule => boolean, reflected attribute\n// HTMLElement.spellcheck => boolean, reflected attribute\n// HTMLElement.translate => boolean, reflected attribute\nreflectProperties([\n    { accessKey: [''] },\n    { contentEditable: ['inherit'] },\n    { dir: [''] },\n    { lang: [''] },\n    { title: [''] },\n    {\n        draggable: [false, /* attr */ undefined, /* keywords */ ['true', 'false']],\n    },\n    { hidden: [false, /* attr */ undefined] },\n    { noModule: [false] },\n    {\n        spellcheck: [true, /* attr */ undefined, /* keywords */ ['true', 'false']],\n    },\n    { translate: [true, /* attr */ undefined, /* keywords */ ['yes', 'no']] },\n], HTMLElement);\n// Properties\n// HTMLElement.accessKeyLabel => string, readonly value of \"accessKey\"\n// HTMLElement.isContentEditable => boolean, readonly value of contentEditable\n// HTMLElement.nonce => string, NOT REFLECTED\n// HTMLElement.tabIndex => number, reflected attribute\n// Layout Properties (TBD)\n// HTMLElement.offsetHeight => double, readonly\n// HTMLElement.offsetLeft => double, readonly\n// HTMLElement.offsetParent => Element\n// HTMLElement.offsetTop => double, readonly\n// HTMLElement.offsetWidth => double, readonly\n// Unimplemented Properties\n// HTMLElement.contextMenu => HTMLElement\n// HTMLElement.dataset => Map<string (get/set), string>\n// HTMLElement.dropzone => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.inert => boolean, reflected\n// HTMLElement.itemScope => boolean\n// HTMLElement.itemType => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemId => string\n// HTMLElement.itemRef => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemProp => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemValue => object\n// HTMLElement.properties => HTMLPropertiesCollection, readonly\n//# sourceMappingURL=HTMLElement.js.map","import { Element, registerSubclass } from './Element';\nimport { SVG_NAMESPACE } from '../../transfer/TransferrableNodes';\nexport class SVGElement extends Element {\n    constructor(nodeType, localName, namespaceURI, ownerDocument) {\n        super(nodeType, localName, SVG_NAMESPACE, ownerDocument);\n        // Element uppercases its nodeName, but SVG elements don't.\n        this.nodeName = localName;\n    }\n}\nregisterSubclass('svg', SVGElement, SVG_NAMESPACE);\n//# sourceMappingURL=SVGElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLAnchorElement extends HTMLElement {\n    _relList;\n    get relList() {\n        return this._relList || (this._relList = new DOMTokenList(this, 'rel'));\n    }\n    /**\n     * Returns the href property/attribute value\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/toString\n     * @return string href attached to HTMLAnchorElement\n     */\n    toString() {\n        return this.href;\n    }\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * A Synonym for the Node.textContent property setter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement\n     * @param text replacement for all current childNodes.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n}\nregisterSubclass('a', HTMLAnchorElement);\ndefinePropertyBackedAttributes(HTMLAnchorElement, {\n    rel: [(el) => el.relList.value, (el, value) => (el.relList.value = value)],\n});\nsynchronizedAccessor(HTMLAnchorElement, 'relList', 'rel');\n// Reflected properties, strings.\n// HTMLAnchorElement.href => string, reflected attribute\n// HTMLAnchorElement.hreflang => string, reflected attribute\n// HTMLAnchorElement.media => string, reflected attribute\n// HTMLAnchorElement.target => string, reflected attribute\n// HTMLAnchorElement.type => string, reflected attribute\nreflectProperties([{ href: [''] }, { hreflang: [''] }, { media: [''] }, { target: [''] }, { type: [''] }], HTMLAnchorElement);\n// Unimplemented\n// HTMLAnchorElement.download => string, reflected attribute\n// HTMLAnchorElement.type => Is a DOMString that reflects the type HTML attribute, indicating the MIME type of the linked resource.\n// Unimplemented URL parse of href attribute due to IE11 compatibility and low usage.\n// Note: Implementation doable using a private url property\n/*\n  class {\n    private url: URL | null = null;\n\n    constructor(...) {\n      // Element.getAttribute('href') => Element.href.\n      Object.assign(this[TransferrableKeys.propertyBackedAttributes], {\n        href: this.href,\n      });\n    }\n\n    get href(): string {\n      return this.url ? this.url.href : '';\n    }\n    set href(url: string) {\n      this.url = new URL(url);\n      this.setAttribute('href', this.url.href);\n    }\n  }\n*/\n// HTMLAnchorElement.host => string\n// HTMLAnchorElement.hostname => string\n// HTMLAnchorElement.protocol => string\n// HTMLAnchorElement.pathname => string\n// HTMLAnchorElement.search => string\n// HTMLAnchorElement.hash => string\n// HTMLAnchorElement.username => string\n// HTMLAnchorElement.password => string\n// HTMLAnchorElement.origin => string, readonly (getter no setter)\n//# sourceMappingURL=HTMLAnchorElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLButtonElement extends HTMLElement {\n}\nregisterSubclass('button', HTMLButtonElement);\n// Reflected properties, strings.\n// HTMLButtonElement.formAction => string, reflected attribute\n// HTMLButtonElement.formEnctype => string, reflected attribute\n// HTMLButtonElement.formMethod => string, reflected attribute\n// HTMLButtonElement.formTarget => string, reflected attribute\n// HTMLButtonElement.name => string, reflected attribute\n// HTMLButtonElement.type => string, reflected attribute (default submit)\n// HTMLButtonElement.value => string, reflected attribute\n// HTMLButtonElement.autofocus => boolean, reflected attribute\n// HTMLButtonElement.disabled => boolean, reflected attribute\nreflectProperties([\n    { formAction: [''] },\n    { formEnctype: [''] },\n    { formMethod: [''] },\n    { formTarget: [''] },\n    { name: [''] },\n    { type: ['submit'] },\n    { value: [''] },\n    { autofocus: [false] },\n    { disabled: [false] },\n], HTMLButtonElement);\n// Not reflected\n// HTMLButtonElement.formNoValidate => boolean\n// HTMLButtonElement.validity => ValidityState, readonly\n// Unimplemented\n// HTMLButtonElement.form => HTMLFormElement | null, readonly\n// HTMLButtonElement.labels => Array<HTMLLabelElement>, readonly\n// HTMLButtonElement.menu => HTMLMenuElement\n// HTMLButtonElement.willValidate => boolean, readonly\n// HTMLButtonElement.validationMessage => string, readonly\n//# sourceMappingURL=HTMLButtonElement.js.map","import { transfer } from '../MutationTransfer';\nimport { serializeTransferrableObject } from '../serializeTransferrableObject';\nimport { store } from '../strings';\n/**\n * Wrapper class for CanvasGradient. The user will be able to manipulate as a regular CanvasGradient object.\n */\nexport class CanvasGradient {\n    id;\n    document;\n    constructor(id, document) {\n        this.document = document;\n        this.id = id;\n    }\n    addColorStop(offset, color) {\n        transfer(this.document, [\n            9 /* TransferrableMutationType.OBJECT_MUTATION */,\n            store('addColorStop'),\n            2,\n            ...this[68 /* TransferrableKeys.serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject([...arguments]),\n        ]);\n    }\n    [68 /* TransferrableKeys.serializeAsTransferrableObject */]() {\n        return [5 /* TransferrableObjectType.TransferObject */, this.id];\n    }\n}\n//# sourceMappingURL=CanvasGradient.js.map","/**\n * Wrapper class for CanvasPattern. The user will be able to manipulate as a regular CanvasPattern object.\n * This class will be used when the CanvasRenderingContext is using an OffscreenCanvas polyfill.\n */\nexport class CanvasPattern {\n    id;\n    constructor(id) {\n        this.id = id;\n    }\n    /**\n     * This is an experimental method.\n     */\n    setTransform() { }\n    [68 /* TransferrableKeys.serializeAsTransferrableObject */]() {\n        return [5 /* TransferrableObjectType.TransferObject */, this.id];\n    }\n}\n//# sourceMappingURL=CanvasPattern.js.map","import { transfer } from '../MutationTransfer';\nimport { toLower } from '../../utils';\nimport { store } from '../strings';\nimport { serializeTransferrableObject } from '../serializeTransferrableObject';\nimport { CanvasGradient } from './CanvasGradient';\nimport { CanvasPattern } from './CanvasPattern';\n/**\n * Handles calls to a CanvasRenderingContext2D object in cases where the user's environment does not\n * support native OffscreenCanvas.\n */\nexport class OffscreenCanvasPolyfill {\n    canvas;\n    context;\n    constructor(canvas) {\n        this.canvas = canvas;\n    }\n    getContext(contextType) {\n        if (!this.context) {\n            if (toLower(contextType) === '2d') {\n                this.context = new OffscreenCanvasRenderingContext2DPolyfill(this.canvas);\n            }\n            else {\n                throw new Error('Context type not supported.');\n            }\n        }\n        return this.context;\n    }\n}\nclass OffscreenCanvasRenderingContext2DPolyfill {\n    canvasElement;\n    lineDash;\n    objectIndex = 0;\n    constructor(canvas) {\n        this.canvasElement = canvas;\n        this.lineDash = [];\n    }\n    [67 /* TransferrableKeys.mutated */](fnName, args) {\n        transfer(this.canvasElement.ownerDocument, [\n            9 /* TransferrableMutationType.OBJECT_MUTATION */,\n            store(fnName),\n            args.length,\n            ...this[68 /* TransferrableKeys.serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject(args),\n        ]);\n    }\n    [68 /* TransferrableKeys.serializeAsTransferrableObject */]() {\n        return [6 /* TransferrableObjectType.CanvasRenderingContext2D */, this.canvasElement[7 /* TransferrableKeys.index */]];\n    }\n    /**\n     * Creates object in the main thread, and associates it with the id provided.\n     * @param objectId ID to associate the created object with.\n     * @param creationMethod Method to use for object creation.\n     * @param creationArgs Arguments to pass into the creation method.\n     */\n    createObjectReference(objectId, creationMethod, creationArgs) {\n        transfer(this.canvasElement.ownerDocument, [\n            10 /* TransferrableMutationType.OBJECT_CREATION */,\n            store(creationMethod),\n            objectId,\n            creationArgs.length,\n            ...this[68 /* TransferrableKeys.serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject(creationArgs),\n        ]);\n    }\n    get canvas() {\n        return this.canvasElement;\n    }\n    clearRect(x, y, w, h) {\n        this[67 /* TransferrableKeys.mutated */]('clearRect', [...arguments]);\n    }\n    fillRect(x, y, w, h) {\n        this[67 /* TransferrableKeys.mutated */]('fillRect', [...arguments]);\n    }\n    strokeRect(x, y, w, h) {\n        this[67 /* TransferrableKeys.mutated */]('strokeRect', [...arguments]);\n    }\n    roundRect(x, y, w, h, radii) {\n        this[67 /* TransferrableKeys.mutated */]('roundRect', [...arguments]);\n    }\n    set lineWidth(value) {\n        this[67 /* TransferrableKeys.mutated */]('lineWidth', [...arguments]);\n    }\n    fillText(text, x, y, maxWidth) {\n        this[67 /* TransferrableKeys.mutated */]('fillText', [...arguments]);\n    }\n    moveTo(x, y) {\n        this[67 /* TransferrableKeys.mutated */]('moveTo', [...arguments]);\n    }\n    lineTo(x, y) {\n        this[67 /* TransferrableKeys.mutated */]('lineTo', [...arguments]);\n    }\n    closePath() {\n        this[67 /* TransferrableKeys.mutated */]('closePath', []);\n    }\n    stroke() {\n        this[67 /* TransferrableKeys.mutated */]('stroke', []);\n    }\n    restore() {\n        this[67 /* TransferrableKeys.mutated */]('restore', []);\n    }\n    save() {\n        this[67 /* TransferrableKeys.mutated */]('save', []);\n    }\n    resetTransform() {\n        this[67 /* TransferrableKeys.mutated */]('resetTransform', []);\n    }\n    rotate(angle) {\n        this[67 /* TransferrableKeys.mutated */]('rotate', [...arguments]);\n    }\n    transform(a, b, c, d, e, f) {\n        this[67 /* TransferrableKeys.mutated */]('transform', [...arguments]);\n    }\n    translate(x, y) {\n        this[67 /* TransferrableKeys.mutated */]('translate', [...arguments]);\n    }\n    scale(x, y) {\n        this[67 /* TransferrableKeys.mutated */]('scale', [...arguments]);\n    }\n    set globalAlpha(value) {\n        this[67 /* TransferrableKeys.mutated */]('globalAlpha', [...arguments]);\n    }\n    set globalCompositeOperation(value) {\n        this[67 /* TransferrableKeys.mutated */]('globalCompositeOperation', [...arguments]);\n    }\n    set imageSmoothingQuality(value) {\n        this[67 /* TransferrableKeys.mutated */]('imageSmoothingQuality', [...arguments]);\n    }\n    set fillStyle(value) {\n        this[67 /* TransferrableKeys.mutated */]('fillStyle', [...arguments]);\n    }\n    set strokeStyle(value) {\n        this[67 /* TransferrableKeys.mutated */]('strokeStyle', [...arguments]);\n    }\n    set shadowBlur(value) {\n        this[67 /* TransferrableKeys.mutated */]('shadowBlur', [...arguments]);\n    }\n    set shadowColor(value) {\n        this[67 /* TransferrableKeys.mutated */]('shadowColor', [...arguments]);\n    }\n    set shadowOffsetX(value) {\n        this[67 /* TransferrableKeys.mutated */]('shadowOffsetX', [...arguments]);\n    }\n    set shadowOffsetY(value) {\n        this[67 /* TransferrableKeys.mutated */]('shadowOffsetY', [...arguments]);\n    }\n    set filter(value) {\n        this[67 /* TransferrableKeys.mutated */]('filter', [...arguments]);\n    }\n    beginPath() {\n        this[67 /* TransferrableKeys.mutated */]('beginPath', []);\n    }\n    strokeText(text, x, y, maxWidth) {\n        this[67 /* TransferrableKeys.mutated */]('strokeText', [...arguments]);\n    }\n    set textAlign(value) {\n        this[67 /* TransferrableKeys.mutated */]('textAlign', [...arguments]);\n    }\n    set textBaseline(value) {\n        this[67 /* TransferrableKeys.mutated */]('textBaseline', [...arguments]);\n    }\n    set lineCap(value) {\n        this[67 /* TransferrableKeys.mutated */]('lineCap', [...arguments]);\n    }\n    set lineDashOffset(value) {\n        this[67 /* TransferrableKeys.mutated */]('lineDashOffset', [...arguments]);\n    }\n    set lineJoin(value) {\n        this[67 /* TransferrableKeys.mutated */]('lineJoin', [...arguments]);\n    }\n    set miterLimit(value) {\n        this[67 /* TransferrableKeys.mutated */]('miterLimit', [...arguments]);\n    }\n    arc(x, y, radius, startAngle, endAngle, anticlockwise) {\n        this[67 /* TransferrableKeys.mutated */]('arc', [...arguments]);\n    }\n    arcTo(x1, y1, x2, y2, radius) {\n        this[67 /* TransferrableKeys.mutated */]('arcTo', [...arguments]);\n    }\n    set direction(value) {\n        this[67 /* TransferrableKeys.mutated */]('direction', [...arguments]);\n    }\n    set font(value) {\n        this[67 /* TransferrableKeys.mutated */]('font', [...arguments]);\n    }\n    ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, anticlockwise) {\n        this[67 /* TransferrableKeys.mutated */]('ellipse', [...arguments]);\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this[67 /* TransferrableKeys.mutated */]('bezierCurveTo', [...arguments]);\n    }\n    rect(x, y, width, height) {\n        this[67 /* TransferrableKeys.mutated */]('rect', [...arguments]);\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this[67 /* TransferrableKeys.mutated */]('quadraticCurveTo', [...arguments]);\n    }\n    set imageSmoothingEnabled(value) {\n        this[67 /* TransferrableKeys.mutated */]('imageSmoothingEnabled', [...arguments]);\n    }\n    setLineDash(lineDash) {\n        lineDash = [...lineDash];\n        if (lineDash.length % 2 !== 0) {\n            lineDash = lineDash.concat(lineDash);\n        }\n        this.lineDash = lineDash;\n        this[67 /* TransferrableKeys.mutated */]('setLineDash', [...arguments]);\n    }\n    getLineDash() {\n        return [...this.lineDash];\n    }\n    clip(pathOrFillRule, fillRule) {\n        if (typeof pathOrFillRule === 'object') {\n            throw new Error('clip(Path2D) is currently not supported!');\n        }\n        this[67 /* TransferrableKeys.mutated */]('clip', [...arguments]);\n    }\n    fill(pathOrFillRule, fillRule) {\n        if (typeof pathOrFillRule === 'object') {\n            throw new Error('fill(Path2D) is currently not supported!');\n        }\n        this[67 /* TransferrableKeys.mutated */]('fill', [...arguments]);\n    }\n    // Method has a different signature in MDN than it does in HTML spec\n    setTransform(transformOrA, bOrC, cOrD, dOrE, eOrF, f) {\n        if (typeof transformOrA === 'object') {\n            throw new Error('setTransform(DOMMatrix2DInit) is currently not supported!');\n        }\n        this[67 /* TransferrableKeys.mutated */]('setTransform', [...arguments]);\n    }\n    createLinearGradient(x0, y0, x1, y1) {\n        const gradientId = this.objectIndex++;\n        this.createObjectReference(gradientId, 'createLinearGradient', [...arguments]);\n        return new CanvasGradient(gradientId, this.canvasElement.ownerDocument);\n    }\n    createRadialGradient(x0, y0, r0, x1, y1, r1) {\n        const gradientId = this.objectIndex++;\n        this.createObjectReference(gradientId, 'createRadialGradient', [...arguments]);\n        return new CanvasGradient(gradientId, this.canvasElement.ownerDocument);\n    }\n    createPattern(image, repetition) {\n        const patternId = this.objectIndex++;\n        this.createObjectReference(patternId, 'createPattern', [...arguments]);\n        return new CanvasPattern(patternId);\n    }\n    drawImage(image, dx, dy) {\n        this[67 /* TransferrableKeys.mutated */]('drawImage', [...arguments]);\n    }\n    createImageData() {\n        return {};\n    }\n    getImageData() {\n        return {};\n    }\n    putImageData() { }\n    isPointInPath() {\n        throw new Error('isPointInPath is not implemented.');\n    }\n    isPointInStroke() {\n        throw new Error('isPointInStroke is not implemented.');\n    }\n    measureText() {\n        throw new Error('measureText is not implemented.');\n    }\n}\n//# sourceMappingURL=OffscreenCanvasPolyfill.js.map","import { retrieveImageBitmap } from './canvas-utils';\n/**\n * Wraps CanvasPattern for usage in a native OffscreenCanvas case.\n */\nexport class FakeNativeCanvasPattern {\n    [70 /* TransferrableKeys.patternImplementation */] = {};\n    [71 /* TransferrableKeys.patternUpgraded */] = false;\n    [72 /* TransferrableKeys.patternUpgradePromise */];\n    /**\n     * Retrieves ImageBitmap object from main-thread, which replicates the input image. Upon\n     * retrieval, uses it to create a real CanvasPattern and upgrade the implementation property.\n     * @param canvas Canvas element used to create the pattern.\n     * @param image Image to be used as the pattern's image\n     * @param repetition DOMStrings indicating how to repeat the pattern's image.\n     */\n    [69 /* TransferrableKeys.retrieveCanvasPattern */](canvas, image, repetition) {\n        this[72 /* TransferrableKeys.patternUpgradePromise */] = retrieveImageBitmap(image, canvas)\n            // Create new pattern with retrieved ImageBitmap\n            .then((instance) => {\n            const pattern = canvas.getContext('2d').createPattern(instance, repetition);\n            if (!pattern) {\n                throw new Error('Pattern is null!');\n            }\n            this[70 /* TransferrableKeys.patternImplementation */] = pattern;\n            this[71 /* TransferrableKeys.patternUpgraded */] = true;\n        });\n        return this[72 /* TransferrableKeys.patternUpgradePromise */];\n    }\n    // This method is experimental.\n    // Takes an SVGMatrix as an argument, which is a deprecated API.\n    setTransform() { }\n}\n//# sourceMappingURL=FakeNativeCanvasPattern.js.map","import { transfer } from '../MutationTransfer';\nimport { OffscreenCanvasPolyfill } from './OffscreenCanvasPolyfill';\nimport { FakeNativeCanvasPattern } from './FakeNativeCanvasPattern';\nimport { retrieveImageBitmap } from './canvas-utils';\nexport const deferredUpgrades = new WeakMap();\n/**\n * Delegates all CanvasRenderingContext2D calls, either to an OffscreenCanvas or a polyfill\n * (depending on whether it is supported).\n */\nexport class CanvasRenderingContext2DShim {\n    queue = [];\n    implementation;\n    upgraded = false;\n    canvasElement;\n    polyfillUsed;\n    // createPattern calls need to retrieve an ImageBitmap from the main-thread. Since those can\n    // happen subsequently, we must keep track of these to avoid reentrancy problems.\n    unresolvedCalls = 0;\n    goodImplementation;\n    constructor(canvas) {\n        this.canvasElement = canvas;\n        const OffscreenCanvas = canvas.ownerDocument.defaultView.OffscreenCanvas;\n        // If the browser does not support OffscreenCanvas, use polyfill\n        if (typeof OffscreenCanvas === 'undefined') {\n            this.implementation = new OffscreenCanvasPolyfill(canvas).getContext('2d');\n            this.upgraded = true;\n            this.polyfillUsed = true;\n        }\n        // If the browser supports OffscreenCanvas:\n        // 1. Use un-upgraded (not auto-synchronized) version for all calls performed immediately after\n        // creation. All calls will be queued to call on upgraded version after.\n        // 2. Retrieve an auto-synchronized OffscreenCanvas from the main-thread and call all methods\n        // in the queue.\n        else {\n            this.implementation = new OffscreenCanvas(0, 0).getContext('2d');\n            this.getOffscreenCanvasAsync(this.canvasElement);\n            this.polyfillUsed = false;\n        }\n    }\n    /**\n     * Retrieves auto-synchronized version of an OffscreenCanvas from the main-thread.\n     * @param canvas HTMLCanvasElement associated with this context.\n     */\n    getOffscreenCanvasAsync(canvas) {\n        this.unresolvedCalls++;\n        const deferred = {};\n        const document = this.canvasElement.ownerDocument;\n        const isTestMode = !document.addGlobalEventListener;\n        const upgradePromise = new Promise((resolve) => {\n            const messageHandler = ({ data }) => {\n                if (data[12 /* TransferrableKeys.type */] === 9 /* MessageType.OFFSCREEN_CANVAS_INSTANCE */ &&\n                    data[13 /* TransferrableKeys.target */][0] === canvas[7 /* TransferrableKeys.index */]) {\n                    document.removeGlobalEventListener('message', messageHandler);\n                    const transferredOffscreenCanvas = data[38 /* TransferrableKeys.data */];\n                    resolve(transferredOffscreenCanvas);\n                }\n            };\n            if (!document.addGlobalEventListener) {\n                if (isTestMode) {\n                    deferred.resolve = resolve;\n                }\n                else {\n                    throw new Error('addGlobalEventListener is not defined.');\n                }\n            }\n            else {\n                document.addGlobalEventListener('message', messageHandler);\n                transfer(canvas.ownerDocument, [8 /* TransferrableMutationType.OFFSCREEN_CANVAS_INSTANCE */, canvas[7 /* TransferrableKeys.index */]]);\n            }\n        }).then((instance) => {\n            this.goodImplementation = instance.getContext('2d');\n            this.maybeUpgradeImplementation();\n        });\n        if (isTestMode) {\n            deferred.upgradePromise = upgradePromise;\n            deferredUpgrades.set(canvas, deferred);\n        }\n        return upgradePromise;\n    }\n    /**\n     * Degrades the underlying context implementation and adds to the unresolved call count.\n     */\n    degradeImplementation() {\n        this.upgraded = false;\n        const OffscreenCanvas = this.canvasElement.ownerDocument.defaultView.OffscreenCanvas;\n        this.implementation = new OffscreenCanvas(0, 0).getContext('2d');\n        this.unresolvedCalls++;\n    }\n    /**\n     * Will upgrade the underlying context implementation if no more unresolved calls remain.\n     */\n    maybeUpgradeImplementation() {\n        this.unresolvedCalls--;\n        if (this.unresolvedCalls === 0) {\n            this.implementation = this.goodImplementation;\n            this.upgraded = true;\n            this.flushQueue();\n        }\n    }\n    flushQueue() {\n        for (const call of this.queue) {\n            if (call.isSetter) {\n                this[call.fnName] = call.args[0];\n            }\n            else {\n                this[call.fnName](...call.args);\n            }\n        }\n        this.queue.length = 0;\n    }\n    delegateFunc(name, args) {\n        const returnValue = this.implementation[name](...args);\n        if (!this.upgraded) {\n            this.queue.push({ fnName: name, args, isSetter: false });\n        }\n        return returnValue;\n    }\n    delegateSetter(name, args) {\n        this.implementation[name] = args[0];\n        if (!this.upgraded) {\n            this.queue.push({ fnName: name, args, isSetter: true });\n        }\n    }\n    delegateGetter(name) {\n        return this.implementation[name];\n    }\n    /* DRAWING RECTANGLES */\n    clearRect(x, y, width, height) {\n        this.delegateFunc('clearRect', [...arguments]);\n    }\n    fillRect(x, y, width, height) {\n        this.delegateFunc('fillRect', [...arguments]);\n    }\n    strokeRect(x, y, width, height) {\n        this.delegateFunc('strokeRect', [...arguments]);\n    }\n    roundRect(x, y, w, h, radii) {\n        this.delegateFunc('roundRect', [...arguments]);\n    }\n    /* DRAWING TEXT */\n    fillText(text, x, y, maxWidth) {\n        this.delegateFunc('fillText', [...arguments]);\n    }\n    strokeText(text, x, y, maxWidth) {\n        this.delegateFunc('strokeText', [...arguments]);\n    }\n    measureText(text) {\n        return this.delegateFunc('measureText', [...arguments]);\n    }\n    /* LINE STYLES */\n    set lineWidth(value) {\n        this.delegateSetter('lineWidth', [...arguments]);\n    }\n    get lineWidth() {\n        return this.delegateGetter('lineWidth');\n    }\n    set lineCap(value) {\n        this.delegateSetter('lineCap', [...arguments]);\n    }\n    get lineCap() {\n        return this.delegateGetter('lineCap');\n    }\n    set lineJoin(value) {\n        this.delegateSetter('lineJoin', [...arguments]);\n    }\n    get lineJoin() {\n        return this.delegateGetter('lineJoin');\n    }\n    set miterLimit(value) {\n        this.delegateSetter('miterLimit', [...arguments]);\n    }\n    get miterLimit() {\n        return this.delegateGetter('miterLimit');\n    }\n    getLineDash() {\n        return this.delegateFunc('getLineDash', [...arguments]);\n    }\n    setLineDash(segments) {\n        this.delegateFunc('setLineDash', [...arguments]);\n    }\n    set lineDashOffset(value) {\n        this.delegateSetter('lineDashOffset', [...arguments]);\n    }\n    get lineDashOffset() {\n        return this.delegateGetter('lineDashOffset');\n    }\n    /* TEXT STYLES */\n    set font(value) {\n        this.delegateSetter('font', [...arguments]);\n    }\n    get font() {\n        return this.delegateGetter('font');\n    }\n    set textAlign(value) {\n        this.delegateSetter('textAlign', [...arguments]);\n    }\n    get textAlign() {\n        return this.delegateGetter('textAlign');\n    }\n    set textBaseline(value) {\n        this.delegateSetter('textBaseline', [...arguments]);\n    }\n    get textBaseline() {\n        return this.delegateGetter('textBaseline');\n    }\n    set direction(value) {\n        this.delegateSetter('direction', [...arguments]);\n    }\n    get direction() {\n        return this.delegateGetter('direction');\n    }\n    /* FILL AND STROKE STYLES */\n    set fillStyle(value) {\n        // 1. Native pattern instances given to the user hold the 'real' pattern as their implementation prop.\n        // 2. Pattern must be upgraded, otherwise an undefined 'implementation' will be queued instead of the wrapper object.\n        if (value instanceof FakeNativeCanvasPattern && this.upgraded) {\n            // This case occurs only when an un-upgraded pattern is passed into a different (already\n            // upgraded) canvas context.\n            if (!value[71 /* TransferrableKeys.patternUpgraded */]) {\n                this.queue.push({ fnName: 'fillStyle', args: [value], isSetter: true });\n                this.degradeImplementation();\n                value[72 /* TransferrableKeys.patternUpgradePromise */].then(() => {\n                    this.maybeUpgradeImplementation();\n                });\n            }\n            else {\n                this.delegateSetter('fillStyle', [value[70 /* TransferrableKeys.patternImplementation */]]);\n            }\n            // Any other case does not require special handling.\n        }\n        else {\n            this.delegateSetter('fillStyle', [...arguments]);\n        }\n    }\n    get fillStyle() {\n        return this.delegateGetter('fillStyle');\n    }\n    set strokeStyle(value) {\n        // 1. Native pattern instances given to the user hold the 'real' pattern as their implementation prop.\n        // 2. Pattern must be upgraded, otherwise an undefined 'implementation' could be queued instead of the wrapper object.\n        if (value instanceof FakeNativeCanvasPattern && this.upgraded) {\n            // This case occurs only when an un-upgraded pattern is passed into a different (already\n            // upgraded) canvas context.\n            if (!value[71 /* TransferrableKeys.patternUpgraded */]) {\n                this.queue.push({\n                    fnName: 'strokeStyle',\n                    args: [value],\n                    isSetter: true,\n                });\n                this.degradeImplementation();\n                value[72 /* TransferrableKeys.patternUpgradePromise */].then(() => {\n                    this.maybeUpgradeImplementation();\n                });\n            }\n            else {\n                this.delegateSetter('strokeStyle', [value[70 /* TransferrableKeys.patternImplementation */]]);\n            }\n            // Any other case does not require special handling.\n        }\n        else {\n            this.delegateSetter('strokeStyle', [...arguments]);\n        }\n    }\n    get strokeStyle() {\n        return this.delegateGetter('strokeStyle');\n    }\n    /* GRADIENTS AND PATTERNS */\n    createLinearGradient(x0, y0, x1, y1) {\n        return this.delegateFunc('createLinearGradient', [...arguments]);\n    }\n    createRadialGradient(x0, y0, r0, x1, y1, r1) {\n        return this.delegateFunc('createRadialGradient', [...arguments]);\n    }\n    createPattern(image, repetition) {\n        const ImageBitmap = this.canvasElement.ownerDocument.defaultView.ImageBitmap;\n        // Only HTMLElement image sources require special handling. ImageBitmap is OK to use.\n        if (this.polyfillUsed || image instanceof ImageBitmap) {\n            return this.delegateFunc('createPattern', [...arguments]);\n        }\n        else {\n            // Degrade the underlying implementation because we don't want calls on the real one until\n            // after pattern is retrieved\n            this.degradeImplementation();\n            const fakePattern = new FakeNativeCanvasPattern();\n            fakePattern[69 /* TransferrableKeys.retrieveCanvasPattern */](this.canvas, image, repetition).then(() => {\n                this.maybeUpgradeImplementation();\n            });\n            return fakePattern;\n        }\n    }\n    /* DRAWING IMAGES */\n    drawImage(image, dx, dy) {\n        const ImageBitmap = this.canvasElement.ownerDocument.defaultView.ImageBitmap;\n        // Only HTMLElement image sources require special handling. ImageBitmap is OK to use.\n        if (this.polyfillUsed || image instanceof ImageBitmap) {\n            this.delegateFunc('drawImage', [...arguments]);\n        }\n        else {\n            // Queue the drawImage call to make sure it gets called in correct order\n            const args = [];\n            this.queue.push({ fnName: 'drawImage', args, isSetter: false });\n            // Degrade the underlying implementation because we don't want calls on the real one\n            // until after the ImageBitmap is received.\n            this.degradeImplementation();\n            // Retrieve an ImageBitmap from the main-thread with the same image as the input image\n            retrieveImageBitmap(image, this.canvas)\n                // Then call the actual method with the retrieved ImageBitmap\n                .then((instance) => {\n                args.push(instance, dx, dy);\n                this.maybeUpgradeImplementation();\n            });\n        }\n    }\n    /* SHADOWS */\n    set shadowBlur(value) {\n        this.delegateSetter('shadowBlur', [...arguments]);\n    }\n    get shadowBlur() {\n        return this.delegateGetter('shadowBlur');\n    }\n    set shadowColor(value) {\n        this.delegateSetter('shadowColor', [...arguments]);\n    }\n    get shadowColor() {\n        return this.delegateGetter('shadowColor');\n    }\n    set shadowOffsetX(value) {\n        this.delegateSetter('shadowOffsetX', [...arguments]);\n    }\n    get shadowOffsetX() {\n        return this.delegateGetter('shadowOffsetX');\n    }\n    set shadowOffsetY(value) {\n        this.delegateSetter('shadowOffsetY', [...arguments]);\n    }\n    get shadowOffsetY() {\n        return this.delegateGetter('shadowOffsetY');\n    }\n    /* PATHS */\n    beginPath() {\n        this.delegateFunc('beginPath', [...arguments]);\n    }\n    closePath() {\n        this.delegateFunc('closePath', [...arguments]);\n    }\n    moveTo(x, y) {\n        this.delegateFunc('moveTo', [...arguments]);\n    }\n    lineTo(x, y) {\n        this.delegateFunc('lineTo', [...arguments]);\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this.delegateFunc('bezierCurveTo', [...arguments]);\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this.delegateFunc('quadraticCurveTo', [...arguments]);\n    }\n    arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n        this.delegateFunc('arc', [...arguments]);\n    }\n    arcTo(x1, y1, x2, y2, radius) {\n        this.delegateFunc('arcTo', [...arguments]);\n    }\n    ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise) {\n        this.delegateFunc('ellipse', [...arguments]);\n    }\n    rect(x, y, width, height) {\n        this.delegateFunc('rect', [...arguments]);\n    }\n    /* DRAWING PATHS */\n    fill(pathOrFillRule, fillRule) {\n        const args = [...arguments];\n        this.delegateFunc('fill', args);\n    }\n    stroke(path) {\n        const args = [...arguments];\n        this.delegateFunc('stroke', args);\n    }\n    clip(pathOrFillRule, fillRule) {\n        const args = [...arguments];\n        this.delegateFunc('clip', args);\n    }\n    isPointInPath(pathOrX, xOrY, yOrFillRule, fillRule) {\n        const args = [...arguments];\n        return this.delegateFunc('isPointInPath', args);\n    }\n    isPointInStroke(pathOrX, xOrY, y) {\n        const args = [...arguments];\n        return this.delegateFunc('isPointInStroke', args);\n    }\n    /* TRANSFORMATIONS */\n    rotate(angle) {\n        this.delegateFunc('rotate', [...arguments]);\n    }\n    scale(x, y) {\n        this.delegateFunc('scale', [...arguments]);\n    }\n    translate(x, y) {\n        this.delegateFunc('translate', [...arguments]);\n    }\n    transform(a, b, c, d, e, f) {\n        this.delegateFunc('transform', [...arguments]);\n    }\n    setTransform(transformOrA, bOrC, cOrD, dOrE, eOrF, f) {\n        const args = [...arguments];\n        this.delegateFunc('setTransform', args);\n    }\n    /* experimental */ resetTransform() {\n        this.delegateFunc('resetTransform', [...arguments]);\n    }\n    /* COMPOSITING */\n    set globalAlpha(value) {\n        this.delegateSetter('globalAlpha', [...arguments]);\n    }\n    get globalAlpha() {\n        return this.delegateGetter('globalAlpha');\n    }\n    set globalCompositeOperation(value) {\n        this.delegateSetter('globalCompositeOperation', [...arguments]);\n    }\n    get globalCompositeOperation() {\n        return this.delegateGetter('globalCompositeOperation');\n    }\n    /* PIXEL MANIPULATION */\n    createImageData(imagedataOrWidth, height) {\n        const args = [...arguments];\n        return this.delegateFunc('createImageData', args);\n    }\n    getImageData(sx, sy, sw, sh) {\n        return this.delegateFunc('getImageData', [...arguments]);\n    }\n    putImageData(imageData, dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight) {\n        this.delegateFunc('putImageData', [...arguments]);\n    }\n    /* IMAGE SMOOTHING */\n    /* experimental */ set imageSmoothingEnabled(value) {\n        this.delegateSetter('imageSmoothingEnabled', [...arguments]);\n    }\n    /* experimental */ get imageSmoothingEnabled() {\n        return this.delegateGetter('imageSmoothingEnabled');\n    }\n    /* experimental */ set imageSmoothingQuality(value) {\n        this.delegateSetter('imageSmoothingQuality', [...arguments]);\n    }\n    /* experimental */ get imageSmoothingQuality() {\n        return this.delegateGetter('imageSmoothingQuality');\n    }\n    /* THE CANVAS STATE */\n    save() {\n        this.delegateFunc('save', [...arguments]);\n    }\n    restore() {\n        this.delegateFunc('restore', [...arguments]);\n    }\n    // canvas property is readonly. We don't want to implement getters, but this must be here\n    // in order for TypeScript to not complain (for now)\n    get canvas() {\n        return this.canvasElement;\n    }\n    /* FILTERS */\n    /* experimental */ set filter(value) {\n        this.delegateSetter('filter', [...arguments]);\n    }\n    /* experimental */ get filter() {\n        return this.delegateGetter('filter');\n    }\n}\n//# sourceMappingURL=CanvasRenderingContext2D.js.map","import { HTMLElement } from './HTMLElement';\nimport { registerSubclass } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { CanvasRenderingContext2DShim } from '../canvas/CanvasRenderingContext2D';\nexport class HTMLCanvasElement extends HTMLElement {\n    context;\n    getContext(contextType) {\n        if (!this.context) {\n            if (contextType === '2D' || contextType === '2d') {\n                this.context = new CanvasRenderingContext2DShim(this);\n            }\n            else {\n                throw new Error('Context type not supported.');\n            }\n        }\n        return this.context;\n    }\n}\nregisterSubclass('canvas', HTMLCanvasElement);\n// Reflected Properties\n// HTMLCanvasElement.height => number, reflected attribute\n// HTMLCanvasElement.width => number, reflected attribute\nreflectProperties([{ height: [0] }, { width: [0] }], HTMLCanvasElement);\n// Unimplemented Properties\n// HTMLCanvasElement.mozOpaque => boolean\n// HTMLCanvasElement.mozPrintCallback => function\n// Unimplemented Methods\n// HTMLCanvasElement.captureStream()\n// HTMLCanvasElement.toDataURL()\n// HTMLCanvasElement.toBlob()\n// HTMLCanvasElement.transferControlToOffscreen()\n// HTMLCanvasElement.mozGetAsFile()\n//# sourceMappingURL=HTMLCanvasElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLDataElement extends HTMLElement {\n}\nregisterSubclass('data', HTMLDataElement);\n// Reflected properties, strings.\n// HTMLEmbedElement.value => string, reflected attribute\nreflectProperties([{ value: [''] }], HTMLDataElement);\n//# sourceMappingURL=HTMLDataElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLEmbedElement extends HTMLElement {\n}\nregisterSubclass('embed', HTMLEmbedElement);\n// Reflected properties, strings.\n// HTMLEmbedElement.height => string, reflected attribute\n// HTMLEmbedElement.src => string, reflected attribute\n// HTMLEmbedElement.type => string, reflected attribute\n// HTMLEmbedElement.width => string, reflected attribute\nreflectProperties([{ height: [''] }, { src: [''] }, { type: [''] }, { width: [''] }], HTMLEmbedElement);\n// Unimplemented\n// HTMLEmbedElement.align => string, not reflected\n// HTMLEmbedElement.name => string, not reflected\n//# sourceMappingURL=HTMLEmbedElement.js.map","import { matchChildrenElements, tagNameConditionPredicate } from './matchElements';\nconst MATCHING_CHILD_ELEMENT_TAGNAMES = 'BUTTON FIELDSET INPUT OBJECT OUTPUT SELECT TEXTAREA'.split(' ');\n/**\n * The HTMLFormControlsCollection interface represents a collection of HTML form control elements.\n * It is mixedin to both HTMLFormElement and HTMLFieldSetElement.\n */\nexport const HTMLFormControlsCollectionMixin = (defineOn) => {\n    Object.defineProperty(defineOn.prototype, 'elements', {\n        /**\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormControlsCollection\n         * @return Element array matching children of specific tagnames.\n         */\n        get() {\n            return matchChildrenElements(this, tagNameConditionPredicate(MATCHING_CHILD_ELEMENT_TAGNAMES));\n        },\n    });\n};\n//# sourceMappingURL=HTMLFormControlsMixin.js.map","import { registerSubclass } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLFormControlsCollectionMixin } from './HTMLFormControlsMixin';\nimport { HTMLElement } from './HTMLElement';\nimport { toLower } from '../../utils';\nexport class HTMLFieldSetElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFieldSetElement\n     * @return hardcoded string 'fieldset'\n     */\n    get type() {\n        return toLower(this.tagName);\n    }\n}\nregisterSubclass('fieldset', HTMLFieldSetElement);\nHTMLFormControlsCollectionMixin(HTMLFieldSetElement);\n// Reflected properties\n// HTMLFieldSetElement.name => string, reflected attribute\n// HTMLFieldSetElement.disabled => boolean, reflected attribute\nreflectProperties([{ name: [''] }, { disabled: [false] }], HTMLFieldSetElement);\n// Unimplemented properties\n// HTMLFieldSetElement.validity\n// HTMLFieldSetElement.willValidate\n// HTMLFieldSetElement.validationMessage\n//# sourceMappingURL=HTMLFieldSetElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { HTMLFormControlsCollectionMixin } from './HTMLFormControlsMixin';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLFormElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/length\n     * @return number of controls in the form\n     */\n    get length() {\n        return this.elements.length;\n    }\n}\nregisterSubclass('form', HTMLFormElement);\nHTMLFormControlsCollectionMixin(HTMLFormElement);\n// Reflected properties\n// HTMLFormElement.name => string, reflected attribute\n// HTMLFormElement.method => string, reflected attribute\n// HTMLFormElement.target => string, reflected attribute\n// HTMLFormElement.action => string, reflected attribute\n// HTMLFormElement.enctype => string, reflected attribute\n// HTMLFormElement.acceptCharset => string, reflected attribute\n// HTMLFormElement.autocomplete => string, reflected attribute\n// HTMLFormElement.autocapitalize => string, reflected attribute\nreflectProperties([\n    { name: [''] },\n    { method: ['get'] },\n    { target: [''] },\n    { action: [''] },\n    { enctype: ['application/x-www-form-urlencoded'] },\n    { acceptCharset: ['', /* attr */ 'accept-charset'] },\n    { autocomplete: ['on'] },\n    { autocapitalize: ['sentences'] },\n], HTMLFormElement);\n// Unimplemented properties\n// HTMLFormElement.encoding => string, reflected attribute\n// HTMLFormElement.noValidate => boolean, reflected attribute\n/*\nUnimplemented, TBD:\n\nNamed inputs are added to their owner form instance as properties, and can overwrite native properties\nif they share the same name (eg a form with an input named action will have its action property return\nthat input instead of the form's action HTML attribute).\n*/\n//# sourceMappingURL=HTMLFormElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList } from './DOMTokenList';\nexport class HTMLIFrameElement extends HTMLElement {\n    _sandbox;\n    // HTMLIFrameElement.sandbox, DOMTokenList, reflected attribute\n    get sandbox() {\n        return this._sandbox || (this._sandbox = new DOMTokenList(this, 'sandbox'));\n    }\n}\nregisterSubclass('iframe', HTMLIFrameElement);\ndefinePropertyBackedAttributes(HTMLIFrameElement, {\n    sandbox: [(el) => el.sandbox.value, (el, value) => (el.sandbox.value = value)],\n});\n// Reflected properties\n// HTMLIFrameElement.allow => string, reflected attribute\n// HTMLIFrameElement.allowFullscreen => boolean, reflected attribute\n// HTMLIFrameElement.csp => string, reflected attribute\n// HTMLIFrameElement.height => string, reflected attribute\n// HTMLIFrameElement.name => string, reflected attribute\n// HTMLIFrameElement.referrerPolicy => string, reflected attribute\n// HTMLIFrameElement.src => string, reflected attribute\n// HTMLIFrameElement.srcdoc => string, reflected attribute\n// HTMLIFrameElement.width => string, reflected attribute\nreflectProperties([\n    { allow: [''] },\n    { allowFullscreen: [false] },\n    { csp: [''] },\n    { height: [''] },\n    { name: [''] },\n    { referrerPolicy: [''] },\n    { src: [''] },\n    { srcdoc: [''] },\n    { width: [''] },\n], HTMLIFrameElement);\n// Unimplemented Properties\n// HTMLIFrameElement.allowPaymentRequest => boolean, reflected attribute\n// HTMLIFrameElement.contentDocument => Document, read only (active document in the inline frame's nested browsing context)\n// HTMLIFrameElement.contentWindow => WindowProxy, read only (window proxy for the nested browsing context)\n//# sourceMappingURL=HTMLIFrameElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLImageElement extends HTMLElement {\n}\nregisterSubclass('img', HTMLImageElement);\n// Reflected Properties\n// HTMLImageElement.alt => string, reflected attribute\n// HTMLImageElement.crossOrigin => string, reflected attribute\n// HTMLImageElement.height => number, reflected attribute\n// HTMLImageElement.isMap => boolean, reflected attribute\n// HTMLImageElement.referrerPolicy => string, reflected attribute\n// HTMLImageElement.src => string, reflected attribute\n// HTMLImageElement.sizes => string, reflected attribute\n// HTMLImageElement.srcset => string, reflected attribute\n// HTMLImageElement.useMap => string, reflected attribute\n// HTMLImageElement.width => number, reflected attribute\nreflectProperties([\n    { alt: [''] },\n    { crossOrigin: [''] },\n    { height: [0] },\n    { isMap: [false] },\n    { referrerPolicy: [''] },\n    { src: [''] },\n    { sizes: [''] },\n    { srcset: [''] },\n    { useMap: [''] },\n    { width: [0] },\n], HTMLImageElement);\n// Unimplmented Properties\n// HTMLImageElement.complete Read only\n// Returns a Boolean that is true if the browser has finished fetching the image, whether successful or not. It also shows true, if the image has no src value.\n// HTMLImageElement.currentSrc Read only\n// Returns a DOMString representing the URL to the currently displayed image (which may change, for example in response to media queries).\n// HTMLImageElement.naturalHeight Read only\n// Returns a unsigned long representing the intrinsic height of the image in CSS pixels, if it is available; else, it shows 0.\n// HTMLImageElement.naturalWidth Read only\n// Returns a unsigned long representing the intrinsic width of the image in CSS pixels, if it is available; otherwise, it will show 0.\n//# sourceMappingURL=HTMLImageElement.js.map","import { matchChildrenElements } from './matchElements';\n/**\n * The HTMLInputLabels interface represents a collection of input getters for their related label Elements.\n * It is mixedin to both HTMLInputElement, HTMLMeterElement, and HTMLProgressElement.\n */\nexport const HTMLInputLabelsMixin = (defineOn) => {\n    Object.defineProperty(defineOn.prototype, 'labels', {\n        /**\n         * Getter returning label elements associated to this meter.\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLProgressElement/labels\n         * @return label elements associated to this meter.\n         */\n        get() {\n            return matchChildrenElements(this.ownerDocument || this, (element) => element.tagName === 'LABEL' && element.for && element.for === this.id);\n        },\n    });\n};\n//# sourceMappingURL=HTMLInputLabelsMixin.js.map","import { HTMLElement } from './HTMLElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nimport { reflectProperties } from './enhanceElement';\nimport { registerSubclass } from './Element';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\nexport class HTMLInputElement extends HTMLElement {\n    // Per spec, some attributes like 'value' and 'checked' change behavior based on dirty flags.\n    // Since these flags can only be changed on interaction (outside of worker), we can ignore them here.\n    // Tradeoffs: Consequent attribute changes are missing, HTMLFormElement.reset() doesn't work, etc.\n    // Alternative: Implement dirty flag checking in worker-dom, which would require listening for\n    //     and forwarding interaction events to flag \"dirtiness\".\n    // https://html.spec.whatwg.org/multipage/input.html#common-input-element-apis\n    [21 /* TransferrableKeys.value */] = '';\n    dirtyValue = false;\n    [47 /* TransferrableKeys.checked */] = false;\n    // TODO(willchou): There are a few interrelated issues with `value` property.\n    //   1. \"Dirtiness\" caveat above.\n    //   2. Duplicate SYNC events. Sent by every event fired from elements with a `value`, plus the default 'change' listener.\n    //   3. Duplicate MUTATE events. Caused by stale `value` in worker due to no default 'input' listener (see below).\n    get value() {\n        return !this.dirtyValue ? this.getAttribute('value') || '' : this[21 /* TransferrableKeys.value */];\n    }\n    set value(value) {\n        // Don't early-out if value doesn't appear to have changed.\n        // The worker may have a stale value since 'input' events aren't being forwarded.\n        this[21 /* TransferrableKeys.value */] = String(value);\n        this.dirtyValue = true;\n        transfer(this.ownerDocument, [\n            3 /* TransferrableMutationType.PROPERTIES */,\n            this[7 /* TransferrableKeys.index */],\n            storeString('value'),\n            0 /* NumericBoolean.FALSE */,\n            storeString(value),\n        ]);\n    }\n    get valueAsDate() {\n        // Don't use Date constructor or Date.parse() since ISO 8601 (yyyy-mm-dd) parsing is inconsistent.\n        const date = this.stringToDate(this.value);\n        const invalid = !date || isNaN(date.getTime());\n        return invalid ? null : date;\n    }\n    /** Unlike browsers, does not throw if this input[type] doesn't support dates. */\n    set valueAsDate(value) {\n        if (!(value instanceof Date)) {\n            throw new TypeError('The provided value is not a Date.');\n        }\n        this.value = this.dateToString(value);\n    }\n    get valueAsNumber() {\n        if (this.value.length === 0) {\n            return NaN;\n        }\n        return Number(this.value);\n    }\n    /** Unlike browsers, does not throw if this input[type] doesn't support numbers. */\n    set valueAsNumber(value) {\n        if (typeof value === 'number') {\n            this.value = String(value);\n        }\n        else {\n            this.value = '';\n        }\n    }\n    get checked() {\n        return this[47 /* TransferrableKeys.checked */];\n    }\n    set checked(value) {\n        if (this[47 /* TransferrableKeys.checked */] === value) {\n            return;\n        }\n        this[47 /* TransferrableKeys.checked */] = !!value;\n        transfer(this.ownerDocument, [\n            3 /* TransferrableMutationType.PROPERTIES */,\n            this[7 /* TransferrableKeys.index */],\n            storeString('checked'),\n            1 /* NumericBoolean.TRUE */,\n            value === true ? 1 /* NumericBoolean.TRUE */ : 0 /* NumericBoolean.FALSE */,\n        ]);\n    }\n    /**\n     * Returns a date in 'yyyy-mm-dd' format.\n     * @param date\n     */\n    dateToString(date) {\n        const y = date.getFullYear();\n        const m = date.getMonth() + 1; // getMonth() is 0-index.\n        const d = date.getDate();\n        return `${y}-${m > 9 ? '' : '0'}${m}-${d > 9 ? '' : '0'}${d}`;\n    }\n    /**\n     * Returns a Date from a 'yyyy-mm-dd' format.\n     * @param s\n     */\n    stringToDate(str) {\n        const components = str.split('-');\n        if (components.length !== 3) {\n            return null;\n        }\n        const [y, m, d] = components;\n        // Month is 0-index.\n        return new Date(parseInt(y, 10), parseInt(m, 10) - 1, parseInt(d, 10));\n    }\n}\nregisterSubclass('input', HTMLInputElement);\nHTMLInputLabelsMixin(HTMLInputElement);\n// Reflected Properties\n// HTMLInputElement.formAction => string, reflected attribute\n// HTMLInputElement.formEncType\t=> string, reflected attribute\n// HTMLInputElement.formMethod => string, reflected attribute\n// HTMLInputElement.formTarget => string, reflected attribute\n// HTMLInputElement.name => string, reflected attribute\n// HTMLInputElement.type => string, reflected attribute\n// HTMLInputElement.disabled => boolean, reflected attribute\n// HTMLInputElement.autofocus => boolean, reflected attribute\n// HTMLInputElement.required => boolean, reflected attribute\n// HTMLInputElement.defaultChecked => boolean, reflected attribute (\"checked\")\n// HTMLInputElement.alt => string, reflected attribute\n// HTMLInputElement.height => number, reflected attribute\n// HTMLInputElement.src => string, reflected attribute\n// HTMLInputElement.width => number, reflected attribute\n// HTMLInputElement.accept => string, reflected attribute\n// HTMLInputElement.autocomplete => string, reflected attribute\n// HTMLInputElement.maxLength => number, reflected attribute\n// HTMLInputElement.size => number, reflected attribute\n// HTMLInputElement.pattern => string, reflected attribute\n// HTMLInputElement.placeholder => string, reflected attribute\n// HTMLInputElement.readOnly => boolean, reflected attribute\n// HTMLInputElement.min => string, reflected attribute\n// HTMLInputElement.max => string, reflected attribute\n// HTMLInputElement.defaultValue => string, reflected attribute\n// HTMLInputElement.dirname => string, reflected attribute\n// HTMLInputElement.multiple => boolean, reflected attribute\n// HTMLInputElement.step => string, reflected attribute\n// HTMLInputElement.autocapitalize => string, reflected attribute\nreflectProperties([\n    { accept: [''] },\n    { alt: [''] },\n    { autocapitalize: [''] },\n    { autocomplete: [''] },\n    { autofocus: [false] },\n    { defaultChecked: [false, /* attr */ 'checked'] },\n    { defaultValue: ['', /* attr */ 'value'] },\n    { dirName: [''] },\n    { disabled: [false] },\n    { formAction: [''] },\n    { formEncType: [''] },\n    { formMethod: [''] },\n    { formTarget: [''] },\n    { height: [0] },\n    { max: [''] },\n    { maxLength: [0] },\n    { min: [''] },\n    { multiple: [false] },\n    { name: [''] },\n    { pattern: [''] },\n    { placeholder: [''] },\n    { readOnly: [false] },\n    { required: [false] },\n    { size: [0] },\n    { src: [''] },\n    { step: [''] },\n    { type: ['text'] },\n    { width: [0] },\n], HTMLInputElement);\n// TODO(KB) Not Reflected Properties\n// HTMLInputElement.indeterminate => boolean\n// Unimplemented Properties\n// HTMLInputElement.formNoValidate => string, reflected attribute\n// HTMLInputElement.validity => ValidityState, readonly\n// HTMLInputElement.validationMessage => string, readonly\n// HTMLInputElement.willValidate => boolean, readonly\n// HTMLInputElement.allowdirs => boolean\n// HTMLInputElement.files\t=> Array<File>\n// HTMLInputElement.webkitdirectory\t=> boolean, reflected attribute\n// HTMLInputElement.webkitEntries => Array<FileSystemEntry>\n// HTMLInputElement.selectionStart => number\n// HTMLInputElement.selectionEnd => number\n// HTMLInputElement.selectionDirection => string\n// HTMLInputElement.list => Element, read only (element pointed by list attribute)\n// Unimplemented Methods\n// HTMLInputElement.setSelectionRange()\n// HTMLInputElement.setRangeText()\n// HTMLInputElement.setCustomValidity()\n// HTMLInputElement.checkValidity()\n// HTMLInputElement.stepDown()\n// HTMLInputElement.stepUp()\n//# sourceMappingURL=HTMLInputElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { matchChildElement, tagNameConditionPredicate } from './matchElements';\nexport class HTMLLabelElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control\n     * @return input element\n     */\n    get control() {\n        const htmlFor = this.getAttribute('for');\n        if (htmlFor !== null) {\n            return this.ownerDocument && this.ownerDocument.getElementById(htmlFor);\n        }\n        return matchChildElement(this, tagNameConditionPredicate(['INPUT']));\n    }\n}\nregisterSubclass('label', HTMLLabelElement);\n// Reflected Properties\n// HTMLLabelElement.htmlFor => string, reflected attribute 'for'\nreflectProperties([{ htmlFor: ['', 'for'] }], HTMLLabelElement);\n//# sourceMappingURL=HTMLLabelElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nexport class HTMLLinkElement extends HTMLElement {\n    _relList;\n    get relList() {\n        return this._relList || (this._relList = new DOMTokenList(this, 'rel'));\n    }\n}\nregisterSubclass('link', HTMLLinkElement);\ndefinePropertyBackedAttributes(HTMLLinkElement, {\n    rel: [(el) => el.relList.value, (el, value) => (el.relList.value = value)],\n});\nsynchronizedAccessor(HTMLLinkElement, 'relList', 'rel');\n// Reflected Properties\n// HTMLLinkElement.as => string, reflected attribute\n// HTMLLinkElement.crossOrigin => string, reflected attribute\n// HTMLLinkElement.disabled => boolean, reflected attribute\n// HTMLLinkElement.href => string, reflected attribute\n// HTMLLinkElement.hreflang => string, reflected attribute\n// HTMLLinkElement.media => string, reflected attribute\n// HTMLLinkElement.referrerPolicy => string, reflected attribute\n// HTMLLinkElement.sizes => string, reflected attribute\n// HTMLLinkElement.type => string, reflected attribute\nreflectProperties([\n    { as: [''] },\n    { crossOrigin: [''] },\n    { disabled: [false] },\n    { href: [''] },\n    { hreflang: [''] },\n    { media: [''] },\n    { referrerPolicy: [''] },\n    { sizes: [''] },\n    { type: [''] },\n], HTMLLinkElement);\n// Unimplemented Properties\n// LinkStyle.sheet Read only\n// Returns the StyleSheet object associated with the given element, or null if there is none.\n//# sourceMappingURL=HTMLLinkElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { matchChildrenElements } from './matchElements';\nexport class HTMLMapElement extends HTMLElement {\n    /**\n     * Getter returning area elements associated to this map.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLMapElement\n     * @return area elements associated to this map.\n     */\n    get areas() {\n        return matchChildrenElements(this, (element) => element.tagName === 'AREA');\n    }\n}\nregisterSubclass('map', HTMLMapElement);\n// Reflected Properties\n// HTMLMapElement.name => string, reflected attribute\nreflectProperties([{ name: [''] }], HTMLMapElement);\n//# sourceMappingURL=HTMLMapElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nexport class HTMLMeterElement extends HTMLElement {\n}\nregisterSubclass('meter', HTMLMeterElement);\nHTMLInputLabelsMixin(HTMLMeterElement);\n// Reflected Properties\n// HTMLMeterElement.high => number, reflected attribute\n// HTMLMeterElement.low => number, reflected attribute\n// HTMLMeterElement.max => number, reflected attribute\n// HTMLMeterElement.min => number, reflected attribute\n// HTMLMeterElement.optimum => number, reflected attribute\n// HTMLMeterElement.value => number, reflected attribute\nreflectProperties([{ high: [0] }, { low: [0] }, { max: [1] }, { min: [0] }, { optimum: [0] }, { value: [0] }], HTMLMeterElement);\n//# sourceMappingURL=HTMLMeterElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLModElement extends HTMLElement {\n}\nregisterSubclass('del', HTMLModElement);\nregisterSubclass('ins', HTMLModElement);\n// Reflected Properties\n// HTMLModElement.cite => string, reflected attribute\n// HTMLModElement.datetime => string, reflected attribute\nreflectProperties([{ cite: [''] }, { datetime: [''] }], HTMLModElement);\n//# sourceMappingURL=HTMLModElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLOListElement extends HTMLElement {\n}\nregisterSubclass('ol', HTMLOListElement);\n// Reflected Properties\n// HTMLModElement.reversed => boolean, reflected attribute\n// HTMLModElement.start => number, reflected attribute\n// HTMLOListElement.type => string, reflected attribute\nreflectProperties([{ reversed: [false] }, { start: [1] }, { type: [''] }], HTMLOListElement);\n//# sourceMappingURL=HTMLOListElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { transfer } from '../MutationTransfer';\nimport { store as storeString } from '../strings';\nexport class HTMLOptionElement extends HTMLElement {\n    [52 /* TransferrableKeys.selected */] = false;\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return position of the option within the list of options it's within, or zero if there is no valid parent.\n     */\n    get index() {\n        return (this.parentNode && this.parentNode.children.indexOf(this)) || 0;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return label attribute value or text content if there is no attribute.\n     */\n    get label() {\n        return this.getAttribute('label') || this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param label new label value to store as an attribute.\n     */\n    set label(label) {\n        this.setAttribute('label', label);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return boolean based on if the option element is selected.\n     */\n    get selected() {\n        return this[52 /* TransferrableKeys.selected */];\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param value new selected boolean value.\n     */\n    set selected(value) {\n        this[52 /* TransferrableKeys.selected */] = !!value;\n        transfer(this.ownerDocument, [\n            3 /* TransferrableMutationType.PROPERTIES */,\n            this[7 /* TransferrableKeys.index */],\n            storeString('selected'),\n            1 /* NumericBoolean.TRUE */,\n            this[52 /* TransferrableKeys.selected */] ? 1 /* NumericBoolean.TRUE */ : 0 /* NumericBoolean.FALSE */,\n        ]);\n    }\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param text new text content to store for this Element.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return value attribute value or text content if there is no attribute.\n     */\n    get value() {\n        return this.getAttribute('value') || this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param value new value for an option element.\n     */\n    set value(value) {\n        this.setAttribute('value', value);\n    }\n}\nregisterSubclass('option', HTMLOptionElement);\ndefinePropertyBackedAttributes(HTMLOptionElement, {\n    selected: [(el) => String(el[52 /* TransferrableKeys.selected */]), (el, value) => (el.selected = value === 'true')],\n});\n// Reflected Properties\n// HTMLOptionElement.defaultSelected => boolean, reflected attribute\n// HTMLOptionElement.disabled => boolean, reflected attribute\n// HTMLOptionElement.type => string, reflected attribute\nreflectProperties([{ defaultSelected: [false, /* attr */ 'selected'] }, { disabled: [false] }, { type: [''] }], HTMLOptionElement);\n// Implemented at HTMLElement\n// HTMLOptionElement.form, Read only\t=> HTMLFormElement\n//# sourceMappingURL=HTMLOptionElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nexport class HTMLProgressElement extends HTMLElement {\n    [48 /* TransferrableKeys.indeterminate */] = true;\n    [21 /* TransferrableKeys.value */] = 0;\n    dirtyValue = false;\n    get position() {\n        return this[48 /* TransferrableKeys.indeterminate */] ? -1 : this.value / this.max;\n    }\n    get value() {\n        return !this.dirtyValue ? Number(this.getAttribute('value')) || 0 : this[21 /* TransferrableKeys.value */];\n    }\n    set value(value) {\n        this[48 /* TransferrableKeys.indeterminate */] = false;\n        this[21 /* TransferrableKeys.value */] = value;\n        this.dirtyValue = true;\n        // TODO(KB) This is a property mutation needing tracked.\n    }\n}\nregisterSubclass('progress', HTMLProgressElement);\nHTMLInputLabelsMixin(HTMLProgressElement);\n// Reflected Properties\n// HTMLModElement.max => number, reflected attribute\nreflectProperties([{ max: [1] }], HTMLProgressElement);\n//# sourceMappingURL=HTMLProgressElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLQuoteElement extends HTMLElement {\n}\nregisterSubclass('blockquote', HTMLQuoteElement);\nregisterSubclass('q', HTMLQuoteElement);\n// Reflected Properties\n// HTMLModElement.cite => string, reflected attribute\nreflectProperties([{ cite: [''] }], HTMLQuoteElement);\n//# sourceMappingURL=HTMLQuoteElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLScriptElement extends HTMLElement {\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement\n     * @param text new text content to store for this Element.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n}\nregisterSubclass('script', HTMLScriptElement);\n// Reflected Properties\n// HTMLScriptElement.type => string, reflected attribute\n// HTMLScriptElement.src => string, reflected attribute\n// HTMLScriptElement.charset => string, reflected attribute\n// HTMLScriptElement.async => boolean, reflected attribute\n// HTMLScriptElement.defer => boolean, reflected attribute\n// HTMLScriptElement.crossOrigin => string, reflected attribute\n// HTMLScriptElement.noModule => boolean, reflected attribute\nreflectProperties([{ type: [''] }, { src: [''] }, { charset: [''] }, { async: [false] }, { defer: [false] }, { crossOrigin: [''] }, { noModule: [false] }], HTMLScriptElement);\n//# sourceMappingURL=HTMLScriptElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nimport { matchChildrenElements, matchChildElement, tagNameConditionPredicate } from './matchElements';\nconst isOptionPredicate = tagNameConditionPredicate(['OPTION']);\nconst isSelectedOptionPredicate = (element) => isOptionPredicate(element) && element.selected === true;\nexport class HTMLSelectElement extends HTMLElement {\n    [49 /* TransferrableKeys.size */] = -1 /* SizeDefaults.UNMODIFIED */;\n    /**\n     * Extend functionality after child insertion to make sure the correct option is selected.\n     * @param child\n     */\n    [56 /* TransferrableKeys.insertedNode */](child) {\n        super[56 /* TransferrableKeys.insertedNode */](child);\n        // When this singular value select is appending a child, set the value property for two cases.\n        // 1. The inserted child is already selected.\n        // 2. The current value of the select is the default ('').\n        if ((!this.multiple && isOptionPredicate(child) && child.selected) || this.value === '') {\n            this.value = child.value;\n        }\n    }\n    /**\n     * Extend functionality after child insertion to make sure the correct option is selected.\n     * @param child\n     */\n    [57 /* TransferrableKeys.removedNode */](child) {\n        super[57 /* TransferrableKeys.removedNode */](child);\n        // When this singular value select is removing a selected child\n        // ... set the value property to the first valid option.\n        if (!this.multiple && child.selected) {\n            const options = this.options;\n            if (options.length > 0) {\n                this.value = options[0].value;\n            }\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/length\n     * @return number of controls in the form\n     */\n    get length() {\n        return this.options.length;\n    }\n    /**\n     * Getter returning option elements that are direct children of a HTMLSelectElement\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return Element \"options\" objects that are direct children.\n     */\n    get options() {\n        return this.children.filter(isOptionPredicate);\n    }\n    /**\n     * Getter returning the index of the first selected <option> element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedIndex\n     * @return the index of the first selected option element, or -1 if no element is selected.\n     */\n    get selectedIndex() {\n        const firstSelectedChild = matchChildElement(this, isSelectedOptionPredicate);\n        return firstSelectedChild ? this.children.indexOf(firstSelectedChild) : -1;\n    }\n    /**\n     * Setter making the <option> element at the passed index selected.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedIndex\n     * @param selectedIndex index number to make selected.\n     */\n    set selectedIndex(selectedIndex) {\n        this.children.forEach((element, index) => (element.selected = index === selectedIndex));\n    }\n    /**\n     * Getter returning the <option> elements selected.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedOptions\n     * @return array of Elements currently selected.\n     */\n    get selectedOptions() {\n        return matchChildrenElements(this, isSelectedOptionPredicate);\n    }\n    /**\n     * Getter returning the size of the select element (by default 1 for single and 4 for multiple)\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return size of the select element.\n     */\n    get size() {\n        return this[49 /* TransferrableKeys.size */] === -1 /* SizeDefaults.UNMODIFIED */\n            ? this.multiple\n                ? 4 /* SizeDefaults.MULTIPLE */\n                : 1 /* SizeDefaults.SINGLE */\n            : this[49 /* TransferrableKeys.size */];\n    }\n    /**\n     * Override the size of this element (each positive unit is the height of a single option)\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @param size number to set the size to.\n     */\n    set size(size) {\n        this[49 /* TransferrableKeys.size */] = size > 0 ? size : this.multiple ? 4 /* SizeDefaults.MULTIPLE */ : 1 /* SizeDefaults.SINGLE */;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return string representing the select element type.\n     */\n    get type() {\n        return this.multiple ? \"select-one\" /* TypeDefaults.MULTIPLE */ : \"select-multiple\" /* TypeDefaults.SINGLE */;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return the value of the first selected option\n     */\n    get value() {\n        const firstSelectedChild = matchChildElement(this, isSelectedOptionPredicate);\n        return firstSelectedChild ? firstSelectedChild.value : '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @set value\n     */\n    set value(value) {\n        const stringValue = String(value);\n        this.children.forEach((element) => isOptionPredicate(element) && (element.selected = element.value === stringValue));\n    }\n}\nregisterSubclass('select', HTMLSelectElement);\nHTMLInputLabelsMixin(HTMLSelectElement);\n// Reflected Properties\n// HTMLSelectElement.multiple => boolean, reflected attribute\n// HTMLSelectElement.name => string, reflected attribute\n// HTMLSelectElement.required => boolean, reflected attribute\nreflectProperties([{ multiple: [false] }, { name: [''] }, { required: [false] }], HTMLSelectElement);\n// Implemented on HTMLElement\n// HTMLSelectElement.form => HTMLFormElement, readonly\n// Unimplemented Properties\n// HTMLSelectElement.validation => string\n// HTMLSelectElement.validity => ValidityState\n// HTMLSelectElement.willValidate => boolean\n//# sourceMappingURL=HTMLSelectElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLSourceElement extends HTMLElement {\n}\nregisterSubclass('source', HTMLSourceElement);\n// Reflected Properties\n// HTMLSourceElement.media => string, reflected attribute\n// HTMLSourceElement.sizes => string, reflected attribute\n// HTMLSourceElement.src => string, reflected attribute\n// HTMLSourceElement.srcset => string, reflected attribute\n// HTMLSourceElement.type => string, reflected attribute\nreflectProperties([{ media: [''] }, { sizes: [''] }, { src: [''] }, { srcset: [''] }, { type: [''] }], HTMLSourceElement);\n// Unimplemented Properties\n// HTMLSourceElement.keySystem => string\n//# sourceMappingURL=HTMLSourceElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLStyleElement extends HTMLElement {\n}\nregisterSubclass('style', HTMLStyleElement);\n// Reflected Properties\n// HTMLStyleElement.media => string, reflected attribute\n// HTMLStyleElement.type => string, reflected attribute\nreflectProperties([{ media: [''] }, { type: [''] }], HTMLStyleElement);\n// Unimplemented Properties\n// HTMLStyleElement.disabled => boolean\n// HTMLStyleElement.scoped => boolean, reflected attribute\n// HTMLStyleElement.sheet => StyleSheet, read only\n//# sourceMappingURL=HTMLStyleElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList } from './DOMTokenList';\nimport { matchNearestParent, tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nexport class HTMLTableCellElement extends HTMLElement {\n    _headers;\n    get headers() {\n        return this._headers || (this._headers = new DOMTokenList(this, 'headers'));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCellElement\n     * @return position of the cell within the parent tr, if not nested in a tr the value is -1.\n     */\n    get cellIndex() {\n        const parent = matchNearestParent(this, tagNameConditionPredicate(['TR']));\n        return parent !== null ? matchChildrenElements(parent, tagNameConditionPredicate(['TH', 'TD'])).indexOf(this) : -1;\n    }\n}\nregisterSubclass('th', HTMLTableCellElement);\nregisterSubclass('td', HTMLTableCellElement);\ndefinePropertyBackedAttributes(HTMLTableCellElement, {\n    headers: [(el) => el.headers.value, (el, value) => (el.headers.value = value)],\n});\n// Reflected Properties\n// HTMLTableCellElement.abbr => string, reflected attribute\n// HTMLTableCellElement.colSpan => number, reflected attribute\n// HTMLTableCellElement.rowSpan => number, reflected attribute\n// HTMLTableCellElement.scope => string, reflected attribute\nreflectProperties([{ abbr: [''] }, { colSpan: [1] }, { rowSpan: [1] }, { scope: [''] }], HTMLTableCellElement);\n//# sourceMappingURL=HTMLTableCellElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLTableColElement extends HTMLElement {\n}\nregisterSubclass('col', HTMLTableColElement);\n// Reflected Properties\n// HTMLTableColElement.span => number, reflected attribute\nreflectProperties([{ span: [1] }], HTMLTableColElement);\n//# sourceMappingURL=HTMLTableColElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { matchChildElement, matchChildrenElements, tagNameConditionPredicate } from './matchElements';\nimport { toUpper } from '../../utils';\nconst removeElement = (element) => element && element.remove();\nconst insertBeforeElementsWithTagName = (parent, element, tagNames) => {\n    console.assert(tagNames.every((t) => t === toUpper(t)), 'tagNames must be all uppercase.');\n    const insertBeforeElement = matchChildElement(parent, (element) => !tagNames.includes(element.tagName));\n    if (insertBeforeElement) {\n        parent.insertBefore(element, insertBeforeElement);\n    }\n    else {\n        parent.appendChild(element);\n    }\n};\nexport class HTMLTableElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/caption\n     * @return first matching caption Element or null if none exists.\n     */\n    get caption() {\n        return matchChildElement(this, tagNameConditionPredicate(['CAPTION']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/caption\n     * @param element new caption element to replace the existing, or become the first element child.\n     */\n    set caption(newElement) {\n        if (newElement && newElement.tagName === 'CAPTION') {\n            // If a correct object is given,\n            // it is inserted in the tree as the first child of this element and the first <caption>\n            // that is a child of this element is removed from the tree, if any.\n            removeElement(this.caption);\n            this.insertBefore(newElement, this.firstElementChild);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @return first matching thead Element or null if none exists.\n     */\n    get tHead() {\n        return matchChildElement(this, tagNameConditionPredicate(['THEAD']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @param newElement new thead element to insert in this table.\n     */\n    set tHead(newElement) {\n        if (newElement && newElement.tagName === 'THEAD') {\n            // If a correct object is given,\n            // it is inserted in the tree immediately before the first element that is\n            // neither a <caption>, nor a <colgroup>, or as the last child if there is no such element.\n            // Additionally, the first <thead> that is a child of this element is removed from the tree, if any.\n            removeElement(this.tHead);\n            insertBeforeElementsWithTagName(this, newElement, ['CAPTION', 'COLGROUP']);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @return first matching thead Element or null if none exists.\n     */\n    get tFoot() {\n        return matchChildElement(this, tagNameConditionPredicate(['TFOOT']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @param newElement new tfoot element to insert in this table.\n     */\n    set tFoot(newElement) {\n        if (newElement && newElement.tagName === 'TFOOT') {\n            // If a correct object is given,\n            // it is inserted in the tree immediately before the first element that is neither a <caption>,\n            // a <colgroup>, nor a <thead>, or as the last child if there is no such element, and the first <tfoot> that is a child of\n            // this element is removed from the tree, if any.\n            removeElement(this.tFoot);\n            insertBeforeElementsWithTagName(this, newElement, ['CAPTION', 'COLGROUP', 'THEAD']);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement\n     * @return array of 'tr' tagname elements\n     */\n    get rows() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TR']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement\n     * @return array of 'tbody' tagname elements\n     */\n    get tBodies() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TBODY']));\n    }\n}\nregisterSubclass('table', HTMLTableElement);\n// Unimplemented Properties\n// HTMLTableElement.sortable => boolean\n// Unimplemented Methods\n// HTMLTableElement.createTHead()\n// HTMLTableElement.deleteTHead()\n// HTMLTableElement.createTFoot()\n// HTMLTableElement.deleteTFoot()\n// HTMLTableElement.createCaption()\n// HTMLTableElement.deleteCaption()\n// HTMLTableElement.insertRow()\n// HTMLTableElement.deleteRow()\n//# sourceMappingURL=HTMLTableElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { matchNearestParent, tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nconst TABLE_SECTION_TAGNAMES = 'TABLE TBODY THEAD TFOOT'.split(' ');\nconst indexInAncestor = (element, isValidAncestor) => {\n    const parent = matchNearestParent(element, isValidAncestor);\n    // TODO(KB): This is either a HTMLTableElement or HTMLTableSectionElement.\n    return parent === null ? -1 : parent.rows.indexOf(element);\n};\nexport class HTMLTableRowElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return td and th elements that are children of this row.\n     */\n    get cells() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TD', 'TH']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return position of the row within a table, if not nested within in a table the value is -1.\n     */\n    get rowIndex() {\n        return indexInAncestor(this, tagNameConditionPredicate(['TABLE']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return position of the row within a parent section, if not nested directly in a section the value is -1.\n     */\n    get sectionRowIndex() {\n        return indexInAncestor(this, tagNameConditionPredicate(TABLE_SECTION_TAGNAMES));\n    }\n    /**\n     * Removes the cell in provided position of this row.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @param index position of the cell in the row to remove.\n     */\n    deleteCell(index) {\n        const cell = this.cells[index];\n        if (cell) {\n            cell.remove();\n        }\n    }\n    /**\n     * Insert a new cell ('td') in the row at a specified position.\n     * @param index position in the children to insert before.\n     * @return newly inserted td element.\n     */\n    insertCell(index) {\n        const cells = this.cells;\n        const td = this.ownerDocument.createElement('td');\n        if (index < 0 || index >= cells.length) {\n            this.appendChild(td);\n        }\n        else {\n            this.insertBefore(td, this.children[index]);\n        }\n        return td;\n    }\n}\nregisterSubclass('tr', HTMLTableRowElement);\n//# sourceMappingURL=HTMLTableRowElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nexport class HTMLTableSectionElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @return All rows (tr elements) within the table section.\n     */\n    get rows() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TR']));\n    }\n    /**\n     * Remove a node in a specified position from the section.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @param index position in the section to remove the node of.\n     */\n    deleteRow(index) {\n        const rows = this.rows;\n        if (index >= 0 || index <= rows.length) {\n            rows[index].remove();\n        }\n    }\n    /**\n     * Insert a new row ('tr') in the row at a specified position.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @param index position in the children to insert before.\n     * @return newly inserted tr element.\n     */\n    insertRow(index) {\n        const rows = this.rows;\n        const tr = this.ownerDocument.createElement('tr');\n        if (index < 0 || index >= rows.length) {\n            this.appendChild(tr);\n        }\n        else {\n            this.insertBefore(tr, this.children[index]);\n        }\n        return tr;\n    }\n}\nregisterSubclass('thead', HTMLTableSectionElement);\nregisterSubclass('tfoot', HTMLTableSectionElement);\nregisterSubclass('tbody', HTMLTableSectionElement);\n//# sourceMappingURL=HTMLTableSectionElement.js.map","// <blockquote> and <q>\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLTimeElement extends HTMLElement {\n}\nregisterSubclass('time', HTMLTimeElement);\n// Reflected Properties\n// HTMLTimeElement.dateTime => string, reflected attribute\nreflectProperties([{ dateTime: [''] }], HTMLTimeElement);\n//# sourceMappingURL=HTMLTimeElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nexport class HTMLDataListElement extends HTMLElement {\n    /**\n     * Getter returning option elements that are direct children of a HTMLDataListElement\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLDataListElement\n     * @return Element \"options\" objects that are direct children.\n     */\n    get options() {\n        return this.childNodes.filter((node) => node.nodeName === 'OPTION');\n    }\n}\nregisterSubclass('datalist', HTMLDataListElement);\n/**\n * HTMLDataListElement.options Read only\n * Is a HTMLCollection representing a collection of the contained option elements.\n */\n/**\n * <label for=\"myBrowser\">Choose a browser from this list:</label>\n * <input list=\"browsers\" id=\"myBrowser\" name=\"myBrowser\" />\n * <datalist id=\"browsers\">\n *   <option value=\"Chrome\">\n *   <option value=\"Firefox\">\n *   <option value=\"Internet Explorer\">\n *   <option value=\"Opera\">\n *   <option value=\"Safari\">\n *   <option value=\"Microsoft Edge\">\n * </datalist>\n */\n//# sourceMappingURL=HTMLDataListElement.js.map","import { Node } from './Node';\nimport { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\nimport { getNextElementSibling, getPreviousElementSibling } from './elementSibling';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/CharacterData\nexport class CharacterData extends Node {\n    [38 /* TransferrableKeys.data */];\n    constructor(data, nodeType, nodeName, ownerDocument, overrideIndex) {\n        super(nodeType, nodeName, ownerDocument, overrideIndex);\n        this[38 /* TransferrableKeys.data */] = data;\n        this[8 /* TransferrableKeys.creationFormat */] = [this[7 /* TransferrableKeys.index */], nodeType, storeString(nodeName), storeString(data), 0];\n    }\n    // Unimplemented Methods\n    // NonDocumentTypeChildNode.nextElementSibling – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/nextElementSibling\n    // NonDocumentTypeChildNode.previousElementSibling – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/previousElementSibling\n    // CharacterData.appendData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/appendData\n    // CharacterData.deleteData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/deleteData\n    // CharacterData.insertData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/insertData\n    // CharacterData.replaceData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/replaceData\n    // CharacterData.substringData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/substringData\n    /**\n     * @return Returns the string contained in private CharacterData.data\n     */\n    get data() {\n        return this[38 /* TransferrableKeys.data */];\n    }\n    /**\n     * @param value string value to store as CharacterData.data.\n     */\n    set data(value) {\n        const oldValue = this.data;\n        this[38 /* TransferrableKeys.data */] = value;\n        mutate(this.ownerDocument, {\n            target: this,\n            type: 1 /* MutationRecordType.CHARACTER_DATA */,\n            value,\n            oldValue,\n        }, [1 /* TransferrableMutationType.CHARACTER_DATA */, this[7 /* TransferrableKeys.index */], storeString(value)]);\n    }\n    /**\n     * @return Returns the size of the string contained in CharacterData.data\n     */\n    get length() {\n        return this[38 /* TransferrableKeys.data */].length;\n    }\n    /**\n     * @return Returns the string contained in CharacterData.data\n     */\n    get nodeValue() {\n        return this[38 /* TransferrableKeys.data */];\n    }\n    /**\n     * @param value string value to store as CharacterData.data.\n     */\n    set nodeValue(value) {\n        this.data = value;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/previousElementSibling\n     * Returns the Element immediately prior to the specified one in its parent's children list,\n     * or null if the specified element is the first one in the list.\n     */\n    get previousElementSibling() {\n        return getPreviousElementSibling(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/nextElementSibling\n     * Returns the Element immediately following the specified one in its parent's children list,\n     * or null if the specified element is the last one in the list.\n     */\n    get nextElementSibling() {\n        return getNextElementSibling(this);\n    }\n}\n//# sourceMappingURL=CharacterData.js.map","import { CharacterData } from './CharacterData';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/Text\nexport class Text extends CharacterData {\n    constructor(data, ownerDocument, overrideIndex) {\n        super(data, 3 /* NodeType.TEXT_NODE */, '#text', ownerDocument, overrideIndex);\n    }\n    // Unimplemented Properties\n    // Text.isElementContentWhitespace – https://developer.mozilla.org/en-US/docs/Web/API/Text/isElementContentWhitespace\n    // Text.wholeText – https://developer.mozilla.org/en-US/docs/Web/API/Text/wholeText\n    // Text.assignedSlot – https://developer.mozilla.org/en-US/docs/Web/API/Text/assignedSlot\n    /**\n     * textContent getter, retrieves underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     */\n    get textContent() {\n        return this.data;\n    }\n    /**\n     * textContent setter, mutates underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     * @param value new value\n     */\n    set textContent(value) {\n        // Mutation Observation is performed by CharacterData.\n        this.nodeValue = value;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @return new Text Node with the same data as the Text to clone.\n     */\n    cloneNode() {\n        return this.ownerDocument.createTextNode(this.data);\n    }\n    /**\n     * Breaks Text node into two nodes at the specified offset, keeping both nodes in the tree as siblings.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Text/splitText\n     * @param offset number position to split text at.\n     * @return Text Node after the offset.\n     */\n    splitText(offset) {\n        const remainderTextNode = new Text(this.data.slice(offset, this.data.length), this.ownerDocument);\n        const parentNode = this.parentNode;\n        this.nodeValue = this.data.slice(0, offset);\n        if (parentNode !== null) {\n            // When this node is attached to the DOM, the remainder text needs to be inserted directly after.\n            const parentChildNodes = parentNode.childNodes;\n            const insertBeforePosition = parentChildNodes.indexOf(this) + 1;\n            const insertBeforeNode = parentChildNodes.length >= insertBeforePosition ? parentChildNodes[insertBeforePosition] : null;\n            return parentNode.insertBefore(remainderTextNode, insertBeforeNode);\n        }\n        return remainderTextNode;\n    }\n}\n//# sourceMappingURL=Text.js.map","import { CharacterData } from './CharacterData';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/Comment\nexport class Comment extends CharacterData {\n    constructor(data, ownerDocument, overrideIndex) {\n        super(data, 8 /* NodeType.COMMENT_NODE */, '#comment', ownerDocument, overrideIndex);\n    }\n    /**\n     * textContent getter, retrieves underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     */\n    get textContent() {\n        return this.data;\n    }\n    /**\n     * textContent setter, mutates underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     * @param value new value\n     */\n    set textContent(value) {\n        // Mutation Observation is performed by CharacterData.\n        this.nodeValue = value;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @return new Comment Node with the same data as the Comment to clone.\n     */\n    cloneNode() {\n        return this.ownerDocument.createComment(this.data);\n    }\n}\n//# sourceMappingURL=Comment.js.map","import { ParentNode } from './ParentNode';\nimport { store as storeString } from '../strings';\nexport class DocumentFragment extends ParentNode {\n    constructor(ownerDocument, overrideIndex) {\n        super(11 /* NodeType.DOCUMENT_FRAGMENT_NODE */, '#document-fragment', ownerDocument, overrideIndex);\n        this[8 /* TransferrableKeys.creationFormat */] = [this[7 /* TransferrableKeys.index */], 11 /* NodeType.DOCUMENT_FRAGMENT_NODE */, storeString(this.nodeName), 0, 0];\n    }\n    /**\n     * @param deep boolean determines if the clone should include a recursive copy of all childNodes.\n     * @return DocumentFragment containing childNode clones of the DocumentFragment requested to be cloned.\n     */\n    cloneNode(deep = false) {\n        const clone = this.ownerDocument.createDocumentFragment();\n        if (deep) {\n            this.childNodes.forEach((child) => clone.appendChild(child.cloneNode(deep)));\n        }\n        return clone;\n    }\n}\n//# sourceMappingURL=DocumentFragment.js.map","import { Element, NS_NAME_TO_CLASS } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport './HTMLAnchorElement';\nimport './HTMLButtonElement';\nimport './HTMLCanvasElement';\nimport './HTMLDataElement';\nimport './HTMLDataListElement';\nimport './HTMLEmbedElement';\nimport './HTMLFieldSetElement';\nimport './HTMLFormElement';\nimport './HTMLIFrameElement';\nimport './HTMLImageElement';\nimport './HTMLInputElement';\nimport './HTMLLabelElement';\nimport './HTMLLinkElement';\nimport './HTMLMapElement';\nimport './HTMLMeterElement';\nimport './HTMLModElement';\nimport './HTMLOListElement';\nimport './HTMLOptionElement';\nimport './HTMLProgressElement';\nimport './HTMLQuoteElement';\nimport './HTMLScriptElement';\nimport './HTMLSelectElement';\nimport './HTMLSourceElement';\nimport './HTMLStyleElement';\nimport './HTMLTableCellElement';\nimport './HTMLTableColElement';\nimport './HTMLTableElement';\nimport './HTMLTableRowElement';\nimport './HTMLTableSectionElement';\nimport './HTMLTimeElement';\nimport { matchChildElement } from './matchElements';\nimport { Text } from './Text';\nimport { Comment } from './Comment';\nimport { toLower } from '../../utils';\nimport { DocumentFragment } from './DocumentFragment';\nimport { HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { propagate as propagateEvents } from '../Event';\nimport { propagate as propagateSyncValues } from '../SyncValuePropagation';\nimport { propagate as propagateResize } from '../ResizePropagation';\nimport { set as setPhase } from '../phase';\nconst DOCUMENT_NAME = '#document';\nexport class Document extends Element {\n    defaultView;\n    documentElement;\n    body;\n    // Internal variables.\n    postMessage;\n    addGlobalEventListener;\n    removeGlobalEventListener;\n    [58 /* TransferrableKeys.allowTransfer */] = true;\n    constructor(global) {\n        super(9 /* NodeType.DOCUMENT_NODE */, DOCUMENT_NAME, HTML_NAMESPACE, null);\n        // Element uppercases its nodeName, but Document doesn't.\n        this.nodeName = DOCUMENT_NAME;\n        this.documentElement = this; // TODO(choumx): Should be the <html> element.\n        this.defaultView = Object.assign(global, {\n            document: this,\n            addEventListener: this.addEventListener.bind(this),\n            removeEventListener: this.removeEventListener.bind(this),\n        });\n    }\n    /**\n     * Observing the Document indicates it's attached to a main thread\n     * version of the document.\n     *\n     * Each mutation needs to be transferred, synced values need to propagate.\n     */\n    [59 /* TransferrableKeys.observe */]() {\n        setPhase(1 /* Phase.Hydrating */);\n        propagateEvents(this.defaultView);\n        propagateSyncValues(this.defaultView);\n        propagateResize(this.defaultView);\n    }\n    /**\n     * Hydrate\n     * @param strings\n     * @param skeleton\n     */\n    [64 /* TransferrableKeys.hydrateNode */](strings, skeleton) {\n        switch (skeleton[0 /* TransferrableKeys.nodeType */]) {\n            case 3 /* NodeType.TEXT_NODE */:\n                return new Text(strings[skeleton[5 /* TransferrableKeys.textContent */]], this, skeleton[7 /* TransferrableKeys.index */]);\n            case 8 /* NodeType.COMMENT_NODE */:\n                return new Comment(strings[skeleton[5 /* TransferrableKeys.textContent */]], this, skeleton[7 /* TransferrableKeys.index */]);\n            default:\n                const namespaceURI = strings[skeleton[6 /* TransferrableKeys.namespaceURI */]] || HTML_NAMESPACE;\n                const localName = strings[skeleton[1 /* TransferrableKeys.localOrNodeName */]];\n                const constructor = NS_NAME_TO_CLASS[`${namespaceURI}:${localName}`] || HTMLElement;\n                const node = new constructor(1 /* NodeType.ELEMENT_NODE */, localName, namespaceURI, this, skeleton[7 /* TransferrableKeys.index */]);\n                (skeleton[2 /* TransferrableKeys.attributes */] || []).forEach((attribute) => \n                // AttributeNamespaceURI = strings[attribute[0]] !== 'null' ? strings[attribute[0]] : HTML_NAMESPACE\n                node.setAttributeNS(strings[attribute[0]] !== 'null' ? strings[attribute[0]] : HTML_NAMESPACE, strings[attribute[1]], strings[attribute[2]]));\n                (skeleton[4 /* TransferrableKeys.childNodes */] || []).forEach((child) => node.appendChild(this[64 /* TransferrableKeys.hydrateNode */](strings, child)));\n                return node;\n        }\n    }\n    createElement(name) {\n        return this.createElementNS(HTML_NAMESPACE, toLower(name));\n    }\n    createElementNS(namespaceURI, localName) {\n        const constructor = NS_NAME_TO_CLASS[`${namespaceURI}:${localName}`] || HTMLElement;\n        return new constructor(1 /* NodeType.ELEMENT_NODE */, localName, namespaceURI, this);\n    }\n    /**\n     * Note: Unlike DOM, Event subclasses (e.g. MouseEvent) are not instantiated based on `type`.\n     * @param type\n     */\n    createEvent(type) {\n        return new Event(type, { bubbles: false, cancelable: false });\n    }\n    createTextNode(text) {\n        return new Text(text, this);\n    }\n    createComment(text) {\n        return new Comment(text, this);\n    }\n    createDocumentFragment() {\n        return new DocumentFragment(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementById\n     * @return Element with matching id attribute.\n     */\n    getElementById(id) {\n        return matchChildElement(this.body, (element) => element.id === id);\n    }\n}\n//# sourceMappingURL=Document.js.map","import { get } from './nodes';\n/**\n * When an event is dispatched from the main thread, it needs to be propagated in the worker thread.\n * Propagate adds an event listener to the worker global scope and uses the WorkerDOM Node.dispatchEvent\n * method to dispatch the transfered event in the worker thread.\n */\nexport function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* TransferrableKeys.type */] !== 4 /* MessageType.SYNC */) {\n            return;\n        }\n        const sync = data[40 /* TransferrableKeys.sync */];\n        const node = get(sync[7 /* TransferrableKeys.index */]);\n        if (node) {\n            node.ownerDocument[58 /* TransferrableKeys.allowTransfer */] = false;\n            // Modify the private backing ivar of `value` property to avoid mutation/sync cycle.\n            node.value = sync[21 /* TransferrableKeys.value */];\n            node.ownerDocument[58 /* TransferrableKeys.allowTransfer */] = true;\n        }\n    });\n}\n//# sourceMappingURL=SyncValuePropagation.js.map","export function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* TransferrableKeys.type */] !== 5 /* MessageType.RESIZE */) {\n            return;\n        }\n        const sync = data[40 /* TransferrableKeys.sync */];\n        if (sync) {\n            global.innerWidth = sync[0];\n            global.innerHeight = sync[1];\n        }\n    });\n}\n//# sourceMappingURL=ResizePropagation.js.map","const frameDuration = 1000 / 60;\nlet last = 0;\nlet id = 0;\nlet queue = [];\n/**\n * Schedules the accumulated callbacks to be fired 16ms after the last round.\n */\nfunction scheduleNext() {\n    const now = Date.now();\n    const next = Math.round(Math.max(0, frameDuration - (Date.now() - last)));\n    last = now + next;\n    setTimeout(function () {\n        var cp = queue.slice(0);\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0;\n        for (var i = 0; i < cp.length; i++) {\n            if (cp[i].cancelled) {\n                continue;\n            }\n            try {\n                cp[i].callback(last);\n            }\n            catch (e) {\n                setTimeout(function () {\n                    throw e;\n                }, 0);\n            }\n        }\n    }, next);\n}\nexport function rafPolyfill(callback) {\n    if (queue.length === 0) {\n        scheduleNext();\n    }\n    if (id === Number.MAX_SAFE_INTEGER) {\n        id = 0;\n    }\n    queue.push({\n        handle: ++id,\n        callback,\n        cancelled: false,\n    });\n    return id;\n}\nexport function cafPolyfill(handle) {\n    for (let i = 0; i < queue.length; i++) {\n        if (queue[i].handle === handle) {\n            queue[i].cancelled = true;\n            return;\n        }\n    }\n}\n//# sourceMappingURL=AnimationFrame.js.map","import { HTMLElement } from './dom/HTMLElement';\nimport { SVGElement } from './dom/SVGElement';\nimport { HTMLAnchorElement } from './dom/HTMLAnchorElement';\nimport { HTMLButtonElement } from './dom/HTMLButtonElement';\nimport { HTMLCanvasElement } from './dom/HTMLCanvasElement';\nimport { HTMLDataElement } from './dom/HTMLDataElement';\nimport { HTMLEmbedElement } from './dom/HTMLEmbedElement';\nimport { HTMLFieldSetElement } from './dom/HTMLFieldSetElement';\nimport { HTMLFormElement } from './dom/HTMLFormElement';\nimport { HTMLIFrameElement } from './dom/HTMLIFrameElement';\nimport { HTMLImageElement } from './dom/HTMLImageElement';\nimport { HTMLInputElement } from './dom/HTMLInputElement';\nimport { HTMLLabelElement } from './dom/HTMLLabelElement';\nimport { HTMLLinkElement } from './dom/HTMLLinkElement';\nimport { HTMLMapElement } from './dom/HTMLMapElement';\nimport { HTMLMeterElement } from './dom/HTMLMeterElement';\nimport { HTMLModElement } from './dom/HTMLModElement';\nimport { HTMLOListElement } from './dom/HTMLOListElement';\nimport { HTMLOptionElement } from './dom/HTMLOptionElement';\nimport { HTMLProgressElement } from './dom/HTMLProgressElement';\nimport { HTMLQuoteElement } from './dom/HTMLQuoteElement';\nimport { HTMLScriptElement } from './dom/HTMLScriptElement';\nimport { HTMLSelectElement } from './dom/HTMLSelectElement';\nimport { HTMLSourceElement } from './dom/HTMLSourceElement';\nimport { HTMLStyleElement } from './dom/HTMLStyleElement';\nimport { HTMLTableCellElement } from './dom/HTMLTableCellElement';\nimport { HTMLTableColElement } from './dom/HTMLTableColElement';\nimport { HTMLTableElement } from './dom/HTMLTableElement';\nimport { HTMLTableRowElement } from './dom/HTMLTableRowElement';\nimport { HTMLTableSectionElement } from './dom/HTMLTableSectionElement';\nimport { HTMLTimeElement } from './dom/HTMLTimeElement';\nimport { Document } from './dom/Document';\nimport { initialize } from './initialize';\nimport { MutationObserver } from './MutationObserver';\nimport { Event as WorkerDOMEvent } from './Event';\nimport { Text } from './dom/Text';\nimport { HTMLDataListElement } from './dom/HTMLDataListElement';\nimport { CharacterData } from './dom/CharacterData';\nimport { Comment } from './dom/Comment';\nimport { DOMTokenList } from './dom/DOMTokenList';\nimport { DocumentFragment } from './dom/DocumentFragment';\nimport { Element } from './dom/Element';\nimport { rafPolyfill, cafPolyfill } from './AnimationFrame';\nconst globalScope = {\n    innerWidth: 0,\n    innerHeight: 0,\n    CharacterData,\n    Comment,\n    DOMTokenList,\n    Document,\n    DocumentFragment,\n    Element,\n    HTMLAnchorElement,\n    HTMLButtonElement,\n    HTMLCanvasElement,\n    HTMLDataElement,\n    HTMLDataListElement,\n    HTMLElement,\n    HTMLEmbedElement,\n    HTMLFieldSetElement,\n    HTMLFormElement,\n    HTMLIFrameElement,\n    HTMLImageElement,\n    HTMLInputElement,\n    HTMLLabelElement,\n    HTMLLinkElement,\n    HTMLMapElement,\n    HTMLMeterElement,\n    HTMLModElement,\n    HTMLOListElement,\n    HTMLOptionElement,\n    HTMLProgressElement,\n    HTMLQuoteElement,\n    HTMLScriptElement,\n    HTMLSelectElement,\n    HTMLSourceElement,\n    HTMLStyleElement,\n    HTMLTableCellElement,\n    HTMLTableColElement,\n    HTMLTableElement,\n    HTMLTableRowElement,\n    HTMLTableSectionElement,\n    HTMLTimeElement,\n    SVGElement,\n    Text,\n    Event: WorkerDOMEvent,\n    MutationObserver,\n    requestAnimationFrame: self.requestAnimationFrame || rafPolyfill,\n    cancelAnimationFrame: self.cancelAnimationFrame || cafPolyfill,\n};\nconst noop = () => void 0;\n// WorkerDOM.Document.defaultView ends up being the window object.\n// React requires the classes to exist off the window object for instanceof checks.\nexport const workerDOM = (function (postMessage, addEventListener, removeEventListener) {\n    const document = new Document(globalScope);\n    // TODO(choumx): Avoid polluting Document's public API.\n    document.postMessage = postMessage;\n    document.addGlobalEventListener = addEventListener;\n    document.removeGlobalEventListener = removeEventListener;\n    // TODO(choumx): Remove once defaultView contains all native worker globals.\n    // Canvas's use of native OffscreenCanvas checks the existence of the property\n    // on the WorkerDOMGlobalScope.\n    globalScope.OffscreenCanvas = self['OffscreenCanvas'];\n    globalScope.ImageBitmap = self['ImageBitmap'];\n    document.isConnected = true;\n    document.appendChild((document.body = document.createElement('body')));\n    return document.defaultView;\n})(postMessage.bind(self) || noop, addEventListener.bind(self) || noop, removeEventListener.bind(self) || noop);\nexport const hydrate = initialize;\n//# sourceMappingURL=index.js.map","import { store as storeString } from './strings';\nimport { appendKeys as addCssKeys } from './css/CSSStyleDeclaration';\nimport { appendGlobalEventProperties } from './dom/HTMLElement';\nimport { initializeStorage } from './initialize-storage';\nexport function initialize(document, strings, hydrateableNode, cssKeys, globalEventHandlerKeys, [innerWidth, innerHeight], localStorageInit, sessionStorageInit) {\n    addCssKeys(cssKeys);\n    appendGlobalEventProperties(globalEventHandlerKeys);\n    strings.forEach(storeString);\n    (hydrateableNode[4 /* TransferrableKeys.childNodes */] || []).forEach((child) => document.body.appendChild(document[64 /* TransferrableKeys.hydrateNode */](strings, child)));\n    const window = document.defaultView;\n    window.innerWidth = innerWidth;\n    window.innerHeight = innerHeight;\n    initializeStorage(document, localStorageInit, sessionStorageInit);\n}\n//# sourceMappingURL=initialize.js.map","import { createStorage } from './Storage';\nexport function initializeStorage(document, localStorageInit, sessionStorageInit) {\n    const window = document.defaultView;\n    if (localStorageInit.storage) {\n        window.localStorage = createStorage(document, 0 /* StorageLocation.Local */, localStorageInit.storage);\n    }\n    else {\n        console.warn(localStorageInit.errorMsg);\n    }\n    if (sessionStorageInit.storage) {\n        window.sessionStorage = createStorage(document, 1 /* StorageLocation.Session */, sessionStorageInit.storage);\n    }\n    else {\n        console.warn(sessionStorageInit.errorMsg);\n    }\n}\n//# sourceMappingURL=initialize-storage.js.map"],"names":["get","a","store","value","has","mapping","set","transfer","count","ra","document","concat","b","Promise","resolve","then","_","pending","nb","reduce","consume$1","f","e","node","acc","buffer","Uint16Array","postMessage","A","d","mutate","record","transferable","forEach","observer","t","target","parentNode","observerTarget","pushMutation","querySelectorAll","selector","indexOf","selectorBracketIndexes","selectorHasAttr","attrSelector","substring","matcher","element","matchAttrReference","elementSelector","id","substr","classList","contains","localName","matchChildrenElements","filter","synchronizedAccessor","defineOn","accessorKey","propertyName","Object","defineProperty","prototype","enumerable","configurable","this","decodeEntities","html","replace","s","numericEntity","namedEntity","c","code","charAt","toLowerCase","parseInt","isNaN","String","fromCodePoint","RESERVED_CHARACTERS","getPreviousElementSibling","parentNodes","childNodes","i","nodeType","getNextElementSibling","length","definePropertyBackedAttributes","attributes","sub","create","assign","serializeTransferrableObject","args","serialized","arg","num","push","f32","u16","Array","isArray","serializedArray","Error","serializedObject","retrieveImageBitmap","image","canvas","callIndex","indexTracker","ownerDocument","messageHandler","data","removeGlobalEventListener","addGlobalEventListener","createStorage","location","storage","define","keys","n","key","stringValue","tagNameConditionPredicate","tagNames","includes","tagName","elementPredicate","conditionPredicate","matchingElements","child","matchChildElement","returnValue","children","some","grandChildMatch","matchNearestParent","equalPos","selectorLength","caseInsensitive","endPos","equalSuffix","attrString","possibleSuffixes","rawValue","rawAttrValue","getAttribute","casedValue","casedAttrValue","split","startsWith","endsWith","hasAttribute","phase","mapping$1","Map","pendingMutations","observers","pushRecord","callback","takeRecords","propagate","property","bb","constructor","nodeName","overrideIndex","isConnected","storeOverrideNodeMapping","Math","max","undefined","storeNodeMapping","textContent","getTextContent","childNode","firstChild","lastChild","nextSibling","parentChildNodes","previousSibling","hasChildNodes","otherNode","insertBefore","referenceNode","slice","appendChild","remove","splice","addedNodes","type","removeChild","index","removedNodes","replaceChild","newChild","oldChild","replaceWith","nodes","currentNode","nodeIterator","parent","createTextNode","ParentNode","Node","childElementCount","firstElementChild","find","lastElementChild","querySelector","matches","WHITESPACE_REGEX","G","attributeName","bind","join","collection","newValue","oldValue","item","token","add","tokens","from","Set","newToken","delete","toggle","force","test","TypeError","namespaceURI","storeString","toString","map","keyValueString","attr","matchPredicate","name","appendKeys","keysToAppend","CSSStyleDeclaration","hasOwnProperty","previousPrototypeLength","writable","hyphenatedKey","defineProperties","getPropertyValue","setProperty","D","removeProperty","mutated","cssText","trim","values","reflectProperties","properties","pair","defaultValue","keywords","isBooleanAttribute","attributeValue","castableValue","Number","setAttribute","removeAttribute","kMarkupPattern","kAttributePattern","kSelfClosingElements","AREA","BASE","BR","COL","HR","IMG","INPUT","LINK","META","PARAM","SOURCE","TRACK","WBR","kElementsClosedByOpening","LI","DT","DD","P","ADDRESS","ARTICLE","ASIDE","BLOCKQUOTE","DETAILS","DIV","DL","FIELDSET","FIGCAPTION","FIGURE","FOOTER","FORM","H1","H2","H3","H4","H5","H6","HEADER","MAIN","NAV","OL","PRE","SECTION","TABLE","UL","RT","RP","OPTGROUP","OPTION","THEAD","TBODY","TFOOT","TR","TD","TH","kElementsClosedByClosing","B","I","kBlockTextElements","SCRIPT","NOSCRIPT","STYLE","__proto__","amp","lt","gt","quot","Event$1","opts","scoped","timeStamp","isTrusted","eventPhase","defaultPrevented","currentTarget","cancelBubble","cancelable","bubbles","changedTouches","touches","offsetY","offsetX","pageY","pageX","stopPropagation","stopImmediatePropagation","preventDefault","initEvent","touchListFromTransfer","event","touchListKeys","list","touchListKey","numericKey","transferredTouch","identifier","screenX","screenY","clientX","clientY","NS_NAME_TO_CLASS","registerSubclass","subclass","namespace","HTML_NAMESPACE","ElementKind","VOID_ELEMENTS","Element","super","_classList","kind","style_","VOID","NORMAL","style","previousElementSibling","nextElementSibling","outerHTML","tag","start","innerHTML","contents","root","parse","rootElement","currentParent","currentNamespace","lastTextPos","match","tagsClosed","exec","text","lastIndex","commentContents","createComment","beginningSlash","endSlash","normalizedTagName","stack","pop","childToAppend","attMatch","matchAttributes","closeMarkup","wrapper","setAttributeNS","getAttributeNS","removeAttributeNS","hasAttributeNS","hasAttributes","propertyBacked","matchAttrPredicate","valueAsString","attributeNamespace","findIndex","getElementsByClassName","names","inputClassList","inputClassName","getElementsByTagName","lowerTagName","getElementsByName","stringName","cloneNode","deep","clone","createElementNS","getBoundingClientRectAsync","left","top","right","bottom","x","y","width","height","transferredBoundingClientRect","setTimeout","click","Event","dispatchEvent","scrollIntoView","DOMTokenList","class","el","appendGlobalEventProperties","HTMLElement","normalizedKey","stored","removeEventListener","Function","addEventListener","form","accessKey","contentEditable","dir","lang","title","draggable","hidden","noModule","spellcheck","translate","SVGElement","HTMLAnchorElement","_relList","relList","href","rel","hreflang","media","HTMLButtonElement","formAction","formEnctype","formMethod","formTarget","autofocus","disabled","Float32Array","addColorStop","offset","color","arguments","CanvasPattern","setTransform","Mb","context","getContext","contextType","OffscreenCanvasRenderingContext2DPolyfill","objectIndex","canvasElement","lineDash","fnName","createObjectReference","objectId","creationMethod","creationArgs","clearRect","w","h","fillRect","strokeRect","roundRect","radii","lineWidth","fillText","maxWidth","moveTo","lineTo","closePath","stroke","restore","save","resetTransform","rotate","angle","transform","scale","globalAlpha","globalCompositeOperation","imageSmoothingQuality","fillStyle","strokeStyle","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","beginPath","strokeText","textAlign","textBaseline","lineCap","lineDashOffset","lineJoin","miterLimit","arc","radius","startAngle","endAngle","anticlockwise","arcTo","x1","y1","x2","y2","direction","font","ellipse","radiusX","radiusY","rotation","bezierCurveTo","cp1x","cp1y","cp2x","cp2y","rect","quadraticCurveTo","cpx","cpy","imageSmoothingEnabled","setLineDash","getLineDash","clip","pathOrFillRule","fillRule","fill","transformOrA","bOrC","cOrD","dOrE","eOrF","createLinearGradient","x0","y0","gradientId","CanvasGradient","createRadialGradient","r0","r1","createPattern","repetition","patternId","drawImage","dx","dy","createImageData","getImageData","putImageData","isPointInPath","isPointInStroke","measureText","za","instance","pattern","deferredUpgrades","WeakMap","CanvasRenderingContext2DShim","queue","implementation","upgraded","polyfillUsed","unresolvedCalls","goodImplementation","OffscreenCanvas","defaultView","OffscreenCanvasPolyfill","getOffscreenCanvasAsync","deferred","isTestMode","maybeUpgradeImplementation","upgradePromise","degradeImplementation","flushQueue","call","isSetter","delegateFunc","delegateSetter","delegateGetter","segments","FakeNativeCanvasPattern","ImageBitmap","antiClockwise","path","pathOrX","xOrY","yOrFillRule","imagedataOrWidth","sx","sy","sw","sh","imageData","dirtyX","dirtyY","dirtyWidth","dirtyHeight","HTMLCanvasElement","k","Ba","HTMLDataElement","Ca","HTMLEmbedElement","src","MATCHING_CHILD_ELEMENT_TAGNAMES","HTMLFormControlsCollectionMixin","HTMLFieldSetElement","Y","elements","HTMLFormElement","method","action","enctype","acceptCharset","autocomplete","autocapitalize","_sandbox","sandbox","HTMLIFrameElement","allow","allowFullscreen","csp","referrerPolicy","srcdoc","HTMLImageElement","alt","crossOrigin","isMap","sizes","srcset","useMap","HTMLInputLabelsMixin","for","HTMLInputElement","dirtyValue","valueAsDate","date","stringToDate","getTime","Date","dateToString","valueAsNumber","NaN","checked","m","str","components","accept","defaultChecked","dirName","formEncType","maxLength","min","multiple","placeholder","readOnly","required","size","step","Ea","control","htmlFor","getElementById","HTMLLabelElement","N","HTMLLinkElement","as","HTMLMapElement","areas","ca","HTMLMeterElement","high","low","optimum","da","HTMLModElement","cite","datetime","Ga","HTMLOListElement","reversed","ea","label","selected","HTMLOptionElement","defaultSelected","position","HTMLProgressElement","ha","HTMLQuoteElement","HTMLScriptElement","charset","async","defer","isOptionPredicate","isSelectedOptionPredicate","ja","options","selectedIndex","firstSelectedChild","selectedOptions","HTMLSelectElement","HTMLSourceElement","Ka","HTMLStyleElement","O","_headers","headers","cellIndex","HTMLTableCellElement","abbr","colSpan","rowSpan","scope","La","HTMLTableColElement","span","insertBeforeElementsWithTagName","insertBeforeElement","HTMLTableElement","caption","newElement","tHead","tFoot","rows","tBodies","TABLE_SECTION_TAGNAMES","indexInAncestor","isValidAncestor","cells","rowIndex","sectionRowIndex","deleteCell","cell","insertCell","td","createElement","HTMLTableRowElement","ka","deleteRow","insertRow","tr","HTMLTableSectionElement","HTMLTimeElement","dateTime","HTMLDataListElement","Na","nodeValue","Text","splitText","remainderTextNode","insertBeforePosition","Comment","lb","cb","createDocumentFragment","mb","E","global","DOCUMENT_NAME","body","documentElement","newPhase","propagate$2","z","targetFromTransfer","keyCode","propagate$1","sync","innerWidth","innerHeight","strings","skeleton","attribute","createEvent","DocumentFragment","frameDuration","last","globalScope","CharacterData","Document","WorkerDOMEvent","MutationObserver","observe","disconnect","records","requestAnimationFrame","self","rafPolyfill","scheduleNext","next","round","now","cp","cancelled","V","MAX_SAFE_INTEGER","handle","cancelAnimationFrame","cafPolyfill","noop","workerDOM","initialize","hydrateableNode","cssKeys","globalEventHandlerKeys","localStorageInit","sessionStorageInit","addCssKeys","initializeStorage","window","localStorage","sessionStorage"],"mappings":"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"}